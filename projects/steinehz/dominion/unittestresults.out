unittest1.c:
All tests passed!
File 'dominion.c'
Lines executed:5.35% of 561
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
    #####:    8:int compare(const void* a, const void* b) {
    #####:    9:  if (*(int*)a > *(int*)b)
    #####:   10:    return 1;
    #####:   11:  if (*(int*)a < *(int*)b)
    #####:   12:    return -1;
    #####:   13:  return 0;
        -:   14:}
        -:   15:
    #####:   16:struct gameState* newGame() {
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
        -:   19:}
        -:   20:
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
        -:   35:}
        -:   36:
    #####:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;
        -:   43:  //set up random number generator
    #####:   44:  SelectStream(1);
    #####:   45:  PutSeed((long)randomSeed);
        -:   46:
        -:   47:  //check number of players
    #####:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
    #####:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
    #####:   57:  for (i = 0; i < 10; i++)
        -:   58:    {
    #####:   59:      for (j = 0; j < 10; j++)
        -:   60:        {
    #####:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
    #####:   73:  if (numPlayers == 2)
        -:   74:    {
    #####:   75:      state->supplyCount[curse] = 10;
        -:   76:    }
    #####:   77:  else if (numPlayers == 3)
        -:   78:    {
    #####:   79:      state->supplyCount[curse] = 20;
        -:   80:    }
        -:   81:  else
        -:   82:    {
    #####:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
    #####:   87:  if (numPlayers == 2)
        -:   88:    {
    #####:   89:      state->supplyCount[estate] = 8;
    #####:   90:      state->supplyCount[duchy] = 8;
    #####:   91:      state->supplyCount[province] = 8;
        -:   92:    }
        -:   93:  else
        -:   94:    {
    #####:   95:      state->supplyCount[estate] = 12;
    #####:   96:      state->supplyCount[duchy] = 12;
    #####:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
    #####:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
    #####:  102:  state->supplyCount[silver] = 40;
    #####:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
    #####:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
        -:  107:    {
    #####:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
        -:  109:	{
    #####:  110:	  if (kingdomCards[j] == i)
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
    #####:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
        -:  114:		{
    #####:  115:		  if (numPlayers == 2){
    #####:  116:		    state->supplyCount[i] = 8;
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
        -:  119:		}
        -:  120:	      else
        -:  121:		{
    #####:  122:		  state->supplyCount[i] = 10;
        -:  123:		}
    #####:  124:	      break;
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
    #####:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
    #####:  138:  for (i = 0; i < numPlayers; i++)
        -:  139:    {
    #####:  140:      state->deckCount[i] = 0;
    #####:  141:      for (j = 0; j < 3; j++)
        -:  142:	{
    #####:  143:	  state->deck[i][j] = estate;
    #####:  144:	  state->deckCount[i]++;
        -:  145:	}
    #####:  146:      for (j = 3; j < 10; j++)
        -:  147:	{
    #####:  148:	  state->deck[i][j] = copper;
    #####:  149:	  state->deckCount[i]++;
        -:  150:	}
        -:  151:    }
        -:  152:
        -:  153:  //shuffle player decks
    #####:  154:  for (i = 0; i < numPlayers; i++)
        -:  155:    {
    #####:  156:      if ( shuffle(i, state) < 0 )
        -:  157:	{
    #####:  158:	  return -1;
        -:  159:	}
        -:  160:    }
        -:  161:
        -:  162:  //draw player hands
    #####:  163:  for (i = 0; i < numPlayers; i++)
        -:  164:    {
        -:  165:      //initialize hand size to zero
    #####:  166:      state->handCount[i] = 0;
    #####:  167:      state->discardCount[i] = 0;
        -:  168:      //draw 5 cards
        -:  169:      // for (j = 0; j < 5; j++)
        -:  170:      //	{
        -:  171:      //	  drawCard(i, state);
        -:  172:      //	}
        -:  173:    }
        -:  174:
        -:  175:  //set embargo tokens to 0 for all supply piles
    #####:  176:  for (i = 0; i <= treasure_map; i++)
        -:  177:    {
    #####:  178:      state->embargoTokens[i] = 0;
        -:  179:    }
        -:  180:
        -:  181:  //initialize first player's turn
    #####:  182:  state->outpostPlayed = 0;
    #####:  183:  state->phase = 0;
    #####:  184:  state->numActions = 1;
    #####:  185:  state->numBuys = 1;
    #####:  186:  state->playedCardCount = 0;
    #####:  187:  state->whoseTurn = 0;
    #####:  188:  state->handCount[state->whoseTurn] = 0;
        -:  189:  //int it; move to top
        -:  190:
        -:  191:  //Moved draw cards to here, only drawing at the start of a turn
    #####:  192:  for (it = 0; it < 5; it++){
    #####:  193:    drawCard(state->whoseTurn, state);
        -:  194:  }
        -:  195:
    #####:  196:  updateCoins(state->whoseTurn, state, 0);
        -:  197:
    #####:  198:  return 0;
        -:  199:}
        -:  200:
    #####:  201:int shuffle(int player, struct gameState *state) {
        -:  202:
        -:  203:
        -:  204:  int newDeck[MAX_DECK];
    #####:  205:  int newDeckPos = 0;
        -:  206:  int card;
        -:  207:  int i;
        -:  208:
    #####:  209:  if (state->deckCount[player] < 1)
    #####:  210:    return -1;
    #####:  211:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare);
        -:  212:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  213:
    #####:  214:  while (state->deckCount[player] > 0) {
    #####:  215:    card = floor(Random() * state->deckCount[player]);
    #####:  216:    newDeck[newDeckPos] = state->deck[player][card];
    #####:  217:    newDeckPos++;
    #####:  218:    for (i = card; i < state->deckCount[player]-1; i++) {
    #####:  219:      state->deck[player][i] = state->deck[player][i+1];
        -:  220:    }
    #####:  221:    state->deckCount[player]--;
        -:  222:  }
    #####:  223:  for (i = 0; i < newDeckPos; i++) {
    #####:  224:    state->deck[player][i] = newDeck[i];
    #####:  225:    state->deckCount[player]++;
        -:  226:  }
        -:  227:
    #####:  228:  return 0;
        -:  229:}
        -:  230:
    #####:  231:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state)
        -:  232:{
        -:  233:  int card;
    #####:  234:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  235:
        -:  236:  //check if it is the right phase
    #####:  237:  if (state->phase != 0)
        -:  238:    {
    #####:  239:      return -1;
        -:  240:    }
        -:  241:
        -:  242:  //check if player has enough actions
    #####:  243:  if ( state->numActions < 1 )
        -:  244:    {
    #####:  245:      return -1;
        -:  246:    }
        -:  247:
        -:  248:  //get card played
    #####:  249:  card = handCard(handPos, state);
        -:  250:
        -:  251:  //check if selected card is an action
    #####:  252:  if ( card < adventurer || card > treasure_map )
        -:  253:    {
    #####:  254:      return -1;
        -:  255:    }
        -:  256:
        -:  257:  //play card
    #####:  258:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
        -:  259:    {
    #####:  260:      return -1;
        -:  261:    }
        -:  262:
        -:  263:  //reduce number of actions
    #####:  264:  state->numActions--;
        -:  265:
        -:  266:  //update coins (Treasure cards may be added with card draws)
    #####:  267:  updateCoins(state->whoseTurn, state, coin_bonus);
        -:  268:
    #####:  269:  return 0;
        -:  270:}
        -:  271:
    #####:  272:int buyCard(int supplyPos, struct gameState *state) {
        -:  273:  int who;
        -:  274:  if (DEBUG){
        -:  275:    printf("Entering buyCard...\n");
        -:  276:  }
        -:  277:
        -:  278:  // I don't know what to do about the phase thing.
        -:  279:
    #####:  280:  who = state->whoseTurn;
        -:  281:
    #####:  282:  if (state->numBuys < 1){
        -:  283:    if (DEBUG)
        -:  284:      printf("You do not have any buys left\n");
    #####:  285:    return -1;
    #####:  286:  } else if (supplyCount(supplyPos, state) <1){
        -:  287:    if (DEBUG)
        -:  288:      printf("There are not any of that type of card left\n");
    #####:  289:    return -1;
    #####:  290:  } else if (state->coins < getCost(supplyPos)){
        -:  291:    if (DEBUG)
        -:  292:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  293:    return -1;
        -:  294:  } else {
    #####:  295:    state->phase=1;
        -:  296:    //state->supplyCount[supplyPos]--;
    #####:  297:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  298:
    #####:  299:    state->coins = (state->coins) - (getCost(supplyPos));
    #####:  300:    state->numBuys--;
        -:  301:    if (DEBUG)
        -:  302:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  303:  }
        -:  304:
        -:  305:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  306:  //state->discardCount[who]++;
        -:  307:
    #####:  308:  return 0;
        -:  309:}
        -:  310:
    #####:  311:int numHandCards(struct gameState *state) {
    #####:  312:  return state->handCount[ whoseTurn(state) ];
        -:  313:}
        -:  314:
    #####:  315:int handCard(int handPos, struct gameState *state) {
    #####:  316:  int currentPlayer = whoseTurn(state);
    #####:  317:  return state->hand[currentPlayer][handPos];
        -:  318:}
        -:  319:
    #####:  320:int supplyCount(int card, struct gameState *state) {
    #####:  321:  return state->supplyCount[card];
        -:  322:}
        -:  323:
    #####:  324:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  325:  int i;
    #####:  326:  int count = 0;
        -:  327:
    #####:  328:  for (i = 0; i < state->deckCount[player]; i++)
        -:  329:    {
    #####:  330:      if (state->deck[player][i] == card) count++;
        -:  331:    }
        -:  332:
    #####:  333:  for (i = 0; i < state->handCount[player]; i++)
        -:  334:    {
    #####:  335:      if (state->hand[player][i] == card) count++;
        -:  336:    }
        -:  337:
    #####:  338:  for (i = 0; i < state->discardCount[player]; i++)
        -:  339:    {
    #####:  340:      if (state->discard[player][i] == card) count++;
        -:  341:    }
        -:  342:
    #####:  343:  return count;
        -:  344:}
        -:  345:
    #####:  346:int whoseTurn(struct gameState *state) {
    #####:  347:  return state->whoseTurn;
        -:  348:}
        -:  349:
    #####:  350:int endTurn(struct gameState *state) {
        -:  351:  int k;
        -:  352:  int i;
    #####:  353:  int currentPlayer = whoseTurn(state);
        -:  354:
        -:  355:  //Discard hand
    #####:  356:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    #####:  357:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  358:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  359:  }
    #####:  360:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  361:
        -:  362:  //Code for determining the player
    #####:  363:  if (currentPlayer < (state->numPlayers - 1)){
    #####:  364:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  365:  }
        -:  366:  else{
    #####:  367:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  368:  }
        -:  369:
    #####:  370:  state->outpostPlayed = 0;
    #####:  371:  state->phase = 0;
    #####:  372:  state->numActions = 1;
    #####:  373:  state->coins = 0;
    #####:  374:  state->numBuys = 1;
    #####:  375:  state->playedCardCount = 0;
    #####:  376:  state->handCount[state->whoseTurn] = 0;
        -:  377:
        -:  378:  //int k; move to top
        -:  379:  //Next player draws hand
    #####:  380:  for (k = 0; k < 5; k++){
    #####:  381:    drawCard(state->whoseTurn, state);//Draw a card
        -:  382:  }
        -:  383:
        -:  384:  //Update money
    #####:  385:  updateCoins(state->whoseTurn, state , 0);
        -:  386:
    #####:  387:  return 0;
        -:  388:}
        -:  389:
    #####:  390:int isGameOver(struct gameState *state) {
        -:  391:  int i;
        -:  392:  int j;
        -:  393:
        -:  394:  //if stack of Province cards is empty, the game ends
    #####:  395:  if (state->supplyCount[province] == 0)
        -:  396:    {
    #####:  397:      return 1;
        -:  398:    }
        -:  399:
        -:  400:  //if three supply pile are at 0, the game ends
    #####:  401:  j = 0;
    #####:  402:  for (i = 0; i < 25; i++)
        -:  403:    {
    #####:  404:      if (state->supplyCount[i] == 0)
        -:  405:	{
    #####:  406:	  j++;
        -:  407:	}
        -:  408:    }
    #####:  409:  if ( j >= 3)
        -:  410:    {
    #####:  411:      return 1;
        -:  412:    }
        -:  413:
    #####:  414:  return 0;
        -:  415:}
        -:  416:
    #####:  417:int scoreFor (int player, struct gameState *state) {
        -:  418:
        -:  419:  int i;
    #####:  420:  int score = 0;
        -:  421:  //score from hand
    #####:  422:  for (i = 0; i < state->handCount[player]; i++)
        -:  423:    {
    #####:  424:      if (state->hand[player][i] == curse) { score = score - 1; };
    #####:  425:      if (state->hand[player][i] == estate) { score = score + 1; };
    #####:  426:      if (state->hand[player][i] == duchy) { score = score + 3; };
    #####:  427:      if (state->hand[player][i] == province) { score = score + 6; };
    #####:  428:      if (state->hand[player][i] == great_hall) { score = score + 1; };
    #####:  429:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  430:    }
        -:  431:
        -:  432:  //score from discard
    #####:  433:  for (i = 0; i < state->discardCount[player]; i++)
        -:  434:    {
    #####:  435:      if (state->discard[player][i] == curse) { score = score - 1; };
    #####:  436:      if (state->discard[player][i] == estate) { score = score + 1; };
    #####:  437:      if (state->discard[player][i] == duchy) { score = score + 3; };
    #####:  438:      if (state->discard[player][i] == province) { score = score + 6; };
    #####:  439:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    #####:  440:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  441:    }
        -:  442:
        -:  443:  //score from deck
    #####:  444:  for (i = 0; i < state->discardCount[player]; i++)
        -:  445:    {
    #####:  446:      if (state->deck[player][i] == curse) { score = score - 1; };
    #####:  447:      if (state->deck[player][i] == estate) { score = score + 1; };
    #####:  448:      if (state->deck[player][i] == duchy) { score = score + 3; };
    #####:  449:      if (state->deck[player][i] == province) { score = score + 6; };
    #####:  450:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    #####:  451:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  452:    }
        -:  453:
    #####:  454:  return score;
        -:  455:}
        -:  456:
    #####:  457:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  458:  int i;
        -:  459:  int j;
        -:  460:  int highScore;
        -:  461:  int currentPlayer;
        -:  462:
        -:  463:  //get score for each player
    #####:  464:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  465:    {
        -:  466:      //set unused player scores to -9999
    #####:  467:      if (i >= state->numPlayers)
        -:  468:	{
    #####:  469:	  players[i] = -9999;
        -:  470:	}
        -:  471:      else
        -:  472:	{
    #####:  473:	  players[i] = scoreFor (i, state);
        -:  474:	}
        -:  475:    }
        -:  476:
        -:  477:  //find highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  480:    {
    #####:  481:      if (players[i] > players[j])
        -:  482:	{
    #####:  483:	  j = i;
        -:  484:	}
        -:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //add 1 to players who had less turns
    #####:  489:  currentPlayer = whoseTurn(state);
    #####:  490:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  491:    {
    #####:  492:      if ( players[i] == highScore && i > currentPlayer )
        -:  493:	{
    #####:  494:	  players[i]++;
        -:  495:	}
        -:  496:    }
        -:  497:
        -:  498:  //find new highest score
    #####:  499:  j = 0;
    #####:  500:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  501:    {
    #####:  502:      if ( players[i] > players[j] )
        -:  503:	{
    #####:  504:	  j = i;
        -:  505:	}
        -:  506:    }
    #####:  507:  highScore = players[j];
        -:  508:
        -:  509:  //set winners in array to 1 and rest to 0
    #####:  510:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  511:    {
    #####:  512:      if ( players[i] == highScore )
        -:  513:	{
    #####:  514:	  players[i] = 1;
        -:  515:	}
        -:  516:      else
        -:  517:	{
    #####:  518:	  players[i] = 0;
        -:  519:	}
        -:  520:    }
        -:  521:
    #####:  522:  return 0;
        -:  523:}
        -:  524:
    #####:  525:int drawCard(int player, struct gameState *state)
        -:  526:{	int count;
        -:  527:  int deckCounter;
    #####:  528:  if (state->deckCount[player] <= 0){//Deck is empty
        -:  529:
        -:  530:    //Step 1 Shuffle the discard pile back into a deck
        -:  531:    int i;
        -:  532:    //Move discard to deck
    #####:  533:    for (i = 0; i < state->discardCount[player];i++){
    #####:  534:      state->deck[player][i] = state->discard[player][i];
    #####:  535:      state->discard[player][i] = -1;
        -:  536:    }
        -:  537:
    #####:  538:    state->deckCount[player] = state->discardCount[player];
    #####:  539:    state->discardCount[player] = 0;//Reset discard
        -:  540:
        -:  541:    //Shufffle the deck
    #####:  542:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
        -:  543:
        -:  544:    if (DEBUG){//Debug statements
        -:  545:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  546:    }
        -:  547:
    #####:  548:    state->discardCount[player] = 0;
        -:  549:
        -:  550:    //Step 2 Draw Card
    #####:  551:    count = state->handCount[player];//Get current player's hand count
        -:  552:
        -:  553:    if (DEBUG){//Debug statements
        -:  554:      printf("Current hand count: %d\n", count);
        -:  555:    }
        -:  556:
    #####:  557:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  558:
    #####:  559:    if (deckCounter == 0)
    #####:  560:      return -1;
        -:  561:
    #####:  562:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    #####:  563:    state->deckCount[player]--;
    #####:  564:    state->handCount[player]++;//Increment hand count
        -:  565:  }
        -:  566:
        -:  567:  else{
    #####:  568:    int count = state->handCount[player];//Get current hand count for player
        -:  569:    int deckCounter;
        -:  570:    if (DEBUG){//Debug statements
        -:  571:      printf("Current hand count: %d\n", count);
        -:  572:    }
        -:  573:
    #####:  574:    deckCounter = state->deckCount[player];//Create holder for the deck count
    #####:  575:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
    #####:  576:    state->deckCount[player]--;
    #####:  577:    state->handCount[player]++;//Increment hand count
        -:  578:  }
        -:  579:
    #####:  580:  return 0;
        -:  581:}
        -:  582:
       35:  583:int getCost(int cardNumber)
        -:  584:{
       35:  585:  switch( cardNumber )
        -:  586:    {
        -:  587:    case curse:
        1:  588:      return 0;
        -:  589:    case estate:
        1:  590:      return 2;
        -:  591:    case duchy:
        1:  592:      return 5;
        -:  593:    case province:
        1:  594:      return 8;
        -:  595:    case copper:
        1:  596:      return 0;
        -:  597:    case silver:
        1:  598:      return 3;
        -:  599:    case gold:
        1:  600:      return 6;
        -:  601:    case adventurer:
        1:  602:      return 6;
        -:  603:    case council_room:
        1:  604:      return 5;
        -:  605:    case feast:
        1:  606:      return 4;
        -:  607:    case gardens:
        1:  608:      return 4;
        -:  609:    case mine:
        1:  610:      return 5;
        -:  611:    case remodel:
        1:  612:      return 4;
        -:  613:    case smithy:
        1:  614:      return 4;
        -:  615:    case village:
        1:  616:      return 3;
        -:  617:    case baron:
        1:  618:      return 4;
        -:  619:    case great_hall:
        1:  620:      return 3;
        -:  621:    case minion:
        1:  622:      return 5;
        -:  623:    case steward:
        1:  624:      return 3;
        -:  625:    case tribute:
        1:  626:      return 5;
        -:  627:    case ambassador:
        1:  628:      return 3;
        -:  629:    case cutpurse:
        1:  630:      return 4;
        -:  631:    case embargo:
        1:  632:      return 2;
        -:  633:    case outpost:
        1:  634:      return 5;
        -:  635:    case salvager:
        1:  636:      return 4;
        -:  637:    case sea_hag:
        1:  638:      return 4;
        -:  639:    case treasure_map:
        1:  640:      return 4;
        -:  641:    }
        -:  642:
        8:  643:  return -1;
        -:  644:}
        -:  645:
    #####:  646:void adventurer_action (int drawntreasure, struct gameState *state, int currentPlayer, int cardDrawn, int temphand[MAX_HAND], int z) {
    #####:  647:    while(drawntreasure<2){
    #####:  648:        if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
    #####:  649:            shuffle(currentPlayer, state);
        -:  650:        }
    #####:  651:        drawCard(currentPlayer, state);
    #####:  652:        cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
    #####:  653:        if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
    #####:  654:          drawntreasure++;
        -:  655:        else{
    #####:  656:          temphand[z]=cardDrawn;
    #####:  657:          state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
        -:  658:        }
        -:  659:  }
    #####:  660:  while(z-1>=0){
    #####:  661:      state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    #####:  662:      z=z-1;
        -:  663:  }
    #####:  664:}
        -:  665:
    #####:  666:void smithy_action (int currentPlayer, struct gameState *state, int i, int handPos) {
        -:  667:  //+3 Cards
    #####:  668:  for (i = 0; i < 3; i++) {
    #####:  669:    drawCard(currentPlayer, state);
        -:  670:  }
        -:  671:
        -:  672:  //discard card from hand
    #####:  673:  discardCard(handPos, currentPlayer, state, 0);
    #####:  674:}
        -:  675:
    #####:  676:void village_action (int currentPlayer, struct gameState *state, int handPos) {
        -:  677:  //+1 Card
    #####:  678:  drawCard(currentPlayer, state);
        -:  679:
        -:  680:  //+2 Actions
    #####:  681:  state->numActions = state->numActions + 2;
        -:  682:
        -:  683:  //discard played card from hand
    #####:  684:  discardCard(handPos, currentPlayer, state, 0);
    #####:  685:}
        -:  686:
    #####:  687:void council_room_action (int i, int currentPlayer, struct gameState *state) {
        -:  688:  //+4 Cards
    #####:  689:  for (i = 0; i < 4; i++) {
    #####:  690:      drawCard(currentPlayer, state);
        -:  691:  }
        -:  692:
        -:  693:  //+1 Buy
    #####:  694:  state->numBuys++;
        -:  695:
        -:  696:  //Each other player draws a card
    #####:  697:  for (i = 0; i < state->numPlayers; i++) {
    #####:  698:      if ( i == currentPlayer ) {
    #####:  699:          drawCard(i, state);
        -:  700:      }
        -:  701:  }
    #####:  702:}
        -:  703:
    #####:  704:int mine_action (int j, struct gameState *state, int currentPlayer, int choice1, int choice2, int handPos, int i) {
    #####:  705:  j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  706:
    #####:  707:  if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold) {
    #####:  708:      return -1;
        -:  709:  }
        -:  710:
    #####:  711:  if (choice2 > treasure_map || choice2 < curse) {
    #####:  712:      return -1;
        -:  713:  }
        -:  714:
    #####:  715:  if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) ) {
    #####:  716:      return -1;
        -:  717:  }
        -:  718:
    #####:  719:  gainCard(choice2, state, 2, currentPlayer);
        -:  720:
        -:  721:  //discard card from hand
    #####:  722:  discardCard(handPos, currentPlayer, state, 0);
        -:  723:
        -:  724:  //discard trashed card
    #####:  725:  for (i = 0; i < state->handCount[currentPlayer]; i++) {
    #####:  726:      if (state->hand[currentPlayer][i] == j) {
    #####:  727:        discardCard(i, currentPlayer, state, 0);
    #####:  728:        break;
        -:  729:      }
        -:  730:  }
        -:  731:
    #####:  732:  return -1;
        -:  733:}
        -:  734:
    #####:  735:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  736:{
        -:  737:  int i;
        -:  738:  int j;
        -:  739:  int k;
        -:  740:  int x;
        -:  741:  int m;
        -:  742:  int index;
    #####:  743:  int currentPlayer = whoseTurn(state);
    #####:  744:  int nextPlayer = currentPlayer + 1;
        -:  745:
    #####:  746:  int tributeRevealedCards[2] = {-1, -1};
        -:  747:  int temphand[MAX_HAND];// moved above the if statement
    #####:  748:  int drawntreasure=0;
        -:  749:  int cardDrawn;
    #####:  750:  int z = 0;// this is the counter for the temp hand
    #####:  751:  if (nextPlayer > (state->numPlayers - 1)){
    #####:  752:    nextPlayer = 0;
        -:  753:  }
        -:  754:
        -:  755:
        -:  756:  //uses switch to select card and perform actions
    #####:  757:  switch( card )
        -:  758:    {
        -:  759:    case adventurer:
    #####:  760:      adventurer_action (drawntreasure, state, currentPlayer, cardDrawn, temphand, z);
    #####:  761:      return 0;
        -:  762:
        -:  763:    case council_room:
    #####:  764:      council_room_action (i, currentPlayer, state);
    #####:  765:      return 0;
        -:  766:
        -:  767:    case feast:
        -:  768:      //gain card with cost up to 5
        -:  769:      //Backup hand
    #####:  770:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  771:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  772:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  773:      }
        -:  774:      //Backup hand
        -:  775:
        -:  776:      //Update Coins for Buy
    #####:  777:      updateCoins(currentPlayer, state, 5);
    #####:  778:      x = 1;//Condition to loop on
    #####:  779:      while( x == 1) {//Buy one card
    #####:  780:	if (supplyCount(choice1, state) <= 0){
        -:  781:	  if (DEBUG)
        -:  782:	    printf("None of that card left, sorry!\n");
        -:  783:
        -:  784:	  if (DEBUG){
        -:  785:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  786:	  }
        -:  787:	}
    #####:  788:	else if (state->coins < getCost(choice1)){
    #####:  789:	  printf("That card is too expensive!\n");
        -:  790:
        -:  791:	  if (DEBUG){
        -:  792:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  793:	  }
        -:  794:	}
        -:  795:	else{
        -:  796:
        -:  797:	  if (DEBUG){
        -:  798:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  799:	  }
        -:  800:
    #####:  801:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    #####:  802:	  x = 0;//No more buying cards
        -:  803:
        -:  804:	  if (DEBUG){
        -:  805:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  806:	  }
        -:  807:
        -:  808:	}
        -:  809:      }
        -:  810:
        -:  811:      //Reset Hand
    #####:  812:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  813:	state->hand[currentPlayer][i] = temphand[i];
    #####:  814:	temphand[i] = -1;
        -:  815:      }
        -:  816:      //Reset Hand
        -:  817:
    #####:  818:      return 0;
        -:  819:
        -:  820:    case gardens:
    #####:  821:      return -1;
        -:  822:
        -:  823:    case mine:
    #####:  824:      m = mine_action (j, state, currentPlayer, choice1, choice2, handPos, i);
    #####:  825:      return m;
        -:  826:
        -:  827:    case remodel:
    #####:  828:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  829:
    #####:  830:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
        -:  831:	{
    #####:  832:	  return -1;
        -:  833:	}
        -:  834:
    #####:  835:      gainCard(choice2, state, 0, currentPlayer);
        -:  836:
        -:  837:      //discard card from hand
    #####:  838:      discardCard(handPos, currentPlayer, state, 0);
        -:  839:
        -:  840:      //discard trashed card
    #####:  841:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  842:	{
    #####:  843:	  if (state->hand[currentPlayer][i] == j)
        -:  844:	    {
    #####:  845:	      discardCard(i, currentPlayer, state, 0);
    #####:  846:	      break;
        -:  847:	    }
        -:  848:	}
        -:  849:
        -:  850:
    #####:  851:      return 0;
        -:  852:
        -:  853:    case smithy:
    #####:  854:      smithy_action (currentPlayer, state, i, handPos);
    #####:  855:      return 0;
        -:  856:
        -:  857:    case village:
    #####:  858:      village_action (currentPlayer, state, handPos);
    #####:  859:      return 0;
        -:  860:
        -:  861:    case baron:
    #####:  862:      state->numBuys++;//Increase buys by 1!
    #####:  863:      if (choice1 > 0){//Boolean true or going to discard an estate
    #####:  864:	int p = 0;//Iterator for hand!
    #####:  865:	int card_not_discarded = 1;//Flag for discard set!
    #####:  866:	while(card_not_discarded){
    #####:  867:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    #####:  868:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  869:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  870:	    state->discardCount[currentPlayer]++;
    #####:  871:	    for (;p < state->handCount[currentPlayer]; p++){
    #####:  872:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  873:	    }
    #####:  874:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  875:	    state->handCount[currentPlayer]--;
    #####:  876:	    card_not_discarded = 0;//Exit the loop
        -:  877:	  }
    #####:  878:	  else if (p > state->handCount[currentPlayer]){
        -:  879:	    if(DEBUG) {
        -:  880:	      printf("No estate cards in your hand, invalid choice\n");
        -:  881:	      printf("Must gain an estate if there are any\n");
        -:  882:	    }
    #####:  883:	    if (supplyCount(estate, state) > 0){
    #####:  884:	      gainCard(estate, state, 0, currentPlayer);
    #####:  885:	      state->supplyCount[estate]--;//Decrement estates
    #####:  886:	      if (supplyCount(estate, state) == 0){
    #####:  887:		isGameOver(state);
        -:  888:	      }
        -:  889:	    }
    #####:  890:	    card_not_discarded = 0;//Exit the loop
        -:  891:	  }
        -:  892:
        -:  893:	  else{
    #####:  894:	    p++;//Next card
        -:  895:	  }
        -:  896:	}
        -:  897:      }
        -:  898:
        -:  899:      else{
    #####:  900:	if (supplyCount(estate, state) > 0){
    #####:  901:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
    #####:  902:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  903:	  if (supplyCount(estate, state) == 0){
    #####:  904:	    isGameOver(state);
        -:  905:	  }
        -:  906:	}
        -:  907:      }
        -:  908:
        -:  909:
    #####:  910:      return 0;
        -:  911:
        -:  912:    case great_hall:
        -:  913:      //+1 Card
    #####:  914:      drawCard(currentPlayer, state);
        -:  915:
        -:  916:      //+1 Actions
    #####:  917:      state->numActions++;
        -:  918:
        -:  919:      //discard card from hand
    #####:  920:      discardCard(handPos, currentPlayer, state, 0);
    #####:  921:      return 0;
        -:  922:
        -:  923:    case minion:
        -:  924:      //+1 action
    #####:  925:      state->numActions++;
        -:  926:
        -:  927:      //discard card from hand
    #####:  928:      discardCard(handPos, currentPlayer, state, 0);
        -:  929:
    #####:  930:      if (choice1)		//+2 coins
        -:  931:	{
    #####:  932:	  state->coins = state->coins + 2;
        -:  933:	}
        -:  934:
    #####:  935:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
        -:  936:	{
        -:  937:	  //discard hand
    #####:  938:	  while(numHandCards(state) > 0)
        -:  939:	    {
    #####:  940:	      discardCard(handPos, currentPlayer, state, 0);
        -:  941:	    }
        -:  942:
        -:  943:	  //draw 4
    #####:  944:	  for (i = 0; i < 4; i++)
        -:  945:	    {
    #####:  946:	      drawCard(currentPlayer, state);
        -:  947:	    }
        -:  948:
        -:  949:	  //other players discard hand and redraw if hand size > 4
    #####:  950:	  for (i = 0; i < state->numPlayers; i++)
        -:  951:	    {
    #####:  952:	      if (i != currentPlayer)
        -:  953:		{
    #####:  954:		  if ( state->handCount[i] > 4 )
        -:  955:		    {
        -:  956:		      //discard hand
    #####:  957:		      while( state->handCount[i] > 0 )
        -:  958:			{
    #####:  959:			  discardCard(handPos, i, state, 0);
        -:  960:			}
        -:  961:
        -:  962:		      //draw 4
    #####:  963:		      for (j = 0; j < 4; j++)
        -:  964:			{
    #####:  965:			  drawCard(i, state);
        -:  966:			}
        -:  967:		    }
        -:  968:		}
        -:  969:	    }
        -:  970:
        -:  971:	}
    #####:  972:      return 0;
        -:  973:
        -:  974:    case steward:
    #####:  975:      if (choice1 == 1)
        -:  976:	{
        -:  977:	  //+2 cards
    #####:  978:	  drawCard(currentPlayer, state);
    #####:  979:	  drawCard(currentPlayer, state);
        -:  980:	}
    #####:  981:      else if (choice1 == 2)
        -:  982:	{
        -:  983:	  //+2 coins
    #####:  984:	  state->coins = state->coins + 2;
        -:  985:	}
        -:  986:      else
        -:  987:	{
        -:  988:	  //trash 2 cards in hand
    #####:  989:	  discardCard(choice2, currentPlayer, state, 1);
    #####:  990:	  discardCard(choice3, currentPlayer, state, 1);
        -:  991:	}
        -:  992:
        -:  993:      //discard card from hand
    #####:  994:      discardCard(handPos, currentPlayer, state, 0);
    #####:  995:      return 0;
        -:  996:
        -:  997:    case tribute:
    #####:  998:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    #####:  999:	if (state->deckCount[nextPlayer] > 0){
    #####: 1000:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1001:	  state->deckCount[nextPlayer]--;
        -: 1002:	}
    #####: 1003:	else if (state->discardCount[nextPlayer] > 0){
    #####: 1004:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1005:	  state->discardCount[nextPlayer]--;
        -: 1006:	}
        -: 1007:	else{
        -: 1008:	  //No Card to Reveal
        -: 1009:	  if (DEBUG){
        -: 1010:	    printf("No cards to reveal\n");
        -: 1011:	  }
        -: 1012:	}
        -: 1013:      }
        -: 1014:
        -: 1015:      else{
    #####: 1016:	if (state->deckCount[nextPlayer] == 0){
    #####: 1017:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    #####: 1018:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1019:	    state->deckCount[nextPlayer]++;
    #####: 1020:	    state->discard[nextPlayer][i] = -1;
    #####: 1021:	    state->discardCount[nextPlayer]--;
        -: 1022:	  }
        -: 1023:
    #####: 1024:	  shuffle(nextPlayer,state);//Shuffle the deck
        -: 1025:	}
    #####: 1026:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1027:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1028:	state->deckCount[nextPlayer]--;
    #####: 1029:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1030:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1031:	state->deckCount[nextPlayer]--;
        -: 1032:      }
        -: 1033:
    #####: 1034:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one
    #####: 1035:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1036:	state->playedCardCount++;
    #####: 1037:	tributeRevealedCards[1] = -1;
        -: 1038:      }
        -: 1039:
    #####: 1040:      for (i = 0; i <= 2; i ++){
    #####: 1041:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    #####: 1042:	  state->coins += 2;
        -: 1043:	}
        -: 1044:
    #####: 1045:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    #####: 1046:	  drawCard(currentPlayer, state);
    #####: 1047:	  drawCard(currentPlayer, state);
        -: 1048:	}
        -: 1049:	else{//Action Card
    #####: 1050:	  state->numActions = state->numActions + 2;
        -: 1051:	}
        -: 1052:      }
        -: 1053:
    #####: 1054:      return 0;
        -: 1055:
        -: 1056:    case ambassador:
    #####: 1057:      j = 0;		//used to check if player has enough cards to discard
        -: 1058:
    #####: 1059:      if (choice2 > 2 || choice2 < 0)
        -: 1060:	{
    #####: 1061:	  return -1;
        -: 1062:	}
        -: 1063:
    #####: 1064:      if (choice1 == handPos)
        -: 1065:	{
    #####: 1066:	  return -1;
        -: 1067:	}
        -: 1068:
    #####: 1069:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1070:	{
    #####: 1071:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
        -: 1072:	    {
    #####: 1073:	      j++;
        -: 1074:	    }
        -: 1075:	}
    #####: 1076:      if (j < choice2)
        -: 1077:	{
    #####: 1078:	  return -1;
        -: 1079:	}
        -: 1080:
        -: 1081:      if (DEBUG)
        -: 1082:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1083:
        -: 1084:      //increase supply count for choosen card by amount being discarded
    #####: 1085:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1086:
        -: 1087:      //each other player gains a copy of revealed card
    #####: 1088:      for (i = 0; i < state->numPlayers; i++)
        -: 1089:	{
    #####: 1090:	  if (i != currentPlayer)
        -: 1091:	    {
    #####: 1092:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
        -: 1093:	    }
        -: 1094:	}
        -: 1095:
        -: 1096:      //discard played card from hand
    #####: 1097:      discardCard(handPos, currentPlayer, state, 0);
        -: 1098:
        -: 1099:      //trash copies of cards returned to supply
    #####: 1100:      for (j = 0; j < choice2; j++)
        -: 1101:	{
    #####: 1102:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1103:	    {
    #####: 1104:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
        -: 1105:		{
    #####: 1106:		  discardCard(i, currentPlayer, state, 1);
    #####: 1107:		  break;
        -: 1108:		}
        -: 1109:	    }
        -: 1110:	}
        -: 1111:
    #####: 1112:      return 0;
        -: 1113:
        -: 1114:    case cutpurse:
        -: 1115:
    #####: 1116:      updateCoins(currentPlayer, state, 2);
    #####: 1117:      for (i = 0; i < state->numPlayers; i++)
        -: 1118:	{
    #####: 1119:	  if (i != currentPlayer)
        -: 1120:	    {
    #####: 1121:	      for (j = 0; j < state->handCount[i]; j++)
        -: 1122:		{
    #####: 1123:		  if (state->hand[i][j] == copper)
        -: 1124:		    {
    #####: 1125:		      discardCard(j, i, state, 0);
    #####: 1126:		      break;
        -: 1127:		    }
    #####: 1128:		  if (j == state->handCount[i])
        -: 1129:		    {
    #####: 1130:		      for (k = 0; k < state->handCount[i]; k++)
        -: 1131:			{
        -: 1132:			  if (DEBUG)
        -: 1133:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1134:			}
    #####: 1135:		      break;
        -: 1136:		    }
        -: 1137:		}
        -: 1138:
        -: 1139:	    }
        -: 1140:
        -: 1141:	}
        -: 1142:
        -: 1143:      //discard played card from hand
    #####: 1144:      discardCard(handPos, currentPlayer, state, 0);
        -: 1145:
    #####: 1146:      return 0;
        -: 1147:
        -: 1148:
        -: 1149:    case embargo:
        -: 1150:      //+2 Coins
    #####: 1151:      state->coins = state->coins + 2;
        -: 1152:
        -: 1153:      //see if selected pile is in play
    #####: 1154:      if ( state->supplyCount[choice1] == -1 )
        -: 1155:	{
    #####: 1156:	  return -1;
        -: 1157:	}
        -: 1158:
        -: 1159:      //add embargo token to selected supply pile
    #####: 1160:      state->embargoTokens[choice1]++;
        -: 1161:
        -: 1162:      //trash card
    #####: 1163:      discardCard(handPos, currentPlayer, state, 1);
    #####: 1164:      return 0;
        -: 1165:
        -: 1166:    case outpost:
        -: 1167:      //set outpost flag
    #####: 1168:      state->outpostPlayed++;
        -: 1169:
        -: 1170:      //discard card
    #####: 1171:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1172:      return 0;
        -: 1173:
        -: 1174:    case salvager:
        -: 1175:      //+1 buy
    #####: 1176:      state->numBuys++;
        -: 1177:
    #####: 1178:      if (choice1)
        -: 1179:	{
        -: 1180:	  //gain coins equal to trashed card
    #####: 1181:	  state->coins = state->coins + getCost( handCard(choice1, state) );
        -: 1182:	  //trash card
    #####: 1183:	  discardCard(choice1, currentPlayer, state, 1);
        -: 1184:	}
        -: 1185:
        -: 1186:      //discard card
    #####: 1187:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1188:      return 0;
        -: 1189:
        -: 1190:    case sea_hag:
    #####: 1191:      for (i = 0; i < state->numPlayers; i++){
    #####: 1192:	if (i != currentPlayer){
    #####: 1193:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1194:	  state->discardCount[i]++;
    #####: 1195:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1196:	}
        -: 1197:      }
    #####: 1198:      return 0;
        -: 1199:
        -: 1200:    case treasure_map:
        -: 1201:      //search hand for another treasure_map
    #####: 1202:      index = -1;
    #####: 1203:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1204:	{
    #####: 1205:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
        -: 1206:	    {
    #####: 1207:	      index = i;
    #####: 1208:	      break;
        -: 1209:	    }
        -: 1210:	}
    #####: 1211:      if (index > -1)
        -: 1212:	{
        -: 1213:	  //trash both treasure cards
    #####: 1214:	  discardCard(handPos, currentPlayer, state, 1);
    #####: 1215:	  discardCard(index, currentPlayer, state, 1);
        -: 1216:
        -: 1217:	  //gain 4 Gold cards
    #####: 1218:	  for (i = 0; i < 4; i++)
        -: 1219:	    {
    #####: 1220:	      gainCard(gold, state, 1, currentPlayer);
        -: 1221:	    }
        -: 1222:
        -: 1223:	  //return success
    #####: 1224:	  return 1;
        -: 1225:	}
        -: 1226:
        -: 1227:      //no second treasure_map found in hand
    #####: 1228:      return -1;
        -: 1229:    }
        -: 1230:
    #####: 1231:  return -1;
        -: 1232:}
        -: 1233:
    #####: 1234:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1235:{
        -: 1236:
        -: 1237:  //if card is not trashed, added to Played pile
    #####: 1238:  if (trashFlag < 1)
        -: 1239:    {
        -: 1240:      //add card to played pile
    #####: 1241:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos];
    #####: 1242:      state->playedCardCount++;
        -: 1243:    }
        -: 1244:
        -: 1245:  //set played card to -1
    #####: 1246:  state->hand[currentPlayer][handPos] = -1;
        -: 1247:
        -: 1248:  //remove card from player's hand
    #####: 1249:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
        -: 1250:    {
        -: 1251:      //reduce number of cards in hand
    #####: 1252:      state->handCount[currentPlayer]--;
        -: 1253:    }
    #####: 1254:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
        -: 1255:    {
        -: 1256:      //reduce number of cards in hand
    #####: 1257:      state->handCount[currentPlayer]--;
        -: 1258:    }
        -: 1259:  else
        -: 1260:    {
        -: 1261:      //replace discarded card with last card in hand
    #####: 1262:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1263:      //set last card to -1
    #####: 1264:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1265:      //reduce number of cards in hand
    #####: 1266:      state->handCount[currentPlayer]--;
        -: 1267:    }
        -: 1268:
    #####: 1269:  return 0;
        -: 1270:}
        -: 1271:
    #####: 1272:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1273:{
        -: 1274:  //Note: supplyPos is enum of choosen card
        -: 1275:
        -: 1276:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1277:  if ( supplyCount(supplyPos, state) < 1 )
        -: 1278:    {
    #####: 1279:      return -1;
        -: 1280:    }
        -: 1281:
        -: 1282:  //added card for [whoseTurn] current player:
        -: 1283:  // toFlag = 0 : add to discard
        -: 1284:  // toFlag = 1 : add to deck
        -: 1285:  // toFlag = 2 : add to hand
        -: 1286:
    #####: 1287:  if (toFlag == 1)
        -: 1288:    {
    #####: 1289:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1290:      state->deckCount[player]++;
        -: 1291:    }
    #####: 1292:  else if (toFlag == 2)
        -: 1293:    {
    #####: 1294:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1295:      state->handCount[player]++;
        -: 1296:    }
        -: 1297:  else
        -: 1298:    {
    #####: 1299:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1300:      state->discardCount[player]++;
        -: 1301:    }
        -: 1302:
        -: 1303:  //decrease number in supply pile
    #####: 1304:  state->supplyCount[supplyPos]--;
        -: 1305:
    #####: 1306:  return 0;
        -: 1307:}
        -: 1308:
    #####: 1309:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1310:{
        -: 1311:  int i;
        -: 1312:
        -: 1313:  //reset coin count
    #####: 1314:  state->coins = 0;
        -: 1315:
        -: 1316:  //add coins for each Treasure card in player's hand
    #####: 1317:  for (i = 0; i < state->handCount[player]; i++)
        -: 1318:    {
    #####: 1319:      if (state->hand[player][i] == copper)
        -: 1320:	{
    #####: 1321:	  state->coins += 1;
        -: 1322:	}
    #####: 1323:      else if (state->hand[player][i] == silver)
        -: 1324:	{
    #####: 1325:	  state->coins += 2;
        -: 1326:	}
    #####: 1327:      else if (state->hand[player][i] == gold)
        -: 1328:	{
    #####: 1329:	  state->coins += 3;
        -: 1330:	}
        -: 1331:    }
        -: 1332:
        -: 1333:  //add bonus
    #####: 1334:  state->coins += bonus;
        -: 1335:
    #####: 1336:  return 0;
        -: 1337:}
        -: 1338:
        -: 1339:
        -: 1340://end of dominion.c
unittest2.c:
Test passed! The return value of isGameOver was 1 when the province count was set to zero
Test passed! The return value of isGameOver was 0 when all the supply counts were greater than 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
File 'dominion.c'
Lines executed:7.13% of 561
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:2
        -:    0:Programs:2
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
    #####:    8:int compare(const void* a, const void* b) {
    #####:    9:  if (*(int*)a > *(int*)b)
    #####:   10:    return 1;
    #####:   11:  if (*(int*)a < *(int*)b)
    #####:   12:    return -1;
    #####:   13:  return 0;
        -:   14:}
        -:   15:
    #####:   16:struct gameState* newGame() {
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
        -:   19:}
        -:   20:
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
        -:   35:}
        -:   36:
    #####:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;
        -:   43:  //set up random number generator
    #####:   44:  SelectStream(1);
    #####:   45:  PutSeed((long)randomSeed);
        -:   46:
        -:   47:  //check number of players
    #####:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
    #####:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
    #####:   57:  for (i = 0; i < 10; i++)
        -:   58:    {
    #####:   59:      for (j = 0; j < 10; j++)
        -:   60:        {
    #####:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
    #####:   73:  if (numPlayers == 2)
        -:   74:    {
    #####:   75:      state->supplyCount[curse] = 10;
        -:   76:    }
    #####:   77:  else if (numPlayers == 3)
        -:   78:    {
    #####:   79:      state->supplyCount[curse] = 20;
        -:   80:    }
        -:   81:  else
        -:   82:    {
    #####:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
    #####:   87:  if (numPlayers == 2)
        -:   88:    {
    #####:   89:      state->supplyCount[estate] = 8;
    #####:   90:      state->supplyCount[duchy] = 8;
    #####:   91:      state->supplyCount[province] = 8;
        -:   92:    }
        -:   93:  else
        -:   94:    {
    #####:   95:      state->supplyCount[estate] = 12;
    #####:   96:      state->supplyCount[duchy] = 12;
    #####:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
    #####:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
    #####:  102:  state->supplyCount[silver] = 40;
    #####:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
    #####:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
        -:  107:    {
    #####:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
        -:  109:	{
    #####:  110:	  if (kingdomCards[j] == i)
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
    #####:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
        -:  114:		{
    #####:  115:		  if (numPlayers == 2){
    #####:  116:		    state->supplyCount[i] = 8;
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
        -:  119:		}
        -:  120:	      else
        -:  121:		{
    #####:  122:		  state->supplyCount[i] = 10;
        -:  123:		}
    #####:  124:	      break;
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
    #####:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
    #####:  138:  for (i = 0; i < numPlayers; i++)
        -:  139:    {
    #####:  140:      state->deckCount[i] = 0;
    #####:  141:      for (j = 0; j < 3; j++)
        -:  142:	{
    #####:  143:	  state->deck[i][j] = estate;
    #####:  144:	  state->deckCount[i]++;
        -:  145:	}
    #####:  146:      for (j = 3; j < 10; j++)
        -:  147:	{
    #####:  148:	  state->deck[i][j] = copper;
    #####:  149:	  state->deckCount[i]++;
        -:  150:	}
        -:  151:    }
        -:  152:
        -:  153:  //shuffle player decks
    #####:  154:  for (i = 0; i < numPlayers; i++)
        -:  155:    {
    #####:  156:      if ( shuffle(i, state) < 0 )
        -:  157:	{
    #####:  158:	  return -1;
        -:  159:	}
        -:  160:    }
        -:  161:
        -:  162:  //draw player hands
    #####:  163:  for (i = 0; i < numPlayers; i++)
        -:  164:    {
        -:  165:      //initialize hand size to zero
    #####:  166:      state->handCount[i] = 0;
    #####:  167:      state->discardCount[i] = 0;
        -:  168:      //draw 5 cards
        -:  169:      // for (j = 0; j < 5; j++)
        -:  170:      //	{
        -:  171:      //	  drawCard(i, state);
        -:  172:      //	}
        -:  173:    }
        -:  174:
        -:  175:  //set embargo tokens to 0 for all supply piles
    #####:  176:  for (i = 0; i <= treasure_map; i++)
        -:  177:    {
    #####:  178:      state->embargoTokens[i] = 0;
        -:  179:    }
        -:  180:
        -:  181:  //initialize first player's turn
    #####:  182:  state->outpostPlayed = 0;
    #####:  183:  state->phase = 0;
    #####:  184:  state->numActions = 1;
    #####:  185:  state->numBuys = 1;
    #####:  186:  state->playedCardCount = 0;
    #####:  187:  state->whoseTurn = 0;
    #####:  188:  state->handCount[state->whoseTurn] = 0;
        -:  189:  //int it; move to top
        -:  190:
        -:  191:  //Moved draw cards to here, only drawing at the start of a turn
    #####:  192:  for (it = 0; it < 5; it++){
    #####:  193:    drawCard(state->whoseTurn, state);
        -:  194:  }
        -:  195:
    #####:  196:  updateCoins(state->whoseTurn, state, 0);
        -:  197:
    #####:  198:  return 0;
        -:  199:}
        -:  200:
    #####:  201:int shuffle(int player, struct gameState *state) {
        -:  202:
        -:  203:
        -:  204:  int newDeck[MAX_DECK];
    #####:  205:  int newDeckPos = 0;
        -:  206:  int card;
        -:  207:  int i;
        -:  208:
    #####:  209:  if (state->deckCount[player] < 1)
    #####:  210:    return -1;
    #####:  211:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare);
        -:  212:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  213:
    #####:  214:  while (state->deckCount[player] > 0) {
    #####:  215:    card = floor(Random() * state->deckCount[player]);
    #####:  216:    newDeck[newDeckPos] = state->deck[player][card];
    #####:  217:    newDeckPos++;
    #####:  218:    for (i = card; i < state->deckCount[player]-1; i++) {
    #####:  219:      state->deck[player][i] = state->deck[player][i+1];
        -:  220:    }
    #####:  221:    state->deckCount[player]--;
        -:  222:  }
    #####:  223:  for (i = 0; i < newDeckPos; i++) {
    #####:  224:    state->deck[player][i] = newDeck[i];
    #####:  225:    state->deckCount[player]++;
        -:  226:  }
        -:  227:
    #####:  228:  return 0;
        -:  229:}
        -:  230:
    #####:  231:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state)
        -:  232:{
        -:  233:  int card;
    #####:  234:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  235:
        -:  236:  //check if it is the right phase
    #####:  237:  if (state->phase != 0)
        -:  238:    {
    #####:  239:      return -1;
        -:  240:    }
        -:  241:
        -:  242:  //check if player has enough actions
    #####:  243:  if ( state->numActions < 1 )
        -:  244:    {
    #####:  245:      return -1;
        -:  246:    }
        -:  247:
        -:  248:  //get card played
    #####:  249:  card = handCard(handPos, state);
        -:  250:
        -:  251:  //check if selected card is an action
    #####:  252:  if ( card < adventurer || card > treasure_map )
        -:  253:    {
    #####:  254:      return -1;
        -:  255:    }
        -:  256:
        -:  257:  //play card
    #####:  258:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
        -:  259:    {
    #####:  260:      return -1;
        -:  261:    }
        -:  262:
        -:  263:  //reduce number of actions
    #####:  264:  state->numActions--;
        -:  265:
        -:  266:  //update coins (Treasure cards may be added with card draws)
    #####:  267:  updateCoins(state->whoseTurn, state, coin_bonus);
        -:  268:
    #####:  269:  return 0;
        -:  270:}
        -:  271:
    #####:  272:int buyCard(int supplyPos, struct gameState *state) {
        -:  273:  int who;
        -:  274:  if (DEBUG){
        -:  275:    printf("Entering buyCard...\n");
        -:  276:  }
        -:  277:
        -:  278:  // I don't know what to do about the phase thing.
        -:  279:
    #####:  280:  who = state->whoseTurn;
        -:  281:
    #####:  282:  if (state->numBuys < 1){
        -:  283:    if (DEBUG)
        -:  284:      printf("You do not have any buys left\n");
    #####:  285:    return -1;
    #####:  286:  } else if (supplyCount(supplyPos, state) <1){
        -:  287:    if (DEBUG)
        -:  288:      printf("There are not any of that type of card left\n");
    #####:  289:    return -1;
    #####:  290:  } else if (state->coins < getCost(supplyPos)){
        -:  291:    if (DEBUG)
        -:  292:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  293:    return -1;
        -:  294:  } else {
    #####:  295:    state->phase=1;
        -:  296:    //state->supplyCount[supplyPos]--;
    #####:  297:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  298:
    #####:  299:    state->coins = (state->coins) - (getCost(supplyPos));
    #####:  300:    state->numBuys--;
        -:  301:    if (DEBUG)
        -:  302:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  303:  }
        -:  304:
        -:  305:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  306:  //state->discardCount[who]++;
        -:  307:
    #####:  308:  return 0;
        -:  309:}
        -:  310:
    #####:  311:int numHandCards(struct gameState *state) {
    #####:  312:  return state->handCount[ whoseTurn(state) ];
        -:  313:}
        -:  314:
    #####:  315:int handCard(int handPos, struct gameState *state) {
    #####:  316:  int currentPlayer = whoseTurn(state);
    #####:  317:  return state->hand[currentPlayer][handPos];
        -:  318:}
        -:  319:
    #####:  320:int supplyCount(int card, struct gameState *state) {
    #####:  321:  return state->supplyCount[card];
        -:  322:}
        -:  323:
    #####:  324:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  325:  int i;
    #####:  326:  int count = 0;
        -:  327:
    #####:  328:  for (i = 0; i < state->deckCount[player]; i++)
        -:  329:    {
    #####:  330:      if (state->deck[player][i] == card) count++;
        -:  331:    }
        -:  332:
    #####:  333:  for (i = 0; i < state->handCount[player]; i++)
        -:  334:    {
    #####:  335:      if (state->hand[player][i] == card) count++;
        -:  336:    }
        -:  337:
    #####:  338:  for (i = 0; i < state->discardCount[player]; i++)
        -:  339:    {
    #####:  340:      if (state->discard[player][i] == card) count++;
        -:  341:    }
        -:  342:
    #####:  343:  return count;
        -:  344:}
        -:  345:
    #####:  346:int whoseTurn(struct gameState *state) {
    #####:  347:  return state->whoseTurn;
        -:  348:}
        -:  349:
    #####:  350:int endTurn(struct gameState *state) {
        -:  351:  int k;
        -:  352:  int i;
    #####:  353:  int currentPlayer = whoseTurn(state);
        -:  354:
        -:  355:  //Discard hand
    #####:  356:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    #####:  357:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  358:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  359:  }
    #####:  360:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  361:
        -:  362:  //Code for determining the player
    #####:  363:  if (currentPlayer < (state->numPlayers - 1)){
    #####:  364:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  365:  }
        -:  366:  else{
    #####:  367:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  368:  }
        -:  369:
    #####:  370:  state->outpostPlayed = 0;
    #####:  371:  state->phase = 0;
    #####:  372:  state->numActions = 1;
    #####:  373:  state->coins = 0;
    #####:  374:  state->numBuys = 1;
    #####:  375:  state->playedCardCount = 0;
    #####:  376:  state->handCount[state->whoseTurn] = 0;
        -:  377:
        -:  378:  //int k; move to top
        -:  379:  //Next player draws hand
    #####:  380:  for (k = 0; k < 5; k++){
    #####:  381:    drawCard(state->whoseTurn, state);//Draw a card
        -:  382:  }
        -:  383:
        -:  384:  //Update money
    #####:  385:  updateCoins(state->whoseTurn, state , 0);
        -:  386:
    #####:  387:  return 0;
        -:  388:}
        -:  389:
     1002:  390:int isGameOver(struct gameState *state) {
        -:  391:  int i;
        -:  392:  int j;
        -:  393:
        -:  394:  //if stack of Province cards is empty, the game ends
     1002:  395:  if (state->supplyCount[province] == 0)
        -:  396:    {
      124:  397:      return 1;
        -:  398:    }
        -:  399:
        -:  400:  //if three supply pile are at 0, the game ends
      878:  401:  j = 0;
    22828:  402:  for (i = 0; i < 25; i++)
        -:  403:    {
    21950:  404:      if (state->supplyCount[i] == 0)
        -:  405:	{
     2631:  406:	  j++;
        -:  407:	}
        -:  408:    }
      878:  409:  if ( j >= 3)
        -:  410:    {
      877:  411:      return 1;
        -:  412:    }
        -:  413:
        1:  414:  return 0;
        -:  415:}
        -:  416:
    #####:  417:int scoreFor (int player, struct gameState *state) {
        -:  418:
        -:  419:  int i;
    #####:  420:  int score = 0;
        -:  421:  //score from hand
    #####:  422:  for (i = 0; i < state->handCount[player]; i++)
        -:  423:    {
    #####:  424:      if (state->hand[player][i] == curse) { score = score - 1; };
    #####:  425:      if (state->hand[player][i] == estate) { score = score + 1; };
    #####:  426:      if (state->hand[player][i] == duchy) { score = score + 3; };
    #####:  427:      if (state->hand[player][i] == province) { score = score + 6; };
    #####:  428:      if (state->hand[player][i] == great_hall) { score = score + 1; };
    #####:  429:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  430:    }
        -:  431:
        -:  432:  //score from discard
    #####:  433:  for (i = 0; i < state->discardCount[player]; i++)
        -:  434:    {
    #####:  435:      if (state->discard[player][i] == curse) { score = score - 1; };
    #####:  436:      if (state->discard[player][i] == estate) { score = score + 1; };
    #####:  437:      if (state->discard[player][i] == duchy) { score = score + 3; };
    #####:  438:      if (state->discard[player][i] == province) { score = score + 6; };
    #####:  439:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    #####:  440:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  441:    }
        -:  442:
        -:  443:  //score from deck
    #####:  444:  for (i = 0; i < state->discardCount[player]; i++)
        -:  445:    {
    #####:  446:      if (state->deck[player][i] == curse) { score = score - 1; };
    #####:  447:      if (state->deck[player][i] == estate) { score = score + 1; };
    #####:  448:      if (state->deck[player][i] == duchy) { score = score + 3; };
    #####:  449:      if (state->deck[player][i] == province) { score = score + 6; };
    #####:  450:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    #####:  451:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  452:    }
        -:  453:
    #####:  454:  return score;
        -:  455:}
        -:  456:
    #####:  457:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  458:  int i;
        -:  459:  int j;
        -:  460:  int highScore;
        -:  461:  int currentPlayer;
        -:  462:
        -:  463:  //get score for each player
    #####:  464:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  465:    {
        -:  466:      //set unused player scores to -9999
    #####:  467:      if (i >= state->numPlayers)
        -:  468:	{
    #####:  469:	  players[i] = -9999;
        -:  470:	}
        -:  471:      else
        -:  472:	{
    #####:  473:	  players[i] = scoreFor (i, state);
        -:  474:	}
        -:  475:    }
        -:  476:
        -:  477:  //find highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  480:    {
    #####:  481:      if (players[i] > players[j])
        -:  482:	{
    #####:  483:	  j = i;
        -:  484:	}
        -:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //add 1 to players who had less turns
    #####:  489:  currentPlayer = whoseTurn(state);
    #####:  490:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  491:    {
    #####:  492:      if ( players[i] == highScore && i > currentPlayer )
        -:  493:	{
    #####:  494:	  players[i]++;
        -:  495:	}
        -:  496:    }
        -:  497:
        -:  498:  //find new highest score
    #####:  499:  j = 0;
    #####:  500:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  501:    {
    #####:  502:      if ( players[i] > players[j] )
        -:  503:	{
    #####:  504:	  j = i;
        -:  505:	}
        -:  506:    }
    #####:  507:  highScore = players[j];
        -:  508:
        -:  509:  //set winners in array to 1 and rest to 0
    #####:  510:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  511:    {
    #####:  512:      if ( players[i] == highScore )
        -:  513:	{
    #####:  514:	  players[i] = 1;
        -:  515:	}
        -:  516:      else
        -:  517:	{
    #####:  518:	  players[i] = 0;
        -:  519:	}
        -:  520:    }
        -:  521:
    #####:  522:  return 0;
        -:  523:}
        -:  524:
    #####:  525:int drawCard(int player, struct gameState *state)
        -:  526:{	int count;
        -:  527:  int deckCounter;
    #####:  528:  if (state->deckCount[player] <= 0){//Deck is empty
        -:  529:
        -:  530:    //Step 1 Shuffle the discard pile back into a deck
        -:  531:    int i;
        -:  532:    //Move discard to deck
    #####:  533:    for (i = 0; i < state->discardCount[player];i++){
    #####:  534:      state->deck[player][i] = state->discard[player][i];
    #####:  535:      state->discard[player][i] = -1;
        -:  536:    }
        -:  537:
    #####:  538:    state->deckCount[player] = state->discardCount[player];
    #####:  539:    state->discardCount[player] = 0;//Reset discard
        -:  540:
        -:  541:    //Shufffle the deck
    #####:  542:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
        -:  543:
        -:  544:    if (DEBUG){//Debug statements
        -:  545:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  546:    }
        -:  547:
    #####:  548:    state->discardCount[player] = 0;
        -:  549:
        -:  550:    //Step 2 Draw Card
    #####:  551:    count = state->handCount[player];//Get current player's hand count
        -:  552:
        -:  553:    if (DEBUG){//Debug statements
        -:  554:      printf("Current hand count: %d\n", count);
        -:  555:    }
        -:  556:
    #####:  557:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  558:
    #####:  559:    if (deckCounter == 0)
    #####:  560:      return -1;
        -:  561:
    #####:  562:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    #####:  563:    state->deckCount[player]--;
    #####:  564:    state->handCount[player]++;//Increment hand count
        -:  565:  }
        -:  566:
        -:  567:  else{
    #####:  568:    int count = state->handCount[player];//Get current hand count for player
        -:  569:    int deckCounter;
        -:  570:    if (DEBUG){//Debug statements
        -:  571:      printf("Current hand count: %d\n", count);
        -:  572:    }
        -:  573:
    #####:  574:    deckCounter = state->deckCount[player];//Create holder for the deck count
    #####:  575:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
    #####:  576:    state->deckCount[player]--;
    #####:  577:    state->handCount[player]++;//Increment hand count
        -:  578:  }
        -:  579:
    #####:  580:  return 0;
        -:  581:}
        -:  582:
       35:  583:int getCost(int cardNumber)
        -:  584:{
       35:  585:  switch( cardNumber )
        -:  586:    {
        -:  587:    case curse:
        1:  588:      return 0;
        -:  589:    case estate:
        1:  590:      return 2;
        -:  591:    case duchy:
        1:  592:      return 5;
        -:  593:    case province:
        1:  594:      return 8;
        -:  595:    case copper:
        1:  596:      return 0;
        -:  597:    case silver:
        1:  598:      return 3;
        -:  599:    case gold:
        1:  600:      return 6;
        -:  601:    case adventurer:
        1:  602:      return 6;
        -:  603:    case council_room:
        1:  604:      return 5;
        -:  605:    case feast:
        1:  606:      return 4;
        -:  607:    case gardens:
        1:  608:      return 4;
        -:  609:    case mine:
        1:  610:      return 5;
        -:  611:    case remodel:
        1:  612:      return 4;
        -:  613:    case smithy:
        1:  614:      return 4;
        -:  615:    case village:
        1:  616:      return 3;
        -:  617:    case baron:
        1:  618:      return 4;
        -:  619:    case great_hall:
        1:  620:      return 3;
        -:  621:    case minion:
        1:  622:      return 5;
        -:  623:    case steward:
        1:  624:      return 3;
        -:  625:    case tribute:
        1:  626:      return 5;
        -:  627:    case ambassador:
        1:  628:      return 3;
        -:  629:    case cutpurse:
        1:  630:      return 4;
        -:  631:    case embargo:
        1:  632:      return 2;
        -:  633:    case outpost:
        1:  634:      return 5;
        -:  635:    case salvager:
        1:  636:      return 4;
        -:  637:    case sea_hag:
        1:  638:      return 4;
        -:  639:    case treasure_map:
        1:  640:      return 4;
        -:  641:    }
        -:  642:
        8:  643:  return -1;
        -:  644:}
        -:  645:
    #####:  646:void adventurer_action (int drawntreasure, struct gameState *state, int currentPlayer, int cardDrawn, int temphand[MAX_HAND], int z) {
    #####:  647:    while(drawntreasure<2){
    #####:  648:        if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
    #####:  649:            shuffle(currentPlayer, state);
        -:  650:        }
    #####:  651:        drawCard(currentPlayer, state);
    #####:  652:        cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
    #####:  653:        if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
    #####:  654:          drawntreasure++;
        -:  655:        else{
    #####:  656:          temphand[z]=cardDrawn;
    #####:  657:          state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
        -:  658:        }
        -:  659:  }
    #####:  660:  while(z-1>=0){
    #####:  661:      state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    #####:  662:      z=z-1;
        -:  663:  }
    #####:  664:}
        -:  665:
    #####:  666:void smithy_action (int currentPlayer, struct gameState *state, int i, int handPos) {
        -:  667:  //+3 Cards
    #####:  668:  for (i = 0; i < 3; i++) {
    #####:  669:    drawCard(currentPlayer, state);
        -:  670:  }
        -:  671:
        -:  672:  //discard card from hand
    #####:  673:  discardCard(handPos, currentPlayer, state, 0);
    #####:  674:}
        -:  675:
    #####:  676:void village_action (int currentPlayer, struct gameState *state, int handPos) {
        -:  677:  //+1 Card
    #####:  678:  drawCard(currentPlayer, state);
        -:  679:
        -:  680:  //+2 Actions
    #####:  681:  state->numActions = state->numActions + 2;
        -:  682:
        -:  683:  //discard played card from hand
    #####:  684:  discardCard(handPos, currentPlayer, state, 0);
    #####:  685:}
        -:  686:
    #####:  687:void council_room_action (int i, int currentPlayer, struct gameState *state) {
        -:  688:  //+4 Cards
    #####:  689:  for (i = 0; i < 4; i++) {
    #####:  690:      drawCard(currentPlayer, state);
        -:  691:  }
        -:  692:
        -:  693:  //+1 Buy
    #####:  694:  state->numBuys++;
        -:  695:
        -:  696:  //Each other player draws a card
    #####:  697:  for (i = 0; i < state->numPlayers; i++) {
    #####:  698:      if ( i == currentPlayer ) {
    #####:  699:          drawCard(i, state);
        -:  700:      }
        -:  701:  }
    #####:  702:}
        -:  703:
    #####:  704:int mine_action (int j, struct gameState *state, int currentPlayer, int choice1, int choice2, int handPos, int i) {
    #####:  705:  j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  706:
    #####:  707:  if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold) {
    #####:  708:      return -1;
        -:  709:  }
        -:  710:
    #####:  711:  if (choice2 > treasure_map || choice2 < curse) {
    #####:  712:      return -1;
        -:  713:  }
        -:  714:
    #####:  715:  if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) ) {
    #####:  716:      return -1;
        -:  717:  }
        -:  718:
    #####:  719:  gainCard(choice2, state, 2, currentPlayer);
        -:  720:
        -:  721:  //discard card from hand
    #####:  722:  discardCard(handPos, currentPlayer, state, 0);
        -:  723:
        -:  724:  //discard trashed card
    #####:  725:  for (i = 0; i < state->handCount[currentPlayer]; i++) {
    #####:  726:      if (state->hand[currentPlayer][i] == j) {
    #####:  727:        discardCard(i, currentPlayer, state, 0);
    #####:  728:        break;
        -:  729:      }
        -:  730:  }
        -:  731:
    #####:  732:  return -1;
        -:  733:}
        -:  734:
    #####:  735:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  736:{
        -:  737:  int i;
        -:  738:  int j;
        -:  739:  int k;
        -:  740:  int x;
        -:  741:  int m;
        -:  742:  int index;
    #####:  743:  int currentPlayer = whoseTurn(state);
    #####:  744:  int nextPlayer = currentPlayer + 1;
        -:  745:
    #####:  746:  int tributeRevealedCards[2] = {-1, -1};
        -:  747:  int temphand[MAX_HAND];// moved above the if statement
    #####:  748:  int drawntreasure=0;
        -:  749:  int cardDrawn;
    #####:  750:  int z = 0;// this is the counter for the temp hand
    #####:  751:  if (nextPlayer > (state->numPlayers - 1)){
    #####:  752:    nextPlayer = 0;
        -:  753:  }
        -:  754:
        -:  755:
        -:  756:  //uses switch to select card and perform actions
    #####:  757:  switch( card )
        -:  758:    {
        -:  759:    case adventurer:
    #####:  760:      adventurer_action (drawntreasure, state, currentPlayer, cardDrawn, temphand, z);
    #####:  761:      return 0;
        -:  762:
        -:  763:    case council_room:
    #####:  764:      council_room_action (i, currentPlayer, state);
    #####:  765:      return 0;
        -:  766:
        -:  767:    case feast:
        -:  768:      //gain card with cost up to 5
        -:  769:      //Backup hand
    #####:  770:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  771:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  772:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  773:      }
        -:  774:      //Backup hand
        -:  775:
        -:  776:      //Update Coins for Buy
    #####:  777:      updateCoins(currentPlayer, state, 5);
    #####:  778:      x = 1;//Condition to loop on
    #####:  779:      while( x == 1) {//Buy one card
    #####:  780:	if (supplyCount(choice1, state) <= 0){
        -:  781:	  if (DEBUG)
        -:  782:	    printf("None of that card left, sorry!\n");
        -:  783:
        -:  784:	  if (DEBUG){
        -:  785:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  786:	  }
        -:  787:	}
    #####:  788:	else if (state->coins < getCost(choice1)){
    #####:  789:	  printf("That card is too expensive!\n");
        -:  790:
        -:  791:	  if (DEBUG){
        -:  792:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  793:	  }
        -:  794:	}
        -:  795:	else{
        -:  796:
        -:  797:	  if (DEBUG){
        -:  798:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  799:	  }
        -:  800:
    #####:  801:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    #####:  802:	  x = 0;//No more buying cards
        -:  803:
        -:  804:	  if (DEBUG){
        -:  805:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  806:	  }
        -:  807:
        -:  808:	}
        -:  809:      }
        -:  810:
        -:  811:      //Reset Hand
    #####:  812:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  813:	state->hand[currentPlayer][i] = temphand[i];
    #####:  814:	temphand[i] = -1;
        -:  815:      }
        -:  816:      //Reset Hand
        -:  817:
    #####:  818:      return 0;
        -:  819:
        -:  820:    case gardens:
    #####:  821:      return -1;
        -:  822:
        -:  823:    case mine:
    #####:  824:      m = mine_action (j, state, currentPlayer, choice1, choice2, handPos, i);
    #####:  825:      return m;
        -:  826:
        -:  827:    case remodel:
    #####:  828:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  829:
    #####:  830:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
        -:  831:	{
    #####:  832:	  return -1;
        -:  833:	}
        -:  834:
    #####:  835:      gainCard(choice2, state, 0, currentPlayer);
        -:  836:
        -:  837:      //discard card from hand
    #####:  838:      discardCard(handPos, currentPlayer, state, 0);
        -:  839:
        -:  840:      //discard trashed card
    #####:  841:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  842:	{
    #####:  843:	  if (state->hand[currentPlayer][i] == j)
        -:  844:	    {
    #####:  845:	      discardCard(i, currentPlayer, state, 0);
    #####:  846:	      break;
        -:  847:	    }
        -:  848:	}
        -:  849:
        -:  850:
    #####:  851:      return 0;
        -:  852:
        -:  853:    case smithy:
    #####:  854:      smithy_action (currentPlayer, state, i, handPos);
    #####:  855:      return 0;
        -:  856:
        -:  857:    case village:
    #####:  858:      village_action (currentPlayer, state, handPos);
    #####:  859:      return 0;
        -:  860:
        -:  861:    case baron:
    #####:  862:      state->numBuys++;//Increase buys by 1!
    #####:  863:      if (choice1 > 0){//Boolean true or going to discard an estate
    #####:  864:	int p = 0;//Iterator for hand!
    #####:  865:	int card_not_discarded = 1;//Flag for discard set!
    #####:  866:	while(card_not_discarded){
    #####:  867:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    #####:  868:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  869:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  870:	    state->discardCount[currentPlayer]++;
    #####:  871:	    for (;p < state->handCount[currentPlayer]; p++){
    #####:  872:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  873:	    }
    #####:  874:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  875:	    state->handCount[currentPlayer]--;
    #####:  876:	    card_not_discarded = 0;//Exit the loop
        -:  877:	  }
    #####:  878:	  else if (p > state->handCount[currentPlayer]){
        -:  879:	    if(DEBUG) {
        -:  880:	      printf("No estate cards in your hand, invalid choice\n");
        -:  881:	      printf("Must gain an estate if there are any\n");
        -:  882:	    }
    #####:  883:	    if (supplyCount(estate, state) > 0){
    #####:  884:	      gainCard(estate, state, 0, currentPlayer);
    #####:  885:	      state->supplyCount[estate]--;//Decrement estates
    #####:  886:	      if (supplyCount(estate, state) == 0){
    #####:  887:		isGameOver(state);
        -:  888:	      }
        -:  889:	    }
    #####:  890:	    card_not_discarded = 0;//Exit the loop
        -:  891:	  }
        -:  892:
        -:  893:	  else{
    #####:  894:	    p++;//Next card
        -:  895:	  }
        -:  896:	}
        -:  897:      }
        -:  898:
        -:  899:      else{
    #####:  900:	if (supplyCount(estate, state) > 0){
    #####:  901:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
    #####:  902:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  903:	  if (supplyCount(estate, state) == 0){
    #####:  904:	    isGameOver(state);
        -:  905:	  }
        -:  906:	}
        -:  907:      }
        -:  908:
        -:  909:
    #####:  910:      return 0;
        -:  911:
        -:  912:    case great_hall:
        -:  913:      //+1 Card
    #####:  914:      drawCard(currentPlayer, state);
        -:  915:
        -:  916:      //+1 Actions
    #####:  917:      state->numActions++;
        -:  918:
        -:  919:      //discard card from hand
    #####:  920:      discardCard(handPos, currentPlayer, state, 0);
    #####:  921:      return 0;
        -:  922:
        -:  923:    case minion:
        -:  924:      //+1 action
    #####:  925:      state->numActions++;
        -:  926:
        -:  927:      //discard card from hand
    #####:  928:      discardCard(handPos, currentPlayer, state, 0);
        -:  929:
    #####:  930:      if (choice1)		//+2 coins
        -:  931:	{
    #####:  932:	  state->coins = state->coins + 2;
        -:  933:	}
        -:  934:
    #####:  935:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
        -:  936:	{
        -:  937:	  //discard hand
    #####:  938:	  while(numHandCards(state) > 0)
        -:  939:	    {
    #####:  940:	      discardCard(handPos, currentPlayer, state, 0);
        -:  941:	    }
        -:  942:
        -:  943:	  //draw 4
    #####:  944:	  for (i = 0; i < 4; i++)
        -:  945:	    {
    #####:  946:	      drawCard(currentPlayer, state);
        -:  947:	    }
        -:  948:
        -:  949:	  //other players discard hand and redraw if hand size > 4
    #####:  950:	  for (i = 0; i < state->numPlayers; i++)
        -:  951:	    {
    #####:  952:	      if (i != currentPlayer)
        -:  953:		{
    #####:  954:		  if ( state->handCount[i] > 4 )
        -:  955:		    {
        -:  956:		      //discard hand
    #####:  957:		      while( state->handCount[i] > 0 )
        -:  958:			{
    #####:  959:			  discardCard(handPos, i, state, 0);
        -:  960:			}
        -:  961:
        -:  962:		      //draw 4
    #####:  963:		      for (j = 0; j < 4; j++)
        -:  964:			{
    #####:  965:			  drawCard(i, state);
        -:  966:			}
        -:  967:		    }
        -:  968:		}
        -:  969:	    }
        -:  970:
        -:  971:	}
    #####:  972:      return 0;
        -:  973:
        -:  974:    case steward:
    #####:  975:      if (choice1 == 1)
        -:  976:	{
        -:  977:	  //+2 cards
    #####:  978:	  drawCard(currentPlayer, state);
    #####:  979:	  drawCard(currentPlayer, state);
        -:  980:	}
    #####:  981:      else if (choice1 == 2)
        -:  982:	{
        -:  983:	  //+2 coins
    #####:  984:	  state->coins = state->coins + 2;
        -:  985:	}
        -:  986:      else
        -:  987:	{
        -:  988:	  //trash 2 cards in hand
    #####:  989:	  discardCard(choice2, currentPlayer, state, 1);
    #####:  990:	  discardCard(choice3, currentPlayer, state, 1);
        -:  991:	}
        -:  992:
        -:  993:      //discard card from hand
    #####:  994:      discardCard(handPos, currentPlayer, state, 0);
    #####:  995:      return 0;
        -:  996:
        -:  997:    case tribute:
    #####:  998:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    #####:  999:	if (state->deckCount[nextPlayer] > 0){
    #####: 1000:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1001:	  state->deckCount[nextPlayer]--;
        -: 1002:	}
    #####: 1003:	else if (state->discardCount[nextPlayer] > 0){
    #####: 1004:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1005:	  state->discardCount[nextPlayer]--;
        -: 1006:	}
        -: 1007:	else{
        -: 1008:	  //No Card to Reveal
        -: 1009:	  if (DEBUG){
        -: 1010:	    printf("No cards to reveal\n");
        -: 1011:	  }
        -: 1012:	}
        -: 1013:      }
        -: 1014:
        -: 1015:      else{
    #####: 1016:	if (state->deckCount[nextPlayer] == 0){
    #####: 1017:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    #####: 1018:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1019:	    state->deckCount[nextPlayer]++;
    #####: 1020:	    state->discard[nextPlayer][i] = -1;
    #####: 1021:	    state->discardCount[nextPlayer]--;
        -: 1022:	  }
        -: 1023:
    #####: 1024:	  shuffle(nextPlayer,state);//Shuffle the deck
        -: 1025:	}
    #####: 1026:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1027:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1028:	state->deckCount[nextPlayer]--;
    #####: 1029:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1030:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1031:	state->deckCount[nextPlayer]--;
        -: 1032:      }
        -: 1033:
    #####: 1034:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one
    #####: 1035:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1036:	state->playedCardCount++;
    #####: 1037:	tributeRevealedCards[1] = -1;
        -: 1038:      }
        -: 1039:
    #####: 1040:      for (i = 0; i <= 2; i ++){
    #####: 1041:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    #####: 1042:	  state->coins += 2;
        -: 1043:	}
        -: 1044:
    #####: 1045:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    #####: 1046:	  drawCard(currentPlayer, state);
    #####: 1047:	  drawCard(currentPlayer, state);
        -: 1048:	}
        -: 1049:	else{//Action Card
    #####: 1050:	  state->numActions = state->numActions + 2;
        -: 1051:	}
        -: 1052:      }
        -: 1053:
    #####: 1054:      return 0;
        -: 1055:
        -: 1056:    case ambassador:
    #####: 1057:      j = 0;		//used to check if player has enough cards to discard
        -: 1058:
    #####: 1059:      if (choice2 > 2 || choice2 < 0)
        -: 1060:	{
    #####: 1061:	  return -1;
        -: 1062:	}
        -: 1063:
    #####: 1064:      if (choice1 == handPos)
        -: 1065:	{
    #####: 1066:	  return -1;
        -: 1067:	}
        -: 1068:
    #####: 1069:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1070:	{
    #####: 1071:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
        -: 1072:	    {
    #####: 1073:	      j++;
        -: 1074:	    }
        -: 1075:	}
    #####: 1076:      if (j < choice2)
        -: 1077:	{
    #####: 1078:	  return -1;
        -: 1079:	}
        -: 1080:
        -: 1081:      if (DEBUG)
        -: 1082:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1083:
        -: 1084:      //increase supply count for choosen card by amount being discarded
    #####: 1085:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1086:
        -: 1087:      //each other player gains a copy of revealed card
    #####: 1088:      for (i = 0; i < state->numPlayers; i++)
        -: 1089:	{
    #####: 1090:	  if (i != currentPlayer)
        -: 1091:	    {
    #####: 1092:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
        -: 1093:	    }
        -: 1094:	}
        -: 1095:
        -: 1096:      //discard played card from hand
    #####: 1097:      discardCard(handPos, currentPlayer, state, 0);
        -: 1098:
        -: 1099:      //trash copies of cards returned to supply
    #####: 1100:      for (j = 0; j < choice2; j++)
        -: 1101:	{
    #####: 1102:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1103:	    {
    #####: 1104:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
        -: 1105:		{
    #####: 1106:		  discardCard(i, currentPlayer, state, 1);
    #####: 1107:		  break;
        -: 1108:		}
        -: 1109:	    }
        -: 1110:	}
        -: 1111:
    #####: 1112:      return 0;
        -: 1113:
        -: 1114:    case cutpurse:
        -: 1115:
    #####: 1116:      updateCoins(currentPlayer, state, 2);
    #####: 1117:      for (i = 0; i < state->numPlayers; i++)
        -: 1118:	{
    #####: 1119:	  if (i != currentPlayer)
        -: 1120:	    {
    #####: 1121:	      for (j = 0; j < state->handCount[i]; j++)
        -: 1122:		{
    #####: 1123:		  if (state->hand[i][j] == copper)
        -: 1124:		    {
    #####: 1125:		      discardCard(j, i, state, 0);
    #####: 1126:		      break;
        -: 1127:		    }
    #####: 1128:		  if (j == state->handCount[i])
        -: 1129:		    {
    #####: 1130:		      for (k = 0; k < state->handCount[i]; k++)
        -: 1131:			{
        -: 1132:			  if (DEBUG)
        -: 1133:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1134:			}
    #####: 1135:		      break;
        -: 1136:		    }
        -: 1137:		}
        -: 1138:
        -: 1139:	    }
        -: 1140:
        -: 1141:	}
        -: 1142:
        -: 1143:      //discard played card from hand
    #####: 1144:      discardCard(handPos, currentPlayer, state, 0);
        -: 1145:
    #####: 1146:      return 0;
        -: 1147:
        -: 1148:
        -: 1149:    case embargo:
        -: 1150:      //+2 Coins
    #####: 1151:      state->coins = state->coins + 2;
        -: 1152:
        -: 1153:      //see if selected pile is in play
    #####: 1154:      if ( state->supplyCount[choice1] == -1 )
        -: 1155:	{
    #####: 1156:	  return -1;
        -: 1157:	}
        -: 1158:
        -: 1159:      //add embargo token to selected supply pile
    #####: 1160:      state->embargoTokens[choice1]++;
        -: 1161:
        -: 1162:      //trash card
    #####: 1163:      discardCard(handPos, currentPlayer, state, 1);
    #####: 1164:      return 0;
        -: 1165:
        -: 1166:    case outpost:
        -: 1167:      //set outpost flag
    #####: 1168:      state->outpostPlayed++;
        -: 1169:
        -: 1170:      //discard card
    #####: 1171:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1172:      return 0;
        -: 1173:
        -: 1174:    case salvager:
        -: 1175:      //+1 buy
    #####: 1176:      state->numBuys++;
        -: 1177:
    #####: 1178:      if (choice1)
        -: 1179:	{
        -: 1180:	  //gain coins equal to trashed card
    #####: 1181:	  state->coins = state->coins + getCost( handCard(choice1, state) );
        -: 1182:	  //trash card
    #####: 1183:	  discardCard(choice1, currentPlayer, state, 1);
        -: 1184:	}
        -: 1185:
        -: 1186:      //discard card
    #####: 1187:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1188:      return 0;
        -: 1189:
        -: 1190:    case sea_hag:
    #####: 1191:      for (i = 0; i < state->numPlayers; i++){
    #####: 1192:	if (i != currentPlayer){
    #####: 1193:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1194:	  state->discardCount[i]++;
    #####: 1195:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1196:	}
        -: 1197:      }
    #####: 1198:      return 0;
        -: 1199:
        -: 1200:    case treasure_map:
        -: 1201:      //search hand for another treasure_map
    #####: 1202:      index = -1;
    #####: 1203:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1204:	{
    #####: 1205:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
        -: 1206:	    {
    #####: 1207:	      index = i;
    #####: 1208:	      break;
        -: 1209:	    }
        -: 1210:	}
    #####: 1211:      if (index > -1)
        -: 1212:	{
        -: 1213:	  //trash both treasure cards
    #####: 1214:	  discardCard(handPos, currentPlayer, state, 1);
    #####: 1215:	  discardCard(index, currentPlayer, state, 1);
        -: 1216:
        -: 1217:	  //gain 4 Gold cards
    #####: 1218:	  for (i = 0; i < 4; i++)
        -: 1219:	    {
    #####: 1220:	      gainCard(gold, state, 1, currentPlayer);
        -: 1221:	    }
        -: 1222:
        -: 1223:	  //return success
    #####: 1224:	  return 1;
        -: 1225:	}
        -: 1226:
        -: 1227:      //no second treasure_map found in hand
    #####: 1228:      return -1;
        -: 1229:    }
        -: 1230:
    #####: 1231:  return -1;
        -: 1232:}
        -: 1233:
    #####: 1234:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1235:{
        -: 1236:
        -: 1237:  //if card is not trashed, added to Played pile
    #####: 1238:  if (trashFlag < 1)
        -: 1239:    {
        -: 1240:      //add card to played pile
    #####: 1241:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos];
    #####: 1242:      state->playedCardCount++;
        -: 1243:    }
        -: 1244:
        -: 1245:  //set played card to -1
    #####: 1246:  state->hand[currentPlayer][handPos] = -1;
        -: 1247:
        -: 1248:  //remove card from player's hand
    #####: 1249:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
        -: 1250:    {
        -: 1251:      //reduce number of cards in hand
    #####: 1252:      state->handCount[currentPlayer]--;
        -: 1253:    }
    #####: 1254:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
        -: 1255:    {
        -: 1256:      //reduce number of cards in hand
    #####: 1257:      state->handCount[currentPlayer]--;
        -: 1258:    }
        -: 1259:  else
        -: 1260:    {
        -: 1261:      //replace discarded card with last card in hand
    #####: 1262:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1263:      //set last card to -1
    #####: 1264:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1265:      //reduce number of cards in hand
    #####: 1266:      state->handCount[currentPlayer]--;
        -: 1267:    }
        -: 1268:
    #####: 1269:  return 0;
        -: 1270:}
        -: 1271:
    #####: 1272:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1273:{
        -: 1274:  //Note: supplyPos is enum of choosen card
        -: 1275:
        -: 1276:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1277:  if ( supplyCount(supplyPos, state) < 1 )
        -: 1278:    {
    #####: 1279:      return -1;
        -: 1280:    }
        -: 1281:
        -: 1282:  //added card for [whoseTurn] current player:
        -: 1283:  // toFlag = 0 : add to discard
        -: 1284:  // toFlag = 1 : add to deck
        -: 1285:  // toFlag = 2 : add to hand
        -: 1286:
    #####: 1287:  if (toFlag == 1)
        -: 1288:    {
    #####: 1289:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1290:      state->deckCount[player]++;
        -: 1291:    }
    #####: 1292:  else if (toFlag == 2)
        -: 1293:    {
    #####: 1294:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1295:      state->handCount[player]++;
        -: 1296:    }
        -: 1297:  else
        -: 1298:    {
    #####: 1299:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1300:      state->discardCount[player]++;
        -: 1301:    }
        -: 1302:
        -: 1303:  //decrease number in supply pile
    #####: 1304:  state->supplyCount[supplyPos]--;
        -: 1305:
    #####: 1306:  return 0;
        -: 1307:}
        -: 1308:
    #####: 1309:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1310:{
        -: 1311:  int i;
        -: 1312:
        -: 1313:  //reset coin count
    #####: 1314:  state->coins = 0;
        -: 1315:
        -: 1316:  //add coins for each Treasure card in player's hand
    #####: 1317:  for (i = 0; i < state->handCount[player]; i++)
        -: 1318:    {
    #####: 1319:      if (state->hand[player][i] == copper)
        -: 1320:	{
    #####: 1321:	  state->coins += 1;
        -: 1322:	}
    #####: 1323:      else if (state->hand[player][i] == silver)
        -: 1324:	{
    #####: 1325:	  state->coins += 2;
        -: 1326:	}
    #####: 1327:      else if (state->hand[player][i] == gold)
        -: 1328:	{
    #####: 1329:	  state->coins += 3;
        -: 1330:	}
        -: 1331:    }
        -: 1332:
        -: 1333:  //add bonus
    #####: 1334:  state->coins += bonus;
        -: 1335:
    #####: 1336:  return 0;
        -: 1337:}
        -: 1338:
        -: 1339:
        -: 1340://end of dominion.c
unittest3.c:
Expected coin count: 0. Actual coin count: 0 
Expected coin count: 1. Actual coin count: 1 
Expected coin count: 0. Actual coin count: 0 
Expected coin count: 1. Actual coin count: 1 
Expected coin count: 0. Actual coin count: 0 
Expected coin count: 1. Actual coin count: 1 
Expected coin count: 0. Actual coin count: 0 
Expected coin count: 1. Actual coin count: 1 
File 'dominion.c'
Lines executed:8.02% of 561
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:3
        -:    0:Programs:3
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
    #####:    8:int compare(const void* a, const void* b) {
    #####:    9:  if (*(int*)a > *(int*)b)
    #####:   10:    return 1;
    #####:   11:  if (*(int*)a < *(int*)b)
    #####:   12:    return -1;
    #####:   13:  return 0;
        -:   14:}
        -:   15:
    #####:   16:struct gameState* newGame() {
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
        -:   19:}
        -:   20:
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
        -:   35:}
        -:   36:
    #####:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;
        -:   43:  //set up random number generator
    #####:   44:  SelectStream(1);
    #####:   45:  PutSeed((long)randomSeed);
        -:   46:
        -:   47:  //check number of players
    #####:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
    #####:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
    #####:   57:  for (i = 0; i < 10; i++)
        -:   58:    {
    #####:   59:      for (j = 0; j < 10; j++)
        -:   60:        {
    #####:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
    #####:   73:  if (numPlayers == 2)
        -:   74:    {
    #####:   75:      state->supplyCount[curse] = 10;
        -:   76:    }
    #####:   77:  else if (numPlayers == 3)
        -:   78:    {
    #####:   79:      state->supplyCount[curse] = 20;
        -:   80:    }
        -:   81:  else
        -:   82:    {
    #####:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
    #####:   87:  if (numPlayers == 2)
        -:   88:    {
    #####:   89:      state->supplyCount[estate] = 8;
    #####:   90:      state->supplyCount[duchy] = 8;
    #####:   91:      state->supplyCount[province] = 8;
        -:   92:    }
        -:   93:  else
        -:   94:    {
    #####:   95:      state->supplyCount[estate] = 12;
    #####:   96:      state->supplyCount[duchy] = 12;
    #####:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
    #####:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
    #####:  102:  state->supplyCount[silver] = 40;
    #####:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
    #####:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
        -:  107:    {
    #####:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
        -:  109:	{
    #####:  110:	  if (kingdomCards[j] == i)
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
    #####:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
        -:  114:		{
    #####:  115:		  if (numPlayers == 2){
    #####:  116:		    state->supplyCount[i] = 8;
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
        -:  119:		}
        -:  120:	      else
        -:  121:		{
    #####:  122:		  state->supplyCount[i] = 10;
        -:  123:		}
    #####:  124:	      break;
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
    #####:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
    #####:  138:  for (i = 0; i < numPlayers; i++)
        -:  139:    {
    #####:  140:      state->deckCount[i] = 0;
    #####:  141:      for (j = 0; j < 3; j++)
        -:  142:	{
    #####:  143:	  state->deck[i][j] = estate;
    #####:  144:	  state->deckCount[i]++;
        -:  145:	}
    #####:  146:      for (j = 3; j < 10; j++)
        -:  147:	{
    #####:  148:	  state->deck[i][j] = copper;
    #####:  149:	  state->deckCount[i]++;
        -:  150:	}
        -:  151:    }
        -:  152:
        -:  153:  //shuffle player decks
    #####:  154:  for (i = 0; i < numPlayers; i++)
        -:  155:    {
    #####:  156:      if ( shuffle(i, state) < 0 )
        -:  157:	{
    #####:  158:	  return -1;
        -:  159:	}
        -:  160:    }
        -:  161:
        -:  162:  //draw player hands
    #####:  163:  for (i = 0; i < numPlayers; i++)
        -:  164:    {
        -:  165:      //initialize hand size to zero
    #####:  166:      state->handCount[i] = 0;
    #####:  167:      state->discardCount[i] = 0;
        -:  168:      //draw 5 cards
        -:  169:      // for (j = 0; j < 5; j++)
        -:  170:      //	{
        -:  171:      //	  drawCard(i, state);
        -:  172:      //	}
        -:  173:    }
        -:  174:
        -:  175:  //set embargo tokens to 0 for all supply piles
    #####:  176:  for (i = 0; i <= treasure_map; i++)
        -:  177:    {
    #####:  178:      state->embargoTokens[i] = 0;
        -:  179:    }
        -:  180:
        -:  181:  //initialize first player's turn
    #####:  182:  state->outpostPlayed = 0;
    #####:  183:  state->phase = 0;
    #####:  184:  state->numActions = 1;
    #####:  185:  state->numBuys = 1;
    #####:  186:  state->playedCardCount = 0;
    #####:  187:  state->whoseTurn = 0;
    #####:  188:  state->handCount[state->whoseTurn] = 0;
        -:  189:  //int it; move to top
        -:  190:
        -:  191:  //Moved draw cards to here, only drawing at the start of a turn
    #####:  192:  for (it = 0; it < 5; it++){
    #####:  193:    drawCard(state->whoseTurn, state);
        -:  194:  }
        -:  195:
    #####:  196:  updateCoins(state->whoseTurn, state, 0);
        -:  197:
    #####:  198:  return 0;
        -:  199:}
        -:  200:
    #####:  201:int shuffle(int player, struct gameState *state) {
        -:  202:
        -:  203:
        -:  204:  int newDeck[MAX_DECK];
    #####:  205:  int newDeckPos = 0;
        -:  206:  int card;
        -:  207:  int i;
        -:  208:
    #####:  209:  if (state->deckCount[player] < 1)
    #####:  210:    return -1;
    #####:  211:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare);
        -:  212:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  213:
    #####:  214:  while (state->deckCount[player] > 0) {
    #####:  215:    card = floor(Random() * state->deckCount[player]);
    #####:  216:    newDeck[newDeckPos] = state->deck[player][card];
    #####:  217:    newDeckPos++;
    #####:  218:    for (i = card; i < state->deckCount[player]-1; i++) {
    #####:  219:      state->deck[player][i] = state->deck[player][i+1];
        -:  220:    }
    #####:  221:    state->deckCount[player]--;
        -:  222:  }
    #####:  223:  for (i = 0; i < newDeckPos; i++) {
    #####:  224:    state->deck[player][i] = newDeck[i];
    #####:  225:    state->deckCount[player]++;
        -:  226:  }
        -:  227:
    #####:  228:  return 0;
        -:  229:}
        -:  230:
    #####:  231:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state)
        -:  232:{
        -:  233:  int card;
    #####:  234:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  235:
        -:  236:  //check if it is the right phase
    #####:  237:  if (state->phase != 0)
        -:  238:    {
    #####:  239:      return -1;
        -:  240:    }
        -:  241:
        -:  242:  //check if player has enough actions
    #####:  243:  if ( state->numActions < 1 )
        -:  244:    {
    #####:  245:      return -1;
        -:  246:    }
        -:  247:
        -:  248:  //get card played
    #####:  249:  card = handCard(handPos, state);
        -:  250:
        -:  251:  //check if selected card is an action
    #####:  252:  if ( card < adventurer || card > treasure_map )
        -:  253:    {
    #####:  254:      return -1;
        -:  255:    }
        -:  256:
        -:  257:  //play card
    #####:  258:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
        -:  259:    {
    #####:  260:      return -1;
        -:  261:    }
        -:  262:
        -:  263:  //reduce number of actions
    #####:  264:  state->numActions--;
        -:  265:
        -:  266:  //update coins (Treasure cards may be added with card draws)
    #####:  267:  updateCoins(state->whoseTurn, state, coin_bonus);
        -:  268:
    #####:  269:  return 0;
        -:  270:}
        -:  271:
    #####:  272:int buyCard(int supplyPos, struct gameState *state) {
        -:  273:  int who;
        -:  274:  if (DEBUG){
        -:  275:    printf("Entering buyCard...\n");
        -:  276:  }
        -:  277:
        -:  278:  // I don't know what to do about the phase thing.
        -:  279:
    #####:  280:  who = state->whoseTurn;
        -:  281:
    #####:  282:  if (state->numBuys < 1){
        -:  283:    if (DEBUG)
        -:  284:      printf("You do not have any buys left\n");
    #####:  285:    return -1;
    #####:  286:  } else if (supplyCount(supplyPos, state) <1){
        -:  287:    if (DEBUG)
        -:  288:      printf("There are not any of that type of card left\n");
    #####:  289:    return -1;
    #####:  290:  } else if (state->coins < getCost(supplyPos)){
        -:  291:    if (DEBUG)
        -:  292:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  293:    return -1;
        -:  294:  } else {
    #####:  295:    state->phase=1;
        -:  296:    //state->supplyCount[supplyPos]--;
    #####:  297:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  298:
    #####:  299:    state->coins = (state->coins) - (getCost(supplyPos));
    #####:  300:    state->numBuys--;
        -:  301:    if (DEBUG)
        -:  302:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  303:  }
        -:  304:
        -:  305:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  306:  //state->discardCount[who]++;
        -:  307:
    #####:  308:  return 0;
        -:  309:}
        -:  310:
    #####:  311:int numHandCards(struct gameState *state) {
    #####:  312:  return state->handCount[ whoseTurn(state) ];
        -:  313:}
        -:  314:
    #####:  315:int handCard(int handPos, struct gameState *state) {
    #####:  316:  int currentPlayer = whoseTurn(state);
    #####:  317:  return state->hand[currentPlayer][handPos];
        -:  318:}
        -:  319:
    #####:  320:int supplyCount(int card, struct gameState *state) {
    #####:  321:  return state->supplyCount[card];
        -:  322:}
        -:  323:
    #####:  324:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  325:  int i;
    #####:  326:  int count = 0;
        -:  327:
    #####:  328:  for (i = 0; i < state->deckCount[player]; i++)
        -:  329:    {
    #####:  330:      if (state->deck[player][i] == card) count++;
        -:  331:    }
        -:  332:
    #####:  333:  for (i = 0; i < state->handCount[player]; i++)
        -:  334:    {
    #####:  335:      if (state->hand[player][i] == card) count++;
        -:  336:    }
        -:  337:
    #####:  338:  for (i = 0; i < state->discardCount[player]; i++)
        -:  339:    {
    #####:  340:      if (state->discard[player][i] == card) count++;
        -:  341:    }
        -:  342:
    #####:  343:  return count;
        -:  344:}
        -:  345:
    #####:  346:int whoseTurn(struct gameState *state) {
    #####:  347:  return state->whoseTurn;
        -:  348:}
        -:  349:
    #####:  350:int endTurn(struct gameState *state) {
        -:  351:  int k;
        -:  352:  int i;
    #####:  353:  int currentPlayer = whoseTurn(state);
        -:  354:
        -:  355:  //Discard hand
    #####:  356:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    #####:  357:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  358:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  359:  }
    #####:  360:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  361:
        -:  362:  //Code for determining the player
    #####:  363:  if (currentPlayer < (state->numPlayers - 1)){
    #####:  364:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  365:  }
        -:  366:  else{
    #####:  367:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  368:  }
        -:  369:
    #####:  370:  state->outpostPlayed = 0;
    #####:  371:  state->phase = 0;
    #####:  372:  state->numActions = 1;
    #####:  373:  state->coins = 0;
    #####:  374:  state->numBuys = 1;
    #####:  375:  state->playedCardCount = 0;
    #####:  376:  state->handCount[state->whoseTurn] = 0;
        -:  377:
        -:  378:  //int k; move to top
        -:  379:  //Next player draws hand
    #####:  380:  for (k = 0; k < 5; k++){
    #####:  381:    drawCard(state->whoseTurn, state);//Draw a card
        -:  382:  }
        -:  383:
        -:  384:  //Update money
    #####:  385:  updateCoins(state->whoseTurn, state , 0);
        -:  386:
    #####:  387:  return 0;
        -:  388:}
        -:  389:
     1002:  390:int isGameOver(struct gameState *state) {
        -:  391:  int i;
        -:  392:  int j;
        -:  393:
        -:  394:  //if stack of Province cards is empty, the game ends
     1002:  395:  if (state->supplyCount[province] == 0)
        -:  396:    {
      124:  397:      return 1;
        -:  398:    }
        -:  399:
        -:  400:  //if three supply pile are at 0, the game ends
      878:  401:  j = 0;
    22828:  402:  for (i = 0; i < 25; i++)
        -:  403:    {
    21950:  404:      if (state->supplyCount[i] == 0)
        -:  405:	{
     2631:  406:	  j++;
        -:  407:	}
        -:  408:    }
      878:  409:  if ( j >= 3)
        -:  410:    {
      877:  411:      return 1;
        -:  412:    }
        -:  413:
        1:  414:  return 0;
        -:  415:}
        -:  416:
    #####:  417:int scoreFor (int player, struct gameState *state) {
        -:  418:
        -:  419:  int i;
    #####:  420:  int score = 0;
        -:  421:  //score from hand
    #####:  422:  for (i = 0; i < state->handCount[player]; i++)
        -:  423:    {
    #####:  424:      if (state->hand[player][i] == curse) { score = score - 1; };
    #####:  425:      if (state->hand[player][i] == estate) { score = score + 1; };
    #####:  426:      if (state->hand[player][i] == duchy) { score = score + 3; };
    #####:  427:      if (state->hand[player][i] == province) { score = score + 6; };
    #####:  428:      if (state->hand[player][i] == great_hall) { score = score + 1; };
    #####:  429:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  430:    }
        -:  431:
        -:  432:  //score from discard
    #####:  433:  for (i = 0; i < state->discardCount[player]; i++)
        -:  434:    {
    #####:  435:      if (state->discard[player][i] == curse) { score = score - 1; };
    #####:  436:      if (state->discard[player][i] == estate) { score = score + 1; };
    #####:  437:      if (state->discard[player][i] == duchy) { score = score + 3; };
    #####:  438:      if (state->discard[player][i] == province) { score = score + 6; };
    #####:  439:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    #####:  440:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  441:    }
        -:  442:
        -:  443:  //score from deck
    #####:  444:  for (i = 0; i < state->discardCount[player]; i++)
        -:  445:    {
    #####:  446:      if (state->deck[player][i] == curse) { score = score - 1; };
    #####:  447:      if (state->deck[player][i] == estate) { score = score + 1; };
    #####:  448:      if (state->deck[player][i] == duchy) { score = score + 3; };
    #####:  449:      if (state->deck[player][i] == province) { score = score + 6; };
    #####:  450:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    #####:  451:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  452:    }
        -:  453:
    #####:  454:  return score;
        -:  455:}
        -:  456:
    #####:  457:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  458:  int i;
        -:  459:  int j;
        -:  460:  int highScore;
        -:  461:  int currentPlayer;
        -:  462:
        -:  463:  //get score for each player
    #####:  464:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  465:    {
        -:  466:      //set unused player scores to -9999
    #####:  467:      if (i >= state->numPlayers)
        -:  468:	{
    #####:  469:	  players[i] = -9999;
        -:  470:	}
        -:  471:      else
        -:  472:	{
    #####:  473:	  players[i] = scoreFor (i, state);
        -:  474:	}
        -:  475:    }
        -:  476:
        -:  477:  //find highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  480:    {
    #####:  481:      if (players[i] > players[j])
        -:  482:	{
    #####:  483:	  j = i;
        -:  484:	}
        -:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //add 1 to players who had less turns
    #####:  489:  currentPlayer = whoseTurn(state);
    #####:  490:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  491:    {
    #####:  492:      if ( players[i] == highScore && i > currentPlayer )
        -:  493:	{
    #####:  494:	  players[i]++;
        -:  495:	}
        -:  496:    }
        -:  497:
        -:  498:  //find new highest score
    #####:  499:  j = 0;
    #####:  500:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  501:    {
    #####:  502:      if ( players[i] > players[j] )
        -:  503:	{
    #####:  504:	  j = i;
        -:  505:	}
        -:  506:    }
    #####:  507:  highScore = players[j];
        -:  508:
        -:  509:  //set winners in array to 1 and rest to 0
    #####:  510:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  511:    {
    #####:  512:      if ( players[i] == highScore )
        -:  513:	{
    #####:  514:	  players[i] = 1;
        -:  515:	}
        -:  516:      else
        -:  517:	{
    #####:  518:	  players[i] = 0;
        -:  519:	}
        -:  520:    }
        -:  521:
    #####:  522:  return 0;
        -:  523:}
        -:  524:
    #####:  525:int drawCard(int player, struct gameState *state)
        -:  526:{	int count;
        -:  527:  int deckCounter;
    #####:  528:  if (state->deckCount[player] <= 0){//Deck is empty
        -:  529:
        -:  530:    //Step 1 Shuffle the discard pile back into a deck
        -:  531:    int i;
        -:  532:    //Move discard to deck
    #####:  533:    for (i = 0; i < state->discardCount[player];i++){
    #####:  534:      state->deck[player][i] = state->discard[player][i];
    #####:  535:      state->discard[player][i] = -1;
        -:  536:    }
        -:  537:
    #####:  538:    state->deckCount[player] = state->discardCount[player];
    #####:  539:    state->discardCount[player] = 0;//Reset discard
        -:  540:
        -:  541:    //Shufffle the deck
    #####:  542:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
        -:  543:
        -:  544:    if (DEBUG){//Debug statements
        -:  545:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  546:    }
        -:  547:
    #####:  548:    state->discardCount[player] = 0;
        -:  549:
        -:  550:    //Step 2 Draw Card
    #####:  551:    count = state->handCount[player];//Get current player's hand count
        -:  552:
        -:  553:    if (DEBUG){//Debug statements
        -:  554:      printf("Current hand count: %d\n", count);
        -:  555:    }
        -:  556:
    #####:  557:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  558:
    #####:  559:    if (deckCounter == 0)
    #####:  560:      return -1;
        -:  561:
    #####:  562:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    #####:  563:    state->deckCount[player]--;
    #####:  564:    state->handCount[player]++;//Increment hand count
        -:  565:  }
        -:  566:
        -:  567:  else{
    #####:  568:    int count = state->handCount[player];//Get current hand count for player
        -:  569:    int deckCounter;
        -:  570:    if (DEBUG){//Debug statements
        -:  571:      printf("Current hand count: %d\n", count);
        -:  572:    }
        -:  573:
    #####:  574:    deckCounter = state->deckCount[player];//Create holder for the deck count
    #####:  575:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
    #####:  576:    state->deckCount[player]--;
    #####:  577:    state->handCount[player]++;//Increment hand count
        -:  578:  }
        -:  579:
    #####:  580:  return 0;
        -:  581:}
        -:  582:
       35:  583:int getCost(int cardNumber)
        -:  584:{
       35:  585:  switch( cardNumber )
        -:  586:    {
        -:  587:    case curse:
        1:  588:      return 0;
        -:  589:    case estate:
        1:  590:      return 2;
        -:  591:    case duchy:
        1:  592:      return 5;
        -:  593:    case province:
        1:  594:      return 8;
        -:  595:    case copper:
        1:  596:      return 0;
        -:  597:    case silver:
        1:  598:      return 3;
        -:  599:    case gold:
        1:  600:      return 6;
        -:  601:    case adventurer:
        1:  602:      return 6;
        -:  603:    case council_room:
        1:  604:      return 5;
        -:  605:    case feast:
        1:  606:      return 4;
        -:  607:    case gardens:
        1:  608:      return 4;
        -:  609:    case mine:
        1:  610:      return 5;
        -:  611:    case remodel:
        1:  612:      return 4;
        -:  613:    case smithy:
        1:  614:      return 4;
        -:  615:    case village:
        1:  616:      return 3;
        -:  617:    case baron:
        1:  618:      return 4;
        -:  619:    case great_hall:
        1:  620:      return 3;
        -:  621:    case minion:
        1:  622:      return 5;
        -:  623:    case steward:
        1:  624:      return 3;
        -:  625:    case tribute:
        1:  626:      return 5;
        -:  627:    case ambassador:
        1:  628:      return 3;
        -:  629:    case cutpurse:
        1:  630:      return 4;
        -:  631:    case embargo:
        1:  632:      return 2;
        -:  633:    case outpost:
        1:  634:      return 5;
        -:  635:    case salvager:
        1:  636:      return 4;
        -:  637:    case sea_hag:
        1:  638:      return 4;
        -:  639:    case treasure_map:
        1:  640:      return 4;
        -:  641:    }
        -:  642:
        8:  643:  return -1;
        -:  644:}
        -:  645:
    #####:  646:void adventurer_action (int drawntreasure, struct gameState *state, int currentPlayer, int cardDrawn, int temphand[MAX_HAND], int z) {
    #####:  647:    while(drawntreasure<2){
    #####:  648:        if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
    #####:  649:            shuffle(currentPlayer, state);
        -:  650:        }
    #####:  651:        drawCard(currentPlayer, state);
    #####:  652:        cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
    #####:  653:        if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
    #####:  654:          drawntreasure++;
        -:  655:        else{
    #####:  656:          temphand[z]=cardDrawn;
    #####:  657:          state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
        -:  658:        }
        -:  659:  }
    #####:  660:  while(z-1>=0){
    #####:  661:      state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    #####:  662:      z=z-1;
        -:  663:  }
    #####:  664:}
        -:  665:
    #####:  666:void smithy_action (int currentPlayer, struct gameState *state, int i, int handPos) {
        -:  667:  //+3 Cards
    #####:  668:  for (i = 0; i < 3; i++) {
    #####:  669:    drawCard(currentPlayer, state);
        -:  670:  }
        -:  671:
        -:  672:  //discard card from hand
    #####:  673:  discardCard(handPos, currentPlayer, state, 0);
    #####:  674:}
        -:  675:
    #####:  676:void village_action (int currentPlayer, struct gameState *state, int handPos) {
        -:  677:  //+1 Card
    #####:  678:  drawCard(currentPlayer, state);
        -:  679:
        -:  680:  //+2 Actions
    #####:  681:  state->numActions = state->numActions + 2;
        -:  682:
        -:  683:  //discard played card from hand
    #####:  684:  discardCard(handPos, currentPlayer, state, 0);
    #####:  685:}
        -:  686:
    #####:  687:void council_room_action (int i, int currentPlayer, struct gameState *state) {
        -:  688:  //+4 Cards
    #####:  689:  for (i = 0; i < 4; i++) {
    #####:  690:      drawCard(currentPlayer, state);
        -:  691:  }
        -:  692:
        -:  693:  //+1 Buy
    #####:  694:  state->numBuys++;
        -:  695:
        -:  696:  //Each other player draws a card
    #####:  697:  for (i = 0; i < state->numPlayers; i++) {
    #####:  698:      if ( i == currentPlayer ) {
    #####:  699:          drawCard(i, state);
        -:  700:      }
        -:  701:  }
    #####:  702:}
        -:  703:
    #####:  704:int mine_action (int j, struct gameState *state, int currentPlayer, int choice1, int choice2, int handPos, int i) {
    #####:  705:  j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  706:
    #####:  707:  if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold) {
    #####:  708:      return -1;
        -:  709:  }
        -:  710:
    #####:  711:  if (choice2 > treasure_map || choice2 < curse) {
    #####:  712:      return -1;
        -:  713:  }
        -:  714:
    #####:  715:  if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) ) {
    #####:  716:      return -1;
        -:  717:  }
        -:  718:
    #####:  719:  gainCard(choice2, state, 2, currentPlayer);
        -:  720:
        -:  721:  //discard card from hand
    #####:  722:  discardCard(handPos, currentPlayer, state, 0);
        -:  723:
        -:  724:  //discard trashed card
    #####:  725:  for (i = 0; i < state->handCount[currentPlayer]; i++) {
    #####:  726:      if (state->hand[currentPlayer][i] == j) {
    #####:  727:        discardCard(i, currentPlayer, state, 0);
    #####:  728:        break;
        -:  729:      }
        -:  730:  }
        -:  731:
    #####:  732:  return -1;
        -:  733:}
        -:  734:
    #####:  735:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  736:{
        -:  737:  int i;
        -:  738:  int j;
        -:  739:  int k;
        -:  740:  int x;
        -:  741:  int m;
        -:  742:  int index;
    #####:  743:  int currentPlayer = whoseTurn(state);
    #####:  744:  int nextPlayer = currentPlayer + 1;
        -:  745:
    #####:  746:  int tributeRevealedCards[2] = {-1, -1};
        -:  747:  int temphand[MAX_HAND];// moved above the if statement
    #####:  748:  int drawntreasure=0;
        -:  749:  int cardDrawn;
    #####:  750:  int z = 0;// this is the counter for the temp hand
    #####:  751:  if (nextPlayer > (state->numPlayers - 1)){
    #####:  752:    nextPlayer = 0;
        -:  753:  }
        -:  754:
        -:  755:
        -:  756:  //uses switch to select card and perform actions
    #####:  757:  switch( card )
        -:  758:    {
        -:  759:    case adventurer:
    #####:  760:      adventurer_action (drawntreasure, state, currentPlayer, cardDrawn, temphand, z);
    #####:  761:      return 0;
        -:  762:
        -:  763:    case council_room:
    #####:  764:      council_room_action (i, currentPlayer, state);
    #####:  765:      return 0;
        -:  766:
        -:  767:    case feast:
        -:  768:      //gain card with cost up to 5
        -:  769:      //Backup hand
    #####:  770:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  771:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  772:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  773:      }
        -:  774:      //Backup hand
        -:  775:
        -:  776:      //Update Coins for Buy
    #####:  777:      updateCoins(currentPlayer, state, 5);
    #####:  778:      x = 1;//Condition to loop on
    #####:  779:      while( x == 1) {//Buy one card
    #####:  780:	if (supplyCount(choice1, state) <= 0){
        -:  781:	  if (DEBUG)
        -:  782:	    printf("None of that card left, sorry!\n");
        -:  783:
        -:  784:	  if (DEBUG){
        -:  785:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  786:	  }
        -:  787:	}
    #####:  788:	else if (state->coins < getCost(choice1)){
    #####:  789:	  printf("That card is too expensive!\n");
        -:  790:
        -:  791:	  if (DEBUG){
        -:  792:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  793:	  }
        -:  794:	}
        -:  795:	else{
        -:  796:
        -:  797:	  if (DEBUG){
        -:  798:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  799:	  }
        -:  800:
    #####:  801:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    #####:  802:	  x = 0;//No more buying cards
        -:  803:
        -:  804:	  if (DEBUG){
        -:  805:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  806:	  }
        -:  807:
        -:  808:	}
        -:  809:      }
        -:  810:
        -:  811:      //Reset Hand
    #####:  812:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  813:	state->hand[currentPlayer][i] = temphand[i];
    #####:  814:	temphand[i] = -1;
        -:  815:      }
        -:  816:      //Reset Hand
        -:  817:
    #####:  818:      return 0;
        -:  819:
        -:  820:    case gardens:
    #####:  821:      return -1;
        -:  822:
        -:  823:    case mine:
    #####:  824:      m = mine_action (j, state, currentPlayer, choice1, choice2, handPos, i);
    #####:  825:      return m;
        -:  826:
        -:  827:    case remodel:
    #####:  828:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  829:
    #####:  830:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
        -:  831:	{
    #####:  832:	  return -1;
        -:  833:	}
        -:  834:
    #####:  835:      gainCard(choice2, state, 0, currentPlayer);
        -:  836:
        -:  837:      //discard card from hand
    #####:  838:      discardCard(handPos, currentPlayer, state, 0);
        -:  839:
        -:  840:      //discard trashed card
    #####:  841:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  842:	{
    #####:  843:	  if (state->hand[currentPlayer][i] == j)
        -:  844:	    {
    #####:  845:	      discardCard(i, currentPlayer, state, 0);
    #####:  846:	      break;
        -:  847:	    }
        -:  848:	}
        -:  849:
        -:  850:
    #####:  851:      return 0;
        -:  852:
        -:  853:    case smithy:
    #####:  854:      smithy_action (currentPlayer, state, i, handPos);
    #####:  855:      return 0;
        -:  856:
        -:  857:    case village:
    #####:  858:      village_action (currentPlayer, state, handPos);
    #####:  859:      return 0;
        -:  860:
        -:  861:    case baron:
    #####:  862:      state->numBuys++;//Increase buys by 1!
    #####:  863:      if (choice1 > 0){//Boolean true or going to discard an estate
    #####:  864:	int p = 0;//Iterator for hand!
    #####:  865:	int card_not_discarded = 1;//Flag for discard set!
    #####:  866:	while(card_not_discarded){
    #####:  867:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    #####:  868:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  869:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  870:	    state->discardCount[currentPlayer]++;
    #####:  871:	    for (;p < state->handCount[currentPlayer]; p++){
    #####:  872:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  873:	    }
    #####:  874:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  875:	    state->handCount[currentPlayer]--;
    #####:  876:	    card_not_discarded = 0;//Exit the loop
        -:  877:	  }
    #####:  878:	  else if (p > state->handCount[currentPlayer]){
        -:  879:	    if(DEBUG) {
        -:  880:	      printf("No estate cards in your hand, invalid choice\n");
        -:  881:	      printf("Must gain an estate if there are any\n");
        -:  882:	    }
    #####:  883:	    if (supplyCount(estate, state) > 0){
    #####:  884:	      gainCard(estate, state, 0, currentPlayer);
    #####:  885:	      state->supplyCount[estate]--;//Decrement estates
    #####:  886:	      if (supplyCount(estate, state) == 0){
    #####:  887:		isGameOver(state);
        -:  888:	      }
        -:  889:	    }
    #####:  890:	    card_not_discarded = 0;//Exit the loop
        -:  891:	  }
        -:  892:
        -:  893:	  else{
    #####:  894:	    p++;//Next card
        -:  895:	  }
        -:  896:	}
        -:  897:      }
        -:  898:
        -:  899:      else{
    #####:  900:	if (supplyCount(estate, state) > 0){
    #####:  901:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
    #####:  902:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  903:	  if (supplyCount(estate, state) == 0){
    #####:  904:	    isGameOver(state);
        -:  905:	  }
        -:  906:	}
        -:  907:      }
        -:  908:
        -:  909:
    #####:  910:      return 0;
        -:  911:
        -:  912:    case great_hall:
        -:  913:      //+1 Card
    #####:  914:      drawCard(currentPlayer, state);
        -:  915:
        -:  916:      //+1 Actions
    #####:  917:      state->numActions++;
        -:  918:
        -:  919:      //discard card from hand
    #####:  920:      discardCard(handPos, currentPlayer, state, 0);
    #####:  921:      return 0;
        -:  922:
        -:  923:    case minion:
        -:  924:      //+1 action
    #####:  925:      state->numActions++;
        -:  926:
        -:  927:      //discard card from hand
    #####:  928:      discardCard(handPos, currentPlayer, state, 0);
        -:  929:
    #####:  930:      if (choice1)		//+2 coins
        -:  931:	{
    #####:  932:	  state->coins = state->coins + 2;
        -:  933:	}
        -:  934:
    #####:  935:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
        -:  936:	{
        -:  937:	  //discard hand
    #####:  938:	  while(numHandCards(state) > 0)
        -:  939:	    {
    #####:  940:	      discardCard(handPos, currentPlayer, state, 0);
        -:  941:	    }
        -:  942:
        -:  943:	  //draw 4
    #####:  944:	  for (i = 0; i < 4; i++)
        -:  945:	    {
    #####:  946:	      drawCard(currentPlayer, state);
        -:  947:	    }
        -:  948:
        -:  949:	  //other players discard hand and redraw if hand size > 4
    #####:  950:	  for (i = 0; i < state->numPlayers; i++)
        -:  951:	    {
    #####:  952:	      if (i != currentPlayer)
        -:  953:		{
    #####:  954:		  if ( state->handCount[i] > 4 )
        -:  955:		    {
        -:  956:		      //discard hand
    #####:  957:		      while( state->handCount[i] > 0 )
        -:  958:			{
    #####:  959:			  discardCard(handPos, i, state, 0);
        -:  960:			}
        -:  961:
        -:  962:		      //draw 4
    #####:  963:		      for (j = 0; j < 4; j++)
        -:  964:			{
    #####:  965:			  drawCard(i, state);
        -:  966:			}
        -:  967:		    }
        -:  968:		}
        -:  969:	    }
        -:  970:
        -:  971:	}
    #####:  972:      return 0;
        -:  973:
        -:  974:    case steward:
    #####:  975:      if (choice1 == 1)
        -:  976:	{
        -:  977:	  //+2 cards
    #####:  978:	  drawCard(currentPlayer, state);
    #####:  979:	  drawCard(currentPlayer, state);
        -:  980:	}
    #####:  981:      else if (choice1 == 2)
        -:  982:	{
        -:  983:	  //+2 coins
    #####:  984:	  state->coins = state->coins + 2;
        -:  985:	}
        -:  986:      else
        -:  987:	{
        -:  988:	  //trash 2 cards in hand
    #####:  989:	  discardCard(choice2, currentPlayer, state, 1);
    #####:  990:	  discardCard(choice3, currentPlayer, state, 1);
        -:  991:	}
        -:  992:
        -:  993:      //discard card from hand
    #####:  994:      discardCard(handPos, currentPlayer, state, 0);
    #####:  995:      return 0;
        -:  996:
        -:  997:    case tribute:
    #####:  998:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    #####:  999:	if (state->deckCount[nextPlayer] > 0){
    #####: 1000:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1001:	  state->deckCount[nextPlayer]--;
        -: 1002:	}
    #####: 1003:	else if (state->discardCount[nextPlayer] > 0){
    #####: 1004:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1005:	  state->discardCount[nextPlayer]--;
        -: 1006:	}
        -: 1007:	else{
        -: 1008:	  //No Card to Reveal
        -: 1009:	  if (DEBUG){
        -: 1010:	    printf("No cards to reveal\n");
        -: 1011:	  }
        -: 1012:	}
        -: 1013:      }
        -: 1014:
        -: 1015:      else{
    #####: 1016:	if (state->deckCount[nextPlayer] == 0){
    #####: 1017:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    #####: 1018:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1019:	    state->deckCount[nextPlayer]++;
    #####: 1020:	    state->discard[nextPlayer][i] = -1;
    #####: 1021:	    state->discardCount[nextPlayer]--;
        -: 1022:	  }
        -: 1023:
    #####: 1024:	  shuffle(nextPlayer,state);//Shuffle the deck
        -: 1025:	}
    #####: 1026:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1027:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1028:	state->deckCount[nextPlayer]--;
    #####: 1029:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1030:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1031:	state->deckCount[nextPlayer]--;
        -: 1032:      }
        -: 1033:
    #####: 1034:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one
    #####: 1035:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1036:	state->playedCardCount++;
    #####: 1037:	tributeRevealedCards[1] = -1;
        -: 1038:      }
        -: 1039:
    #####: 1040:      for (i = 0; i <= 2; i ++){
    #####: 1041:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    #####: 1042:	  state->coins += 2;
        -: 1043:	}
        -: 1044:
    #####: 1045:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    #####: 1046:	  drawCard(currentPlayer, state);
    #####: 1047:	  drawCard(currentPlayer, state);
        -: 1048:	}
        -: 1049:	else{//Action Card
    #####: 1050:	  state->numActions = state->numActions + 2;
        -: 1051:	}
        -: 1052:      }
        -: 1053:
    #####: 1054:      return 0;
        -: 1055:
        -: 1056:    case ambassador:
    #####: 1057:      j = 0;		//used to check if player has enough cards to discard
        -: 1058:
    #####: 1059:      if (choice2 > 2 || choice2 < 0)
        -: 1060:	{
    #####: 1061:	  return -1;
        -: 1062:	}
        -: 1063:
    #####: 1064:      if (choice1 == handPos)
        -: 1065:	{
    #####: 1066:	  return -1;
        -: 1067:	}
        -: 1068:
    #####: 1069:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1070:	{
    #####: 1071:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
        -: 1072:	    {
    #####: 1073:	      j++;
        -: 1074:	    }
        -: 1075:	}
    #####: 1076:      if (j < choice2)
        -: 1077:	{
    #####: 1078:	  return -1;
        -: 1079:	}
        -: 1080:
        -: 1081:      if (DEBUG)
        -: 1082:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1083:
        -: 1084:      //increase supply count for choosen card by amount being discarded
    #####: 1085:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1086:
        -: 1087:      //each other player gains a copy of revealed card
    #####: 1088:      for (i = 0; i < state->numPlayers; i++)
        -: 1089:	{
    #####: 1090:	  if (i != currentPlayer)
        -: 1091:	    {
    #####: 1092:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
        -: 1093:	    }
        -: 1094:	}
        -: 1095:
        -: 1096:      //discard played card from hand
    #####: 1097:      discardCard(handPos, currentPlayer, state, 0);
        -: 1098:
        -: 1099:      //trash copies of cards returned to supply
    #####: 1100:      for (j = 0; j < choice2; j++)
        -: 1101:	{
    #####: 1102:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1103:	    {
    #####: 1104:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
        -: 1105:		{
    #####: 1106:		  discardCard(i, currentPlayer, state, 1);
    #####: 1107:		  break;
        -: 1108:		}
        -: 1109:	    }
        -: 1110:	}
        -: 1111:
    #####: 1112:      return 0;
        -: 1113:
        -: 1114:    case cutpurse:
        -: 1115:
    #####: 1116:      updateCoins(currentPlayer, state, 2);
    #####: 1117:      for (i = 0; i < state->numPlayers; i++)
        -: 1118:	{
    #####: 1119:	  if (i != currentPlayer)
        -: 1120:	    {
    #####: 1121:	      for (j = 0; j < state->handCount[i]; j++)
        -: 1122:		{
    #####: 1123:		  if (state->hand[i][j] == copper)
        -: 1124:		    {
    #####: 1125:		      discardCard(j, i, state, 0);
    #####: 1126:		      break;
        -: 1127:		    }
    #####: 1128:		  if (j == state->handCount[i])
        -: 1129:		    {
    #####: 1130:		      for (k = 0; k < state->handCount[i]; k++)
        -: 1131:			{
        -: 1132:			  if (DEBUG)
        -: 1133:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1134:			}
    #####: 1135:		      break;
        -: 1136:		    }
        -: 1137:		}
        -: 1138:
        -: 1139:	    }
        -: 1140:
        -: 1141:	}
        -: 1142:
        -: 1143:      //discard played card from hand
    #####: 1144:      discardCard(handPos, currentPlayer, state, 0);
        -: 1145:
    #####: 1146:      return 0;
        -: 1147:
        -: 1148:
        -: 1149:    case embargo:
        -: 1150:      //+2 Coins
    #####: 1151:      state->coins = state->coins + 2;
        -: 1152:
        -: 1153:      //see if selected pile is in play
    #####: 1154:      if ( state->supplyCount[choice1] == -1 )
        -: 1155:	{
    #####: 1156:	  return -1;
        -: 1157:	}
        -: 1158:
        -: 1159:      //add embargo token to selected supply pile
    #####: 1160:      state->embargoTokens[choice1]++;
        -: 1161:
        -: 1162:      //trash card
    #####: 1163:      discardCard(handPos, currentPlayer, state, 1);
    #####: 1164:      return 0;
        -: 1165:
        -: 1166:    case outpost:
        -: 1167:      //set outpost flag
    #####: 1168:      state->outpostPlayed++;
        -: 1169:
        -: 1170:      //discard card
    #####: 1171:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1172:      return 0;
        -: 1173:
        -: 1174:    case salvager:
        -: 1175:      //+1 buy
    #####: 1176:      state->numBuys++;
        -: 1177:
    #####: 1178:      if (choice1)
        -: 1179:	{
        -: 1180:	  //gain coins equal to trashed card
    #####: 1181:	  state->coins = state->coins + getCost( handCard(choice1, state) );
        -: 1182:	  //trash card
    #####: 1183:	  discardCard(choice1, currentPlayer, state, 1);
        -: 1184:	}
        -: 1185:
        -: 1186:      //discard card
    #####: 1187:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1188:      return 0;
        -: 1189:
        -: 1190:    case sea_hag:
    #####: 1191:      for (i = 0; i < state->numPlayers; i++){
    #####: 1192:	if (i != currentPlayer){
    #####: 1193:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1194:	  state->discardCount[i]++;
    #####: 1195:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1196:	}
        -: 1197:      }
    #####: 1198:      return 0;
        -: 1199:
        -: 1200:    case treasure_map:
        -: 1201:      //search hand for another treasure_map
    #####: 1202:      index = -1;
    #####: 1203:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1204:	{
    #####: 1205:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
        -: 1206:	    {
    #####: 1207:	      index = i;
    #####: 1208:	      break;
        -: 1209:	    }
        -: 1210:	}
    #####: 1211:      if (index > -1)
        -: 1212:	{
        -: 1213:	  //trash both treasure cards
    #####: 1214:	  discardCard(handPos, currentPlayer, state, 1);
    #####: 1215:	  discardCard(index, currentPlayer, state, 1);
        -: 1216:
        -: 1217:	  //gain 4 Gold cards
    #####: 1218:	  for (i = 0; i < 4; i++)
        -: 1219:	    {
    #####: 1220:	      gainCard(gold, state, 1, currentPlayer);
        -: 1221:	    }
        -: 1222:
        -: 1223:	  //return success
    #####: 1224:	  return 1;
        -: 1225:	}
        -: 1226:
        -: 1227:      //no second treasure_map found in hand
    #####: 1228:      return -1;
        -: 1229:    }
        -: 1230:
    #####: 1231:  return -1;
        -: 1232:}
        -: 1233:
    #####: 1234:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1235:{
        -: 1236:
        -: 1237:  //if card is not trashed, added to Played pile
    #####: 1238:  if (trashFlag < 1)
        -: 1239:    {
        -: 1240:      //add card to played pile
    #####: 1241:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos];
    #####: 1242:      state->playedCardCount++;
        -: 1243:    }
        -: 1244:
        -: 1245:  //set played card to -1
    #####: 1246:  state->hand[currentPlayer][handPos] = -1;
        -: 1247:
        -: 1248:  //remove card from player's hand
    #####: 1249:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
        -: 1250:    {
        -: 1251:      //reduce number of cards in hand
    #####: 1252:      state->handCount[currentPlayer]--;
        -: 1253:    }
    #####: 1254:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
        -: 1255:    {
        -: 1256:      //reduce number of cards in hand
    #####: 1257:      state->handCount[currentPlayer]--;
        -: 1258:    }
        -: 1259:  else
        -: 1260:    {
        -: 1261:      //replace discarded card with last card in hand
    #####: 1262:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1263:      //set last card to -1
    #####: 1264:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1265:      //reduce number of cards in hand
    #####: 1266:      state->handCount[currentPlayer]--;
        -: 1267:    }
        -: 1268:
    #####: 1269:  return 0;
        -: 1270:}
        -: 1271:
    #####: 1272:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1273:{
        -: 1274:  //Note: supplyPos is enum of choosen card
        -: 1275:
        -: 1276:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1277:  if ( supplyCount(supplyPos, state) < 1 )
        -: 1278:    {
    #####: 1279:      return -1;
        -: 1280:    }
        -: 1281:
        -: 1282:  //added card for [whoseTurn] current player:
        -: 1283:  // toFlag = 0 : add to discard
        -: 1284:  // toFlag = 1 : add to deck
        -: 1285:  // toFlag = 2 : add to hand
        -: 1286:
    #####: 1287:  if (toFlag == 1)
        -: 1288:    {
    #####: 1289:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1290:      state->deckCount[player]++;
        -: 1291:    }
    #####: 1292:  else if (toFlag == 2)
        -: 1293:    {
    #####: 1294:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1295:      state->handCount[player]++;
        -: 1296:    }
        -: 1297:  else
        -: 1298:    {
    #####: 1299:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1300:      state->discardCount[player]++;
        -: 1301:    }
        -: 1302:
        -: 1303:  //decrease number in supply pile
    #####: 1304:  state->supplyCount[supplyPos]--;
        -: 1305:
    #####: 1306:  return 0;
        -: 1307:}
        -: 1308:
        8: 1309:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1310:{
        -: 1311:  int i;
        -: 1312:
        -: 1313:  //reset coin count
        8: 1314:  state->coins = 0;
        -: 1315:
        -: 1316:  //add coins for each Treasure card in player's hand
        8: 1317:  for (i = 0; i < state->handCount[player]; i++)
        -: 1318:    {
    #####: 1319:      if (state->hand[player][i] == copper)
        -: 1320:	{
    #####: 1321:	  state->coins += 1;
        -: 1322:	}
    #####: 1323:      else if (state->hand[player][i] == silver)
        -: 1324:	{
    #####: 1325:	  state->coins += 2;
        -: 1326:	}
    #####: 1327:      else if (state->hand[player][i] == gold)
        -: 1328:	{
    #####: 1329:	  state->coins += 3;
        -: 1330:	}
        -: 1331:    }
        -: 1332:
        -: 1333:  //add bonus
        8: 1334:  state->coins += bonus;
        -: 1335:
        8: 1336:  return 0;
        -: 1337:}
        -: 1338:
        -: 1339:
        -: 1340://end of dominion.c
unittest4.c:
All tests passed! The expected number of cards and actual number always matched. 
File 'dominion.c'
Lines executed:8.73% of 561
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:4
        -:    0:Programs:4
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
    #####:    8:int compare(const void* a, const void* b) {
    #####:    9:  if (*(int*)a > *(int*)b)
    #####:   10:    return 1;
    #####:   11:  if (*(int*)a < *(int*)b)
    #####:   12:    return -1;
    #####:   13:  return 0;
        -:   14:}
        -:   15:
    #####:   16:struct gameState* newGame() {
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
        -:   19:}
        -:   20:
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
        -:   35:}
        -:   36:
    #####:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;
        -:   43:  //set up random number generator
    #####:   44:  SelectStream(1);
    #####:   45:  PutSeed((long)randomSeed);
        -:   46:
        -:   47:  //check number of players
    #####:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
    #####:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
    #####:   57:  for (i = 0; i < 10; i++)
        -:   58:    {
    #####:   59:      for (j = 0; j < 10; j++)
        -:   60:        {
    #####:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
    #####:   73:  if (numPlayers == 2)
        -:   74:    {
    #####:   75:      state->supplyCount[curse] = 10;
        -:   76:    }
    #####:   77:  else if (numPlayers == 3)
        -:   78:    {
    #####:   79:      state->supplyCount[curse] = 20;
        -:   80:    }
        -:   81:  else
        -:   82:    {
    #####:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
    #####:   87:  if (numPlayers == 2)
        -:   88:    {
    #####:   89:      state->supplyCount[estate] = 8;
    #####:   90:      state->supplyCount[duchy] = 8;
    #####:   91:      state->supplyCount[province] = 8;
        -:   92:    }
        -:   93:  else
        -:   94:    {
    #####:   95:      state->supplyCount[estate] = 12;
    #####:   96:      state->supplyCount[duchy] = 12;
    #####:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
    #####:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
    #####:  102:  state->supplyCount[silver] = 40;
    #####:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
    #####:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
        -:  107:    {
    #####:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
        -:  109:	{
    #####:  110:	  if (kingdomCards[j] == i)
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
    #####:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
        -:  114:		{
    #####:  115:		  if (numPlayers == 2){
    #####:  116:		    state->supplyCount[i] = 8;
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
        -:  119:		}
        -:  120:	      else
        -:  121:		{
    #####:  122:		  state->supplyCount[i] = 10;
        -:  123:		}
    #####:  124:	      break;
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
    #####:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
    #####:  138:  for (i = 0; i < numPlayers; i++)
        -:  139:    {
    #####:  140:      state->deckCount[i] = 0;
    #####:  141:      for (j = 0; j < 3; j++)
        -:  142:	{
    #####:  143:	  state->deck[i][j] = estate;
    #####:  144:	  state->deckCount[i]++;
        -:  145:	}
    #####:  146:      for (j = 3; j < 10; j++)
        -:  147:	{
    #####:  148:	  state->deck[i][j] = copper;
    #####:  149:	  state->deckCount[i]++;
        -:  150:	}
        -:  151:    }
        -:  152:
        -:  153:  //shuffle player decks
    #####:  154:  for (i = 0; i < numPlayers; i++)
        -:  155:    {
    #####:  156:      if ( shuffle(i, state) < 0 )
        -:  157:	{
    #####:  158:	  return -1;
        -:  159:	}
        -:  160:    }
        -:  161:
        -:  162:  //draw player hands
    #####:  163:  for (i = 0; i < numPlayers; i++)
        -:  164:    {
        -:  165:      //initialize hand size to zero
    #####:  166:      state->handCount[i] = 0;
    #####:  167:      state->discardCount[i] = 0;
        -:  168:      //draw 5 cards
        -:  169:      // for (j = 0; j < 5; j++)
        -:  170:      //	{
        -:  171:      //	  drawCard(i, state);
        -:  172:      //	}
        -:  173:    }
        -:  174:
        -:  175:  //set embargo tokens to 0 for all supply piles
    #####:  176:  for (i = 0; i <= treasure_map; i++)
        -:  177:    {
    #####:  178:      state->embargoTokens[i] = 0;
        -:  179:    }
        -:  180:
        -:  181:  //initialize first player's turn
    #####:  182:  state->outpostPlayed = 0;
    #####:  183:  state->phase = 0;
    #####:  184:  state->numActions = 1;
    #####:  185:  state->numBuys = 1;
    #####:  186:  state->playedCardCount = 0;
    #####:  187:  state->whoseTurn = 0;
    #####:  188:  state->handCount[state->whoseTurn] = 0;
        -:  189:  //int it; move to top
        -:  190:
        -:  191:  //Moved draw cards to here, only drawing at the start of a turn
    #####:  192:  for (it = 0; it < 5; it++){
    #####:  193:    drawCard(state->whoseTurn, state);
        -:  194:  }
        -:  195:
    #####:  196:  updateCoins(state->whoseTurn, state, 0);
        -:  197:
    #####:  198:  return 0;
        -:  199:}
        -:  200:
    #####:  201:int shuffle(int player, struct gameState *state) {
        -:  202:
        -:  203:
        -:  204:  int newDeck[MAX_DECK];
    #####:  205:  int newDeckPos = 0;
        -:  206:  int card;
        -:  207:  int i;
        -:  208:
    #####:  209:  if (state->deckCount[player] < 1)
    #####:  210:    return -1;
    #####:  211:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare);
        -:  212:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  213:
    #####:  214:  while (state->deckCount[player] > 0) {
    #####:  215:    card = floor(Random() * state->deckCount[player]);
    #####:  216:    newDeck[newDeckPos] = state->deck[player][card];
    #####:  217:    newDeckPos++;
    #####:  218:    for (i = card; i < state->deckCount[player]-1; i++) {
    #####:  219:      state->deck[player][i] = state->deck[player][i+1];
        -:  220:    }
    #####:  221:    state->deckCount[player]--;
        -:  222:  }
    #####:  223:  for (i = 0; i < newDeckPos; i++) {
    #####:  224:    state->deck[player][i] = newDeck[i];
    #####:  225:    state->deckCount[player]++;
        -:  226:  }
        -:  227:
    #####:  228:  return 0;
        -:  229:}
        -:  230:
    #####:  231:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state)
        -:  232:{
        -:  233:  int card;
    #####:  234:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  235:
        -:  236:  //check if it is the right phase
    #####:  237:  if (state->phase != 0)
        -:  238:    {
    #####:  239:      return -1;
        -:  240:    }
        -:  241:
        -:  242:  //check if player has enough actions
    #####:  243:  if ( state->numActions < 1 )
        -:  244:    {
    #####:  245:      return -1;
        -:  246:    }
        -:  247:
        -:  248:  //get card played
    #####:  249:  card = handCard(handPos, state);
        -:  250:
        -:  251:  //check if selected card is an action
    #####:  252:  if ( card < adventurer || card > treasure_map )
        -:  253:    {
    #####:  254:      return -1;
        -:  255:    }
        -:  256:
        -:  257:  //play card
    #####:  258:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
        -:  259:    {
    #####:  260:      return -1;
        -:  261:    }
        -:  262:
        -:  263:  //reduce number of actions
    #####:  264:  state->numActions--;
        -:  265:
        -:  266:  //update coins (Treasure cards may be added with card draws)
    #####:  267:  updateCoins(state->whoseTurn, state, coin_bonus);
        -:  268:
    #####:  269:  return 0;
        -:  270:}
        -:  271:
    #####:  272:int buyCard(int supplyPos, struct gameState *state) {
        -:  273:  int who;
        -:  274:  if (DEBUG){
        -:  275:    printf("Entering buyCard...\n");
        -:  276:  }
        -:  277:
        -:  278:  // I don't know what to do about the phase thing.
        -:  279:
    #####:  280:  who = state->whoseTurn;
        -:  281:
    #####:  282:  if (state->numBuys < 1){
        -:  283:    if (DEBUG)
        -:  284:      printf("You do not have any buys left\n");
    #####:  285:    return -1;
    #####:  286:  } else if (supplyCount(supplyPos, state) <1){
        -:  287:    if (DEBUG)
        -:  288:      printf("There are not any of that type of card left\n");
    #####:  289:    return -1;
    #####:  290:  } else if (state->coins < getCost(supplyPos)){
        -:  291:    if (DEBUG)
        -:  292:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  293:    return -1;
        -:  294:  } else {
    #####:  295:    state->phase=1;
        -:  296:    //state->supplyCount[supplyPos]--;
    #####:  297:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  298:
    #####:  299:    state->coins = (state->coins) - (getCost(supplyPos));
    #####:  300:    state->numBuys--;
        -:  301:    if (DEBUG)
        -:  302:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  303:  }
        -:  304:
        -:  305:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  306:  //state->discardCount[who]++;
        -:  307:
    #####:  308:  return 0;
        -:  309:}
        -:  310:
       12:  311:int numHandCards(struct gameState *state) {
       12:  312:  return state->handCount[ whoseTurn(state) ];
        -:  313:}
        -:  314:
    #####:  315:int handCard(int handPos, struct gameState *state) {
    #####:  316:  int currentPlayer = whoseTurn(state);
    #####:  317:  return state->hand[currentPlayer][handPos];
        -:  318:}
        -:  319:
    #####:  320:int supplyCount(int card, struct gameState *state) {
    #####:  321:  return state->supplyCount[card];
        -:  322:}
        -:  323:
    #####:  324:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  325:  int i;
    #####:  326:  int count = 0;
        -:  327:
    #####:  328:  for (i = 0; i < state->deckCount[player]; i++)
        -:  329:    {
    #####:  330:      if (state->deck[player][i] == card) count++;
        -:  331:    }
        -:  332:
    #####:  333:  for (i = 0; i < state->handCount[player]; i++)
        -:  334:    {
    #####:  335:      if (state->hand[player][i] == card) count++;
        -:  336:    }
        -:  337:
    #####:  338:  for (i = 0; i < state->discardCount[player]; i++)
        -:  339:    {
    #####:  340:      if (state->discard[player][i] == card) count++;
        -:  341:    }
        -:  342:
    #####:  343:  return count;
        -:  344:}
        -:  345:
       12:  346:int whoseTurn(struct gameState *state) {
       12:  347:  return state->whoseTurn;
        -:  348:}
        -:  349:
    #####:  350:int endTurn(struct gameState *state) {
        -:  351:  int k;
        -:  352:  int i;
    #####:  353:  int currentPlayer = whoseTurn(state);
        -:  354:
        -:  355:  //Discard hand
    #####:  356:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    #####:  357:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  358:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  359:  }
    #####:  360:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  361:
        -:  362:  //Code for determining the player
    #####:  363:  if (currentPlayer < (state->numPlayers - 1)){
    #####:  364:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  365:  }
        -:  366:  else{
    #####:  367:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  368:  }
        -:  369:
    #####:  370:  state->outpostPlayed = 0;
    #####:  371:  state->phase = 0;
    #####:  372:  state->numActions = 1;
    #####:  373:  state->coins = 0;
    #####:  374:  state->numBuys = 1;
    #####:  375:  state->playedCardCount = 0;
    #####:  376:  state->handCount[state->whoseTurn] = 0;
        -:  377:
        -:  378:  //int k; move to top
        -:  379:  //Next player draws hand
    #####:  380:  for (k = 0; k < 5; k++){
    #####:  381:    drawCard(state->whoseTurn, state);//Draw a card
        -:  382:  }
        -:  383:
        -:  384:  //Update money
    #####:  385:  updateCoins(state->whoseTurn, state , 0);
        -:  386:
    #####:  387:  return 0;
        -:  388:}
        -:  389:
     1002:  390:int isGameOver(struct gameState *state) {
        -:  391:  int i;
        -:  392:  int j;
        -:  393:
        -:  394:  //if stack of Province cards is empty, the game ends
     1002:  395:  if (state->supplyCount[province] == 0)
        -:  396:    {
      124:  397:      return 1;
        -:  398:    }
        -:  399:
        -:  400:  //if three supply pile are at 0, the game ends
      878:  401:  j = 0;
    22828:  402:  for (i = 0; i < 25; i++)
        -:  403:    {
    21950:  404:      if (state->supplyCount[i] == 0)
        -:  405:	{
     2631:  406:	  j++;
        -:  407:	}
        -:  408:    }
      878:  409:  if ( j >= 3)
        -:  410:    {
      877:  411:      return 1;
        -:  412:    }
        -:  413:
        1:  414:  return 0;
        -:  415:}
        -:  416:
    #####:  417:int scoreFor (int player, struct gameState *state) {
        -:  418:
        -:  419:  int i;
    #####:  420:  int score = 0;
        -:  421:  //score from hand
    #####:  422:  for (i = 0; i < state->handCount[player]; i++)
        -:  423:    {
    #####:  424:      if (state->hand[player][i] == curse) { score = score - 1; };
    #####:  425:      if (state->hand[player][i] == estate) { score = score + 1; };
    #####:  426:      if (state->hand[player][i] == duchy) { score = score + 3; };
    #####:  427:      if (state->hand[player][i] == province) { score = score + 6; };
    #####:  428:      if (state->hand[player][i] == great_hall) { score = score + 1; };
    #####:  429:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  430:    }
        -:  431:
        -:  432:  //score from discard
    #####:  433:  for (i = 0; i < state->discardCount[player]; i++)
        -:  434:    {
    #####:  435:      if (state->discard[player][i] == curse) { score = score - 1; };
    #####:  436:      if (state->discard[player][i] == estate) { score = score + 1; };
    #####:  437:      if (state->discard[player][i] == duchy) { score = score + 3; };
    #####:  438:      if (state->discard[player][i] == province) { score = score + 6; };
    #####:  439:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    #####:  440:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  441:    }
        -:  442:
        -:  443:  //score from deck
    #####:  444:  for (i = 0; i < state->discardCount[player]; i++)
        -:  445:    {
    #####:  446:      if (state->deck[player][i] == curse) { score = score - 1; };
    #####:  447:      if (state->deck[player][i] == estate) { score = score + 1; };
    #####:  448:      if (state->deck[player][i] == duchy) { score = score + 3; };
    #####:  449:      if (state->deck[player][i] == province) { score = score + 6; };
    #####:  450:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    #####:  451:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  452:    }
        -:  453:
    #####:  454:  return score;
        -:  455:}
        -:  456:
    #####:  457:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  458:  int i;
        -:  459:  int j;
        -:  460:  int highScore;
        -:  461:  int currentPlayer;
        -:  462:
        -:  463:  //get score for each player
    #####:  464:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  465:    {
        -:  466:      //set unused player scores to -9999
    #####:  467:      if (i >= state->numPlayers)
        -:  468:	{
    #####:  469:	  players[i] = -9999;
        -:  470:	}
        -:  471:      else
        -:  472:	{
    #####:  473:	  players[i] = scoreFor (i, state);
        -:  474:	}
        -:  475:    }
        -:  476:
        -:  477:  //find highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  480:    {
    #####:  481:      if (players[i] > players[j])
        -:  482:	{
    #####:  483:	  j = i;
        -:  484:	}
        -:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //add 1 to players who had less turns
    #####:  489:  currentPlayer = whoseTurn(state);
    #####:  490:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  491:    {
    #####:  492:      if ( players[i] == highScore && i > currentPlayer )
        -:  493:	{
    #####:  494:	  players[i]++;
        -:  495:	}
        -:  496:    }
        -:  497:
        -:  498:  //find new highest score
    #####:  499:  j = 0;
    #####:  500:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  501:    {
    #####:  502:      if ( players[i] > players[j] )
        -:  503:	{
    #####:  504:	  j = i;
        -:  505:	}
        -:  506:    }
    #####:  507:  highScore = players[j];
        -:  508:
        -:  509:  //set winners in array to 1 and rest to 0
    #####:  510:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  511:    {
    #####:  512:      if ( players[i] == highScore )
        -:  513:	{
    #####:  514:	  players[i] = 1;
        -:  515:	}
        -:  516:      else
        -:  517:	{
    #####:  518:	  players[i] = 0;
        -:  519:	}
        -:  520:    }
        -:  521:
    #####:  522:  return 0;
        -:  523:}
        -:  524:
    #####:  525:int drawCard(int player, struct gameState *state)
        -:  526:{	int count;
        -:  527:  int deckCounter;
    #####:  528:  if (state->deckCount[player] <= 0){//Deck is empty
        -:  529:
        -:  530:    //Step 1 Shuffle the discard pile back into a deck
        -:  531:    int i;
        -:  532:    //Move discard to deck
    #####:  533:    for (i = 0; i < state->discardCount[player];i++){
    #####:  534:      state->deck[player][i] = state->discard[player][i];
    #####:  535:      state->discard[player][i] = -1;
        -:  536:    }
        -:  537:
    #####:  538:    state->deckCount[player] = state->discardCount[player];
    #####:  539:    state->discardCount[player] = 0;//Reset discard
        -:  540:
        -:  541:    //Shufffle the deck
    #####:  542:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
        -:  543:
        -:  544:    if (DEBUG){//Debug statements
        -:  545:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  546:    }
        -:  547:
    #####:  548:    state->discardCount[player] = 0;
        -:  549:
        -:  550:    //Step 2 Draw Card
    #####:  551:    count = state->handCount[player];//Get current player's hand count
        -:  552:
        -:  553:    if (DEBUG){//Debug statements
        -:  554:      printf("Current hand count: %d\n", count);
        -:  555:    }
        -:  556:
    #####:  557:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  558:
    #####:  559:    if (deckCounter == 0)
    #####:  560:      return -1;
        -:  561:
    #####:  562:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    #####:  563:    state->deckCount[player]--;
    #####:  564:    state->handCount[player]++;//Increment hand count
        -:  565:  }
        -:  566:
        -:  567:  else{
    #####:  568:    int count = state->handCount[player];//Get current hand count for player
        -:  569:    int deckCounter;
        -:  570:    if (DEBUG){//Debug statements
        -:  571:      printf("Current hand count: %d\n", count);
        -:  572:    }
        -:  573:
    #####:  574:    deckCounter = state->deckCount[player];//Create holder for the deck count
    #####:  575:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
    #####:  576:    state->deckCount[player]--;
    #####:  577:    state->handCount[player]++;//Increment hand count
        -:  578:  }
        -:  579:
    #####:  580:  return 0;
        -:  581:}
        -:  582:
       35:  583:int getCost(int cardNumber)
        -:  584:{
       35:  585:  switch( cardNumber )
        -:  586:    {
        -:  587:    case curse:
        1:  588:      return 0;
        -:  589:    case estate:
        1:  590:      return 2;
        -:  591:    case duchy:
        1:  592:      return 5;
        -:  593:    case province:
        1:  594:      return 8;
        -:  595:    case copper:
        1:  596:      return 0;
        -:  597:    case silver:
        1:  598:      return 3;
        -:  599:    case gold:
        1:  600:      return 6;
        -:  601:    case adventurer:
        1:  602:      return 6;
        -:  603:    case council_room:
        1:  604:      return 5;
        -:  605:    case feast:
        1:  606:      return 4;
        -:  607:    case gardens:
        1:  608:      return 4;
        -:  609:    case mine:
        1:  610:      return 5;
        -:  611:    case remodel:
        1:  612:      return 4;
        -:  613:    case smithy:
        1:  614:      return 4;
        -:  615:    case village:
        1:  616:      return 3;
        -:  617:    case baron:
        1:  618:      return 4;
        -:  619:    case great_hall:
        1:  620:      return 3;
        -:  621:    case minion:
        1:  622:      return 5;
        -:  623:    case steward:
        1:  624:      return 3;
        -:  625:    case tribute:
        1:  626:      return 5;
        -:  627:    case ambassador:
        1:  628:      return 3;
        -:  629:    case cutpurse:
        1:  630:      return 4;
        -:  631:    case embargo:
        1:  632:      return 2;
        -:  633:    case outpost:
        1:  634:      return 5;
        -:  635:    case salvager:
        1:  636:      return 4;
        -:  637:    case sea_hag:
        1:  638:      return 4;
        -:  639:    case treasure_map:
        1:  640:      return 4;
        -:  641:    }
        -:  642:
        8:  643:  return -1;
        -:  644:}
        -:  645:
    #####:  646:void adventurer_action (int drawntreasure, struct gameState *state, int currentPlayer, int cardDrawn, int temphand[MAX_HAND], int z) {
    #####:  647:    while(drawntreasure<2){
    #####:  648:        if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
    #####:  649:            shuffle(currentPlayer, state);
        -:  650:        }
    #####:  651:        drawCard(currentPlayer, state);
    #####:  652:        cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
    #####:  653:        if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
    #####:  654:          drawntreasure++;
        -:  655:        else{
    #####:  656:          temphand[z]=cardDrawn;
    #####:  657:          state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
        -:  658:        }
        -:  659:  }
    #####:  660:  while(z-1>=0){
    #####:  661:      state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    #####:  662:      z=z-1;
        -:  663:  }
    #####:  664:}
        -:  665:
    #####:  666:void smithy_action (int currentPlayer, struct gameState *state, int i, int handPos) {
        -:  667:  //+3 Cards
    #####:  668:  for (i = 0; i < 3; i++) {
    #####:  669:    drawCard(currentPlayer, state);
        -:  670:  }
        -:  671:
        -:  672:  //discard card from hand
    #####:  673:  discardCard(handPos, currentPlayer, state, 0);
    #####:  674:}
        -:  675:
    #####:  676:void village_action (int currentPlayer, struct gameState *state, int handPos) {
        -:  677:  //+1 Card
    #####:  678:  drawCard(currentPlayer, state);
        -:  679:
        -:  680:  //+2 Actions
    #####:  681:  state->numActions = state->numActions + 2;
        -:  682:
        -:  683:  //discard played card from hand
    #####:  684:  discardCard(handPos, currentPlayer, state, 0);
    #####:  685:}
        -:  686:
    #####:  687:void council_room_action (int i, int currentPlayer, struct gameState *state) {
        -:  688:  //+4 Cards
    #####:  689:  for (i = 0; i < 4; i++) {
    #####:  690:      drawCard(currentPlayer, state);
        -:  691:  }
        -:  692:
        -:  693:  //+1 Buy
    #####:  694:  state->numBuys++;
        -:  695:
        -:  696:  //Each other player draws a card
    #####:  697:  for (i = 0; i < state->numPlayers; i++) {
    #####:  698:      if ( i == currentPlayer ) {
    #####:  699:          drawCard(i, state);
        -:  700:      }
        -:  701:  }
    #####:  702:}
        -:  703:
    #####:  704:int mine_action (int j, struct gameState *state, int currentPlayer, int choice1, int choice2, int handPos, int i) {
    #####:  705:  j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  706:
    #####:  707:  if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold) {
    #####:  708:      return -1;
        -:  709:  }
        -:  710:
    #####:  711:  if (choice2 > treasure_map || choice2 < curse) {
    #####:  712:      return -1;
        -:  713:  }
        -:  714:
    #####:  715:  if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) ) {
    #####:  716:      return -1;
        -:  717:  }
        -:  718:
    #####:  719:  gainCard(choice2, state, 2, currentPlayer);
        -:  720:
        -:  721:  //discard card from hand
    #####:  722:  discardCard(handPos, currentPlayer, state, 0);
        -:  723:
        -:  724:  //discard trashed card
    #####:  725:  for (i = 0; i < state->handCount[currentPlayer]; i++) {
    #####:  726:      if (state->hand[currentPlayer][i] == j) {
    #####:  727:        discardCard(i, currentPlayer, state, 0);
    #####:  728:        break;
        -:  729:      }
        -:  730:  }
        -:  731:
    #####:  732:  return -1;
        -:  733:}
        -:  734:
    #####:  735:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  736:{
        -:  737:  int i;
        -:  738:  int j;
        -:  739:  int k;
        -:  740:  int x;
        -:  741:  int m;
        -:  742:  int index;
    #####:  743:  int currentPlayer = whoseTurn(state);
    #####:  744:  int nextPlayer = currentPlayer + 1;
        -:  745:
    #####:  746:  int tributeRevealedCards[2] = {-1, -1};
        -:  747:  int temphand[MAX_HAND];// moved above the if statement
    #####:  748:  int drawntreasure=0;
        -:  749:  int cardDrawn;
    #####:  750:  int z = 0;// this is the counter for the temp hand
    #####:  751:  if (nextPlayer > (state->numPlayers - 1)){
    #####:  752:    nextPlayer = 0;
        -:  753:  }
        -:  754:
        -:  755:
        -:  756:  //uses switch to select card and perform actions
    #####:  757:  switch( card )
        -:  758:    {
        -:  759:    case adventurer:
    #####:  760:      adventurer_action (drawntreasure, state, currentPlayer, cardDrawn, temphand, z);
    #####:  761:      return 0;
        -:  762:
        -:  763:    case council_room:
    #####:  764:      council_room_action (i, currentPlayer, state);
    #####:  765:      return 0;
        -:  766:
        -:  767:    case feast:
        -:  768:      //gain card with cost up to 5
        -:  769:      //Backup hand
    #####:  770:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  771:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  772:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  773:      }
        -:  774:      //Backup hand
        -:  775:
        -:  776:      //Update Coins for Buy
    #####:  777:      updateCoins(currentPlayer, state, 5);
    #####:  778:      x = 1;//Condition to loop on
    #####:  779:      while( x == 1) {//Buy one card
    #####:  780:	if (supplyCount(choice1, state) <= 0){
        -:  781:	  if (DEBUG)
        -:  782:	    printf("None of that card left, sorry!\n");
        -:  783:
        -:  784:	  if (DEBUG){
        -:  785:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  786:	  }
        -:  787:	}
    #####:  788:	else if (state->coins < getCost(choice1)){
    #####:  789:	  printf("That card is too expensive!\n");
        -:  790:
        -:  791:	  if (DEBUG){
        -:  792:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  793:	  }
        -:  794:	}
        -:  795:	else{
        -:  796:
        -:  797:	  if (DEBUG){
        -:  798:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  799:	  }
        -:  800:
    #####:  801:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    #####:  802:	  x = 0;//No more buying cards
        -:  803:
        -:  804:	  if (DEBUG){
        -:  805:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  806:	  }
        -:  807:
        -:  808:	}
        -:  809:      }
        -:  810:
        -:  811:      //Reset Hand
    #####:  812:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  813:	state->hand[currentPlayer][i] = temphand[i];
    #####:  814:	temphand[i] = -1;
        -:  815:      }
        -:  816:      //Reset Hand
        -:  817:
    #####:  818:      return 0;
        -:  819:
        -:  820:    case gardens:
    #####:  821:      return -1;
        -:  822:
        -:  823:    case mine:
    #####:  824:      m = mine_action (j, state, currentPlayer, choice1, choice2, handPos, i);
    #####:  825:      return m;
        -:  826:
        -:  827:    case remodel:
    #####:  828:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  829:
    #####:  830:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
        -:  831:	{
    #####:  832:	  return -1;
        -:  833:	}
        -:  834:
    #####:  835:      gainCard(choice2, state, 0, currentPlayer);
        -:  836:
        -:  837:      //discard card from hand
    #####:  838:      discardCard(handPos, currentPlayer, state, 0);
        -:  839:
        -:  840:      //discard trashed card
    #####:  841:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  842:	{
    #####:  843:	  if (state->hand[currentPlayer][i] == j)
        -:  844:	    {
    #####:  845:	      discardCard(i, currentPlayer, state, 0);
    #####:  846:	      break;
        -:  847:	    }
        -:  848:	}
        -:  849:
        -:  850:
    #####:  851:      return 0;
        -:  852:
        -:  853:    case smithy:
    #####:  854:      smithy_action (currentPlayer, state, i, handPos);
    #####:  855:      return 0;
        -:  856:
        -:  857:    case village:
    #####:  858:      village_action (currentPlayer, state, handPos);
    #####:  859:      return 0;
        -:  860:
        -:  861:    case baron:
    #####:  862:      state->numBuys++;//Increase buys by 1!
    #####:  863:      if (choice1 > 0){//Boolean true or going to discard an estate
    #####:  864:	int p = 0;//Iterator for hand!
    #####:  865:	int card_not_discarded = 1;//Flag for discard set!
    #####:  866:	while(card_not_discarded){
    #####:  867:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    #####:  868:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  869:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  870:	    state->discardCount[currentPlayer]++;
    #####:  871:	    for (;p < state->handCount[currentPlayer]; p++){
    #####:  872:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  873:	    }
    #####:  874:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  875:	    state->handCount[currentPlayer]--;
    #####:  876:	    card_not_discarded = 0;//Exit the loop
        -:  877:	  }
    #####:  878:	  else if (p > state->handCount[currentPlayer]){
        -:  879:	    if(DEBUG) {
        -:  880:	      printf("No estate cards in your hand, invalid choice\n");
        -:  881:	      printf("Must gain an estate if there are any\n");
        -:  882:	    }
    #####:  883:	    if (supplyCount(estate, state) > 0){
    #####:  884:	      gainCard(estate, state, 0, currentPlayer);
    #####:  885:	      state->supplyCount[estate]--;//Decrement estates
    #####:  886:	      if (supplyCount(estate, state) == 0){
    #####:  887:		isGameOver(state);
        -:  888:	      }
        -:  889:	    }
    #####:  890:	    card_not_discarded = 0;//Exit the loop
        -:  891:	  }
        -:  892:
        -:  893:	  else{
    #####:  894:	    p++;//Next card
        -:  895:	  }
        -:  896:	}
        -:  897:      }
        -:  898:
        -:  899:      else{
    #####:  900:	if (supplyCount(estate, state) > 0){
    #####:  901:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
    #####:  902:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  903:	  if (supplyCount(estate, state) == 0){
    #####:  904:	    isGameOver(state);
        -:  905:	  }
        -:  906:	}
        -:  907:      }
        -:  908:
        -:  909:
    #####:  910:      return 0;
        -:  911:
        -:  912:    case great_hall:
        -:  913:      //+1 Card
    #####:  914:      drawCard(currentPlayer, state);
        -:  915:
        -:  916:      //+1 Actions
    #####:  917:      state->numActions++;
        -:  918:
        -:  919:      //discard card from hand
    #####:  920:      discardCard(handPos, currentPlayer, state, 0);
    #####:  921:      return 0;
        -:  922:
        -:  923:    case minion:
        -:  924:      //+1 action
    #####:  925:      state->numActions++;
        -:  926:
        -:  927:      //discard card from hand
    #####:  928:      discardCard(handPos, currentPlayer, state, 0);
        -:  929:
    #####:  930:      if (choice1)		//+2 coins
        -:  931:	{
    #####:  932:	  state->coins = state->coins + 2;
        -:  933:	}
        -:  934:
    #####:  935:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
        -:  936:	{
        -:  937:	  //discard hand
    #####:  938:	  while(numHandCards(state) > 0)
        -:  939:	    {
    #####:  940:	      discardCard(handPos, currentPlayer, state, 0);
        -:  941:	    }
        -:  942:
        -:  943:	  //draw 4
    #####:  944:	  for (i = 0; i < 4; i++)
        -:  945:	    {
    #####:  946:	      drawCard(currentPlayer, state);
        -:  947:	    }
        -:  948:
        -:  949:	  //other players discard hand and redraw if hand size > 4
    #####:  950:	  for (i = 0; i < state->numPlayers; i++)
        -:  951:	    {
    #####:  952:	      if (i != currentPlayer)
        -:  953:		{
    #####:  954:		  if ( state->handCount[i] > 4 )
        -:  955:		    {
        -:  956:		      //discard hand
    #####:  957:		      while( state->handCount[i] > 0 )
        -:  958:			{
    #####:  959:			  discardCard(handPos, i, state, 0);
        -:  960:			}
        -:  961:
        -:  962:		      //draw 4
    #####:  963:		      for (j = 0; j < 4; j++)
        -:  964:			{
    #####:  965:			  drawCard(i, state);
        -:  966:			}
        -:  967:		    }
        -:  968:		}
        -:  969:	    }
        -:  970:
        -:  971:	}
    #####:  972:      return 0;
        -:  973:
        -:  974:    case steward:
    #####:  975:      if (choice1 == 1)
        -:  976:	{
        -:  977:	  //+2 cards
    #####:  978:	  drawCard(currentPlayer, state);
    #####:  979:	  drawCard(currentPlayer, state);
        -:  980:	}
    #####:  981:      else if (choice1 == 2)
        -:  982:	{
        -:  983:	  //+2 coins
    #####:  984:	  state->coins = state->coins + 2;
        -:  985:	}
        -:  986:      else
        -:  987:	{
        -:  988:	  //trash 2 cards in hand
    #####:  989:	  discardCard(choice2, currentPlayer, state, 1);
    #####:  990:	  discardCard(choice3, currentPlayer, state, 1);
        -:  991:	}
        -:  992:
        -:  993:      //discard card from hand
    #####:  994:      discardCard(handPos, currentPlayer, state, 0);
    #####:  995:      return 0;
        -:  996:
        -:  997:    case tribute:
    #####:  998:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    #####:  999:	if (state->deckCount[nextPlayer] > 0){
    #####: 1000:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1001:	  state->deckCount[nextPlayer]--;
        -: 1002:	}
    #####: 1003:	else if (state->discardCount[nextPlayer] > 0){
    #####: 1004:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1005:	  state->discardCount[nextPlayer]--;
        -: 1006:	}
        -: 1007:	else{
        -: 1008:	  //No Card to Reveal
        -: 1009:	  if (DEBUG){
        -: 1010:	    printf("No cards to reveal\n");
        -: 1011:	  }
        -: 1012:	}
        -: 1013:      }
        -: 1014:
        -: 1015:      else{
    #####: 1016:	if (state->deckCount[nextPlayer] == 0){
    #####: 1017:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    #####: 1018:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1019:	    state->deckCount[nextPlayer]++;
    #####: 1020:	    state->discard[nextPlayer][i] = -1;
    #####: 1021:	    state->discardCount[nextPlayer]--;
        -: 1022:	  }
        -: 1023:
    #####: 1024:	  shuffle(nextPlayer,state);//Shuffle the deck
        -: 1025:	}
    #####: 1026:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1027:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1028:	state->deckCount[nextPlayer]--;
    #####: 1029:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1030:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1031:	state->deckCount[nextPlayer]--;
        -: 1032:      }
        -: 1033:
    #####: 1034:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one
    #####: 1035:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1036:	state->playedCardCount++;
    #####: 1037:	tributeRevealedCards[1] = -1;
        -: 1038:      }
        -: 1039:
    #####: 1040:      for (i = 0; i <= 2; i ++){
    #####: 1041:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    #####: 1042:	  state->coins += 2;
        -: 1043:	}
        -: 1044:
    #####: 1045:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    #####: 1046:	  drawCard(currentPlayer, state);
    #####: 1047:	  drawCard(currentPlayer, state);
        -: 1048:	}
        -: 1049:	else{//Action Card
    #####: 1050:	  state->numActions = state->numActions + 2;
        -: 1051:	}
        -: 1052:      }
        -: 1053:
    #####: 1054:      return 0;
        -: 1055:
        -: 1056:    case ambassador:
    #####: 1057:      j = 0;		//used to check if player has enough cards to discard
        -: 1058:
    #####: 1059:      if (choice2 > 2 || choice2 < 0)
        -: 1060:	{
    #####: 1061:	  return -1;
        -: 1062:	}
        -: 1063:
    #####: 1064:      if (choice1 == handPos)
        -: 1065:	{
    #####: 1066:	  return -1;
        -: 1067:	}
        -: 1068:
    #####: 1069:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1070:	{
    #####: 1071:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
        -: 1072:	    {
    #####: 1073:	      j++;
        -: 1074:	    }
        -: 1075:	}
    #####: 1076:      if (j < choice2)
        -: 1077:	{
    #####: 1078:	  return -1;
        -: 1079:	}
        -: 1080:
        -: 1081:      if (DEBUG)
        -: 1082:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1083:
        -: 1084:      //increase supply count for choosen card by amount being discarded
    #####: 1085:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1086:
        -: 1087:      //each other player gains a copy of revealed card
    #####: 1088:      for (i = 0; i < state->numPlayers; i++)
        -: 1089:	{
    #####: 1090:	  if (i != currentPlayer)
        -: 1091:	    {
    #####: 1092:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
        -: 1093:	    }
        -: 1094:	}
        -: 1095:
        -: 1096:      //discard played card from hand
    #####: 1097:      discardCard(handPos, currentPlayer, state, 0);
        -: 1098:
        -: 1099:      //trash copies of cards returned to supply
    #####: 1100:      for (j = 0; j < choice2; j++)
        -: 1101:	{
    #####: 1102:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1103:	    {
    #####: 1104:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
        -: 1105:		{
    #####: 1106:		  discardCard(i, currentPlayer, state, 1);
    #####: 1107:		  break;
        -: 1108:		}
        -: 1109:	    }
        -: 1110:	}
        -: 1111:
    #####: 1112:      return 0;
        -: 1113:
        -: 1114:    case cutpurse:
        -: 1115:
    #####: 1116:      updateCoins(currentPlayer, state, 2);
    #####: 1117:      for (i = 0; i < state->numPlayers; i++)
        -: 1118:	{
    #####: 1119:	  if (i != currentPlayer)
        -: 1120:	    {
    #####: 1121:	      for (j = 0; j < state->handCount[i]; j++)
        -: 1122:		{
    #####: 1123:		  if (state->hand[i][j] == copper)
        -: 1124:		    {
    #####: 1125:		      discardCard(j, i, state, 0);
    #####: 1126:		      break;
        -: 1127:		    }
    #####: 1128:		  if (j == state->handCount[i])
        -: 1129:		    {
    #####: 1130:		      for (k = 0; k < state->handCount[i]; k++)
        -: 1131:			{
        -: 1132:			  if (DEBUG)
        -: 1133:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1134:			}
    #####: 1135:		      break;
        -: 1136:		    }
        -: 1137:		}
        -: 1138:
        -: 1139:	    }
        -: 1140:
        -: 1141:	}
        -: 1142:
        -: 1143:      //discard played card from hand
    #####: 1144:      discardCard(handPos, currentPlayer, state, 0);
        -: 1145:
    #####: 1146:      return 0;
        -: 1147:
        -: 1148:
        -: 1149:    case embargo:
        -: 1150:      //+2 Coins
    #####: 1151:      state->coins = state->coins + 2;
        -: 1152:
        -: 1153:      //see if selected pile is in play
    #####: 1154:      if ( state->supplyCount[choice1] == -1 )
        -: 1155:	{
    #####: 1156:	  return -1;
        -: 1157:	}
        -: 1158:
        -: 1159:      //add embargo token to selected supply pile
    #####: 1160:      state->embargoTokens[choice1]++;
        -: 1161:
        -: 1162:      //trash card
    #####: 1163:      discardCard(handPos, currentPlayer, state, 1);
    #####: 1164:      return 0;
        -: 1165:
        -: 1166:    case outpost:
        -: 1167:      //set outpost flag
    #####: 1168:      state->outpostPlayed++;
        -: 1169:
        -: 1170:      //discard card
    #####: 1171:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1172:      return 0;
        -: 1173:
        -: 1174:    case salvager:
        -: 1175:      //+1 buy
    #####: 1176:      state->numBuys++;
        -: 1177:
    #####: 1178:      if (choice1)
        -: 1179:	{
        -: 1180:	  //gain coins equal to trashed card
    #####: 1181:	  state->coins = state->coins + getCost( handCard(choice1, state) );
        -: 1182:	  //trash card
    #####: 1183:	  discardCard(choice1, currentPlayer, state, 1);
        -: 1184:	}
        -: 1185:
        -: 1186:      //discard card
    #####: 1187:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1188:      return 0;
        -: 1189:
        -: 1190:    case sea_hag:
    #####: 1191:      for (i = 0; i < state->numPlayers; i++){
    #####: 1192:	if (i != currentPlayer){
    #####: 1193:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1194:	  state->discardCount[i]++;
    #####: 1195:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1196:	}
        -: 1197:      }
    #####: 1198:      return 0;
        -: 1199:
        -: 1200:    case treasure_map:
        -: 1201:      //search hand for another treasure_map
    #####: 1202:      index = -1;
    #####: 1203:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1204:	{
    #####: 1205:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
        -: 1206:	    {
    #####: 1207:	      index = i;
    #####: 1208:	      break;
        -: 1209:	    }
        -: 1210:	}
    #####: 1211:      if (index > -1)
        -: 1212:	{
        -: 1213:	  //trash both treasure cards
    #####: 1214:	  discardCard(handPos, currentPlayer, state, 1);
    #####: 1215:	  discardCard(index, currentPlayer, state, 1);
        -: 1216:
        -: 1217:	  //gain 4 Gold cards
    #####: 1218:	  for (i = 0; i < 4; i++)
        -: 1219:	    {
    #####: 1220:	      gainCard(gold, state, 1, currentPlayer);
        -: 1221:	    }
        -: 1222:
        -: 1223:	  //return success
    #####: 1224:	  return 1;
        -: 1225:	}
        -: 1226:
        -: 1227:      //no second treasure_map found in hand
    #####: 1228:      return -1;
        -: 1229:    }
        -: 1230:
    #####: 1231:  return -1;
        -: 1232:}
        -: 1233:
    #####: 1234:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1235:{
        -: 1236:
        -: 1237:  //if card is not trashed, added to Played pile
    #####: 1238:  if (trashFlag < 1)
        -: 1239:    {
        -: 1240:      //add card to played pile
    #####: 1241:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos];
    #####: 1242:      state->playedCardCount++;
        -: 1243:    }
        -: 1244:
        -: 1245:  //set played card to -1
    #####: 1246:  state->hand[currentPlayer][handPos] = -1;
        -: 1247:
        -: 1248:  //remove card from player's hand
    #####: 1249:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
        -: 1250:    {
        -: 1251:      //reduce number of cards in hand
    #####: 1252:      state->handCount[currentPlayer]--;
        -: 1253:    }
    #####: 1254:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
        -: 1255:    {
        -: 1256:      //reduce number of cards in hand
    #####: 1257:      state->handCount[currentPlayer]--;
        -: 1258:    }
        -: 1259:  else
        -: 1260:    {
        -: 1261:      //replace discarded card with last card in hand
    #####: 1262:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1263:      //set last card to -1
    #####: 1264:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1265:      //reduce number of cards in hand
    #####: 1266:      state->handCount[currentPlayer]--;
        -: 1267:    }
        -: 1268:
    #####: 1269:  return 0;
        -: 1270:}
        -: 1271:
    #####: 1272:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1273:{
        -: 1274:  //Note: supplyPos is enum of choosen card
        -: 1275:
        -: 1276:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1277:  if ( supplyCount(supplyPos, state) < 1 )
        -: 1278:    {
    #####: 1279:      return -1;
        -: 1280:    }
        -: 1281:
        -: 1282:  //added card for [whoseTurn] current player:
        -: 1283:  // toFlag = 0 : add to discard
        -: 1284:  // toFlag = 1 : add to deck
        -: 1285:  // toFlag = 2 : add to hand
        -: 1286:
    #####: 1287:  if (toFlag == 1)
        -: 1288:    {
    #####: 1289:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1290:      state->deckCount[player]++;
        -: 1291:    }
    #####: 1292:  else if (toFlag == 2)
        -: 1293:    {
    #####: 1294:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1295:      state->handCount[player]++;
        -: 1296:    }
        -: 1297:  else
        -: 1298:    {
    #####: 1299:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1300:      state->discardCount[player]++;
        -: 1301:    }
        -: 1302:
        -: 1303:  //decrease number in supply pile
    #####: 1304:  state->supplyCount[supplyPos]--;
        -: 1305:
    #####: 1306:  return 0;
        -: 1307:}
        -: 1308:
        8: 1309:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1310:{
        -: 1311:  int i;
        -: 1312:
        -: 1313:  //reset coin count
        8: 1314:  state->coins = 0;
        -: 1315:
        -: 1316:  //add coins for each Treasure card in player's hand
        8: 1317:  for (i = 0; i < state->handCount[player]; i++)
        -: 1318:    {
    #####: 1319:      if (state->hand[player][i] == copper)
        -: 1320:	{
    #####: 1321:	  state->coins += 1;
        -: 1322:	}
    #####: 1323:      else if (state->hand[player][i] == silver)
        -: 1324:	{
    #####: 1325:	  state->coins += 2;
        -: 1326:	}
    #####: 1327:      else if (state->hand[player][i] == gold)
        -: 1328:	{
    #####: 1329:	  state->coins += 3;
        -: 1330:	}
        -: 1331:    }
        -: 1332:
        -: 1333:  //add bonus
        8: 1334:  state->coins += bonus;
        -: 1335:
        8: 1336:  return 0;
        -: 1337:}
        -: 1338:
        -: 1339:
        -: 1340://end of dominion.c
cardtest1.c:
All tests passed! Returned fine and 3 new cards were added
File 'dominion.c'
Lines executed:14.97% of 561
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:5
        -:    0:Programs:5
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
    #####:    8:int compare(const void* a, const void* b) {
    #####:    9:  if (*(int*)a > *(int*)b)
    #####:   10:    return 1;
    #####:   11:  if (*(int*)a < *(int*)b)
    #####:   12:    return -1;
    #####:   13:  return 0;
        -:   14:}
        -:   15:
    #####:   16:struct gameState* newGame() {
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
        -:   19:}
        -:   20:
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
        -:   35:}
        -:   36:
    #####:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;
        -:   43:  //set up random number generator
    #####:   44:  SelectStream(1);
    #####:   45:  PutSeed((long)randomSeed);
        -:   46:
        -:   47:  //check number of players
    #####:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
    #####:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
    #####:   57:  for (i = 0; i < 10; i++)
        -:   58:    {
    #####:   59:      for (j = 0; j < 10; j++)
        -:   60:        {
    #####:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
    #####:   73:  if (numPlayers == 2)
        -:   74:    {
    #####:   75:      state->supplyCount[curse] = 10;
        -:   76:    }
    #####:   77:  else if (numPlayers == 3)
        -:   78:    {
    #####:   79:      state->supplyCount[curse] = 20;
        -:   80:    }
        -:   81:  else
        -:   82:    {
    #####:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
    #####:   87:  if (numPlayers == 2)
        -:   88:    {
    #####:   89:      state->supplyCount[estate] = 8;
    #####:   90:      state->supplyCount[duchy] = 8;
    #####:   91:      state->supplyCount[province] = 8;
        -:   92:    }
        -:   93:  else
        -:   94:    {
    #####:   95:      state->supplyCount[estate] = 12;
    #####:   96:      state->supplyCount[duchy] = 12;
    #####:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
    #####:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
    #####:  102:  state->supplyCount[silver] = 40;
    #####:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
    #####:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
        -:  107:    {
    #####:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
        -:  109:	{
    #####:  110:	  if (kingdomCards[j] == i)
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
    #####:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
        -:  114:		{
    #####:  115:		  if (numPlayers == 2){
    #####:  116:		    state->supplyCount[i] = 8;
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
        -:  119:		}
        -:  120:	      else
        -:  121:		{
    #####:  122:		  state->supplyCount[i] = 10;
        -:  123:		}
    #####:  124:	      break;
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
    #####:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
    #####:  138:  for (i = 0; i < numPlayers; i++)
        -:  139:    {
    #####:  140:      state->deckCount[i] = 0;
    #####:  141:      for (j = 0; j < 3; j++)
        -:  142:	{
    #####:  143:	  state->deck[i][j] = estate;
    #####:  144:	  state->deckCount[i]++;
        -:  145:	}
    #####:  146:      for (j = 3; j < 10; j++)
        -:  147:	{
    #####:  148:	  state->deck[i][j] = copper;
    #####:  149:	  state->deckCount[i]++;
        -:  150:	}
        -:  151:    }
        -:  152:
        -:  153:  //shuffle player decks
    #####:  154:  for (i = 0; i < numPlayers; i++)
        -:  155:    {
    #####:  156:      if ( shuffle(i, state) < 0 )
        -:  157:	{
    #####:  158:	  return -1;
        -:  159:	}
        -:  160:    }
        -:  161:
        -:  162:  //draw player hands
    #####:  163:  for (i = 0; i < numPlayers; i++)
        -:  164:    {
        -:  165:      //initialize hand size to zero
    #####:  166:      state->handCount[i] = 0;
    #####:  167:      state->discardCount[i] = 0;
        -:  168:      //draw 5 cards
        -:  169:      // for (j = 0; j < 5; j++)
        -:  170:      //	{
        -:  171:      //	  drawCard(i, state);
        -:  172:      //	}
        -:  173:    }
        -:  174:
        -:  175:  //set embargo tokens to 0 for all supply piles
    #####:  176:  for (i = 0; i <= treasure_map; i++)
        -:  177:    {
    #####:  178:      state->embargoTokens[i] = 0;
        -:  179:    }
        -:  180:
        -:  181:  //initialize first player's turn
    #####:  182:  state->outpostPlayed = 0;
    #####:  183:  state->phase = 0;
    #####:  184:  state->numActions = 1;
    #####:  185:  state->numBuys = 1;
    #####:  186:  state->playedCardCount = 0;
    #####:  187:  state->whoseTurn = 0;
    #####:  188:  state->handCount[state->whoseTurn] = 0;
        -:  189:  //int it; move to top
        -:  190:
        -:  191:  //Moved draw cards to here, only drawing at the start of a turn
    #####:  192:  for (it = 0; it < 5; it++){
    #####:  193:    drawCard(state->whoseTurn, state);
        -:  194:  }
        -:  195:
    #####:  196:  updateCoins(state->whoseTurn, state, 0);
        -:  197:
    #####:  198:  return 0;
        -:  199:}
        -:  200:
    #####:  201:int shuffle(int player, struct gameState *state) {
        -:  202:
        -:  203:
        -:  204:  int newDeck[MAX_DECK];
    #####:  205:  int newDeckPos = 0;
        -:  206:  int card;
        -:  207:  int i;
        -:  208:
    #####:  209:  if (state->deckCount[player] < 1)
    #####:  210:    return -1;
    #####:  211:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare);
        -:  212:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  213:
    #####:  214:  while (state->deckCount[player] > 0) {
    #####:  215:    card = floor(Random() * state->deckCount[player]);
    #####:  216:    newDeck[newDeckPos] = state->deck[player][card];
    #####:  217:    newDeckPos++;
    #####:  218:    for (i = card; i < state->deckCount[player]-1; i++) {
    #####:  219:      state->deck[player][i] = state->deck[player][i+1];
        -:  220:    }
    #####:  221:    state->deckCount[player]--;
        -:  222:  }
    #####:  223:  for (i = 0; i < newDeckPos; i++) {
    #####:  224:    state->deck[player][i] = newDeck[i];
    #####:  225:    state->deckCount[player]++;
        -:  226:  }
        -:  227:
    #####:  228:  return 0;
        -:  229:}
        -:  230:
    #####:  231:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state)
        -:  232:{
        -:  233:  int card;
    #####:  234:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  235:
        -:  236:  //check if it is the right phase
    #####:  237:  if (state->phase != 0)
        -:  238:    {
    #####:  239:      return -1;
        -:  240:    }
        -:  241:
        -:  242:  //check if player has enough actions
    #####:  243:  if ( state->numActions < 1 )
        -:  244:    {
    #####:  245:      return -1;
        -:  246:    }
        -:  247:
        -:  248:  //get card played
    #####:  249:  card = handCard(handPos, state);
        -:  250:
        -:  251:  //check if selected card is an action
    #####:  252:  if ( card < adventurer || card > treasure_map )
        -:  253:    {
    #####:  254:      return -1;
        -:  255:    }
        -:  256:
        -:  257:  //play card
    #####:  258:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
        -:  259:    {
    #####:  260:      return -1;
        -:  261:    }
        -:  262:
        -:  263:  //reduce number of actions
    #####:  264:  state->numActions--;
        -:  265:
        -:  266:  //update coins (Treasure cards may be added with card draws)
    #####:  267:  updateCoins(state->whoseTurn, state, coin_bonus);
        -:  268:
    #####:  269:  return 0;
        -:  270:}
        -:  271:
    #####:  272:int buyCard(int supplyPos, struct gameState *state) {
        -:  273:  int who;
        -:  274:  if (DEBUG){
        -:  275:    printf("Entering buyCard...\n");
        -:  276:  }
        -:  277:
        -:  278:  // I don't know what to do about the phase thing.
        -:  279:
    #####:  280:  who = state->whoseTurn;
        -:  281:
    #####:  282:  if (state->numBuys < 1){
        -:  283:    if (DEBUG)
        -:  284:      printf("You do not have any buys left\n");
    #####:  285:    return -1;
    #####:  286:  } else if (supplyCount(supplyPos, state) <1){
        -:  287:    if (DEBUG)
        -:  288:      printf("There are not any of that type of card left\n");
    #####:  289:    return -1;
    #####:  290:  } else if (state->coins < getCost(supplyPos)){
        -:  291:    if (DEBUG)
        -:  292:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  293:    return -1;
        -:  294:  } else {
    #####:  295:    state->phase=1;
        -:  296:    //state->supplyCount[supplyPos]--;
    #####:  297:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  298:
    #####:  299:    state->coins = (state->coins) - (getCost(supplyPos));
    #####:  300:    state->numBuys--;
        -:  301:    if (DEBUG)
        -:  302:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  303:  }
        -:  304:
        -:  305:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  306:  //state->discardCount[who]++;
        -:  307:
    #####:  308:  return 0;
        -:  309:}
        -:  310:
       12:  311:int numHandCards(struct gameState *state) {
       12:  312:  return state->handCount[ whoseTurn(state) ];
        -:  313:}
        -:  314:
    #####:  315:int handCard(int handPos, struct gameState *state) {
    #####:  316:  int currentPlayer = whoseTurn(state);
    #####:  317:  return state->hand[currentPlayer][handPos];
        -:  318:}
        -:  319:
    #####:  320:int supplyCount(int card, struct gameState *state) {
    #####:  321:  return state->supplyCount[card];
        -:  322:}
        -:  323:
    #####:  324:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  325:  int i;
    #####:  326:  int count = 0;
        -:  327:
    #####:  328:  for (i = 0; i < state->deckCount[player]; i++)
        -:  329:    {
    #####:  330:      if (state->deck[player][i] == card) count++;
        -:  331:    }
        -:  332:
    #####:  333:  for (i = 0; i < state->handCount[player]; i++)
        -:  334:    {
    #####:  335:      if (state->hand[player][i] == card) count++;
        -:  336:    }
        -:  337:
    #####:  338:  for (i = 0; i < state->discardCount[player]; i++)
        -:  339:    {
    #####:  340:      if (state->discard[player][i] == card) count++;
        -:  341:    }
        -:  342:
    #####:  343:  return count;
        -:  344:}
        -:  345:
     4012:  346:int whoseTurn(struct gameState *state) {
     4012:  347:  return state->whoseTurn;
        -:  348:}
        -:  349:
    #####:  350:int endTurn(struct gameState *state) {
        -:  351:  int k;
        -:  352:  int i;
    #####:  353:  int currentPlayer = whoseTurn(state);
        -:  354:
        -:  355:  //Discard hand
    #####:  356:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    #####:  357:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  358:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  359:  }
    #####:  360:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  361:
        -:  362:  //Code for determining the player
    #####:  363:  if (currentPlayer < (state->numPlayers - 1)){
    #####:  364:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  365:  }
        -:  366:  else{
    #####:  367:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  368:  }
        -:  369:
    #####:  370:  state->outpostPlayed = 0;
    #####:  371:  state->phase = 0;
    #####:  372:  state->numActions = 1;
    #####:  373:  state->coins = 0;
    #####:  374:  state->numBuys = 1;
    #####:  375:  state->playedCardCount = 0;
    #####:  376:  state->handCount[state->whoseTurn] = 0;
        -:  377:
        -:  378:  //int k; move to top
        -:  379:  //Next player draws hand
    #####:  380:  for (k = 0; k < 5; k++){
    #####:  381:    drawCard(state->whoseTurn, state);//Draw a card
        -:  382:  }
        -:  383:
        -:  384:  //Update money
    #####:  385:  updateCoins(state->whoseTurn, state , 0);
        -:  386:
    #####:  387:  return 0;
        -:  388:}
        -:  389:
     1002:  390:int isGameOver(struct gameState *state) {
        -:  391:  int i;
        -:  392:  int j;
        -:  393:
        -:  394:  //if stack of Province cards is empty, the game ends
     1002:  395:  if (state->supplyCount[province] == 0)
        -:  396:    {
      124:  397:      return 1;
        -:  398:    }
        -:  399:
        -:  400:  //if three supply pile are at 0, the game ends
      878:  401:  j = 0;
    22828:  402:  for (i = 0; i < 25; i++)
        -:  403:    {
    21950:  404:      if (state->supplyCount[i] == 0)
        -:  405:	{
     2631:  406:	  j++;
        -:  407:	}
        -:  408:    }
      878:  409:  if ( j >= 3)
        -:  410:    {
      877:  411:      return 1;
        -:  412:    }
        -:  413:
        1:  414:  return 0;
        -:  415:}
        -:  416:
    #####:  417:int scoreFor (int player, struct gameState *state) {
        -:  418:
        -:  419:  int i;
    #####:  420:  int score = 0;
        -:  421:  //score from hand
    #####:  422:  for (i = 0; i < state->handCount[player]; i++)
        -:  423:    {
    #####:  424:      if (state->hand[player][i] == curse) { score = score - 1; };
    #####:  425:      if (state->hand[player][i] == estate) { score = score + 1; };
    #####:  426:      if (state->hand[player][i] == duchy) { score = score + 3; };
    #####:  427:      if (state->hand[player][i] == province) { score = score + 6; };
    #####:  428:      if (state->hand[player][i] == great_hall) { score = score + 1; };
    #####:  429:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  430:    }
        -:  431:
        -:  432:  //score from discard
    #####:  433:  for (i = 0; i < state->discardCount[player]; i++)
        -:  434:    {
    #####:  435:      if (state->discard[player][i] == curse) { score = score - 1; };
    #####:  436:      if (state->discard[player][i] == estate) { score = score + 1; };
    #####:  437:      if (state->discard[player][i] == duchy) { score = score + 3; };
    #####:  438:      if (state->discard[player][i] == province) { score = score + 6; };
    #####:  439:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    #####:  440:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  441:    }
        -:  442:
        -:  443:  //score from deck
    #####:  444:  for (i = 0; i < state->discardCount[player]; i++)
        -:  445:    {
    #####:  446:      if (state->deck[player][i] == curse) { score = score - 1; };
    #####:  447:      if (state->deck[player][i] == estate) { score = score + 1; };
    #####:  448:      if (state->deck[player][i] == duchy) { score = score + 3; };
    #####:  449:      if (state->deck[player][i] == province) { score = score + 6; };
    #####:  450:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    #####:  451:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  452:    }
        -:  453:
    #####:  454:  return score;
        -:  455:}
        -:  456:
    #####:  457:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  458:  int i;
        -:  459:  int j;
        -:  460:  int highScore;
        -:  461:  int currentPlayer;
        -:  462:
        -:  463:  //get score for each player
    #####:  464:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  465:    {
        -:  466:      //set unused player scores to -9999
    #####:  467:      if (i >= state->numPlayers)
        -:  468:	{
    #####:  469:	  players[i] = -9999;
        -:  470:	}
        -:  471:      else
        -:  472:	{
    #####:  473:	  players[i] = scoreFor (i, state);
        -:  474:	}
        -:  475:    }
        -:  476:
        -:  477:  //find highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  480:    {
    #####:  481:      if (players[i] > players[j])
        -:  482:	{
    #####:  483:	  j = i;
        -:  484:	}
        -:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //add 1 to players who had less turns
    #####:  489:  currentPlayer = whoseTurn(state);
    #####:  490:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  491:    {
    #####:  492:      if ( players[i] == highScore && i > currentPlayer )
        -:  493:	{
    #####:  494:	  players[i]++;
        -:  495:	}
        -:  496:    }
        -:  497:
        -:  498:  //find new highest score
    #####:  499:  j = 0;
    #####:  500:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  501:    {
    #####:  502:      if ( players[i] > players[j] )
        -:  503:	{
    #####:  504:	  j = i;
        -:  505:	}
        -:  506:    }
    #####:  507:  highScore = players[j];
        -:  508:
        -:  509:  //set winners in array to 1 and rest to 0
    #####:  510:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  511:    {
    #####:  512:      if ( players[i] == highScore )
        -:  513:	{
    #####:  514:	  players[i] = 1;
        -:  515:	}
        -:  516:      else
        -:  517:	{
    #####:  518:	  players[i] = 0;
        -:  519:	}
        -:  520:    }
        -:  521:
    #####:  522:  return 0;
        -:  523:}
        -:  524:
    12000:  525:int drawCard(int player, struct gameState *state)
        -:  526:{	int count;
        -:  527:  int deckCounter;
    12000:  528:  if (state->deckCount[player] <= 0){//Deck is empty
        -:  529:
        -:  530:    //Step 1 Shuffle the discard pile back into a deck
        -:  531:    int i;
        -:  532:    //Move discard to deck
    #####:  533:    for (i = 0; i < state->discardCount[player];i++){
    #####:  534:      state->deck[player][i] = state->discard[player][i];
    #####:  535:      state->discard[player][i] = -1;
        -:  536:    }
        -:  537:
    #####:  538:    state->deckCount[player] = state->discardCount[player];
    #####:  539:    state->discardCount[player] = 0;//Reset discard
        -:  540:
        -:  541:    //Shufffle the deck
    #####:  542:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
        -:  543:
        -:  544:    if (DEBUG){//Debug statements
        -:  545:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  546:    }
        -:  547:
    #####:  548:    state->discardCount[player] = 0;
        -:  549:
        -:  550:    //Step 2 Draw Card
    #####:  551:    count = state->handCount[player];//Get current player's hand count
        -:  552:
        -:  553:    if (DEBUG){//Debug statements
        -:  554:      printf("Current hand count: %d\n", count);
        -:  555:    }
        -:  556:
    #####:  557:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  558:
    #####:  559:    if (deckCounter == 0)
    #####:  560:      return -1;
        -:  561:
    #####:  562:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    #####:  563:    state->deckCount[player]--;
    #####:  564:    state->handCount[player]++;//Increment hand count
        -:  565:  }
        -:  566:
        -:  567:  else{
    12000:  568:    int count = state->handCount[player];//Get current hand count for player
        -:  569:    int deckCounter;
        -:  570:    if (DEBUG){//Debug statements
        -:  571:      printf("Current hand count: %d\n", count);
        -:  572:    }
        -:  573:
    12000:  574:    deckCounter = state->deckCount[player];//Create holder for the deck count
    12000:  575:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
    12000:  576:    state->deckCount[player]--;
    12000:  577:    state->handCount[player]++;//Increment hand count
        -:  578:  }
        -:  579:
    12000:  580:  return 0;
        -:  581:}
        -:  582:
       35:  583:int getCost(int cardNumber)
        -:  584:{
       35:  585:  switch( cardNumber )
        -:  586:    {
        -:  587:    case curse:
        1:  588:      return 0;
        -:  589:    case estate:
        1:  590:      return 2;
        -:  591:    case duchy:
        1:  592:      return 5;
        -:  593:    case province:
        1:  594:      return 8;
        -:  595:    case copper:
        1:  596:      return 0;
        -:  597:    case silver:
        1:  598:      return 3;
        -:  599:    case gold:
        1:  600:      return 6;
        -:  601:    case adventurer:
        1:  602:      return 6;
        -:  603:    case council_room:
        1:  604:      return 5;
        -:  605:    case feast:
        1:  606:      return 4;
        -:  607:    case gardens:
        1:  608:      return 4;
        -:  609:    case mine:
        1:  610:      return 5;
        -:  611:    case remodel:
        1:  612:      return 4;
        -:  613:    case smithy:
        1:  614:      return 4;
        -:  615:    case village:
        1:  616:      return 3;
        -:  617:    case baron:
        1:  618:      return 4;
        -:  619:    case great_hall:
        1:  620:      return 3;
        -:  621:    case minion:
        1:  622:      return 5;
        -:  623:    case steward:
        1:  624:      return 3;
        -:  625:    case tribute:
        1:  626:      return 5;
        -:  627:    case ambassador:
        1:  628:      return 3;
        -:  629:    case cutpurse:
        1:  630:      return 4;
        -:  631:    case embargo:
        1:  632:      return 2;
        -:  633:    case outpost:
        1:  634:      return 5;
        -:  635:    case salvager:
        1:  636:      return 4;
        -:  637:    case sea_hag:
        1:  638:      return 4;
        -:  639:    case treasure_map:
        1:  640:      return 4;
        -:  641:    }
        -:  642:
        8:  643:  return -1;
        -:  644:}
        -:  645:
    #####:  646:void adventurer_action (int drawntreasure, struct gameState *state, int currentPlayer, int cardDrawn, int temphand[MAX_HAND], int z) {
    #####:  647:    while(drawntreasure<2){
    #####:  648:        if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
    #####:  649:            shuffle(currentPlayer, state);
        -:  650:        }
    #####:  651:        drawCard(currentPlayer, state);
    #####:  652:        cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
    #####:  653:        if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
    #####:  654:          drawntreasure++;
        -:  655:        else{
    #####:  656:          temphand[z]=cardDrawn;
    #####:  657:          state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
        -:  658:        }
        -:  659:  }
    #####:  660:  while(z-1>=0){
    #####:  661:      state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    #####:  662:      z=z-1;
        -:  663:  }
    #####:  664:}
        -:  665:
     4000:  666:void smithy_action (int currentPlayer, struct gameState *state, int i, int handPos) {
        -:  667:  //+3 Cards
    16000:  668:  for (i = 0; i < 3; i++) {
    12000:  669:    drawCard(currentPlayer, state);
        -:  670:  }
        -:  671:
        -:  672:  //discard card from hand
     4000:  673:  discardCard(handPos, currentPlayer, state, 0);
     4000:  674:}
        -:  675:
    #####:  676:void village_action (int currentPlayer, struct gameState *state, int handPos) {
        -:  677:  //+1 Card
    #####:  678:  drawCard(currentPlayer, state);
        -:  679:
        -:  680:  //+2 Actions
    #####:  681:  state->numActions = state->numActions + 2;
        -:  682:
        -:  683:  //discard played card from hand
    #####:  684:  discardCard(handPos, currentPlayer, state, 0);
    #####:  685:}
        -:  686:
    #####:  687:void council_room_action (int i, int currentPlayer, struct gameState *state) {
        -:  688:  //+4 Cards
    #####:  689:  for (i = 0; i < 4; i++) {
    #####:  690:      drawCard(currentPlayer, state);
        -:  691:  }
        -:  692:
        -:  693:  //+1 Buy
    #####:  694:  state->numBuys++;
        -:  695:
        -:  696:  //Each other player draws a card
    #####:  697:  for (i = 0; i < state->numPlayers; i++) {
    #####:  698:      if ( i == currentPlayer ) {
    #####:  699:          drawCard(i, state);
        -:  700:      }
        -:  701:  }
    #####:  702:}
        -:  703:
    #####:  704:int mine_action (int j, struct gameState *state, int currentPlayer, int choice1, int choice2, int handPos, int i) {
    #####:  705:  j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  706:
    #####:  707:  if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold) {
    #####:  708:      return -1;
        -:  709:  }
        -:  710:
    #####:  711:  if (choice2 > treasure_map || choice2 < curse) {
    #####:  712:      return -1;
        -:  713:  }
        -:  714:
    #####:  715:  if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) ) {
    #####:  716:      return -1;
        -:  717:  }
        -:  718:
    #####:  719:  gainCard(choice2, state, 2, currentPlayer);
        -:  720:
        -:  721:  //discard card from hand
    #####:  722:  discardCard(handPos, currentPlayer, state, 0);
        -:  723:
        -:  724:  //discard trashed card
    #####:  725:  for (i = 0; i < state->handCount[currentPlayer]; i++) {
    #####:  726:      if (state->hand[currentPlayer][i] == j) {
    #####:  727:        discardCard(i, currentPlayer, state, 0);
    #####:  728:        break;
        -:  729:      }
        -:  730:  }
        -:  731:
    #####:  732:  return -1;
        -:  733:}
        -:  734:
     4000:  735:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  736:{
        -:  737:  int i;
        -:  738:  int j;
        -:  739:  int k;
        -:  740:  int x;
        -:  741:  int m;
        -:  742:  int index;
     4000:  743:  int currentPlayer = whoseTurn(state);
     4000:  744:  int nextPlayer = currentPlayer + 1;
        -:  745:
     4000:  746:  int tributeRevealedCards[2] = {-1, -1};
        -:  747:  int temphand[MAX_HAND];// moved above the if statement
     4000:  748:  int drawntreasure=0;
        -:  749:  int cardDrawn;
     4000:  750:  int z = 0;// this is the counter for the temp hand
     4000:  751:  if (nextPlayer > (state->numPlayers - 1)){
     4000:  752:    nextPlayer = 0;
        -:  753:  }
        -:  754:
        -:  755:
        -:  756:  //uses switch to select card and perform actions
     4000:  757:  switch( card )
        -:  758:    {
        -:  759:    case adventurer:
    #####:  760:      adventurer_action (drawntreasure, state, currentPlayer, cardDrawn, temphand, z);
    #####:  761:      return 0;
        -:  762:
        -:  763:    case council_room:
    #####:  764:      council_room_action (i, currentPlayer, state);
    #####:  765:      return 0;
        -:  766:
        -:  767:    case feast:
        -:  768:      //gain card with cost up to 5
        -:  769:      //Backup hand
    #####:  770:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  771:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  772:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  773:      }
        -:  774:      //Backup hand
        -:  775:
        -:  776:      //Update Coins for Buy
    #####:  777:      updateCoins(currentPlayer, state, 5);
    #####:  778:      x = 1;//Condition to loop on
    #####:  779:      while( x == 1) {//Buy one card
    #####:  780:	if (supplyCount(choice1, state) <= 0){
        -:  781:	  if (DEBUG)
        -:  782:	    printf("None of that card left, sorry!\n");
        -:  783:
        -:  784:	  if (DEBUG){
        -:  785:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  786:	  }
        -:  787:	}
    #####:  788:	else if (state->coins < getCost(choice1)){
    #####:  789:	  printf("That card is too expensive!\n");
        -:  790:
        -:  791:	  if (DEBUG){
        -:  792:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  793:	  }
        -:  794:	}
        -:  795:	else{
        -:  796:
        -:  797:	  if (DEBUG){
        -:  798:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  799:	  }
        -:  800:
    #####:  801:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    #####:  802:	  x = 0;//No more buying cards
        -:  803:
        -:  804:	  if (DEBUG){
        -:  805:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  806:	  }
        -:  807:
        -:  808:	}
        -:  809:      }
        -:  810:
        -:  811:      //Reset Hand
    #####:  812:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  813:	state->hand[currentPlayer][i] = temphand[i];
    #####:  814:	temphand[i] = -1;
        -:  815:      }
        -:  816:      //Reset Hand
        -:  817:
    #####:  818:      return 0;
        -:  819:
        -:  820:    case gardens:
    #####:  821:      return -1;
        -:  822:
        -:  823:    case mine:
    #####:  824:      m = mine_action (j, state, currentPlayer, choice1, choice2, handPos, i);
    #####:  825:      return m;
        -:  826:
        -:  827:    case remodel:
    #####:  828:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  829:
    #####:  830:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
        -:  831:	{
    #####:  832:	  return -1;
        -:  833:	}
        -:  834:
    #####:  835:      gainCard(choice2, state, 0, currentPlayer);
        -:  836:
        -:  837:      //discard card from hand
    #####:  838:      discardCard(handPos, currentPlayer, state, 0);
        -:  839:
        -:  840:      //discard trashed card
    #####:  841:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  842:	{
    #####:  843:	  if (state->hand[currentPlayer][i] == j)
        -:  844:	    {
    #####:  845:	      discardCard(i, currentPlayer, state, 0);
    #####:  846:	      break;
        -:  847:	    }
        -:  848:	}
        -:  849:
        -:  850:
    #####:  851:      return 0;
        -:  852:
        -:  853:    case smithy:
     4000:  854:      smithy_action (currentPlayer, state, i, handPos);
     4000:  855:      return 0;
        -:  856:
        -:  857:    case village:
    #####:  858:      village_action (currentPlayer, state, handPos);
    #####:  859:      return 0;
        -:  860:
        -:  861:    case baron:
    #####:  862:      state->numBuys++;//Increase buys by 1!
    #####:  863:      if (choice1 > 0){//Boolean true or going to discard an estate
    #####:  864:	int p = 0;//Iterator for hand!
    #####:  865:	int card_not_discarded = 1;//Flag for discard set!
    #####:  866:	while(card_not_discarded){
    #####:  867:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    #####:  868:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  869:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  870:	    state->discardCount[currentPlayer]++;
    #####:  871:	    for (;p < state->handCount[currentPlayer]; p++){
    #####:  872:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  873:	    }
    #####:  874:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  875:	    state->handCount[currentPlayer]--;
    #####:  876:	    card_not_discarded = 0;//Exit the loop
        -:  877:	  }
    #####:  878:	  else if (p > state->handCount[currentPlayer]){
        -:  879:	    if(DEBUG) {
        -:  880:	      printf("No estate cards in your hand, invalid choice\n");
        -:  881:	      printf("Must gain an estate if there are any\n");
        -:  882:	    }
    #####:  883:	    if (supplyCount(estate, state) > 0){
    #####:  884:	      gainCard(estate, state, 0, currentPlayer);
    #####:  885:	      state->supplyCount[estate]--;//Decrement estates
    #####:  886:	      if (supplyCount(estate, state) == 0){
    #####:  887:		isGameOver(state);
        -:  888:	      }
        -:  889:	    }
    #####:  890:	    card_not_discarded = 0;//Exit the loop
        -:  891:	  }
        -:  892:
        -:  893:	  else{
    #####:  894:	    p++;//Next card
        -:  895:	  }
        -:  896:	}
        -:  897:      }
        -:  898:
        -:  899:      else{
    #####:  900:	if (supplyCount(estate, state) > 0){
    #####:  901:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
    #####:  902:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  903:	  if (supplyCount(estate, state) == 0){
    #####:  904:	    isGameOver(state);
        -:  905:	  }
        -:  906:	}
        -:  907:      }
        -:  908:
        -:  909:
    #####:  910:      return 0;
        -:  911:
        -:  912:    case great_hall:
        -:  913:      //+1 Card
    #####:  914:      drawCard(currentPlayer, state);
        -:  915:
        -:  916:      //+1 Actions
    #####:  917:      state->numActions++;
        -:  918:
        -:  919:      //discard card from hand
    #####:  920:      discardCard(handPos, currentPlayer, state, 0);
    #####:  921:      return 0;
        -:  922:
        -:  923:    case minion:
        -:  924:      //+1 action
    #####:  925:      state->numActions++;
        -:  926:
        -:  927:      //discard card from hand
    #####:  928:      discardCard(handPos, currentPlayer, state, 0);
        -:  929:
    #####:  930:      if (choice1)		//+2 coins
        -:  931:	{
    #####:  932:	  state->coins = state->coins + 2;
        -:  933:	}
        -:  934:
    #####:  935:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
        -:  936:	{
        -:  937:	  //discard hand
    #####:  938:	  while(numHandCards(state) > 0)
        -:  939:	    {
    #####:  940:	      discardCard(handPos, currentPlayer, state, 0);
        -:  941:	    }
        -:  942:
        -:  943:	  //draw 4
    #####:  944:	  for (i = 0; i < 4; i++)
        -:  945:	    {
    #####:  946:	      drawCard(currentPlayer, state);
        -:  947:	    }
        -:  948:
        -:  949:	  //other players discard hand and redraw if hand size > 4
    #####:  950:	  for (i = 0; i < state->numPlayers; i++)
        -:  951:	    {
    #####:  952:	      if (i != currentPlayer)
        -:  953:		{
    #####:  954:		  if ( state->handCount[i] > 4 )
        -:  955:		    {
        -:  956:		      //discard hand
    #####:  957:		      while( state->handCount[i] > 0 )
        -:  958:			{
    #####:  959:			  discardCard(handPos, i, state, 0);
        -:  960:			}
        -:  961:
        -:  962:		      //draw 4
    #####:  963:		      for (j = 0; j < 4; j++)
        -:  964:			{
    #####:  965:			  drawCard(i, state);
        -:  966:			}
        -:  967:		    }
        -:  968:		}
        -:  969:	    }
        -:  970:
        -:  971:	}
    #####:  972:      return 0;
        -:  973:
        -:  974:    case steward:
    #####:  975:      if (choice1 == 1)
        -:  976:	{
        -:  977:	  //+2 cards
    #####:  978:	  drawCard(currentPlayer, state);
    #####:  979:	  drawCard(currentPlayer, state);
        -:  980:	}
    #####:  981:      else if (choice1 == 2)
        -:  982:	{
        -:  983:	  //+2 coins
    #####:  984:	  state->coins = state->coins + 2;
        -:  985:	}
        -:  986:      else
        -:  987:	{
        -:  988:	  //trash 2 cards in hand
    #####:  989:	  discardCard(choice2, currentPlayer, state, 1);
    #####:  990:	  discardCard(choice3, currentPlayer, state, 1);
        -:  991:	}
        -:  992:
        -:  993:      //discard card from hand
    #####:  994:      discardCard(handPos, currentPlayer, state, 0);
    #####:  995:      return 0;
        -:  996:
        -:  997:    case tribute:
    #####:  998:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    #####:  999:	if (state->deckCount[nextPlayer] > 0){
    #####: 1000:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1001:	  state->deckCount[nextPlayer]--;
        -: 1002:	}
    #####: 1003:	else if (state->discardCount[nextPlayer] > 0){
    #####: 1004:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1005:	  state->discardCount[nextPlayer]--;
        -: 1006:	}
        -: 1007:	else{
        -: 1008:	  //No Card to Reveal
        -: 1009:	  if (DEBUG){
        -: 1010:	    printf("No cards to reveal\n");
        -: 1011:	  }
        -: 1012:	}
        -: 1013:      }
        -: 1014:
        -: 1015:      else{
    #####: 1016:	if (state->deckCount[nextPlayer] == 0){
    #####: 1017:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    #####: 1018:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1019:	    state->deckCount[nextPlayer]++;
    #####: 1020:	    state->discard[nextPlayer][i] = -1;
    #####: 1021:	    state->discardCount[nextPlayer]--;
        -: 1022:	  }
        -: 1023:
    #####: 1024:	  shuffle(nextPlayer,state);//Shuffle the deck
        -: 1025:	}
    #####: 1026:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1027:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1028:	state->deckCount[nextPlayer]--;
    #####: 1029:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1030:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1031:	state->deckCount[nextPlayer]--;
        -: 1032:      }
        -: 1033:
    #####: 1034:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one
    #####: 1035:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1036:	state->playedCardCount++;
    #####: 1037:	tributeRevealedCards[1] = -1;
        -: 1038:      }
        -: 1039:
    #####: 1040:      for (i = 0; i <= 2; i ++){
    #####: 1041:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    #####: 1042:	  state->coins += 2;
        -: 1043:	}
        -: 1044:
    #####: 1045:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    #####: 1046:	  drawCard(currentPlayer, state);
    #####: 1047:	  drawCard(currentPlayer, state);
        -: 1048:	}
        -: 1049:	else{//Action Card
    #####: 1050:	  state->numActions = state->numActions + 2;
        -: 1051:	}
        -: 1052:      }
        -: 1053:
    #####: 1054:      return 0;
        -: 1055:
        -: 1056:    case ambassador:
    #####: 1057:      j = 0;		//used to check if player has enough cards to discard
        -: 1058:
    #####: 1059:      if (choice2 > 2 || choice2 < 0)
        -: 1060:	{
    #####: 1061:	  return -1;
        -: 1062:	}
        -: 1063:
    #####: 1064:      if (choice1 == handPos)
        -: 1065:	{
    #####: 1066:	  return -1;
        -: 1067:	}
        -: 1068:
    #####: 1069:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1070:	{
    #####: 1071:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
        -: 1072:	    {
    #####: 1073:	      j++;
        -: 1074:	    }
        -: 1075:	}
    #####: 1076:      if (j < choice2)
        -: 1077:	{
    #####: 1078:	  return -1;
        -: 1079:	}
        -: 1080:
        -: 1081:      if (DEBUG)
        -: 1082:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1083:
        -: 1084:      //increase supply count for choosen card by amount being discarded
    #####: 1085:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1086:
        -: 1087:      //each other player gains a copy of revealed card
    #####: 1088:      for (i = 0; i < state->numPlayers; i++)
        -: 1089:	{
    #####: 1090:	  if (i != currentPlayer)
        -: 1091:	    {
    #####: 1092:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
        -: 1093:	    }
        -: 1094:	}
        -: 1095:
        -: 1096:      //discard played card from hand
    #####: 1097:      discardCard(handPos, currentPlayer, state, 0);
        -: 1098:
        -: 1099:      //trash copies of cards returned to supply
    #####: 1100:      for (j = 0; j < choice2; j++)
        -: 1101:	{
    #####: 1102:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1103:	    {
    #####: 1104:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
        -: 1105:		{
    #####: 1106:		  discardCard(i, currentPlayer, state, 1);
    #####: 1107:		  break;
        -: 1108:		}
        -: 1109:	    }
        -: 1110:	}
        -: 1111:
    #####: 1112:      return 0;
        -: 1113:
        -: 1114:    case cutpurse:
        -: 1115:
    #####: 1116:      updateCoins(currentPlayer, state, 2);
    #####: 1117:      for (i = 0; i < state->numPlayers; i++)
        -: 1118:	{
    #####: 1119:	  if (i != currentPlayer)
        -: 1120:	    {
    #####: 1121:	      for (j = 0; j < state->handCount[i]; j++)
        -: 1122:		{
    #####: 1123:		  if (state->hand[i][j] == copper)
        -: 1124:		    {
    #####: 1125:		      discardCard(j, i, state, 0);
    #####: 1126:		      break;
        -: 1127:		    }
    #####: 1128:		  if (j == state->handCount[i])
        -: 1129:		    {
    #####: 1130:		      for (k = 0; k < state->handCount[i]; k++)
        -: 1131:			{
        -: 1132:			  if (DEBUG)
        -: 1133:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1134:			}
    #####: 1135:		      break;
        -: 1136:		    }
        -: 1137:		}
        -: 1138:
        -: 1139:	    }
        -: 1140:
        -: 1141:	}
        -: 1142:
        -: 1143:      //discard played card from hand
    #####: 1144:      discardCard(handPos, currentPlayer, state, 0);
        -: 1145:
    #####: 1146:      return 0;
        -: 1147:
        -: 1148:
        -: 1149:    case embargo:
        -: 1150:      //+2 Coins
    #####: 1151:      state->coins = state->coins + 2;
        -: 1152:
        -: 1153:      //see if selected pile is in play
    #####: 1154:      if ( state->supplyCount[choice1] == -1 )
        -: 1155:	{
    #####: 1156:	  return -1;
        -: 1157:	}
        -: 1158:
        -: 1159:      //add embargo token to selected supply pile
    #####: 1160:      state->embargoTokens[choice1]++;
        -: 1161:
        -: 1162:      //trash card
    #####: 1163:      discardCard(handPos, currentPlayer, state, 1);
    #####: 1164:      return 0;
        -: 1165:
        -: 1166:    case outpost:
        -: 1167:      //set outpost flag
    #####: 1168:      state->outpostPlayed++;
        -: 1169:
        -: 1170:      //discard card
    #####: 1171:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1172:      return 0;
        -: 1173:
        -: 1174:    case salvager:
        -: 1175:      //+1 buy
    #####: 1176:      state->numBuys++;
        -: 1177:
    #####: 1178:      if (choice1)
        -: 1179:	{
        -: 1180:	  //gain coins equal to trashed card
    #####: 1181:	  state->coins = state->coins + getCost( handCard(choice1, state) );
        -: 1182:	  //trash card
    #####: 1183:	  discardCard(choice1, currentPlayer, state, 1);
        -: 1184:	}
        -: 1185:
        -: 1186:      //discard card
    #####: 1187:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1188:      return 0;
        -: 1189:
        -: 1190:    case sea_hag:
    #####: 1191:      for (i = 0; i < state->numPlayers; i++){
    #####: 1192:	if (i != currentPlayer){
    #####: 1193:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1194:	  state->discardCount[i]++;
    #####: 1195:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1196:	}
        -: 1197:      }
    #####: 1198:      return 0;
        -: 1199:
        -: 1200:    case treasure_map:
        -: 1201:      //search hand for another treasure_map
    #####: 1202:      index = -1;
    #####: 1203:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1204:	{
    #####: 1205:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
        -: 1206:	    {
    #####: 1207:	      index = i;
    #####: 1208:	      break;
        -: 1209:	    }
        -: 1210:	}
    #####: 1211:      if (index > -1)
        -: 1212:	{
        -: 1213:	  //trash both treasure cards
    #####: 1214:	  discardCard(handPos, currentPlayer, state, 1);
    #####: 1215:	  discardCard(index, currentPlayer, state, 1);
        -: 1216:
        -: 1217:	  //gain 4 Gold cards
    #####: 1218:	  for (i = 0; i < 4; i++)
        -: 1219:	    {
    #####: 1220:	      gainCard(gold, state, 1, currentPlayer);
        -: 1221:	    }
        -: 1222:
        -: 1223:	  //return success
    #####: 1224:	  return 1;
        -: 1225:	}
        -: 1226:
        -: 1227:      //no second treasure_map found in hand
    #####: 1228:      return -1;
        -: 1229:    }
        -: 1230:
    #####: 1231:  return -1;
        -: 1232:}
        -: 1233:
     4000: 1234:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1235:{
        -: 1236:
        -: 1237:  //if card is not trashed, added to Played pile
     4000: 1238:  if (trashFlag < 1)
        -: 1239:    {
        -: 1240:      //add card to played pile
     4000: 1241:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos];
     4000: 1242:      state->playedCardCount++;
        -: 1243:    }
        -: 1244:
        -: 1245:  //set played card to -1
     4000: 1246:  state->hand[currentPlayer][handPos] = -1;
        -: 1247:
        -: 1248:  //remove card from player's hand
     4000: 1249:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
        -: 1250:    {
        -: 1251:      //reduce number of cards in hand
    #####: 1252:      state->handCount[currentPlayer]--;
        -: 1253:    }
     4000: 1254:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
        -: 1255:    {
        -: 1256:      //reduce number of cards in hand
    #####: 1257:      state->handCount[currentPlayer]--;
        -: 1258:    }
        -: 1259:  else
        -: 1260:    {
        -: 1261:      //replace discarded card with last card in hand
     4000: 1262:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1263:      //set last card to -1
     4000: 1264:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1265:      //reduce number of cards in hand
     4000: 1266:      state->handCount[currentPlayer]--;
        -: 1267:    }
        -: 1268:
     4000: 1269:  return 0;
        -: 1270:}
        -: 1271:
    #####: 1272:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1273:{
        -: 1274:  //Note: supplyPos is enum of choosen card
        -: 1275:
        -: 1276:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1277:  if ( supplyCount(supplyPos, state) < 1 )
        -: 1278:    {
    #####: 1279:      return -1;
        -: 1280:    }
        -: 1281:
        -: 1282:  //added card for [whoseTurn] current player:
        -: 1283:  // toFlag = 0 : add to discard
        -: 1284:  // toFlag = 1 : add to deck
        -: 1285:  // toFlag = 2 : add to hand
        -: 1286:
    #####: 1287:  if (toFlag == 1)
        -: 1288:    {
    #####: 1289:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1290:      state->deckCount[player]++;
        -: 1291:    }
    #####: 1292:  else if (toFlag == 2)
        -: 1293:    {
    #####: 1294:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1295:      state->handCount[player]++;
        -: 1296:    }
        -: 1297:  else
        -: 1298:    {
    #####: 1299:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1300:      state->discardCount[player]++;
        -: 1301:    }
        -: 1302:
        -: 1303:  //decrease number in supply pile
    #####: 1304:  state->supplyCount[supplyPos]--;
        -: 1305:
    #####: 1306:  return 0;
        -: 1307:}
        -: 1308:
        8: 1309:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1310:{
        -: 1311:  int i;
        -: 1312:
        -: 1313:  //reset coin count
        8: 1314:  state->coins = 0;
        -: 1315:
        -: 1316:  //add coins for each Treasure card in player's hand
        8: 1317:  for (i = 0; i < state->handCount[player]; i++)
        -: 1318:    {
    #####: 1319:      if (state->hand[player][i] == copper)
        -: 1320:	{
    #####: 1321:	  state->coins += 1;
        -: 1322:	}
    #####: 1323:      else if (state->hand[player][i] == silver)
        -: 1324:	{
    #####: 1325:	  state->coins += 2;
        -: 1326:	}
    #####: 1327:      else if (state->hand[player][i] == gold)
        -: 1328:	{
    #####: 1329:	  state->coins += 3;
        -: 1330:	}
        -: 1331:    }
        -: 1332:
        -: 1333:  //add bonus
        8: 1334:  state->coins += bonus;
        -: 1335:
        8: 1336:  return 0;
        -: 1337:}
        -: 1338:
        -: 1339:
        -: 1340://end of dominion.c
cardtest2.c:
FAIL: Hand count after playing adventurer was not correct. Expected 6, got 7
File 'dominion.c'
Lines executed:32.26% of 561
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:6
        -:    0:Programs:6
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
       30:    8:int compare(const void* a, const void* b) {
       30:    9:  if (*(int*)a > *(int*)b)
    #####:   10:    return 1;
       30:   11:  if (*(int*)a < *(int*)b)
        8:   12:    return -1;
       22:   13:  return 0;
        -:   14:}
        -:   15:
    #####:   16:struct gameState* newGame() {
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
        -:   19:}
        -:   20:
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
        -:   35:}
        -:   36:
        1:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;
        -:   43:  //set up random number generator
        1:   44:  SelectStream(1);
        1:   45:  PutSeed((long)randomSeed);
        -:   46:
        -:   47:  //check number of players
        1:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
        1:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
       11:   57:  for (i = 0; i < 10; i++)
        -:   58:    {
      110:   59:      for (j = 0; j < 10; j++)
        -:   60:        {
      100:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
        1:   73:  if (numPlayers == 2)
        -:   74:    {
        1:   75:      state->supplyCount[curse] = 10;
        -:   76:    }
    #####:   77:  else if (numPlayers == 3)
        -:   78:    {
    #####:   79:      state->supplyCount[curse] = 20;
        -:   80:    }
        -:   81:  else
        -:   82:    {
    #####:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
        1:   87:  if (numPlayers == 2)
        -:   88:    {
        1:   89:      state->supplyCount[estate] = 8;
        1:   90:      state->supplyCount[duchy] = 8;
        1:   91:      state->supplyCount[province] = 8;
        -:   92:    }
        -:   93:  else
        -:   94:    {
    #####:   95:      state->supplyCount[estate] = 12;
    #####:   96:      state->supplyCount[duchy] = 12;
    #####:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
        1:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
        1:  102:  state->supplyCount[silver] = 40;
        1:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
       21:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
        -:  107:    {
      165:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
        -:  109:	{
      155:  110:	  if (kingdomCards[j] == i)
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
       10:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
        -:  114:		{
    #####:  115:		  if (numPlayers == 2){
    #####:  116:		    state->supplyCount[i] = 8;
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
        -:  119:		}
        -:  120:	      else
        -:  121:		{
       10:  122:		  state->supplyCount[i] = 10;
        -:  123:		}
       10:  124:	      break;
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
      145:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
        3:  138:  for (i = 0; i < numPlayers; i++)
        -:  139:    {
        2:  140:      state->deckCount[i] = 0;
        8:  141:      for (j = 0; j < 3; j++)
        -:  142:	{
        6:  143:	  state->deck[i][j] = estate;
        6:  144:	  state->deckCount[i]++;
        -:  145:	}
       16:  146:      for (j = 3; j < 10; j++)
        -:  147:	{
       14:  148:	  state->deck[i][j] = copper;
       14:  149:	  state->deckCount[i]++;
        -:  150:	}
        -:  151:    }
        -:  152:
        -:  153:  //shuffle player decks
        3:  154:  for (i = 0; i < numPlayers; i++)
        -:  155:    {
        2:  156:      if ( shuffle(i, state) < 0 )
        -:  157:	{
    #####:  158:	  return -1;
        -:  159:	}
        -:  160:    }
        -:  161:
        -:  162:  //draw player hands
        3:  163:  for (i = 0; i < numPlayers; i++)
        -:  164:    {
        -:  165:      //initialize hand size to zero
        2:  166:      state->handCount[i] = 0;
        2:  167:      state->discardCount[i] = 0;
        -:  168:      //draw 5 cards
        -:  169:      // for (j = 0; j < 5; j++)
        -:  170:      //	{
        -:  171:      //	  drawCard(i, state);
        -:  172:      //	}
        -:  173:    }
        -:  174:
        -:  175:  //set embargo tokens to 0 for all supply piles
       28:  176:  for (i = 0; i <= treasure_map; i++)
        -:  177:    {
       27:  178:      state->embargoTokens[i] = 0;
        -:  179:    }
        -:  180:
        -:  181:  //initialize first player's turn
        1:  182:  state->outpostPlayed = 0;
        1:  183:  state->phase = 0;
        1:  184:  state->numActions = 1;
        1:  185:  state->numBuys = 1;
        1:  186:  state->playedCardCount = 0;
        1:  187:  state->whoseTurn = 0;
        1:  188:  state->handCount[state->whoseTurn] = 0;
        -:  189:  //int it; move to top
        -:  190:
        -:  191:  //Moved draw cards to here, only drawing at the start of a turn
        6:  192:  for (it = 0; it < 5; it++){
        5:  193:    drawCard(state->whoseTurn, state);
        -:  194:  }
        -:  195:
        1:  196:  updateCoins(state->whoseTurn, state, 0);
        -:  197:
        1:  198:  return 0;
        -:  199:}
        -:  200:
        2:  201:int shuffle(int player, struct gameState *state) {
        -:  202:
        -:  203:
        -:  204:  int newDeck[MAX_DECK];
        2:  205:  int newDeckPos = 0;
        -:  206:  int card;
        -:  207:  int i;
        -:  208:
        2:  209:  if (state->deckCount[player] < 1)
    #####:  210:    return -1;
        2:  211:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare);
        -:  212:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  213:
       24:  214:  while (state->deckCount[player] > 0) {
       20:  215:    card = floor(Random() * state->deckCount[player]);
       20:  216:    newDeck[newDeckPos] = state->deck[player][card];
       20:  217:    newDeckPos++;
       72:  218:    for (i = card; i < state->deckCount[player]-1; i++) {
       52:  219:      state->deck[player][i] = state->deck[player][i+1];
        -:  220:    }
       20:  221:    state->deckCount[player]--;
        -:  222:  }
       22:  223:  for (i = 0; i < newDeckPos; i++) {
       20:  224:    state->deck[player][i] = newDeck[i];
       20:  225:    state->deckCount[player]++;
        -:  226:  }
        -:  227:
        2:  228:  return 0;
        -:  229:}
        -:  230:
    #####:  231:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state)
        -:  232:{
        -:  233:  int card;
    #####:  234:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  235:
        -:  236:  //check if it is the right phase
    #####:  237:  if (state->phase != 0)
        -:  238:    {
    #####:  239:      return -1;
        -:  240:    }
        -:  241:
        -:  242:  //check if player has enough actions
    #####:  243:  if ( state->numActions < 1 )
        -:  244:    {
    #####:  245:      return -1;
        -:  246:    }
        -:  247:
        -:  248:  //get card played
    #####:  249:  card = handCard(handPos, state);
        -:  250:
        -:  251:  //check if selected card is an action
    #####:  252:  if ( card < adventurer || card > treasure_map )
        -:  253:    {
    #####:  254:      return -1;
        -:  255:    }
        -:  256:
        -:  257:  //play card
    #####:  258:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
        -:  259:    {
    #####:  260:      return -1;
        -:  261:    }
        -:  262:
        -:  263:  //reduce number of actions
    #####:  264:  state->numActions--;
        -:  265:
        -:  266:  //update coins (Treasure cards may be added with card draws)
    #####:  267:  updateCoins(state->whoseTurn, state, coin_bonus);
        -:  268:
    #####:  269:  return 0;
        -:  270:}
        -:  271:
    #####:  272:int buyCard(int supplyPos, struct gameState *state) {
        -:  273:  int who;
        -:  274:  if (DEBUG){
        -:  275:    printf("Entering buyCard...\n");
        -:  276:  }
        -:  277:
        -:  278:  // I don't know what to do about the phase thing.
        -:  279:
    #####:  280:  who = state->whoseTurn;
        -:  281:
    #####:  282:  if (state->numBuys < 1){
        -:  283:    if (DEBUG)
        -:  284:      printf("You do not have any buys left\n");
    #####:  285:    return -1;
    #####:  286:  } else if (supplyCount(supplyPos, state) <1){
        -:  287:    if (DEBUG)
        -:  288:      printf("There are not any of that type of card left\n");
    #####:  289:    return -1;
    #####:  290:  } else if (state->coins < getCost(supplyPos)){
        -:  291:    if (DEBUG)
        -:  292:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  293:    return -1;
        -:  294:  } else {
    #####:  295:    state->phase=1;
        -:  296:    //state->supplyCount[supplyPos]--;
    #####:  297:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  298:
    #####:  299:    state->coins = (state->coins) - (getCost(supplyPos));
    #####:  300:    state->numBuys--;
        -:  301:    if (DEBUG)
        -:  302:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  303:  }
        -:  304:
        -:  305:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  306:  //state->discardCount[who]++;
        -:  307:
    #####:  308:  return 0;
        -:  309:}
        -:  310:
       12:  311:int numHandCards(struct gameState *state) {
       12:  312:  return state->handCount[ whoseTurn(state) ];
        -:  313:}
        -:  314:
    #####:  315:int handCard(int handPos, struct gameState *state) {
    #####:  316:  int currentPlayer = whoseTurn(state);
    #####:  317:  return state->hand[currentPlayer][handPos];
        -:  318:}
        -:  319:
    #####:  320:int supplyCount(int card, struct gameState *state) {
    #####:  321:  return state->supplyCount[card];
        -:  322:}
        -:  323:
    #####:  324:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  325:  int i;
    #####:  326:  int count = 0;
        -:  327:
    #####:  328:  for (i = 0; i < state->deckCount[player]; i++)
        -:  329:    {
    #####:  330:      if (state->deck[player][i] == card) count++;
        -:  331:    }
        -:  332:
    #####:  333:  for (i = 0; i < state->handCount[player]; i++)
        -:  334:    {
    #####:  335:      if (state->hand[player][i] == card) count++;
        -:  336:    }
        -:  337:
    #####:  338:  for (i = 0; i < state->discardCount[player]; i++)
        -:  339:    {
    #####:  340:      if (state->discard[player][i] == card) count++;
        -:  341:    }
        -:  342:
    #####:  343:  return count;
        -:  344:}
        -:  345:
     4013:  346:int whoseTurn(struct gameState *state) {
     4013:  347:  return state->whoseTurn;
        -:  348:}
        -:  349:
    #####:  350:int endTurn(struct gameState *state) {
        -:  351:  int k;
        -:  352:  int i;
    #####:  353:  int currentPlayer = whoseTurn(state);
        -:  354:
        -:  355:  //Discard hand
    #####:  356:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    #####:  357:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  358:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  359:  }
    #####:  360:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  361:
        -:  362:  //Code for determining the player
    #####:  363:  if (currentPlayer < (state->numPlayers - 1)){
    #####:  364:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  365:  }
        -:  366:  else{
    #####:  367:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  368:  }
        -:  369:
    #####:  370:  state->outpostPlayed = 0;
    #####:  371:  state->phase = 0;
    #####:  372:  state->numActions = 1;
    #####:  373:  state->coins = 0;
    #####:  374:  state->numBuys = 1;
    #####:  375:  state->playedCardCount = 0;
    #####:  376:  state->handCount[state->whoseTurn] = 0;
        -:  377:
        -:  378:  //int k; move to top
        -:  379:  //Next player draws hand
    #####:  380:  for (k = 0; k < 5; k++){
    #####:  381:    drawCard(state->whoseTurn, state);//Draw a card
        -:  382:  }
        -:  383:
        -:  384:  //Update money
    #####:  385:  updateCoins(state->whoseTurn, state , 0);
        -:  386:
    #####:  387:  return 0;
        -:  388:}
        -:  389:
     1002:  390:int isGameOver(struct gameState *state) {
        -:  391:  int i;
        -:  392:  int j;
        -:  393:
        -:  394:  //if stack of Province cards is empty, the game ends
     1002:  395:  if (state->supplyCount[province] == 0)
        -:  396:    {
      124:  397:      return 1;
        -:  398:    }
        -:  399:
        -:  400:  //if three supply pile are at 0, the game ends
      878:  401:  j = 0;
    22828:  402:  for (i = 0; i < 25; i++)
        -:  403:    {
    21950:  404:      if (state->supplyCount[i] == 0)
        -:  405:	{
     2631:  406:	  j++;
        -:  407:	}
        -:  408:    }
      878:  409:  if ( j >= 3)
        -:  410:    {
      877:  411:      return 1;
        -:  412:    }
        -:  413:
        1:  414:  return 0;
        -:  415:}
        -:  416:
        4:  417:int scoreFor (int player, struct gameState *state) {
        -:  418:
        -:  419:  int i;
        4:  420:  int score = 0;
        -:  421:  //score from hand
       16:  422:  for (i = 0; i < state->handCount[player]; i++)
        -:  423:    {
       12:  424:      if (state->hand[player][i] == curse) { score = score - 1; };
       12:  425:      if (state->hand[player][i] == estate) { score = score + 1; };
       12:  426:      if (state->hand[player][i] == duchy) { score = score + 3; };
       12:  427:      if (state->hand[player][i] == province) { score = score + 6; };
       12:  428:      if (state->hand[player][i] == great_hall) { score = score + 1; };
       12:  429:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  430:    }
        -:  431:
        -:  432:  //score from discard
        4:  433:  for (i = 0; i < state->discardCount[player]; i++)
        -:  434:    {
    #####:  435:      if (state->discard[player][i] == curse) { score = score - 1; };
    #####:  436:      if (state->discard[player][i] == estate) { score = score + 1; };
    #####:  437:      if (state->discard[player][i] == duchy) { score = score + 3; };
    #####:  438:      if (state->discard[player][i] == province) { score = score + 6; };
    #####:  439:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    #####:  440:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  441:    }
        -:  442:
        -:  443:  //score from deck
        4:  444:  for (i = 0; i < state->discardCount[player]; i++)
        -:  445:    {
    #####:  446:      if (state->deck[player][i] == curse) { score = score - 1; };
    #####:  447:      if (state->deck[player][i] == estate) { score = score + 1; };
    #####:  448:      if (state->deck[player][i] == duchy) { score = score + 3; };
    #####:  449:      if (state->deck[player][i] == province) { score = score + 6; };
    #####:  450:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    #####:  451:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  452:    }
        -:  453:
        4:  454:  return score;
        -:  455:}
        -:  456:
    #####:  457:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  458:  int i;
        -:  459:  int j;
        -:  460:  int highScore;
        -:  461:  int currentPlayer;
        -:  462:
        -:  463:  //get score for each player
    #####:  464:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  465:    {
        -:  466:      //set unused player scores to -9999
    #####:  467:      if (i >= state->numPlayers)
        -:  468:	{
    #####:  469:	  players[i] = -9999;
        -:  470:	}
        -:  471:      else
        -:  472:	{
    #####:  473:	  players[i] = scoreFor (i, state);
        -:  474:	}
        -:  475:    }
        -:  476:
        -:  477:  //find highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  480:    {
    #####:  481:      if (players[i] > players[j])
        -:  482:	{
    #####:  483:	  j = i;
        -:  484:	}
        -:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //add 1 to players who had less turns
    #####:  489:  currentPlayer = whoseTurn(state);
    #####:  490:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  491:    {
    #####:  492:      if ( players[i] == highScore && i > currentPlayer )
        -:  493:	{
    #####:  494:	  players[i]++;
        -:  495:	}
        -:  496:    }
        -:  497:
        -:  498:  //find new highest score
    #####:  499:  j = 0;
    #####:  500:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  501:    {
    #####:  502:      if ( players[i] > players[j] )
        -:  503:	{
    #####:  504:	  j = i;
        -:  505:	}
        -:  506:    }
    #####:  507:  highScore = players[j];
        -:  508:
        -:  509:  //set winners in array to 1 and rest to 0
    #####:  510:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  511:    {
    #####:  512:      if ( players[i] == highScore )
        -:  513:	{
    #####:  514:	  players[i] = 1;
        -:  515:	}
        -:  516:      else
        -:  517:	{
    #####:  518:	  players[i] = 0;
        -:  519:	}
        -:  520:    }
        -:  521:
    #####:  522:  return 0;
        -:  523:}
        -:  524:
    12007:  525:int drawCard(int player, struct gameState *state)
        -:  526:{	int count;
        -:  527:  int deckCounter;
    12007:  528:  if (state->deckCount[player] <= 0){//Deck is empty
        -:  529:
        -:  530:    //Step 1 Shuffle the discard pile back into a deck
        -:  531:    int i;
        -:  532:    //Move discard to deck
    #####:  533:    for (i = 0; i < state->discardCount[player];i++){
    #####:  534:      state->deck[player][i] = state->discard[player][i];
    #####:  535:      state->discard[player][i] = -1;
        -:  536:    }
        -:  537:
    #####:  538:    state->deckCount[player] = state->discardCount[player];
    #####:  539:    state->discardCount[player] = 0;//Reset discard
        -:  540:
        -:  541:    //Shufffle the deck
    #####:  542:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
        -:  543:
        -:  544:    if (DEBUG){//Debug statements
        -:  545:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  546:    }
        -:  547:
    #####:  548:    state->discardCount[player] = 0;
        -:  549:
        -:  550:    //Step 2 Draw Card
    #####:  551:    count = state->handCount[player];//Get current player's hand count
        -:  552:
        -:  553:    if (DEBUG){//Debug statements
        -:  554:      printf("Current hand count: %d\n", count);
        -:  555:    }
        -:  556:
    #####:  557:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  558:
    #####:  559:    if (deckCounter == 0)
    #####:  560:      return -1;
        -:  561:
    #####:  562:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    #####:  563:    state->deckCount[player]--;
    #####:  564:    state->handCount[player]++;//Increment hand count
        -:  565:  }
        -:  566:
        -:  567:  else{
    12007:  568:    int count = state->handCount[player];//Get current hand count for player
        -:  569:    int deckCounter;
        -:  570:    if (DEBUG){//Debug statements
        -:  571:      printf("Current hand count: %d\n", count);
        -:  572:    }
        -:  573:
    12007:  574:    deckCounter = state->deckCount[player];//Create holder for the deck count
    12007:  575:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
    12007:  576:    state->deckCount[player]--;
    12007:  577:    state->handCount[player]++;//Increment hand count
        -:  578:  }
        -:  579:
    12007:  580:  return 0;
        -:  581:}
        -:  582:
       35:  583:int getCost(int cardNumber)
        -:  584:{
       35:  585:  switch( cardNumber )
        -:  586:    {
        -:  587:    case curse:
        1:  588:      return 0;
        -:  589:    case estate:
        1:  590:      return 2;
        -:  591:    case duchy:
        1:  592:      return 5;
        -:  593:    case province:
        1:  594:      return 8;
        -:  595:    case copper:
        1:  596:      return 0;
        -:  597:    case silver:
        1:  598:      return 3;
        -:  599:    case gold:
        1:  600:      return 6;
        -:  601:    case adventurer:
        1:  602:      return 6;
        -:  603:    case council_room:
        1:  604:      return 5;
        -:  605:    case feast:
        1:  606:      return 4;
        -:  607:    case gardens:
        1:  608:      return 4;
        -:  609:    case mine:
        1:  610:      return 5;
        -:  611:    case remodel:
        1:  612:      return 4;
        -:  613:    case smithy:
        1:  614:      return 4;
        -:  615:    case village:
        1:  616:      return 3;
        -:  617:    case baron:
        1:  618:      return 4;
        -:  619:    case great_hall:
        1:  620:      return 3;
        -:  621:    case minion:
        1:  622:      return 5;
        -:  623:    case steward:
        1:  624:      return 3;
        -:  625:    case tribute:
        1:  626:      return 5;
        -:  627:    case ambassador:
        1:  628:      return 3;
        -:  629:    case cutpurse:
        1:  630:      return 4;
        -:  631:    case embargo:
        1:  632:      return 2;
        -:  633:    case outpost:
        1:  634:      return 5;
        -:  635:    case salvager:
        1:  636:      return 4;
        -:  637:    case sea_hag:
        1:  638:      return 4;
        -:  639:    case treasure_map:
        1:  640:      return 4;
        -:  641:    }
        -:  642:
        8:  643:  return -1;
        -:  644:}
        -:  645:
        1:  646:void adventurer_action (int drawntreasure, struct gameState *state, int currentPlayer, int cardDrawn, int temphand[MAX_HAND], int z) {
        4:  647:    while(drawntreasure<2){
        2:  648:        if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
    #####:  649:            shuffle(currentPlayer, state);
        -:  650:        }
        2:  651:        drawCard(currentPlayer, state);
        2:  652:        cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
        2:  653:        if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
        2:  654:          drawntreasure++;
        -:  655:        else{
    #####:  656:          temphand[z]=cardDrawn;
    #####:  657:          state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
        -:  658:        }
        -:  659:  }
        2:  660:  while(z-1>=0){
    #####:  661:      state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    #####:  662:      z=z-1;
        -:  663:  }
        1:  664:}
        -:  665:
     4000:  666:void smithy_action (int currentPlayer, struct gameState *state, int i, int handPos) {
        -:  667:  //+3 Cards
    16000:  668:  for (i = 0; i < 3; i++) {
    12000:  669:    drawCard(currentPlayer, state);
        -:  670:  }
        -:  671:
        -:  672:  //discard card from hand
     4000:  673:  discardCard(handPos, currentPlayer, state, 0);
     4000:  674:}
        -:  675:
    #####:  676:void village_action (int currentPlayer, struct gameState *state, int handPos) {
        -:  677:  //+1 Card
    #####:  678:  drawCard(currentPlayer, state);
        -:  679:
        -:  680:  //+2 Actions
    #####:  681:  state->numActions = state->numActions + 2;
        -:  682:
        -:  683:  //discard played card from hand
    #####:  684:  discardCard(handPos, currentPlayer, state, 0);
    #####:  685:}
        -:  686:
    #####:  687:void council_room_action (int i, int currentPlayer, struct gameState *state) {
        -:  688:  //+4 Cards
    #####:  689:  for (i = 0; i < 4; i++) {
    #####:  690:      drawCard(currentPlayer, state);
        -:  691:  }
        -:  692:
        -:  693:  //+1 Buy
    #####:  694:  state->numBuys++;
        -:  695:
        -:  696:  //Each other player draws a card
    #####:  697:  for (i = 0; i < state->numPlayers; i++) {
    #####:  698:      if ( i == currentPlayer ) {
    #####:  699:          drawCard(i, state);
        -:  700:      }
        -:  701:  }
    #####:  702:}
        -:  703:
    #####:  704:int mine_action (int j, struct gameState *state, int currentPlayer, int choice1, int choice2, int handPos, int i) {
    #####:  705:  j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  706:
    #####:  707:  if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold) {
    #####:  708:      return -1;
        -:  709:  }
        -:  710:
    #####:  711:  if (choice2 > treasure_map || choice2 < curse) {
    #####:  712:      return -1;
        -:  713:  }
        -:  714:
    #####:  715:  if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) ) {
    #####:  716:      return -1;
        -:  717:  }
        -:  718:
    #####:  719:  gainCard(choice2, state, 2, currentPlayer);
        -:  720:
        -:  721:  //discard card from hand
    #####:  722:  discardCard(handPos, currentPlayer, state, 0);
        -:  723:
        -:  724:  //discard trashed card
    #####:  725:  for (i = 0; i < state->handCount[currentPlayer]; i++) {
    #####:  726:      if (state->hand[currentPlayer][i] == j) {
    #####:  727:        discardCard(i, currentPlayer, state, 0);
    #####:  728:        break;
        -:  729:      }
        -:  730:  }
        -:  731:
    #####:  732:  return -1;
        -:  733:}
        -:  734:
     4001:  735:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  736:{
        -:  737:  int i;
        -:  738:  int j;
        -:  739:  int k;
        -:  740:  int x;
        -:  741:  int m;
        -:  742:  int index;
     4001:  743:  int currentPlayer = whoseTurn(state);
     4001:  744:  int nextPlayer = currentPlayer + 1;
        -:  745:
     4001:  746:  int tributeRevealedCards[2] = {-1, -1};
        -:  747:  int temphand[MAX_HAND];// moved above the if statement
     4001:  748:  int drawntreasure=0;
        -:  749:  int cardDrawn;
     4001:  750:  int z = 0;// this is the counter for the temp hand
     4001:  751:  if (nextPlayer > (state->numPlayers - 1)){
     4000:  752:    nextPlayer = 0;
        -:  753:  }
        -:  754:
        -:  755:
        -:  756:  //uses switch to select card and perform actions
     4001:  757:  switch( card )
        -:  758:    {
        -:  759:    case adventurer:
        1:  760:      adventurer_action (drawntreasure, state, currentPlayer, cardDrawn, temphand, z);
        1:  761:      return 0;
        -:  762:
        -:  763:    case council_room:
    #####:  764:      council_room_action (i, currentPlayer, state);
    #####:  765:      return 0;
        -:  766:
        -:  767:    case feast:
        -:  768:      //gain card with cost up to 5
        -:  769:      //Backup hand
    #####:  770:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  771:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  772:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  773:      }
        -:  774:      //Backup hand
        -:  775:
        -:  776:      //Update Coins for Buy
    #####:  777:      updateCoins(currentPlayer, state, 5);
    #####:  778:      x = 1;//Condition to loop on
    #####:  779:      while( x == 1) {//Buy one card
    #####:  780:	if (supplyCount(choice1, state) <= 0){
        -:  781:	  if (DEBUG)
        -:  782:	    printf("None of that card left, sorry!\n");
        -:  783:
        -:  784:	  if (DEBUG){
        -:  785:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  786:	  }
        -:  787:	}
    #####:  788:	else if (state->coins < getCost(choice1)){
    #####:  789:	  printf("That card is too expensive!\n");
        -:  790:
        -:  791:	  if (DEBUG){
        -:  792:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  793:	  }
        -:  794:	}
        -:  795:	else{
        -:  796:
        -:  797:	  if (DEBUG){
        -:  798:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  799:	  }
        -:  800:
    #####:  801:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    #####:  802:	  x = 0;//No more buying cards
        -:  803:
        -:  804:	  if (DEBUG){
        -:  805:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  806:	  }
        -:  807:
        -:  808:	}
        -:  809:      }
        -:  810:
        -:  811:      //Reset Hand
    #####:  812:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  813:	state->hand[currentPlayer][i] = temphand[i];
    #####:  814:	temphand[i] = -1;
        -:  815:      }
        -:  816:      //Reset Hand
        -:  817:
    #####:  818:      return 0;
        -:  819:
        -:  820:    case gardens:
    #####:  821:      return -1;
        -:  822:
        -:  823:    case mine:
    #####:  824:      m = mine_action (j, state, currentPlayer, choice1, choice2, handPos, i);
    #####:  825:      return m;
        -:  826:
        -:  827:    case remodel:
    #####:  828:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  829:
    #####:  830:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
        -:  831:	{
    #####:  832:	  return -1;
        -:  833:	}
        -:  834:
    #####:  835:      gainCard(choice2, state, 0, currentPlayer);
        -:  836:
        -:  837:      //discard card from hand
    #####:  838:      discardCard(handPos, currentPlayer, state, 0);
        -:  839:
        -:  840:      //discard trashed card
    #####:  841:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  842:	{
    #####:  843:	  if (state->hand[currentPlayer][i] == j)
        -:  844:	    {
    #####:  845:	      discardCard(i, currentPlayer, state, 0);
    #####:  846:	      break;
        -:  847:	    }
        -:  848:	}
        -:  849:
        -:  850:
    #####:  851:      return 0;
        -:  852:
        -:  853:    case smithy:
     4000:  854:      smithy_action (currentPlayer, state, i, handPos);
     4000:  855:      return 0;
        -:  856:
        -:  857:    case village:
    #####:  858:      village_action (currentPlayer, state, handPos);
    #####:  859:      return 0;
        -:  860:
        -:  861:    case baron:
    #####:  862:      state->numBuys++;//Increase buys by 1!
    #####:  863:      if (choice1 > 0){//Boolean true or going to discard an estate
    #####:  864:	int p = 0;//Iterator for hand!
    #####:  865:	int card_not_discarded = 1;//Flag for discard set!
    #####:  866:	while(card_not_discarded){
    #####:  867:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    #####:  868:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  869:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  870:	    state->discardCount[currentPlayer]++;
    #####:  871:	    for (;p < state->handCount[currentPlayer]; p++){
    #####:  872:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  873:	    }
    #####:  874:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  875:	    state->handCount[currentPlayer]--;
    #####:  876:	    card_not_discarded = 0;//Exit the loop
        -:  877:	  }
    #####:  878:	  else if (p > state->handCount[currentPlayer]){
        -:  879:	    if(DEBUG) {
        -:  880:	      printf("No estate cards in your hand, invalid choice\n");
        -:  881:	      printf("Must gain an estate if there are any\n");
        -:  882:	    }
    #####:  883:	    if (supplyCount(estate, state) > 0){
    #####:  884:	      gainCard(estate, state, 0, currentPlayer);
    #####:  885:	      state->supplyCount[estate]--;//Decrement estates
    #####:  886:	      if (supplyCount(estate, state) == 0){
    #####:  887:		isGameOver(state);
        -:  888:	      }
        -:  889:	    }
    #####:  890:	    card_not_discarded = 0;//Exit the loop
        -:  891:	  }
        -:  892:
        -:  893:	  else{
    #####:  894:	    p++;//Next card
        -:  895:	  }
        -:  896:	}
        -:  897:      }
        -:  898:
        -:  899:      else{
    #####:  900:	if (supplyCount(estate, state) > 0){
    #####:  901:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
    #####:  902:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  903:	  if (supplyCount(estate, state) == 0){
    #####:  904:	    isGameOver(state);
        -:  905:	  }
        -:  906:	}
        -:  907:      }
        -:  908:
        -:  909:
    #####:  910:      return 0;
        -:  911:
        -:  912:    case great_hall:
        -:  913:      //+1 Card
    #####:  914:      drawCard(currentPlayer, state);
        -:  915:
        -:  916:      //+1 Actions
    #####:  917:      state->numActions++;
        -:  918:
        -:  919:      //discard card from hand
    #####:  920:      discardCard(handPos, currentPlayer, state, 0);
    #####:  921:      return 0;
        -:  922:
        -:  923:    case minion:
        -:  924:      //+1 action
    #####:  925:      state->numActions++;
        -:  926:
        -:  927:      //discard card from hand
    #####:  928:      discardCard(handPos, currentPlayer, state, 0);
        -:  929:
    #####:  930:      if (choice1)		//+2 coins
        -:  931:	{
    #####:  932:	  state->coins = state->coins + 2;
        -:  933:	}
        -:  934:
    #####:  935:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
        -:  936:	{
        -:  937:	  //discard hand
    #####:  938:	  while(numHandCards(state) > 0)
        -:  939:	    {
    #####:  940:	      discardCard(handPos, currentPlayer, state, 0);
        -:  941:	    }
        -:  942:
        -:  943:	  //draw 4
    #####:  944:	  for (i = 0; i < 4; i++)
        -:  945:	    {
    #####:  946:	      drawCard(currentPlayer, state);
        -:  947:	    }
        -:  948:
        -:  949:	  //other players discard hand and redraw if hand size > 4
    #####:  950:	  for (i = 0; i < state->numPlayers; i++)
        -:  951:	    {
    #####:  952:	      if (i != currentPlayer)
        -:  953:		{
    #####:  954:		  if ( state->handCount[i] > 4 )
        -:  955:		    {
        -:  956:		      //discard hand
    #####:  957:		      while( state->handCount[i] > 0 )
        -:  958:			{
    #####:  959:			  discardCard(handPos, i, state, 0);
        -:  960:			}
        -:  961:
        -:  962:		      //draw 4
    #####:  963:		      for (j = 0; j < 4; j++)
        -:  964:			{
    #####:  965:			  drawCard(i, state);
        -:  966:			}
        -:  967:		    }
        -:  968:		}
        -:  969:	    }
        -:  970:
        -:  971:	}
    #####:  972:      return 0;
        -:  973:
        -:  974:    case steward:
    #####:  975:      if (choice1 == 1)
        -:  976:	{
        -:  977:	  //+2 cards
    #####:  978:	  drawCard(currentPlayer, state);
    #####:  979:	  drawCard(currentPlayer, state);
        -:  980:	}
    #####:  981:      else if (choice1 == 2)
        -:  982:	{
        -:  983:	  //+2 coins
    #####:  984:	  state->coins = state->coins + 2;
        -:  985:	}
        -:  986:      else
        -:  987:	{
        -:  988:	  //trash 2 cards in hand
    #####:  989:	  discardCard(choice2, currentPlayer, state, 1);
    #####:  990:	  discardCard(choice3, currentPlayer, state, 1);
        -:  991:	}
        -:  992:
        -:  993:      //discard card from hand
    #####:  994:      discardCard(handPos, currentPlayer, state, 0);
    #####:  995:      return 0;
        -:  996:
        -:  997:    case tribute:
    #####:  998:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    #####:  999:	if (state->deckCount[nextPlayer] > 0){
    #####: 1000:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1001:	  state->deckCount[nextPlayer]--;
        -: 1002:	}
    #####: 1003:	else if (state->discardCount[nextPlayer] > 0){
    #####: 1004:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1005:	  state->discardCount[nextPlayer]--;
        -: 1006:	}
        -: 1007:	else{
        -: 1008:	  //No Card to Reveal
        -: 1009:	  if (DEBUG){
        -: 1010:	    printf("No cards to reveal\n");
        -: 1011:	  }
        -: 1012:	}
        -: 1013:      }
        -: 1014:
        -: 1015:      else{
    #####: 1016:	if (state->deckCount[nextPlayer] == 0){
    #####: 1017:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    #####: 1018:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1019:	    state->deckCount[nextPlayer]++;
    #####: 1020:	    state->discard[nextPlayer][i] = -1;
    #####: 1021:	    state->discardCount[nextPlayer]--;
        -: 1022:	  }
        -: 1023:
    #####: 1024:	  shuffle(nextPlayer,state);//Shuffle the deck
        -: 1025:	}
    #####: 1026:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1027:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1028:	state->deckCount[nextPlayer]--;
    #####: 1029:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1030:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1031:	state->deckCount[nextPlayer]--;
        -: 1032:      }
        -: 1033:
    #####: 1034:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one
    #####: 1035:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1036:	state->playedCardCount++;
    #####: 1037:	tributeRevealedCards[1] = -1;
        -: 1038:      }
        -: 1039:
    #####: 1040:      for (i = 0; i <= 2; i ++){
    #####: 1041:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    #####: 1042:	  state->coins += 2;
        -: 1043:	}
        -: 1044:
    #####: 1045:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    #####: 1046:	  drawCard(currentPlayer, state);
    #####: 1047:	  drawCard(currentPlayer, state);
        -: 1048:	}
        -: 1049:	else{//Action Card
    #####: 1050:	  state->numActions = state->numActions + 2;
        -: 1051:	}
        -: 1052:      }
        -: 1053:
    #####: 1054:      return 0;
        -: 1055:
        -: 1056:    case ambassador:
    #####: 1057:      j = 0;		//used to check if player has enough cards to discard
        -: 1058:
    #####: 1059:      if (choice2 > 2 || choice2 < 0)
        -: 1060:	{
    #####: 1061:	  return -1;
        -: 1062:	}
        -: 1063:
    #####: 1064:      if (choice1 == handPos)
        -: 1065:	{
    #####: 1066:	  return -1;
        -: 1067:	}
        -: 1068:
    #####: 1069:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1070:	{
    #####: 1071:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
        -: 1072:	    {
    #####: 1073:	      j++;
        -: 1074:	    }
        -: 1075:	}
    #####: 1076:      if (j < choice2)
        -: 1077:	{
    #####: 1078:	  return -1;
        -: 1079:	}
        -: 1080:
        -: 1081:      if (DEBUG)
        -: 1082:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1083:
        -: 1084:      //increase supply count for choosen card by amount being discarded
    #####: 1085:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1086:
        -: 1087:      //each other player gains a copy of revealed card
    #####: 1088:      for (i = 0; i < state->numPlayers; i++)
        -: 1089:	{
    #####: 1090:	  if (i != currentPlayer)
        -: 1091:	    {
    #####: 1092:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
        -: 1093:	    }
        -: 1094:	}
        -: 1095:
        -: 1096:      //discard played card from hand
    #####: 1097:      discardCard(handPos, currentPlayer, state, 0);
        -: 1098:
        -: 1099:      //trash copies of cards returned to supply
    #####: 1100:      for (j = 0; j < choice2; j++)
        -: 1101:	{
    #####: 1102:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1103:	    {
    #####: 1104:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
        -: 1105:		{
    #####: 1106:		  discardCard(i, currentPlayer, state, 1);
    #####: 1107:		  break;
        -: 1108:		}
        -: 1109:	    }
        -: 1110:	}
        -: 1111:
    #####: 1112:      return 0;
        -: 1113:
        -: 1114:    case cutpurse:
        -: 1115:
    #####: 1116:      updateCoins(currentPlayer, state, 2);
    #####: 1117:      for (i = 0; i < state->numPlayers; i++)
        -: 1118:	{
    #####: 1119:	  if (i != currentPlayer)
        -: 1120:	    {
    #####: 1121:	      for (j = 0; j < state->handCount[i]; j++)
        -: 1122:		{
    #####: 1123:		  if (state->hand[i][j] == copper)
        -: 1124:		    {
    #####: 1125:		      discardCard(j, i, state, 0);
    #####: 1126:		      break;
        -: 1127:		    }
    #####: 1128:		  if (j == state->handCount[i])
        -: 1129:		    {
    #####: 1130:		      for (k = 0; k < state->handCount[i]; k++)
        -: 1131:			{
        -: 1132:			  if (DEBUG)
        -: 1133:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1134:			}
    #####: 1135:		      break;
        -: 1136:		    }
        -: 1137:		}
        -: 1138:
        -: 1139:	    }
        -: 1140:
        -: 1141:	}
        -: 1142:
        -: 1143:      //discard played card from hand
    #####: 1144:      discardCard(handPos, currentPlayer, state, 0);
        -: 1145:
    #####: 1146:      return 0;
        -: 1147:
        -: 1148:
        -: 1149:    case embargo:
        -: 1150:      //+2 Coins
    #####: 1151:      state->coins = state->coins + 2;
        -: 1152:
        -: 1153:      //see if selected pile is in play
    #####: 1154:      if ( state->supplyCount[choice1] == -1 )
        -: 1155:	{
    #####: 1156:	  return -1;
        -: 1157:	}
        -: 1158:
        -: 1159:      //add embargo token to selected supply pile
    #####: 1160:      state->embargoTokens[choice1]++;
        -: 1161:
        -: 1162:      //trash card
    #####: 1163:      discardCard(handPos, currentPlayer, state, 1);
    #####: 1164:      return 0;
        -: 1165:
        -: 1166:    case outpost:
        -: 1167:      //set outpost flag
    #####: 1168:      state->outpostPlayed++;
        -: 1169:
        -: 1170:      //discard card
    #####: 1171:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1172:      return 0;
        -: 1173:
        -: 1174:    case salvager:
        -: 1175:      //+1 buy
    #####: 1176:      state->numBuys++;
        -: 1177:
    #####: 1178:      if (choice1)
        -: 1179:	{
        -: 1180:	  //gain coins equal to trashed card
    #####: 1181:	  state->coins = state->coins + getCost( handCard(choice1, state) );
        -: 1182:	  //trash card
    #####: 1183:	  discardCard(choice1, currentPlayer, state, 1);
        -: 1184:	}
        -: 1185:
        -: 1186:      //discard card
    #####: 1187:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1188:      return 0;
        -: 1189:
        -: 1190:    case sea_hag:
    #####: 1191:      for (i = 0; i < state->numPlayers; i++){
    #####: 1192:	if (i != currentPlayer){
    #####: 1193:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1194:	  state->discardCount[i]++;
    #####: 1195:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1196:	}
        -: 1197:      }
    #####: 1198:      return 0;
        -: 1199:
        -: 1200:    case treasure_map:
        -: 1201:      //search hand for another treasure_map
    #####: 1202:      index = -1;
    #####: 1203:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1204:	{
    #####: 1205:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
        -: 1206:	    {
    #####: 1207:	      index = i;
    #####: 1208:	      break;
        -: 1209:	    }
        -: 1210:	}
    #####: 1211:      if (index > -1)
        -: 1212:	{
        -: 1213:	  //trash both treasure cards
    #####: 1214:	  discardCard(handPos, currentPlayer, state, 1);
    #####: 1215:	  discardCard(index, currentPlayer, state, 1);
        -: 1216:
        -: 1217:	  //gain 4 Gold cards
    #####: 1218:	  for (i = 0; i < 4; i++)
        -: 1219:	    {
    #####: 1220:	      gainCard(gold, state, 1, currentPlayer);
        -: 1221:	    }
        -: 1222:
        -: 1223:	  //return success
    #####: 1224:	  return 1;
        -: 1225:	}
        -: 1226:
        -: 1227:      //no second treasure_map found in hand
    #####: 1228:      return -1;
        -: 1229:    }
        -: 1230:
    #####: 1231:  return -1;
        -: 1232:}
        -: 1233:
     4000: 1234:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1235:{
        -: 1236:
        -: 1237:  //if card is not trashed, added to Played pile
     4000: 1238:  if (trashFlag < 1)
        -: 1239:    {
        -: 1240:      //add card to played pile
     4000: 1241:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos];
     4000: 1242:      state->playedCardCount++;
        -: 1243:    }
        -: 1244:
        -: 1245:  //set played card to -1
     4000: 1246:  state->hand[currentPlayer][handPos] = -1;
        -: 1247:
        -: 1248:  //remove card from player's hand
     4000: 1249:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
        -: 1250:    {
        -: 1251:      //reduce number of cards in hand
    #####: 1252:      state->handCount[currentPlayer]--;
        -: 1253:    }
     4000: 1254:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
        -: 1255:    {
        -: 1256:      //reduce number of cards in hand
    #####: 1257:      state->handCount[currentPlayer]--;
        -: 1258:    }
        -: 1259:  else
        -: 1260:    {
        -: 1261:      //replace discarded card with last card in hand
     4000: 1262:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1263:      //set last card to -1
     4000: 1264:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1265:      //reduce number of cards in hand
     4000: 1266:      state->handCount[currentPlayer]--;
        -: 1267:    }
        -: 1268:
     4000: 1269:  return 0;
        -: 1270:}
        -: 1271:
    #####: 1272:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1273:{
        -: 1274:  //Note: supplyPos is enum of choosen card
        -: 1275:
        -: 1276:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1277:  if ( supplyCount(supplyPos, state) < 1 )
        -: 1278:    {
    #####: 1279:      return -1;
        -: 1280:    }
        -: 1281:
        -: 1282:  //added card for [whoseTurn] current player:
        -: 1283:  // toFlag = 0 : add to discard
        -: 1284:  // toFlag = 1 : add to deck
        -: 1285:  // toFlag = 2 : add to hand
        -: 1286:
    #####: 1287:  if (toFlag == 1)
        -: 1288:    {
    #####: 1289:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1290:      state->deckCount[player]++;
        -: 1291:    }
    #####: 1292:  else if (toFlag == 2)
        -: 1293:    {
    #####: 1294:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1295:      state->handCount[player]++;
        -: 1296:    }
        -: 1297:  else
        -: 1298:    {
    #####: 1299:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1300:      state->discardCount[player]++;
        -: 1301:    }
        -: 1302:
        -: 1303:  //decrease number in supply pile
    #####: 1304:  state->supplyCount[supplyPos]--;
        -: 1305:
    #####: 1306:  return 0;
        -: 1307:}
        -: 1308:
        9: 1309:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1310:{
        -: 1311:  int i;
        -: 1312:
        -: 1313:  //reset coin count
        9: 1314:  state->coins = 0;
        -: 1315:
        -: 1316:  //add coins for each Treasure card in player's hand
       14: 1317:  for (i = 0; i < state->handCount[player]; i++)
        -: 1318:    {
        5: 1319:      if (state->hand[player][i] == copper)
        -: 1320:	{
        4: 1321:	  state->coins += 1;
        -: 1322:	}
        1: 1323:      else if (state->hand[player][i] == silver)
        -: 1324:	{
    #####: 1325:	  state->coins += 2;
        -: 1326:	}
        1: 1327:      else if (state->hand[player][i] == gold)
        -: 1328:	{
    #####: 1329:	  state->coins += 3;
        -: 1330:	}
        -: 1331:    }
        -: 1332:
        -: 1333:  //add bonus
        9: 1334:  state->coins += bonus;
        -: 1335:
        9: 1336:  return 0;
        -: 1337:}
        -: 1338:
        -: 1339:
        -: 1340://end of dominion.c
cardtest3.c:
FAIL: Hand count after playing council_room was not correct. Expected 132, got 134
FAIL: Hand count after playing council_room was not correct. Expected 134, got 283
FAIL: Hand count after playing council_room was not correct. Expected 134, got 202
FAIL: Hand count after playing council_room was not correct. Expected 134, got 182
FAIL: Hand count after playing council_room was not correct. Expected 113, got 115
FAIL: Hand count after playing council_room was not correct. Expected 115, got 13
FAIL: Hand count after playing council_room was not correct. Expected 115, got 437
FAIL: Hand count after playing council_room was not correct. Expected 115, got 284
FAIL: Hand count after playing council_room was not correct. Expected 126, got 128
FAIL: Hand count after playing council_room was not correct. Expected 128, got 80
FAIL: Hand count after playing council_room was not correct. Expected 128, got 296
FAIL: Hand count after playing council_room was not correct. Expected 128, got 96
FAIL: Hand count after playing council_room was not correct. Expected 63, got 65
FAIL: Hand count after playing council_room was not correct. Expected 65, got 280
FAIL: Hand count after playing council_room was not correct. Expected 65, got 314
FAIL: Hand count after playing council_room was not correct. Expected 65, got 273
FAIL: Hand count after playing council_room was not correct. Expected 155, got 157
FAIL: Hand count after playing council_room was not correct. Expected 157, got 415
FAIL: Hand count after playing council_room was not correct. Expected 157, got 231
FAIL: Hand count after playing council_room was not correct. Expected 157, got 33
FAIL: Hand count after playing council_room was not correct. Expected 30, got 32
FAIL: Hand count after playing council_room was not correct. Expected 32, got 465
FAIL: Hand count after playing council_room was not correct. Expected 32, got 420
FAIL: Hand count after playing council_room was not correct. Expected 32, got 120
FAIL: Hand count after playing council_room was not correct. Expected 253, got 255
FAIL: Hand count after playing council_room was not correct. Expected 255, got 173
FAIL: Hand count after playing council_room was not correct. Expected 255, got 35
FAIL: Hand count after playing council_room was not correct. Expected 255, got 396
FAIL: Hand count after playing council_room was not correct. Expected 34, got 36
FAIL: Hand count after playing council_room was not correct. Expected 36, got 460
FAIL: Hand count after playing council_room was not correct. Expected 36, got 258
FAIL: Hand count after playing council_room was not correct. Expected 36, got 372
FAIL: Hand count after playing council_room was not correct. Expected 462, got 464
FAIL: Hand count after playing council_room was not correct. Expected 464, got 65
FAIL: Hand count after playing council_room was not correct. Expected 464, got 145
FAIL: Hand count after playing council_room was not correct. Expected 464, got 213
FAIL: Hand count after playing council_room was not correct. Expected 235, got 237
FAIL: Hand count after playing council_room was not correct. Expected 237, got 275
FAIL: Hand count after playing council_room was not correct. Expected 237, got 495
FAIL: Hand count after playing council_room was not correct. Expected 237, got 283
FAIL: Hand count after playing council_room was not correct. Expected 499, got 501
FAIL: Hand count after playing council_room was not correct. Expected 501, got 452
FAIL: Hand count after playing council_room was not correct. Expected 501, got 441
FAIL: Hand count after playing council_room was not correct. Expected 501, got 470
FAIL: Hand count after playing council_room was not correct. Expected 48, got 50
FAIL: Hand count after playing council_room was not correct. Expected 50, got 22
FAIL: Hand count after playing council_room was not correct. Expected 50, got 75
FAIL: Hand count after playing council_room was not correct. Expected 50, got 55
FAIL: Hand count after playing council_room was not correct. Expected 401, got 403
FAIL: Hand count after playing council_room was not correct. Expected 403, got 243
FAIL: Hand count after playing council_room was not correct. Expected 403, got 485
FAIL: Hand count after playing council_room was not correct. Expected 403, got 235
FAIL: Hand count after playing council_room was not correct. Expected 402, got 404
FAIL: Hand count after playing council_room was not correct. Expected 404, got 51
FAIL: Hand count after playing council_room was not correct. Expected 404, got 39
FAIL: Hand count after playing council_room was not correct. Expected 404, got 410
FAIL: Hand count after playing council_room was not correct. Expected 11, got 13
FAIL: Hand count after playing council_room was not correct. Expected 13, got 117
FAIL: Hand count after playing council_room was not correct. Expected 13, got 233
FAIL: Hand count after playing council_room was not correct. Expected 13, got 88
FAIL: Hand count after playing council_room was not correct. Expected 327, got 329
FAIL: Hand count after playing council_room was not correct. Expected 329, got 102
FAIL: Hand count after playing council_room was not correct. Expected 329, got 179
FAIL: Hand count after playing council_room was not correct. Expected 329, got 57
FAIL: Hand count after playing council_room was not correct. Expected 51, got 53
FAIL: Hand count after playing council_room was not correct. Expected 53, got 490
FAIL: Hand count after playing council_room was not correct. Expected 53, got 162
FAIL: Hand count after playing council_room was not correct. Expected 53, got 272
FAIL: Hand count after playing council_room was not correct. Expected 52, got 54
FAIL: Hand count after playing council_room was not correct. Expected 54, got 180
FAIL: Hand count after playing council_room was not correct. Expected 54, got 336
FAIL: Hand count after playing council_room was not correct. Expected 54, got 93
FAIL: Hand count after playing council_room was not correct. Expected 428, got 430
FAIL: Hand count after playing council_room was not correct. Expected 430, got 226
FAIL: Hand count after playing council_room was not correct. Expected 430, got 134
FAIL: Hand count after playing council_room was not correct. Expected 430, got 223
FAIL: Hand count after playing council_room was not correct. Expected 364, got 366
FAIL: Hand count after playing council_room was not correct. Expected 366, got 153
FAIL: Hand count after playing council_room was not correct. Expected 366, got 419
FAIL: Hand count after playing council_room was not correct. Expected 366, got 345
FAIL: Hand count after playing council_room was not correct. Expected 292, got 294
FAIL: Hand count after playing council_room was not correct. Expected 294, got 467
FAIL: Hand count after playing council_room was not correct. Expected 294, got 391
FAIL: Hand count after playing council_room was not correct. Expected 294, got 169
FAIL: Hand count after playing council_room was not correct. Expected 235, got 237
FAIL: Hand count after playing council_room was not correct. Expected 237, got 198
FAIL: Hand count after playing council_room was not correct. Expected 237, got 370
FAIL: Hand count after playing council_room was not correct. Expected 237, got 111
FAIL: Hand count after playing council_room was not correct. Expected 321, got 323
FAIL: Hand count after playing council_room was not correct. Expected 323, got 208
FAIL: Hand count after playing council_room was not correct. Expected 323, got 490
FAIL: Hand count after playing council_room was not correct. Expected 323, got 458
FAIL: Hand count after playing council_room was not correct. Expected 331, got 333
FAIL: Hand count after playing council_room was not correct. Expected 333, got 232
FAIL: Hand count after playing council_room was not correct. Expected 333, got 111
FAIL: Hand count after playing council_room was not correct. Expected 333, got 133
FAIL: Hand count after playing council_room was not correct. Expected 170, got 172
FAIL: Hand count after playing council_room was not correct. Expected 172, got 95
FAIL: Hand count after playing council_room was not correct. Expected 172, got 276
FAIL: Hand count after playing council_room was not correct. Expected 172, got 229
FAIL: Hand count after playing council_room was not correct. Expected 308, got 310
FAIL: Hand count after playing council_room was not correct. Expected 310, got 83
FAIL: Hand count after playing council_room was not correct. Expected 310, got 13
FAIL: Hand count after playing council_room was not correct. Expected 310, got 204
FAIL: Hand count after playing council_room was not correct. Expected 137, got 139
FAIL: Hand count after playing council_room was not correct. Expected 139, got 367
FAIL: Hand count after playing council_room was not correct. Expected 139, got 249
FAIL: Hand count after playing council_room was not correct. Expected 139, got 208
FAIL: Hand count after playing council_room was not correct. Expected 174, got 176
FAIL: Hand count after playing council_room was not correct. Expected 176, got 195
FAIL: Hand count after playing council_room was not correct. Expected 176, got 339
FAIL: Hand count after playing council_room was not correct. Expected 176, got 30
FAIL: Hand count after playing council_room was not correct. Expected 316, got 318
FAIL: Hand count after playing council_room was not correct. Expected 318, got 313
FAIL: Hand count after playing council_room was not correct. Expected 318, got 478
FAIL: Hand count after playing council_room was not correct. Expected 318, got 303
FAIL: Hand count after playing council_room was not correct. Expected 430, got 432
FAIL: Hand count after playing council_room was not correct. Expected 432, got 456
FAIL: Hand count after playing council_room was not correct. Expected 432, got 495
FAIL: Hand count after playing council_room was not correct. Expected 432, got 348
FAIL: Hand count after playing council_room was not correct. Expected 19, got 21
FAIL: Hand count after playing council_room was not correct. Expected 21, got 8
FAIL: Hand count after playing council_room was not correct. Expected 21, got 67
FAIL: Hand count after playing council_room was not correct. Expected 21, got 236
FAIL: Hand count after playing council_room was not correct. Expected 301, got 303
FAIL: Hand count after playing council_room was not correct. Expected 303, got 117
FAIL: Hand count after playing council_room was not correct. Expected 303, got 87
FAIL: Hand count after playing council_room was not correct. Expected 303, got 49
FAIL: Hand count after playing council_room was not correct. Expected 216, got 218
FAIL: Hand count after playing council_room was not correct. Expected 218, got 424
FAIL: Hand count after playing council_room was not correct. Expected 218, got 170
FAIL: Hand count after playing council_room was not correct. Expected 218, got 362
FAIL: Hand count after playing council_room was not correct. Expected 147, got 149
FAIL: Hand count after playing council_room was not correct. Expected 149, got 3
FAIL: Hand count after playing council_room was not correct. Expected 149, got 201
FAIL: Hand count after playing council_room was not correct. Expected 149, got 429
FAIL: Hand count after playing council_room was not correct. Expected 158, got 160
FAIL: Hand count after playing council_room was not correct. Expected 160, got 324
FAIL: Hand count after playing council_room was not correct. Expected 160, got 373
FAIL: Hand count after playing council_room was not correct. Expected 160, got 453
FAIL: Hand count after playing council_room was not correct. Expected 102, got 104
FAIL: Hand count after playing council_room was not correct. Expected 104, got 16
FAIL: Hand count after playing council_room was not correct. Expected 104, got 354
FAIL: Hand count after playing council_room was not correct. Expected 104, got 390
FAIL: Hand count after playing council_room was not correct. Expected 115, got 117
FAIL: Hand count after playing council_room was not correct. Expected 117, got 337
FAIL: Hand count after playing council_room was not correct. Expected 117, got 388
FAIL: Hand count after playing council_room was not correct. Expected 117, got 190
FAIL: Hand count after playing council_room was not correct. Expected 238, got 240
FAIL: Hand count after playing council_room was not correct. Expected 240, got 158
FAIL: Hand count after playing council_room was not correct. Expected 240, got 81
FAIL: Hand count after playing council_room was not correct. Expected 240, got 158
FAIL: Hand count after playing council_room was not correct. Expected 256, got 258
FAIL: Hand count after playing council_room was not correct. Expected 258, got 140
FAIL: Hand count after playing council_room was not correct. Expected 258, got 311
FAIL: Hand count after playing council_room was not correct. Expected 258, got 281
FAIL: Hand count after playing council_room was not correct. Expected 259, got 261
FAIL: Hand count after playing council_room was not correct. Expected 261, got 238
FAIL: Hand count after playing council_room was not correct. Expected 261, got 16
FAIL: Hand count after playing council_room was not correct. Expected 261, got 266
FAIL: Hand count after playing council_room was not correct. Expected 367, got 369
FAIL: Hand count after playing council_room was not correct. Expected 369, got 250
FAIL: Hand count after playing council_room was not correct. Expected 369, got 436
FAIL: Hand count after playing council_room was not correct. Expected 369, got 14
FAIL: Hand count after playing council_room was not correct. Expected 417, got 419
FAIL: Hand count after playing council_room was not correct. Expected 419, got 232
FAIL: Hand count after playing council_room was not correct. Expected 419, got 246
FAIL: Hand count after playing council_room was not correct. Expected 419, got 467
FAIL: Hand count after playing council_room was not correct. Expected 161, got 163
FAIL: Hand count after playing council_room was not correct. Expected 163, got 299
FAIL: Hand count after playing council_room was not correct. Expected 163, got 467
FAIL: Hand count after playing council_room was not correct. Expected 163, got 135
FAIL: Hand count after playing council_room was not correct. Expected 30, got 32
FAIL: Hand count after playing council_room was not correct. Expected 32, got 1
FAIL: Hand count after playing council_room was not correct. Expected 32, got 116
FAIL: Hand count after playing council_room was not correct. Expected 32, got 127
FAIL: Hand count after playing council_room was not correct. Expected 105, got 107
FAIL: Hand count after playing council_room was not correct. Expected 107, got 474
FAIL: Hand count after playing council_room was not correct. Expected 107, got 135
FAIL: Hand count after playing council_room was not correct. Expected 107, got 290
FAIL: Hand count after playing council_room was not correct. Expected 280, got 282
FAIL: Hand count after playing council_room was not correct. Expected 282, got 154
FAIL: Hand count after playing council_room was not correct. Expected 282, got 268
FAIL: Hand count after playing council_room was not correct. Expected 282, got 225
FAIL: Hand count after playing council_room was not correct. Expected 393, got 395
FAIL: Hand count after playing council_room was not correct. Expected 395, got 349
FAIL: Hand count after playing council_room was not correct. Expected 395, got 232
FAIL: Hand count after playing council_room was not correct. Expected 395, got 221
FAIL: Hand count after playing council_room was not correct. Expected 393, got 395
FAIL: Hand count after playing council_room was not correct. Expected 395, got 251
FAIL: Hand count after playing council_room was not correct. Expected 395, got 265
FAIL: Hand count after playing council_room was not correct. Expected 395, got 47
FAIL: Hand count after playing council_room was not correct. Expected 420, got 422
FAIL: Hand count after playing council_room was not correct. Expected 422, got 168
FAIL: Hand count after playing council_room was not correct. Expected 422, got 489
FAIL: Hand count after playing council_room was not correct. Expected 422, got 429
FAIL: Hand count after playing council_room was not correct. Expected 445, got 447
FAIL: Hand count after playing council_room was not correct. Expected 447, got 284
FAIL: Hand count after playing council_room was not correct. Expected 447, got 14
FAIL: Hand count after playing council_room was not correct. Expected 447, got 113
FAIL: Hand count after playing council_room was not correct. Expected 382, got 384
FAIL: Hand count after playing council_room was not correct. Expected 384, got 3
FAIL: Hand count after playing council_room was not correct. Expected 384, got 16
FAIL: Hand count after playing council_room was not correct. Expected 384, got 109
FAIL: Hand count after playing council_room was not correct. Expected 474, got 476
FAIL: Hand count after playing council_room was not correct. Expected 476, got 107
FAIL: Hand count after playing council_room was not correct. Expected 476, got 39
FAIL: Hand count after playing council_room was not correct. Expected 476, got 188
FAIL: Hand count after playing council_room was not correct. Expected 5, got 7
FAIL: Hand count after playing council_room was not correct. Expected 7, got 242
FAIL: Hand count after playing council_room was not correct. Expected 7, got 418
FAIL: Hand count after playing council_room was not correct. Expected 7, got 432
FAIL: Hand count after playing council_room was not correct. Expected 365, got 367
FAIL: Hand count after playing council_room was not correct. Expected 367, got 388
FAIL: Hand count after playing council_room was not correct. Expected 367, got 185
FAIL: Hand count after playing council_room was not correct. Expected 367, got 86
FAIL: Hand count after playing council_room was not correct. Expected 62, got 64
FAIL: Hand count after playing council_room was not correct. Expected 64, got 118
FAIL: Hand count after playing council_room was not correct. Expected 64, got 365
FAIL: Hand count after playing council_room was not correct. Expected 64, got 14
FAIL: Hand count after playing council_room was not correct. Expected 299, got 301
FAIL: Hand count after playing council_room was not correct. Expected 301, got 316
FAIL: Hand count after playing council_room was not correct. Expected 301, got 30
FAIL: Hand count after playing council_room was not correct. Expected 301, got 407
FAIL: Hand count after playing council_room was not correct. Expected 168, got 170
FAIL: Hand count after playing council_room was not correct. Expected 170, got 449
FAIL: Hand count after playing council_room was not correct. Expected 170, got 58
FAIL: Hand count after playing council_room was not correct. Expected 170, got 373
FAIL: Hand count after playing council_room was not correct. Expected 200, got 202
FAIL: Hand count after playing council_room was not correct. Expected 202, got 496
FAIL: Hand count after playing council_room was not correct. Expected 202, got 97
FAIL: Hand count after playing council_room was not correct. Expected 202, got 57
FAIL: Hand count after playing council_room was not correct. Expected 332, got 334
FAIL: Hand count after playing council_room was not correct. Expected 334, got 471
FAIL: Hand count after playing council_room was not correct. Expected 334, got 313
FAIL: Hand count after playing council_room was not correct. Expected 334, got 441
FAIL: Hand count after playing council_room was not correct. Expected 409, got 411
FAIL: Hand count after playing council_room was not correct. Expected 411, got 495
FAIL: Hand count after playing council_room was not correct. Expected 411, got 145
FAIL: Hand count after playing council_room was not correct. Expected 411, got 315
FAIL: Hand count after playing council_room was not correct. Expected 111, got 113
FAIL: Hand count after playing council_room was not correct. Expected 113, got 160
FAIL: Hand count after playing council_room was not correct. Expected 113, got 175
FAIL: Hand count after playing council_room was not correct. Expected 113, got 100
FAIL: Hand count after playing council_room was not correct. Expected 287, got 289
FAIL: Hand count after playing council_room was not correct. Expected 289, got 64
FAIL: Hand count after playing council_room was not correct. Expected 289, got 488
FAIL: Hand count after playing council_room was not correct. Expected 289, got 130
FAIL: Hand count after playing council_room was not correct. Expected 397, got 399
FAIL: Hand count after playing council_room was not correct. Expected 399, got 292
FAIL: Hand count after playing council_room was not correct. Expected 399, got 87
FAIL: Hand count after playing council_room was not correct. Expected 399, got 422
FAIL: Hand count after playing council_room was not correct. Expected 134, got 136
FAIL: Hand count after playing council_room was not correct. Expected 136, got 263
FAIL: Hand count after playing council_room was not correct. Expected 136, got 224
FAIL: Hand count after playing council_room was not correct. Expected 136, got 330
FAIL: Hand count after playing council_room was not correct. Expected 264, got 266
FAIL: Hand count after playing council_room was not correct. Expected 266, got 456
FAIL: Hand count after playing council_room was not correct. Expected 266, got 121
FAIL: Hand count after playing council_room was not correct. Expected 266, got 297
FAIL: Hand count after playing council_room was not correct. Expected 4, got 6
FAIL: Hand count after playing council_room was not correct. Expected 6, got 453
FAIL: Hand count after playing council_room was not correct. Expected 6, got 252
FAIL: Hand count after playing council_room was not correct. Expected 6, got 245
FAIL: Hand count after playing council_room was not correct. Expected 465, got 467
FAIL: Hand count after playing council_room was not correct. Expected 467, got 70
FAIL: Hand count after playing council_room was not correct. Expected 467, got 128
FAIL: Hand count after playing council_room was not correct. Expected 467, got 306
FAIL: Hand count after playing council_room was not correct. Expected 114, got 116
FAIL: Hand count after playing council_room was not correct. Expected 116, got 489
FAIL: Hand count after playing council_room was not correct. Expected 116, got 421
FAIL: Hand count after playing council_room was not correct. Expected 116, got 459
FAIL: Hand count after playing council_room was not correct. Expected 487, got 489
FAIL: Hand count after playing council_room was not correct. Expected 489, got 274
FAIL: Hand count after playing council_room was not correct. Expected 489, got 124
FAIL: Hand count after playing council_room was not correct. Expected 489, got 256
FAIL: Hand count after playing council_room was not correct. Expected 230, got 232
FAIL: Hand count after playing council_room was not correct. Expected 232, got 328
FAIL: Hand count after playing council_room was not correct. Expected 232, got 355
FAIL: Hand count after playing council_room was not correct. Expected 232, got 424
FAIL: Hand count after playing council_room was not correct. Expected 313, got 315
FAIL: Hand count after playing council_room was not correct. Expected 315, got 224
FAIL: Hand count after playing council_room was not correct. Expected 315, got 182
FAIL: Hand count after playing council_room was not correct. Expected 315, got 77
FAIL: Hand count after playing council_room was not correct. Expected 144, got 146
FAIL: Hand count after playing council_room was not correct. Expected 146, got 326
FAIL: Hand count after playing council_room was not correct. Expected 146, got 123
FAIL: Hand count after playing council_room was not correct. Expected 146, got 481
FAIL: Hand count after playing council_room was not correct. Expected 189, got 191
FAIL: Hand count after playing council_room was not correct. Expected 191, got 253
FAIL: Hand count after playing council_room was not correct. Expected 191, got 52
FAIL: Hand count after playing council_room was not correct. Expected 191, got 293
FAIL: Hand count after playing council_room was not correct. Expected 421, got 423
FAIL: Hand count after playing council_room was not correct. Expected 423, got 372
FAIL: Hand count after playing council_room was not correct. Expected 423, got 87
FAIL: Hand count after playing council_room was not correct. Expected 423, got 495
FAIL: Hand count after playing council_room was not correct. Expected 232, got 234
FAIL: Hand count after playing council_room was not correct. Expected 234, got 98
FAIL: Hand count after playing council_room was not correct. Expected 234, got 189
FAIL: Hand count after playing council_room was not correct. Expected 234, got 84
FAIL: Hand count after playing council_room was not correct. Expected 184, got 186
FAIL: Hand count after playing council_room was not correct. Expected 186, got 76
FAIL: Hand count after playing council_room was not correct. Expected 186, got 322
FAIL: Hand count after playing council_room was not correct. Expected 186, got 445
FAIL: Hand count after playing council_room was not correct. Expected 100, got 102
FAIL: Hand count after playing council_room was not correct. Expected 102, got 96
FAIL: Hand count after playing council_room was not correct. Expected 102, got 10
FAIL: Hand count after playing council_room was not correct. Expected 102, got 98
FAIL: Hand count after playing council_room was not correct. Expected 318, got 320
FAIL: Hand count after playing council_room was not correct. Expected 320, got 401
FAIL: Hand count after playing council_room was not correct. Expected 320, got 151
FAIL: Hand count after playing council_room was not correct. Expected 320, got 39
FAIL: Hand count after playing council_room was not correct. Expected 166, got 168
FAIL: Hand count after playing council_room was not correct. Expected 168, got 90
FAIL: Hand count after playing council_room was not correct. Expected 168, got 133
FAIL: Hand count after playing council_room was not correct. Expected 168, got 67
FAIL: Hand count after playing council_room was not correct. Expected 256, got 258
FAIL: Hand count after playing council_room was not correct. Expected 258, got 339
FAIL: Hand count after playing council_room was not correct. Expected 258, got 454
FAIL: Hand count after playing council_room was not correct. Expected 258, got 25
FAIL: Hand count after playing council_room was not correct. Expected 330, got 332
FAIL: Hand count after playing council_room was not correct. Expected 332, got 493
FAIL: Hand count after playing council_room was not correct. Expected 332, got 476
FAIL: Hand count after playing council_room was not correct. Expected 332, got 239
FAIL: Hand count after playing council_room was not correct. Expected 132, got 134
FAIL: Hand count after playing council_room was not correct. Expected 134, got 197
FAIL: Hand count after playing council_room was not correct. Expected 134, got 20
FAIL: Hand count after playing council_room was not correct. Expected 134, got 453
FAIL: Hand count after playing council_room was not correct. Expected 321, got 323
FAIL: Hand count after playing council_room was not correct. Expected 323, got 179
FAIL: Hand count after playing council_room was not correct. Expected 323, got 97
FAIL: Hand count after playing council_room was not correct. Expected 323, got 54
FAIL: Hand count after playing council_room was not correct. Expected 89, got 91
FAIL: Hand count after playing council_room was not correct. Expected 91, got 164
FAIL: Hand count after playing council_room was not correct. Expected 91, got 53
FAIL: Hand count after playing council_room was not correct. Expected 91, got 23
FAIL: Hand count after playing council_room was not correct. Expected 283, got 285
FAIL: Hand count after playing council_room was not correct. Expected 285, got 180
FAIL: Hand count after playing council_room was not correct. Expected 285, got 484
FAIL: Hand count after playing council_room was not correct. Expected 285, got 231
FAIL: Hand count after playing council_room was not correct. Expected 228, got 230
FAIL: Hand count after playing council_room was not correct. Expected 230, got 215
FAIL: Hand count after playing council_room was not correct. Expected 230, got 468
FAIL: Hand count after playing council_room was not correct. Expected 230, got 228
FAIL: Hand count after playing council_room was not correct. Expected 193, got 195
FAIL: Hand count after playing council_room was not correct. Expected 195, got 468
FAIL: Hand count after playing council_room was not correct. Expected 195, got 56
FAIL: Hand count after playing council_room was not correct. Expected 195, got 211
FAIL: Hand count after playing council_room was not correct. Expected 26, got 28
FAIL: Hand count after playing council_room was not correct. Expected 28, got 260
FAIL: Hand count after playing council_room was not correct. Expected 28, got 480
FAIL: Hand count after playing council_room was not correct. Expected 28, got 380
FAIL: Hand count after playing council_room was not correct. Expected 55, got 57
FAIL: Hand count after playing council_room was not correct. Expected 57, got 472
FAIL: Hand count after playing council_room was not correct. Expected 57, got 453
FAIL: Hand count after playing council_room was not correct. Expected 57, got 396
FAIL: Hand count after playing council_room was not correct. Expected 227, got 229
FAIL: Hand count after playing council_room was not correct. Expected 229, got 255
FAIL: Hand count after playing council_room was not correct. Expected 229, got 489
FAIL: Hand count after playing council_room was not correct. Expected 229, got 399
FAIL: Hand count after playing council_room was not correct. Expected 42, got 44
FAIL: Hand count after playing council_room was not correct. Expected 44, got 284
FAIL: Hand count after playing council_room was not correct. Expected 44, got 191
FAIL: Hand count after playing council_room was not correct. Expected 44, got 462
FAIL: Hand count after playing council_room was not correct. Expected 336, got 338
FAIL: Hand count after playing council_room was not correct. Expected 338, got 64
FAIL: Hand count after playing council_room was not correct. Expected 338, got 92
FAIL: Hand count after playing council_room was not correct. Expected 338, got 243
FAIL: Hand count after playing council_room was not correct. Expected 110, got 112
FAIL: Hand count after playing council_room was not correct. Expected 112, got 199
FAIL: Hand count after playing council_room was not correct. Expected 112, got 336
FAIL: Hand count after playing council_room was not correct. Expected 112, got 16
FAIL: Hand count after playing council_room was not correct. Expected 323, got 325
FAIL: Hand count after playing council_room was not correct. Expected 325, got 106
FAIL: Hand count after playing council_room was not correct. Expected 325, got 418
FAIL: Hand count after playing council_room was not correct. Expected 325, got 246
FAIL: Hand count after playing council_room was not correct. Expected 335, got 337
FAIL: Hand count after playing council_room was not correct. Expected 337, got 262
FAIL: Hand count after playing council_room was not correct. Expected 337, got 244
FAIL: Hand count after playing council_room was not correct. Expected 337, got 434
FAIL: Hand count after playing council_room was not correct. Expected 104, got 106
FAIL: Hand count after playing council_room was not correct. Expected 106, got 403
FAIL: Hand count after playing council_room was not correct. Expected 106, got 19
FAIL: Hand count after playing council_room was not correct. Expected 106, got 73
FAIL: Hand count after playing council_room was not correct. Expected 175, got 177
FAIL: Hand count after playing council_room was not correct. Expected 177, got 489
FAIL: Hand count after playing council_room was not correct. Expected 177, got 68
FAIL: Hand count after playing council_room was not correct. Expected 177, got 490
FAIL: Hand count after playing council_room was not correct. Expected 362, got 364
FAIL: Hand count after playing council_room was not correct. Expected 364, got 68
FAIL: Hand count after playing council_room was not correct. Expected 364, got 107
FAIL: Hand count after playing council_room was not correct. Expected 364, got 336
FAIL: Hand count after playing council_room was not correct. Expected 106, got 108
FAIL: Hand count after playing council_room was not correct. Expected 108, got 418
FAIL: Hand count after playing council_room was not correct. Expected 108, got 453
FAIL: Hand count after playing council_room was not correct. Expected 108, got 166
FAIL: Hand count after playing council_room was not correct. Expected 361, got 363
FAIL: Hand count after playing council_room was not correct. Expected 363, got 100
FAIL: Hand count after playing council_room was not correct. Expected 363, got 489
FAIL: Hand count after playing council_room was not correct. Expected 363, got 249
FAIL: Hand count after playing council_room was not correct. Expected 72, got 74
FAIL: Hand count after playing council_room was not correct. Expected 74, got 375
FAIL: Hand count after playing council_room was not correct. Expected 74, got 132
FAIL: Hand count after playing council_room was not correct. Expected 74, got 127
FAIL: Hand count after playing council_room was not correct. Expected 312, got 314
FAIL: Hand count after playing council_room was not correct. Expected 314, got 37
FAIL: Hand count after playing council_room was not correct. Expected 314, got 88
FAIL: Hand count after playing council_room was not correct. Expected 314, got 297
FAIL: Hand count after playing council_room was not correct. Expected 16, got 18
FAIL: Hand count after playing council_room was not correct. Expected 18, got 152
FAIL: Hand count after playing council_room was not correct. Expected 18, got 352
FAIL: Hand count after playing council_room was not correct. Expected 18, got 441
FAIL: Hand count after playing council_room was not correct. Expected 14, got 16
FAIL: Hand count after playing council_room was not correct. Expected 16, got 115
FAIL: Hand count after playing council_room was not correct. Expected 16, got 81
FAIL: Hand count after playing council_room was not correct. Expected 16, got 455
FAIL: Hand count after playing council_room was not correct. Expected 106, got 108
FAIL: Hand count after playing council_room was not correct. Expected 108, got 270
FAIL: Hand count after playing council_room was not correct. Expected 108, got 51
FAIL: Hand count after playing council_room was not correct. Expected 108, got 365
FAIL: Hand count after playing council_room was not correct. Expected 108, got 110
FAIL: Hand count after playing council_room was not correct. Expected 110, got 499
FAIL: Hand count after playing council_room was not correct. Expected 110, got 183
FAIL: Hand count after playing council_room was not correct. Expected 110, got 42
FAIL: Hand count after playing council_room was not correct. Expected 427, got 429
FAIL: Hand count after playing council_room was not correct. Expected 429, got 423
FAIL: Hand count after playing council_room was not correct. Expected 429, got 169
FAIL: Hand count after playing council_room was not correct. Expected 429, got 10
FAIL: Hand count after playing council_room was not correct. Expected 4, got 6
FAIL: Hand count after playing council_room was not correct. Expected 6, got 307
FAIL: Hand count after playing council_room was not correct. Expected 6, got 356
FAIL: Hand count after playing council_room was not correct. Expected 6, got 288
FAIL: Hand count after playing council_room was not correct. Expected 468, got 470
FAIL: Hand count after playing council_room was not correct. Expected 470, got 95
FAIL: Hand count after playing council_room was not correct. Expected 470, got 41
FAIL: Hand count after playing council_room was not correct. Expected 470, got 171
FAIL: Hand count after playing council_room was not correct. Expected 83, got 85
FAIL: Hand count after playing council_room was not correct. Expected 85, got 246
FAIL: Hand count after playing council_room was not correct. Expected 85, got 174
FAIL: Hand count after playing council_room was not correct. Expected 85, got 145
FAIL: Hand count after playing council_room was not correct. Expected 421, got 423
FAIL: Hand count after playing council_room was not correct. Expected 423, got 118
FAIL: Hand count after playing council_room was not correct. Expected 423, got 88
FAIL: Hand count after playing council_room was not correct. Expected 423, got 260
FAIL: Hand count after playing council_room was not correct. Expected 421, got 423
FAIL: Hand count after playing council_room was not correct. Expected 423, got 233
FAIL: Hand count after playing council_room was not correct. Expected 423, got 48
FAIL: Hand count after playing council_room was not correct. Expected 423, got 284
FAIL: Hand count after playing council_room was not correct. Expected 253, got 255
FAIL: Hand count after playing council_room was not correct. Expected 255, got 310
FAIL: Hand count after playing council_room was not correct. Expected 255, got 384
FAIL: Hand count after playing council_room was not correct. Expected 255, got 254
FAIL: Hand count after playing council_room was not correct. Expected 256, got 258
FAIL: Hand count after playing council_room was not correct. Expected 258, got 167
FAIL: Hand count after playing council_room was not correct. Expected 258, got 404
FAIL: Hand count after playing council_room was not correct. Expected 258, got 300
FAIL: Hand count after playing council_room was not correct. Expected 133, got 135
FAIL: Hand count after playing council_room was not correct. Expected 135, got 414
FAIL: Hand count after playing council_room was not correct. Expected 135, got 119
FAIL: Hand count after playing council_room was not correct. Expected 135, got 383
FAIL: Hand count after playing council_room was not correct. Expected 391, got 393
FAIL: Hand count after playing council_room was not correct. Expected 393, got 118
FAIL: Hand count after playing council_room was not correct. Expected 393, got 153
FAIL: Hand count after playing council_room was not correct. Expected 393, got 392
FAIL: Hand count after playing council_room was not correct. Expected 89, got 91
FAIL: Hand count after playing council_room was not correct. Expected 91, got 36
FAIL: Hand count after playing council_room was not correct. Expected 91, got 6
FAIL: Hand count after playing council_room was not correct. Expected 91, got 413
FAIL: Hand count after playing council_room was not correct. Expected 333, got 335
FAIL: Hand count after playing council_room was not correct. Expected 335, got 424
FAIL: Hand count after playing council_room was not correct. Expected 335, got 198
FAIL: Hand count after playing council_room was not correct. Expected 335, got 48
FAIL: Hand count after playing council_room was not correct. Expected 220, got 222
FAIL: Hand count after playing council_room was not correct. Expected 222, got 242
FAIL: Hand count after playing council_room was not correct. Expected 222, got 133
FAIL: Hand count after playing council_room was not correct. Expected 222, got 97
FAIL: Hand count after playing council_room was not correct. Expected 431, got 433
FAIL: Hand count after playing council_room was not correct. Expected 433, got 247
FAIL: Hand count after playing council_room was not correct. Expected 433, got 30
FAIL: Hand count after playing council_room was not correct. Expected 433, got 88
FAIL: Hand count after playing council_room was not correct. Expected 238, got 240
FAIL: Hand count after playing council_room was not correct. Expected 240, got 303
FAIL: Hand count after playing council_room was not correct. Expected 240, got 33
FAIL: Hand count after playing council_room was not correct. Expected 240, got 62
FAIL: Hand count after playing council_room was not correct. Expected 472, got 474
FAIL: Hand count after playing council_room was not correct. Expected 474, got 190
FAIL: Hand count after playing council_room was not correct. Expected 474, got 128
FAIL: Hand count after playing council_room was not correct. Expected 474, got 240
FAIL: Hand count after playing council_room was not correct. Expected 94, got 96
FAIL: Hand count after playing council_room was not correct. Expected 96, got 281
FAIL: Hand count after playing council_room was not correct. Expected 96, got 267
FAIL: Hand count after playing council_room was not correct. Expected 96, got 308
FAIL: Hand count after playing council_room was not correct. Expected 264, got 266
FAIL: Hand count after playing council_room was not correct. Expected 266, got 151
FAIL: Hand count after playing council_room was not correct. Expected 266, got 453
FAIL: Hand count after playing council_room was not correct. Expected 266, got 399
FAIL: Hand count after playing council_room was not correct. Expected 114, got 116
FAIL: Hand count after playing council_room was not correct. Expected 116, got 145
FAIL: Hand count after playing council_room was not correct. Expected 116, got 90
FAIL: Hand count after playing council_room was not correct. Expected 116, got 370
FAIL: Hand count after playing council_room was not correct. Expected 408, got 410
FAIL: Hand count after playing council_room was not correct. Expected 410, got 49
FAIL: Hand count after playing council_room was not correct. Expected 410, got 212
FAIL: Hand count after playing council_room was not correct. Expected 410, got 355
FAIL: Hand count after playing council_room was not correct. Expected 48, got 50
FAIL: Hand count after playing council_room was not correct. Expected 50, got 57
FAIL: Hand count after playing council_room was not correct. Expected 50, got 254
FAIL: Hand count after playing council_room was not correct. Expected 50, got 204
FAIL: Hand count after playing council_room was not correct. Expected 72, got 74
FAIL: Hand count after playing council_room was not correct. Expected 74, got 500
FAIL: Hand count after playing council_room was not correct. Expected 74, got 120
FAIL: Hand count after playing council_room was not correct. Expected 74, got 481
FAIL: Hand count after playing council_room was not correct. Expected 95, got 97
FAIL: Hand count after playing council_room was not correct. Expected 97, got 38
FAIL: Hand count after playing council_room was not correct. Expected 97, got 486
FAIL: Hand count after playing council_room was not correct. Expected 97, got 455
FAIL: Hand count after playing council_room was not correct. Expected 251, got 253
FAIL: Hand count after playing council_room was not correct. Expected 253, got 214
FAIL: Hand count after playing council_room was not correct. Expected 253, got 57
FAIL: Hand count after playing council_room was not correct. Expected 253, got 471
FAIL: Hand count after playing council_room was not correct. Expected 290, got 292
FAIL: Hand count after playing council_room was not correct. Expected 292, got 329
FAIL: Hand count after playing council_room was not correct. Expected 292, got 170
FAIL: Hand count after playing council_room was not correct. Expected 292, got 461
FAIL: Hand count after playing council_room was not correct. Expected 273, got 275
FAIL: Hand count after playing council_room was not correct. Expected 275, got 116
FAIL: Hand count after playing council_room was not correct. Expected 275, got 347
FAIL: Hand count after playing council_room was not correct. Expected 275, got 299
FAIL: Hand count after playing council_room was not correct. Expected 434, got 436
FAIL: Hand count after playing council_room was not correct. Expected 436, got 14
FAIL: Hand count after playing council_room was not correct. Expected 436, got 87
FAIL: Hand count after playing council_room was not correct. Expected 436, got 200
FAIL: Hand count after playing council_room was not correct. Expected 90, got 92
FAIL: Hand count after playing council_room was not correct. Expected 92, got 330
FAIL: Hand count after playing council_room was not correct. Expected 92, got 205
FAIL: Hand count after playing council_room was not correct. Expected 92, got 396
FAIL: Hand count after playing council_room was not correct. Expected 262, got 264
FAIL: Hand count after playing council_room was not correct. Expected 264, got 231
FAIL: Hand count after playing council_room was not correct. Expected 264, got 447
FAIL: Hand count after playing council_room was not correct. Expected 264, got 415
FAIL: Hand count after playing council_room was not correct. Expected 480, got 482
FAIL: Hand count after playing council_room was not correct. Expected 482, got 342
FAIL: Hand count after playing council_room was not correct. Expected 482, got 251
FAIL: Hand count after playing council_room was not correct. Expected 482, got 57
FAIL: Hand count after playing council_room was not correct. Expected 403, got 405
FAIL: Hand count after playing council_room was not correct. Expected 405, got 144
FAIL: Hand count after playing council_room was not correct. Expected 405, got 183
FAIL: Hand count after playing council_room was not correct. Expected 405, got 236
FAIL: Hand count after playing council_room was not correct. Expected 342, got 344
FAIL: Hand count after playing council_room was not correct. Expected 344, got 403
FAIL: Hand count after playing council_room was not correct. Expected 344, got 229
FAIL: Hand count after playing council_room was not correct. Expected 344, got 226
FAIL: Hand count after playing council_room was not correct. Expected 438, got 440
FAIL: Hand count after playing council_room was not correct. Expected 440, got 307
FAIL: Hand count after playing council_room was not correct. Expected 440, got 321
FAIL: Hand count after playing council_room was not correct. Expected 440, got 36
FAIL: Hand count after playing council_room was not correct. Expected 219, got 221
FAIL: Hand count after playing council_room was not correct. Expected 221, got 401
FAIL: Hand count after playing council_room was not correct. Expected 221, got 273
FAIL: Hand count after playing council_room was not correct. Expected 221, got 211
FAIL: Hand count after playing council_room was not correct. Expected 449, got 451
FAIL: Hand count after playing council_room was not correct. Expected 451, got 388
FAIL: Hand count after playing council_room was not correct. Expected 451, got 112
FAIL: Hand count after playing council_room was not correct. Expected 451, got 56
FAIL: Hand count after playing council_room was not correct. Expected 240, got 242
FAIL: Hand count after playing council_room was not correct. Expected 242, got 72
FAIL: Hand count after playing council_room was not correct. Expected 242, got 279
FAIL: Hand count after playing council_room was not correct. Expected 242, got 398
FAIL: Hand count after playing council_room was not correct. Expected 326, got 328
FAIL: Hand count after playing council_room was not correct. Expected 328, got 77
FAIL: Hand count after playing council_room was not correct. Expected 328, got 136
FAIL: Hand count after playing council_room was not correct. Expected 328, got 222
FAIL: Hand count after playing council_room was not correct. Expected 394, got 396
FAIL: Hand count after playing council_room was not correct. Expected 396, got 433
FAIL: Hand count after playing council_room was not correct. Expected 396, got 411
FAIL: Hand count after playing council_room was not correct. Expected 396, got 308
FAIL: Hand count after playing council_room was not correct. Expected 325, got 327
FAIL: Hand count after playing council_room was not correct. Expected 327, got 496
FAIL: Hand count after playing council_room was not correct. Expected 327, got 470
FAIL: Hand count after playing council_room was not correct. Expected 327, got 437
FAIL: Hand count after playing council_room was not correct. Expected 308, got 310
FAIL: Hand count after playing council_room was not correct. Expected 310, got 179
FAIL: Hand count after playing council_room was not correct. Expected 310, got 494
FAIL: Hand count after playing council_room was not correct. Expected 310, got 208
FAIL: Hand count after playing council_room was not correct. Expected 24, got 26
FAIL: Hand count after playing council_room was not correct. Expected 26, got 22
FAIL: Hand count after playing council_room was not correct. Expected 26, got 438
FAIL: Hand count after playing council_room was not correct. Expected 26, got 118
FAIL: Hand count after playing council_room was not correct. Expected 184, got 186
FAIL: Hand count after playing council_room was not correct. Expected 186, got 101
FAIL: Hand count after playing council_room was not correct. Expected 186, got 24
FAIL: Hand count after playing council_room was not correct. Expected 186, got 376
FAIL: Hand count after playing council_room was not correct. Expected 475, got 477
FAIL: Hand count after playing council_room was not correct. Expected 477, got 348
FAIL: Hand count after playing council_room was not correct. Expected 477, got 168
FAIL: Hand count after playing council_room was not correct. Expected 477, got 414
FAIL: Hand count after playing council_room was not correct. Expected 336, got 338
FAIL: Hand count after playing council_room was not correct. Expected 338, got 260
FAIL: Hand count after playing council_room was not correct. Expected 338, got 32
FAIL: Hand count after playing council_room was not correct. Expected 338, got 226
FAIL: Hand count after playing council_room was not correct. Expected 39, got 41
FAIL: Hand count after playing council_room was not correct. Expected 41, got 381
FAIL: Hand count after playing council_room was not correct. Expected 41, got 258
FAIL: Hand count after playing council_room was not correct. Expected 41, got 466
FAIL: Hand count after playing council_room was not correct. Expected 272, got 274
FAIL: Hand count after playing council_room was not correct. Expected 274, got 13
FAIL: Hand count after playing council_room was not correct. Expected 274, got 58
FAIL: Hand count after playing council_room was not correct. Expected 274, got 37
FAIL: Hand count after playing council_room was not correct. Expected 68, got 70
FAIL: Hand count after playing council_room was not correct. Expected 70, got 42
FAIL: Hand count after playing council_room was not correct. Expected 70, got 119
FAIL: Hand count after playing council_room was not correct. Expected 70, got 28
FAIL: Hand count after playing council_room was not correct. Expected 84, got 86
FAIL: Hand count after playing council_room was not correct. Expected 86, got 205
FAIL: Hand count after playing council_room was not correct. Expected 86, got 50
FAIL: Hand count after playing council_room was not correct. Expected 86, got 374
FAIL: Hand count after playing council_room was not correct. Expected 394, got 396
FAIL: Hand count after playing council_room was not correct. Expected 396, got 219
FAIL: Hand count after playing council_room was not correct. Expected 396, got 145
FAIL: Hand count after playing council_room was not correct. Expected 396, got 171
FAIL: Hand count after playing council_room was not correct. Expected 63, got 65
FAIL: Hand count after playing council_room was not correct. Expected 65, got 444
FAIL: Hand count after playing council_room was not correct. Expected 65, got 128
FAIL: Hand count after playing council_room was not correct. Expected 65, got 241
FAIL: Hand count after playing council_room was not correct. Expected 468, got 470
FAIL: Hand count after playing council_room was not correct. Expected 470, got 289
FAIL: Hand count after playing council_room was not correct. Expected 470, got 479
FAIL: Hand count after playing council_room was not correct. Expected 470, got 439
FAIL: Hand count after playing council_room was not correct. Expected 91, got 93
FAIL: Hand count after playing council_room was not correct. Expected 93, got 371
FAIL: Hand count after playing council_room was not correct. Expected 93, got 14
FAIL: Hand count after playing council_room was not correct. Expected 93, got 95
FAIL: Hand count after playing council_room was not correct. Expected 151, got 153
FAIL: Hand count after playing council_room was not correct. Expected 153, got 316
FAIL: Hand count after playing council_room was not correct. Expected 153, got 379
FAIL: Hand count after playing council_room was not correct. Expected 153, got 175
FAIL: Hand count after playing council_room was not correct. Expected 361, got 363
FAIL: Hand count after playing council_room was not correct. Expected 363, got 450
FAIL: Hand count after playing council_room was not correct. Expected 363, got 304
FAIL: Hand count after playing council_room was not correct. Expected 363, got 415
FAIL: Hand count after playing council_room was not correct. Expected 265, got 267
FAIL: Hand count after playing council_room was not correct. Expected 267, got 55
FAIL: Hand count after playing council_room was not correct. Expected 267, got 439
FAIL: Hand count after playing council_room was not correct. Expected 267, got 18
FAIL: Hand count after playing council_room was not correct. Expected 448, got 450
FAIL: Hand count after playing council_room was not correct. Expected 450, got 436
FAIL: Hand count after playing council_room was not correct. Expected 450, got 339
FAIL: Hand count after playing council_room was not correct. Expected 450, got 328
FAIL: Hand count after playing council_room was not correct. Expected 444, got 446
FAIL: Hand count after playing council_room was not correct. Expected 446, got 471
FAIL: Hand count after playing council_room was not correct. Expected 446, got 463
FAIL: Hand count after playing council_room was not correct. Expected 446, got 68
FAIL: Hand count after playing council_room was not correct. Expected 280, got 282
FAIL: Hand count after playing council_room was not correct. Expected 282, got 259
FAIL: Hand count after playing council_room was not correct. Expected 282, got 215
FAIL: Hand count after playing council_room was not correct. Expected 282, got 154
FAIL: Hand count after playing council_room was not correct. Expected 101, got 103
FAIL: Hand count after playing council_room was not correct. Expected 103, got 3
FAIL: Hand count after playing council_room was not correct. Expected 103, got 377
FAIL: Hand count after playing council_room was not correct. Expected 103, got 14
FAIL: Hand count after playing council_room was not correct. Expected 410, got 412
FAIL: Hand count after playing council_room was not correct. Expected 412, got 474
FAIL: Hand count after playing council_room was not correct. Expected 412, got 420
FAIL: Hand count after playing council_room was not correct. Expected 412, got 343
FAIL: Hand count after playing council_room was not correct. Expected 369, got 371
FAIL: Hand count after playing council_room was not correct. Expected 371, got 179
FAIL: Hand count after playing council_room was not correct. Expected 371, got 136
FAIL: Hand count after playing council_room was not correct. Expected 371, got 22
FAIL: Hand count after playing council_room was not correct. Expected 253, got 255
FAIL: Hand count after playing council_room was not correct. Expected 255, got 33
FAIL: Hand count after playing council_room was not correct. Expected 255, got 284
FAIL: Hand count after playing council_room was not correct. Expected 255, got 402
FAIL: Hand count after playing council_room was not correct. Expected 487, got 489
FAIL: Hand count after playing council_room was not correct. Expected 489, got 46
FAIL: Hand count after playing council_room was not correct. Expected 489, got 460
FAIL: Hand count after playing council_room was not correct. Expected 489, got 423
FAIL: Hand count after playing council_room was not correct. Expected 335, got 337
FAIL: Hand count after playing council_room was not correct. Expected 337, got 445
FAIL: Hand count after playing council_room was not correct. Expected 337, got 40
FAIL: Hand count after playing council_room was not correct. Expected 337, got 294
FAIL: Hand count after playing council_room was not correct. Expected 93, got 95
FAIL: Hand count after playing council_room was not correct. Expected 95, got 139
FAIL: Hand count after playing council_room was not correct. Expected 95, got 86
FAIL: Hand count after playing council_room was not correct. Expected 95, got 86
FAIL: Hand count after playing council_room was not correct. Expected 476, got 478
FAIL: Hand count after playing council_room was not correct. Expected 478, got 195
FAIL: Hand count after playing council_room was not correct. Expected 478, got 95
FAIL: Hand count after playing council_room was not correct. Expected 478, got 133
FAIL: Hand count after playing council_room was not correct. Expected 27, got 29
FAIL: Hand count after playing council_room was not correct. Expected 29, got 262
FAIL: Hand count after playing council_room was not correct. Expected 29, got 274
FAIL: Hand count after playing council_room was not correct. Expected 29, got 303
FAIL: Hand count after playing council_room was not correct. Expected 91, got 93
FAIL: Hand count after playing council_room was not correct. Expected 93, got 323
FAIL: Hand count after playing council_room was not correct. Expected 93, got 117
FAIL: Hand count after playing council_room was not correct. Expected 93, got 73
FAIL: Hand count after playing council_room was not correct. Expected 371, got 373
FAIL: Hand count after playing council_room was not correct. Expected 373, got 239
FAIL: Hand count after playing council_room was not correct. Expected 373, got 323
FAIL: Hand count after playing council_room was not correct. Expected 373, got 483
FAIL: Hand count after playing council_room was not correct. Expected 216, got 218
FAIL: Hand count after playing council_room was not correct. Expected 218, got 228
FAIL: Hand count after playing council_room was not correct. Expected 218, got 160
FAIL: Hand count after playing council_room was not correct. Expected 218, got 443
FAIL: Hand count after playing council_room was not correct. Expected 476, got 478
FAIL: Hand count after playing council_room was not correct. Expected 478, got 106
FAIL: Hand count after playing council_room was not correct. Expected 478, got 55
FAIL: Hand count after playing council_room was not correct. Expected 478, got 27
FAIL: Hand count after playing council_room was not correct. Expected 265, got 267
FAIL: Hand count after playing council_room was not correct. Expected 267, got 446
FAIL: Hand count after playing council_room was not correct. Expected 267, got 349
FAIL: Hand count after playing council_room was not correct. Expected 267, got 2
FAIL: Hand count after playing council_room was not correct. Expected 49, got 51
FAIL: Hand count after playing council_room was not correct. Expected 51, got 122
FAIL: Hand count after playing council_room was not correct. Expected 51, got 95
FAIL: Hand count after playing council_room was not correct. Expected 51, got 301
FAIL: Hand count after playing council_room was not correct. Expected 498, got 500
FAIL: Hand count after playing council_room was not correct. Expected 500, got 373
FAIL: Hand count after playing council_room was not correct. Expected 500, got 232
FAIL: Hand count after playing council_room was not correct. Expected 500, got 120
FAIL: Hand count after playing council_room was not correct. Expected 157, got 159
FAIL: Hand count after playing council_room was not correct. Expected 159, got 34
FAIL: Hand count after playing council_room was not correct. Expected 159, got 360
FAIL: Hand count after playing council_room was not correct. Expected 159, got 398
FAIL: Hand count after playing council_room was not correct. Expected 282, got 284
FAIL: Hand count after playing council_room was not correct. Expected 284, got 73
FAIL: Hand count after playing council_room was not correct. Expected 284, got 9
FAIL: Hand count after playing council_room was not correct. Expected 284, got 27
FAIL: Hand count after playing council_room was not correct. Expected 163, got 165
FAIL: Hand count after playing council_room was not correct. Expected 165, got 10
FAIL: Hand count after playing council_room was not correct. Expected 165, got 97
FAIL: Hand count after playing council_room was not correct. Expected 165, got 442
FAIL: Hand count after playing council_room was not correct. Expected 384, got 386
FAIL: Hand count after playing council_room was not correct. Expected 386, got 48
FAIL: Hand count after playing council_room was not correct. Expected 386, got 385
FAIL: Hand count after playing council_room was not correct. Expected 386, got 259
FAIL: Hand count after playing council_room was not correct. Expected 321, got 323
FAIL: Hand count after playing council_room was not correct. Expected 323, got 170
FAIL: Hand count after playing council_room was not correct. Expected 323, got 449
FAIL: Hand count after playing council_room was not correct. Expected 323, got 469
FAIL: Hand count after playing council_room was not correct. Expected 411, got 413
FAIL: Hand count after playing council_room was not correct. Expected 413, got 356
FAIL: Hand count after playing council_room was not correct. Expected 413, got 417
FAIL: Hand count after playing council_room was not correct. Expected 413, got 266
FAIL: Hand count after playing council_room was not correct. Expected 228, got 230
FAIL: Hand count after playing council_room was not correct. Expected 230, got 378
FAIL: Hand count after playing council_room was not correct. Expected 230, got 66
FAIL: Hand count after playing council_room was not correct. Expected 230, got 309
FAIL: Hand count after playing council_room was not correct. Expected 122, got 124
FAIL: Hand count after playing council_room was not correct. Expected 124, got 49
FAIL: Hand count after playing council_room was not correct. Expected 124, got 153
FAIL: Hand count after playing council_room was not correct. Expected 124, got 331
FAIL: Hand count after playing council_room was not correct. Expected 207, got 209
FAIL: Hand count after playing council_room was not correct. Expected 209, got 283
FAIL: Hand count after playing council_room was not correct. Expected 209, got 132
FAIL: Hand count after playing council_room was not correct. Expected 209, got 85
FAIL: Hand count after playing council_room was not correct. Expected 91, got 93
FAIL: Hand count after playing council_room was not correct. Expected 93, got 267
FAIL: Hand count after playing council_room was not correct. Expected 93, got 130
FAIL: Hand count after playing council_room was not correct. Expected 93, got 222
FAIL: Hand count after playing council_room was not correct. Expected 17, got 19
FAIL: Hand count after playing council_room was not correct. Expected 19, got 46
FAIL: Hand count after playing council_room was not correct. Expected 19, got 12
FAIL: Hand count after playing council_room was not correct. Expected 19, got 37
FAIL: Hand count after playing council_room was not correct. Expected 218, got 220
FAIL: Hand count after playing council_room was not correct. Expected 220, got 57
FAIL: Hand count after playing council_room was not correct. Expected 220, got 422
FAIL: Hand count after playing council_room was not correct. Expected 220, got 387
FAIL: Hand count after playing council_room was not correct. Expected 422, got 424
FAIL: Hand count after playing council_room was not correct. Expected 424, got 370
FAIL: Hand count after playing council_room was not correct. Expected 424, got 268
FAIL: Hand count after playing council_room was not correct. Expected 424, got 392
FAIL: Hand count after playing council_room was not correct. Expected 240, got 242
FAIL: Hand count after playing council_room was not correct. Expected 242, got 50
FAIL: Hand count after playing council_room was not correct. Expected 242, got 483
FAIL: Hand count after playing council_room was not correct. Expected 242, got 230
FAIL: Hand count after playing council_room was not correct. Expected 160, got 162
FAIL: Hand count after playing council_room was not correct. Expected 162, got 117
FAIL: Hand count after playing council_room was not correct. Expected 162, got 17
FAIL: Hand count after playing council_room was not correct. Expected 162, got 425
FAIL: Hand count after playing council_room was not correct. Expected 203, got 205
FAIL: Hand count after playing council_room was not correct. Expected 205, got 103
FAIL: Hand count after playing council_room was not correct. Expected 205, got 210
FAIL: Hand count after playing council_room was not correct. Expected 205, got 301
FAIL: Hand count after playing council_room was not correct. Expected 193, got 195
FAIL: Hand count after playing council_room was not correct. Expected 195, got 167
FAIL: Hand count after playing council_room was not correct. Expected 195, got 380
FAIL: Hand count after playing council_room was not correct. Expected 195, got 277
FAIL: Hand count after playing council_room was not correct. Expected 406, got 408
FAIL: Hand count after playing council_room was not correct. Expected 408, got 303
FAIL: Hand count after playing council_room was not correct. Expected 408, got 495
FAIL: Hand count after playing council_room was not correct. Expected 408, got 303
FAIL: Hand count after playing council_room was not correct. Expected 287, got 289
FAIL: Hand count after playing council_room was not correct. Expected 289, got 175
FAIL: Hand count after playing council_room was not correct. Expected 289, got 62
FAIL: Hand count after playing council_room was not correct. Expected 289, got 99
FAIL: Hand count after playing council_room was not correct. Expected 104, got 106
FAIL: Hand count after playing council_room was not correct. Expected 106, got 318
FAIL: Hand count after playing council_room was not correct. Expected 106, got 1
FAIL: Hand count after playing council_room was not correct. Expected 106, got 93
FAIL: Hand count after playing council_room was not correct. Expected 88, got 90
FAIL: Hand count after playing council_room was not correct. Expected 90, got 83
FAIL: Hand count after playing council_room was not correct. Expected 90, got 5
FAIL: Hand count after playing council_room was not correct. Expected 90, got 73
FAIL: Hand count after playing council_room was not correct. Expected 137, got 139
FAIL: Hand count after playing council_room was not correct. Expected 139, got 331
FAIL: Hand count after playing council_room was not correct. Expected 139, got 105
FAIL: Hand count after playing council_room was not correct. Expected 139, got 18
FAIL: Hand count after playing council_room was not correct. Expected 179, got 181
FAIL: Hand count after playing council_room was not correct. Expected 181, got 428
FAIL: Hand count after playing council_room was not correct. Expected 181, got 258
FAIL: Hand count after playing council_room was not correct. Expected 181, got 376
FAIL: Hand count after playing council_room was not correct. Expected 335, got 337
FAIL: Hand count after playing council_room was not correct. Expected 337, got 70
FAIL: Hand count after playing council_room was not correct. Expected 337, got 205
FAIL: Hand count after playing council_room was not correct. Expected 337, got 421
FAIL: Hand count after playing council_room was not correct. Expected 76, got 78
FAIL: Hand count after playing council_room was not correct. Expected 78, got 498
FAIL: Hand count after playing council_room was not correct. Expected 78, got 201
FAIL: Hand count after playing council_room was not correct. Expected 78, got 159
FAIL: Hand count after playing council_room was not correct. Expected 185, got 187
FAIL: Hand count after playing council_room was not correct. Expected 187, got 95
FAIL: Hand count after playing council_room was not correct. Expected 187, got 114
FAIL: Hand count after playing council_room was not correct. Expected 187, got 26
FAIL: Hand count after playing council_room was not correct. Expected 224, got 226
FAIL: Hand count after playing council_room was not correct. Expected 226, got 67
FAIL: Hand count after playing council_room was not correct. Expected 226, got 420
FAIL: Hand count after playing council_room was not correct. Expected 226, got 277
FAIL: Hand count after playing council_room was not correct. Expected 371, got 373
FAIL: Hand count after playing council_room was not correct. Expected 373, got 462
FAIL: Hand count after playing council_room was not correct. Expected 373, got 366
FAIL: Hand count after playing council_room was not correct. Expected 373, got 53
FAIL: Hand count after playing council_room was not correct. Expected 485, got 487
FAIL: Hand count after playing council_room was not correct. Expected 487, got 129
FAIL: Hand count after playing council_room was not correct. Expected 487, got 303
FAIL: Hand count after playing council_room was not correct. Expected 487, got 203
FAIL: Hand count after playing council_room was not correct. Expected 124, got 126
FAIL: Hand count after playing council_room was not correct. Expected 126, got 449
FAIL: Hand count after playing council_room was not correct. Expected 126, got 371
FAIL: Hand count after playing council_room was not correct. Expected 126, got 208
FAIL: Hand count after playing council_room was not correct. Expected 12, got 14
FAIL: Hand count after playing council_room was not correct. Expected 14, got 77
FAIL: Hand count after playing council_room was not correct. Expected 14, got 259
FAIL: Hand count after playing council_room was not correct. Expected 14, got 439
FAIL: Hand count after playing council_room was not correct. Expected 400, got 402
FAIL: Hand count after playing council_room was not correct. Expected 402, got 416
FAIL: Hand count after playing council_room was not correct. Expected 402, got 218
FAIL: Hand count after playing council_room was not correct. Expected 402, got 307
FAIL: Hand count after playing council_room was not correct. Expected 300, got 302
FAIL: Hand count after playing council_room was not correct. Expected 302, got 489
FAIL: Hand count after playing council_room was not correct. Expected 302, got 150
FAIL: Hand count after playing council_room was not correct. Expected 302, got 200
FAIL: Hand count after playing council_room was not correct. Expected 453, got 455
FAIL: Hand count after playing council_room was not correct. Expected 455, got 461
FAIL: Hand count after playing council_room was not correct. Expected 455, got 94
FAIL: Hand count after playing council_room was not correct. Expected 455, got 266
FAIL: Hand count after playing council_room was not correct. Expected 121, got 123
FAIL: Hand count after playing council_room was not correct. Expected 123, got 335
FAIL: Hand count after playing council_room was not correct. Expected 123, got 222
FAIL: Hand count after playing council_room was not correct. Expected 123, got 448
FAIL: Hand count after playing council_room was not correct. Expected 4, got 6
FAIL: Hand count after playing council_room was not correct. Expected 6, got 312
FAIL: Hand count after playing council_room was not correct. Expected 6, got 122
FAIL: Hand count after playing council_room was not correct. Expected 6, got 389
FAIL: Hand count after playing council_room was not correct. Expected 360, got 362
FAIL: Hand count after playing council_room was not correct. Expected 362, got 379
FAIL: Hand count after playing council_room was not correct. Expected 362, got 41
FAIL: Hand count after playing council_room was not correct. Expected 362, got 161
FAIL: Hand count after playing council_room was not correct. Expected 153, got 155
FAIL: Hand count after playing council_room was not correct. Expected 155, got 186
FAIL: Hand count after playing council_room was not correct. Expected 155, got 364
FAIL: Hand count after playing council_room was not correct. Expected 155, got 442
FAIL: Hand count after playing council_room was not correct. Expected 488, got 490
FAIL: Hand count after playing council_room was not correct. Expected 490, got 198
FAIL: Hand count after playing council_room was not correct. Expected 490, got 460
FAIL: Hand count after playing council_room was not correct. Expected 490, got 42
FAIL: Hand count after playing council_room was not correct. Expected 362, got 364
FAIL: Hand count after playing council_room was not correct. Expected 364, got 239
FAIL: Hand count after playing council_room was not correct. Expected 364, got 34
FAIL: Hand count after playing council_room was not correct. Expected 364, got 149
FAIL: Hand count after playing council_room was not correct. Expected 25, got 27
FAIL: Hand count after playing council_room was not correct. Expected 27, got 221
FAIL: Hand count after playing council_room was not correct. Expected 27, got 64
FAIL: Hand count after playing council_room was not correct. Expected 27, got 431
FAIL: Hand count after playing council_room was not correct. Expected 408, got 410
FAIL: Hand count after playing council_room was not correct. Expected 410, got 288
FAIL: Hand count after playing council_room was not correct. Expected 410, got 82
FAIL: Hand count after playing council_room was not correct. Expected 410, got 112
FAIL: Hand count after playing council_room was not correct. Expected 217, got 219
FAIL: Hand count after playing council_room was not correct. Expected 219, got 31
FAIL: Hand count after playing council_room was not correct. Expected 219, got 465
FAIL: Hand count after playing council_room was not correct. Expected 219, got 163
FAIL: Hand count after playing council_room was not correct. Expected 198, got 200
FAIL: Hand count after playing council_room was not correct. Expected 200, got 277
FAIL: Hand count after playing council_room was not correct. Expected 200, got 402
FAIL: Hand count after playing council_room was not correct. Expected 200, got 329
FAIL: Hand count after playing council_room was not correct. Expected 461, got 463
FAIL: Hand count after playing council_room was not correct. Expected 463, got 447
FAIL: Hand count after playing council_room was not correct. Expected 463, got 484
FAIL: Hand count after playing council_room was not correct. Expected 463, got 249
FAIL: Hand count after playing council_room was not correct. Expected 54, got 56
FAIL: Hand count after playing council_room was not correct. Expected 56, got 254
FAIL: Hand count after playing council_room was not correct. Expected 56, got 382
FAIL: Hand count after playing council_room was not correct. Expected 56, got 406
FAIL: Hand count after playing council_room was not correct. Expected 149, got 151
FAIL: Hand count after playing council_room was not correct. Expected 151, got 471
FAIL: Hand count after playing council_room was not correct. Expected 151, got 203
FAIL: Hand count after playing council_room was not correct. Expected 151, got 207
FAIL: Hand count after playing council_room was not correct. Expected 266, got 268
FAIL: Hand count after playing council_room was not correct. Expected 268, got 85
FAIL: Hand count after playing council_room was not correct. Expected 268, got 398
FAIL: Hand count after playing council_room was not correct. Expected 268, got 405
FAIL: Hand count after playing council_room was not correct. Expected 282, got 284
FAIL: Hand count after playing council_room was not correct. Expected 284, got 469
FAIL: Hand count after playing council_room was not correct. Expected 284, got 435
FAIL: Hand count after playing council_room was not correct. Expected 284, got 144
FAIL: Hand count after playing council_room was not correct. Expected 29, got 31
FAIL: Hand count after playing council_room was not correct. Expected 31, got 54
FAIL: Hand count after playing council_room was not correct. Expected 31, got 261
FAIL: Hand count after playing council_room was not correct. Expected 31, got 378
FAIL: Hand count after playing council_room was not correct. Expected 274, got 276
FAIL: Hand count after playing council_room was not correct. Expected 276, got 139
FAIL: Hand count after playing council_room was not correct. Expected 276, got 342
FAIL: Hand count after playing council_room was not correct. Expected 276, got 55
FAIL: Hand count after playing council_room was not correct. Expected 147, got 149
FAIL: Hand count after playing council_room was not correct. Expected 149, got 200
FAIL: Hand count after playing council_room was not correct. Expected 149, got 32
FAIL: Hand count after playing council_room was not correct. Expected 149, got 209
FAIL: Hand count after playing council_room was not correct. Expected 489, got 491
FAIL: Hand count after playing council_room was not correct. Expected 491, got 99
FAIL: Hand count after playing council_room was not correct. Expected 491, got 344
FAIL: Hand count after playing council_room was not correct. Expected 491, got 472
FAIL: Hand count after playing council_room was not correct. Expected 31, got 33
FAIL: Hand count after playing council_room was not correct. Expected 33, got 157
FAIL: Hand count after playing council_room was not correct. Expected 33, got 202
FAIL: Hand count after playing council_room was not correct. Expected 33, got 487
FAIL: Hand count after playing council_room was not correct. Expected 429, got 431
FAIL: Hand count after playing council_room was not correct. Expected 431, got 234
FAIL: Hand count after playing council_room was not correct. Expected 431, got 130
FAIL: Hand count after playing council_room was not correct. Expected 431, got 203
FAIL: Hand count after playing council_room was not correct. Expected 232, got 234
FAIL: Hand count after playing council_room was not correct. Expected 234, got 379
FAIL: Hand count after playing council_room was not correct. Expected 234, got 315
FAIL: Hand count after playing council_room was not correct. Expected 234, got 200
FAIL: Hand count after playing council_room was not correct. Expected 475, got 477
FAIL: Hand count after playing council_room was not correct. Expected 477, got 135
FAIL: Hand count after playing council_room was not correct. Expected 477, got 468
FAIL: Hand count after playing council_room was not correct. Expected 477, got 199
FAIL: Hand count after playing council_room was not correct. Expected 7, got 9
FAIL: Hand count after playing council_room was not correct. Expected 9, got 478
FAIL: Hand count after playing council_room was not correct. Expected 9, got 167
FAIL: Hand count after playing council_room was not correct. Expected 9, got 189
FAIL: Hand count after playing council_room was not correct. Expected 23, got 25
FAIL: Hand count after playing council_room was not correct. Expected 25, got 218
FAIL: Hand count after playing council_room was not correct. Expected 25, got 337
FAIL: Hand count after playing council_room was not correct. Expected 25, got 262
FAIL: Hand count after playing council_room was not correct. Expected 222, got 224
FAIL: Hand count after playing council_room was not correct. Expected 224, got 90
FAIL: Hand count after playing council_room was not correct. Expected 224, got 338
FAIL: Hand count after playing council_room was not correct. Expected 224, got 212
FAIL: Hand count after playing council_room was not correct. Expected 417, got 419
FAIL: Hand count after playing council_room was not correct. Expected 419, got 369
FAIL: Hand count after playing council_room was not correct. Expected 419, got 72
FAIL: Hand count after playing council_room was not correct. Expected 419, got 428
FAIL: Hand count after playing council_room was not correct. Expected 345, got 347
FAIL: Hand count after playing council_room was not correct. Expected 347, got 73
FAIL: Hand count after playing council_room was not correct. Expected 347, got 473
FAIL: Hand count after playing council_room was not correct. Expected 347, got 450
FAIL: Hand count after playing council_room was not correct. Expected 492, got 494
FAIL: Hand count after playing council_room was not correct. Expected 494, got 21
FAIL: Hand count after playing council_room was not correct. Expected 494, got 469
FAIL: Hand count after playing council_room was not correct. Expected 494, got 193
FAIL: Hand count after playing council_room was not correct. Expected 349, got 351
FAIL: Hand count after playing council_room was not correct. Expected 351, got 77
FAIL: Hand count after playing council_room was not correct. Expected 351, got 409
FAIL: Hand count after playing council_room was not correct. Expected 351, got 413
FAIL: Hand count after playing council_room was not correct. Expected 42, got 44
FAIL: Hand count after playing council_room was not correct. Expected 44, got 450
FAIL: Hand count after playing council_room was not correct. Expected 44, got 135
FAIL: Hand count after playing council_room was not correct. Expected 44, got 342
FAIL: Hand count after playing council_room was not correct. Expected 11, got 13
FAIL: Hand count after playing council_room was not correct. Expected 13, got 150
FAIL: Hand count after playing council_room was not correct. Expected 13, got 295
FAIL: Hand count after playing council_room was not correct. Expected 13, got 370
FAIL: Hand count after playing council_room was not correct. Expected 462, got 464
FAIL: Hand count after playing council_room was not correct. Expected 464, got 16
FAIL: Hand count after playing council_room was not correct. Expected 464, got 79
FAIL: Hand count after playing council_room was not correct. Expected 464, got 16
FAIL: Hand count after playing council_room was not correct. Expected 298, got 300
FAIL: Hand count after playing council_room was not correct. Expected 300, got 463
FAIL: Hand count after playing council_room was not correct. Expected 300, got 204
FAIL: Hand count after playing council_room was not correct. Expected 300, got 9
FAIL: Hand count after playing council_room was not correct. Expected 159, got 161
FAIL: Hand count after playing council_room was not correct. Expected 161, got 120
FAIL: Hand count after playing council_room was not correct. Expected 161, got 233
FAIL: Hand count after playing council_room was not correct. Expected 161, got 243
FAIL: Hand count after playing council_room was not correct. Expected 69, got 71
FAIL: Hand count after playing council_room was not correct. Expected 71, got 253
FAIL: Hand count after playing council_room was not correct. Expected 71, got 312
FAIL: Hand count after playing council_room was not correct. Expected 71, got 66
FAIL: Hand count after playing council_room was not correct. Expected 459, got 461
FAIL: Hand count after playing council_room was not correct. Expected 461, got 391
FAIL: Hand count after playing council_room was not correct. Expected 461, got 287
FAIL: Hand count after playing council_room was not correct. Expected 461, got 134
FAIL: Hand count after playing council_room was not correct. Expected 279, got 281
FAIL: Hand count after playing council_room was not correct. Expected 281, got 414
FAIL: Hand count after playing council_room was not correct. Expected 281, got 22
FAIL: Hand count after playing council_room was not correct. Expected 281, got 412
FAIL: Hand count after playing council_room was not correct. Expected 394, got 396
FAIL: Hand count after playing council_room was not correct. Expected 396, got 65
FAIL: Hand count after playing council_room was not correct. Expected 396, got 439
FAIL: Hand count after playing council_room was not correct. Expected 396, got 444
FAIL: Hand count after playing council_room was not correct. Expected 477, got 479
FAIL: Hand count after playing council_room was not correct. Expected 479, got 454
FAIL: Hand count after playing council_room was not correct. Expected 479, got 458
FAIL: Hand count after playing council_room was not correct. Expected 479, got 292
FAIL: Hand count after playing council_room was not correct. Expected 360, got 362
FAIL: Hand count after playing council_room was not correct. Expected 362, got 169
FAIL: Hand count after playing council_room was not correct. Expected 362, got 141
FAIL: Hand count after playing council_room was not correct. Expected 362, got 298
FAIL: Hand count after playing council_room was not correct. Expected 460, got 462
FAIL: Hand count after playing council_room was not correct. Expected 462, got 209
FAIL: Hand count after playing council_room was not correct. Expected 462, got 251
FAIL: Hand count after playing council_room was not correct. Expected 462, got 314
FAIL: Hand count after playing council_room was not correct. Expected 123, got 125
FAIL: Hand count after playing council_room was not correct. Expected 125, got 447
FAIL: Hand count after playing council_room was not correct. Expected 125, got 330
FAIL: Hand count after playing council_room was not correct. Expected 125, got 198
FAIL: Hand count after playing council_room was not correct. Expected 312, got 314
FAIL: Hand count after playing council_room was not correct. Expected 314, got 147
FAIL: Hand count after playing council_room was not correct. Expected 314, got 213
FAIL: Hand count after playing council_room was not correct. Expected 314, got 398
FAIL: Hand count after playing council_room was not correct. Expected 327, got 329
FAIL: Hand count after playing council_room was not correct. Expected 329, got 223
FAIL: Hand count after playing council_room was not correct. Expected 329, got 337
FAIL: Hand count after playing council_room was not correct. Expected 329, got 166
FAIL: Hand count after playing council_room was not correct. Expected 333, got 335
FAIL: Hand count after playing council_room was not correct. Expected 335, got 443
FAIL: Hand count after playing council_room was not correct. Expected 335, got 92
FAIL: Hand count after playing council_room was not correct. Expected 335, got 423
FAIL: Hand count after playing council_room was not correct. Expected 255, got 257
FAIL: Hand count after playing council_room was not correct. Expected 257, got 107
FAIL: Hand count after playing council_room was not correct. Expected 257, got 330
FAIL: Hand count after playing council_room was not correct. Expected 257, got 11
FAIL: Hand count after playing council_room was not correct. Expected 71, got 73
FAIL: Hand count after playing council_room was not correct. Expected 73, got 348
FAIL: Hand count after playing council_room was not correct. Expected 73, got 255
FAIL: Hand count after playing council_room was not correct. Expected 73, got 254
FAIL: Hand count after playing council_room was not correct. Expected 278, got 280
FAIL: Hand count after playing council_room was not correct. Expected 280, got 490
FAIL: Hand count after playing council_room was not correct. Expected 280, got 363
FAIL: Hand count after playing council_room was not correct. Expected 280, got 58
FAIL: Hand count after playing council_room was not correct. Expected 454, got 456
FAIL: Hand count after playing council_room was not correct. Expected 456, got 57
FAIL: Hand count after playing council_room was not correct. Expected 456, got 385
FAIL: Hand count after playing council_room was not correct. Expected 456, got 86
FAIL: Hand count after playing council_room was not correct. Expected 9, got 11
FAIL: Hand count after playing council_room was not correct. Expected 11, got 247
FAIL: Hand count after playing council_room was not correct. Expected 11, got 424
FAIL: Hand count after playing council_room was not correct. Expected 11, got 145
FAIL: Hand count after playing council_room was not correct. Expected 250, got 252
FAIL: Hand count after playing council_room was not correct. Expected 252, got 331
FAIL: Hand count after playing council_room was not correct. Expected 252, got 430
FAIL: Hand count after playing council_room was not correct. Expected 252, got 17
FAIL: Hand count after playing council_room was not correct. Expected 425, got 427
FAIL: Hand count after playing council_room was not correct. Expected 427, got 243
FAIL: Hand count after playing council_room was not correct. Expected 427, got 243
FAIL: Hand count after playing council_room was not correct. Expected 427, got 185
FAIL: Hand count after playing council_room was not correct. Expected 379, got 381
FAIL: Hand count after playing council_room was not correct. Expected 381, got 363
FAIL: Hand count after playing council_room was not correct. Expected 381, got 173
FAIL: Hand count after playing council_room was not correct. Expected 381, got 432
FAIL: Hand count after playing council_room was not correct. Expected 474, got 476
FAIL: Hand count after playing council_room was not correct. Expected 476, got 57
FAIL: Hand count after playing council_room was not correct. Expected 476, got 160
FAIL: Hand count after playing council_room was not correct. Expected 476, got 17
FAIL: Hand count after playing council_room was not correct. Expected 425, got 427
FAIL: Hand count after playing council_room was not correct. Expected 427, got 116
FAIL: Hand count after playing council_room was not correct. Expected 427, got 99
FAIL: Hand count after playing council_room was not correct. Expected 427, got 445
FAIL: Hand count after playing council_room was not correct. Expected 415, got 417
FAIL: Hand count after playing council_room was not correct. Expected 417, got 304
FAIL: Hand count after playing council_room was not correct. Expected 417, got 263
FAIL: Hand count after playing council_room was not correct. Expected 417, got 385
FAIL: Hand count after playing council_room was not correct. Expected 361, got 363
FAIL: Hand count after playing council_room was not correct. Expected 363, got 429
FAIL: Hand count after playing council_room was not correct. Expected 363, got 260
FAIL: Hand count after playing council_room was not correct. Expected 363, got 455
FAIL: Hand count after playing council_room was not correct. Expected 451, got 453
FAIL: Hand count after playing council_room was not correct. Expected 453, got 39
FAIL: Hand count after playing council_room was not correct. Expected 453, got 334
FAIL: Hand count after playing council_room was not correct. Expected 453, got 334
FAIL: Hand count after playing council_room was not correct. Expected 333, got 335
FAIL: Hand count after playing council_room was not correct. Expected 335, got 79
FAIL: Hand count after playing council_room was not correct. Expected 335, got 274
FAIL: Hand count after playing council_room was not correct. Expected 335, got 108
FAIL: Hand count after playing council_room was not correct. Expected 342, got 344
FAIL: Hand count after playing council_room was not correct. Expected 344, got 280
FAIL: Hand count after playing council_room was not correct. Expected 344, got 384
FAIL: Hand count after playing council_room was not correct. Expected 344, got 176
FAIL: Hand count after playing council_room was not correct. Expected 8, got 10
FAIL: Hand count after playing council_room was not correct. Expected 10, got 152
FAIL: Hand count after playing council_room was not correct. Expected 10, got 86
FAIL: Hand count after playing council_room was not correct. Expected 10, got 182
FAIL: Hand count after playing council_room was not correct. Expected 397, got 399
FAIL: Hand count after playing council_room was not correct. Expected 399, got 134
FAIL: Hand count after playing council_room was not correct. Expected 399, got 238
FAIL: Hand count after playing council_room was not correct. Expected 399, got 129
FAIL: Hand count after playing council_room was not correct. Expected 192, got 194
FAIL: Hand count after playing council_room was not correct. Expected 194, got 190
FAIL: Hand count after playing council_room was not correct. Expected 194, got 145
FAIL: Hand count after playing council_room was not correct. Expected 194, got 38
FAIL: Hand count after playing council_room was not correct. Expected 44, got 46
FAIL: Hand count after playing council_room was not correct. Expected 46, got 473
FAIL: Hand count after playing council_room was not correct. Expected 46, got 108
FAIL: Hand count after playing council_room was not correct. Expected 46, got 279
FAIL: Hand count after playing council_room was not correct. Expected 493, got 495
FAIL: Hand count after playing council_room was not correct. Expected 495, got 54
FAIL: Hand count after playing council_room was not correct. Expected 495, got 378
FAIL: Hand count after playing council_room was not correct. Expected 495, got 466
FAIL: Hand count after playing council_room was not correct. Expected 110, got 112
FAIL: Hand count after playing council_room was not correct. Expected 112, got 242
FAIL: Hand count after playing council_room was not correct. Expected 112, got 450
FAIL: Hand count after playing council_room was not correct. Expected 112, got 331
FAIL: Hand count after playing council_room was not correct. Expected 412, got 414
FAIL: Hand count after playing council_room was not correct. Expected 414, got 276
FAIL: Hand count after playing council_room was not correct. Expected 414, got 212
FAIL: Hand count after playing council_room was not correct. Expected 414, got 459
FAIL: Hand count after playing council_room was not correct. Expected 482, got 484
FAIL: Hand count after playing council_room was not correct. Expected 484, got 295
FAIL: Hand count after playing council_room was not correct. Expected 484, got 486
FAIL: Hand count after playing council_room was not correct. Expected 484, got 183
FAIL: Hand count after playing council_room was not correct. Expected 222, got 224
FAIL: Hand count after playing council_room was not correct. Expected 224, got 390
FAIL: Hand count after playing council_room was not correct. Expected 224, got 32
FAIL: Hand count after playing council_room was not correct. Expected 224, got 28
FAIL: Hand count after playing council_room was not correct. Expected 371, got 373
FAIL: Hand count after playing council_room was not correct. Expected 373, got 192
FAIL: Hand count after playing council_room was not correct. Expected 373, got 452
FAIL: Hand count after playing council_room was not correct. Expected 373, got 226
FAIL: Hand count after playing council_room was not correct. Expected 499, got 501
FAIL: Hand count after playing council_room was not correct. Expected 501, got 315
FAIL: Hand count after playing council_room was not correct. Expected 501, got 265
FAIL: Hand count after playing council_room was not correct. Expected 501, got 83
FAIL: Hand count after playing council_room was not correct. Expected 233, got 235
FAIL: Hand count after playing council_room was not correct. Expected 235, got 106
FAIL: Hand count after playing council_room was not correct. Expected 235, got 463
FAIL: Hand count after playing council_room was not correct. Expected 235, got 327
FAIL: Hand count after playing council_room was not correct. Expected 434, got 436
FAIL: Hand count after playing council_room was not correct. Expected 436, got 313
FAIL: Hand count after playing council_room was not correct. Expected 436, got 183
FAIL: Hand count after playing council_room was not correct. Expected 436, got 390
FAIL: Hand count after playing council_room was not correct. Expected 65, got 67
FAIL: Hand count after playing council_room was not correct. Expected 67, got 476
FAIL: Hand count after playing council_room was not correct. Expected 67, got 53
FAIL: Hand count after playing council_room was not correct. Expected 67, got 247
FAIL: Hand count after playing council_room was not correct. Expected 301, got 303
FAIL: Hand count after playing council_room was not correct. Expected 303, got 156
FAIL: Hand count after playing council_room was not correct. Expected 303, got 110
FAIL: Hand count after playing council_room was not correct. Expected 303, got 411
FAIL: Hand count after playing council_room was not correct. Expected 214, got 216
FAIL: Hand count after playing council_room was not correct. Expected 216, got 384
FAIL: Hand count after playing council_room was not correct. Expected 216, got 269
FAIL: Hand count after playing council_room was not correct. Expected 216, got 447
FAIL: Hand count after playing council_room was not correct. Expected 357, got 359
FAIL: Hand count after playing council_room was not correct. Expected 359, got 483
FAIL: Hand count after playing council_room was not correct. Expected 359, got 177
FAIL: Hand count after playing council_room was not correct. Expected 359, got 167
FAIL: Hand count after playing council_room was not correct. Expected 188, got 190
FAIL: Hand count after playing council_room was not correct. Expected 190, got 219
FAIL: Hand count after playing council_room was not correct. Expected 190, got 272
FAIL: Hand count after playing council_room was not correct. Expected 190, got 82
FAIL: Hand count after playing council_room was not correct. Expected 282, got 284
FAIL: Hand count after playing council_room was not correct. Expected 284, got 165
FAIL: Hand count after playing council_room was not correct. Expected 284, got 420
FAIL: Hand count after playing council_room was not correct. Expected 284, got 318
FAIL: Hand count after playing council_room was not correct. Expected 402, got 404
FAIL: Hand count after playing council_room was not correct. Expected 404, got 237
FAIL: Hand count after playing council_room was not correct. Expected 404, got 303
FAIL: Hand count after playing council_room was not correct. Expected 404, got 383
FAIL: Hand count after playing council_room was not correct. Expected 150, got 152
FAIL: Hand count after playing council_room was not correct. Expected 152, got 21
FAIL: Hand count after playing council_room was not correct. Expected 152, got 226
FAIL: Hand count after playing council_room was not correct. Expected 152, got 80
FAIL: Hand count after playing council_room was not correct. Expected 273, got 275
FAIL: Hand count after playing council_room was not correct. Expected 275, got 225
FAIL: Hand count after playing council_room was not correct. Expected 275, got 236
FAIL: Hand count after playing council_room was not correct. Expected 275, got 369
FAIL: Hand count after playing council_room was not correct. Expected 27, got 29
FAIL: Hand count after playing council_room was not correct. Expected 29, got 231
FAIL: Hand count after playing council_room was not correct. Expected 29, got 68
FAIL: Hand count after playing council_room was not correct. Expected 29, got 135
FAIL: Hand count after playing council_room was not correct. Expected 82, got 84
FAIL: Hand count after playing council_room was not correct. Expected 84, got 204
FAIL: Hand count after playing council_room was not correct. Expected 84, got 338
FAIL: Hand count after playing council_room was not correct. Expected 84, got 372
FAIL: Hand count after playing council_room was not correct. Expected 335, got 337
FAIL: Hand count after playing council_room was not correct. Expected 337, got 317
FAIL: Hand count after playing council_room was not correct. Expected 337, got 265
FAIL: Hand count after playing council_room was not correct. Expected 337, got 78
FAIL: Hand count after playing council_room was not correct. Expected 425, got 427
FAIL: Hand count after playing council_room was not correct. Expected 427, got 439
FAIL: Hand count after playing council_room was not correct. Expected 427, got 249
FAIL: Hand count after playing council_room was not correct. Expected 427, got 25
FAIL: Hand count after playing council_room was not correct. Expected 53, got 55
FAIL: Hand count after playing council_room was not correct. Expected 55, got 460
FAIL: Hand count after playing council_room was not correct. Expected 55, got 224
FAIL: Hand count after playing council_room was not correct. Expected 55, got 495
FAIL: Hand count after playing council_room was not correct. Expected 273, got 275
FAIL: Hand count after playing council_room was not correct. Expected 275, got 281
FAIL: Hand count after playing council_room was not correct. Expected 275, got 203
FAIL: Hand count after playing council_room was not correct. Expected 275, got 16
FAIL: Hand count after playing council_room was not correct. Expected 16, got 18
FAIL: Hand count after playing council_room was not correct. Expected 18, got 175
FAIL: Hand count after playing council_room was not correct. Expected 18, got 323
FAIL: Hand count after playing council_room was not correct. Expected 18, got 195
FAIL: Hand count after playing council_room was not correct. Expected 260, got 262
FAIL: Hand count after playing council_room was not correct. Expected 262, got 155
FAIL: Hand count after playing council_room was not correct. Expected 262, got 135
FAIL: Hand count after playing council_room was not correct. Expected 262, got 262
FAIL: Hand count after playing council_room was not correct. Expected 87, got 89
FAIL: Hand count after playing council_room was not correct. Expected 89, got 60
FAIL: Hand count after playing council_room was not correct. Expected 89, got 177
FAIL: Hand count after playing council_room was not correct. Expected 89, got 492
FAIL: Hand count after playing council_room was not correct. Expected 232, got 234
FAIL: Hand count after playing council_room was not correct. Expected 234, got 325
FAIL: Hand count after playing council_room was not correct. Expected 234, got 213
FAIL: Hand count after playing council_room was not correct. Expected 234, got 30
FAIL: Hand count after playing council_room was not correct. Expected 96, got 98
FAIL: Hand count after playing council_room was not correct. Expected 98, got 237
FAIL: Hand count after playing council_room was not correct. Expected 98, got 23
FAIL: Hand count after playing council_room was not correct. Expected 98, got 390
FAIL: Hand count after playing council_room was not correct. Expected 175, got 177
FAIL: Hand count after playing council_room was not correct. Expected 177, got 238
FAIL: Hand count after playing council_room was not correct. Expected 177, got 181
FAIL: Hand count after playing council_room was not correct. Expected 177, got 274
FAIL: Hand count after playing council_room was not correct. Expected 222, got 224
FAIL: Hand count after playing council_room was not correct. Expected 224, got 418
FAIL: Hand count after playing council_room was not correct. Expected 224, got 315
FAIL: Hand count after playing council_room was not correct. Expected 224, got 361
FAIL: Hand count after playing council_room was not correct. Expected 144, got 146
FAIL: Hand count after playing council_room was not correct. Expected 146, got 322
FAIL: Hand count after playing council_room was not correct. Expected 146, got 382
FAIL: Hand count after playing council_room was not correct. Expected 146, got 320
FAIL: Hand count after playing council_room was not correct. Expected 111, got 113
FAIL: Hand count after playing council_room was not correct. Expected 113, got 36
FAIL: Hand count after playing council_room was not correct. Expected 113, got 160
FAIL: Hand count after playing council_room was not correct. Expected 113, got 229
FAIL: Hand count after playing council_room was not correct. Expected 358, got 360
FAIL: Hand count after playing council_room was not correct. Expected 360, got 96
FAIL: Hand count after playing council_room was not correct. Expected 360, got 117
FAIL: Hand count after playing council_room was not correct. Expected 360, got 144
FAIL: Hand count after playing council_room was not correct. Expected 156, got 158
FAIL: Hand count after playing council_room was not correct. Expected 158, got 346
FAIL: Hand count after playing council_room was not correct. Expected 158, got 119
FAIL: Hand count after playing council_room was not correct. Expected 158, got 204
FAIL: Hand count after playing council_room was not correct. Expected 227, got 229
FAIL: Hand count after playing council_room was not correct. Expected 229, got 435
FAIL: Hand count after playing council_room was not correct. Expected 229, got 303
FAIL: Hand count after playing council_room was not correct. Expected 229, got 452
FAIL: Hand count after playing council_room was not correct. Expected 402, got 404
FAIL: Hand count after playing council_room was not correct. Expected 404, got 435
FAIL: Hand count after playing council_room was not correct. Expected 404, got 482
FAIL: Hand count after playing council_room was not correct. Expected 404, got 466
FAIL: Hand count after playing council_room was not correct. Expected 265, got 267
FAIL: Hand count after playing council_room was not correct. Expected 267, got 373
FAIL: Hand count after playing council_room was not correct. Expected 267, got 158
FAIL: Hand count after playing council_room was not correct. Expected 267, got 356
FAIL: Hand count after playing council_room was not correct. Expected 186, got 188
FAIL: Hand count after playing council_room was not correct. Expected 188, got 196
FAIL: Hand count after playing council_room was not correct. Expected 188, got 437
FAIL: Hand count after playing council_room was not correct. Expected 188, got 15
FAIL: Hand count after playing council_room was not correct. Expected 497, got 499
FAIL: Hand count after playing council_room was not correct. Expected 499, got 40
FAIL: Hand count after playing council_room was not correct. Expected 499, got 460
FAIL: Hand count after playing council_room was not correct. Expected 499, got 397
FAIL: Hand count after playing council_room was not correct. Expected 183, got 185
FAIL: Hand count after playing council_room was not correct. Expected 185, got 99
FAIL: Hand count after playing council_room was not correct. Expected 185, got 164
FAIL: Hand count after playing council_room was not correct. Expected 185, got 195
FAIL: Hand count after playing council_room was not correct. Expected 202, got 204
FAIL: Hand count after playing council_room was not correct. Expected 204, got 85
FAIL: Hand count after playing council_room was not correct. Expected 204, got 383
FAIL: Hand count after playing council_room was not correct. Expected 204, got 89
FAIL: Hand count after playing council_room was not correct. Expected 495, got 497
FAIL: Hand count after playing council_room was not correct. Expected 497, got 432
FAIL: Hand count after playing council_room was not correct. Expected 497, got 276
FAIL: Hand count after playing council_room was not correct. Expected 497, got 167
FAIL: Hand count after playing council_room was not correct. Expected 286, got 288
FAIL: Hand count after playing council_room was not correct. Expected 288, got 65
FAIL: Hand count after playing council_room was not correct. Expected 288, got 247
FAIL: Hand count after playing council_room was not correct. Expected 288, got 165
FAIL: Hand count after playing council_room was not correct. Expected 177, got 179
FAIL: Hand count after playing council_room was not correct. Expected 179, got 37
FAIL: Hand count after playing council_room was not correct. Expected 179, got 334
FAIL: Hand count after playing council_room was not correct. Expected 179, got 198
FAIL: Hand count after playing council_room was not correct. Expected 168, got 170
FAIL: Hand count after playing council_room was not correct. Expected 170, got 204
FAIL: Hand count after playing council_room was not correct. Expected 170, got 431
FAIL: Hand count after playing council_room was not correct. Expected 170, got 144
FAIL: Hand count after playing council_room was not correct. Expected 205, got 207
FAIL: Hand count after playing council_room was not correct. Expected 207, got 413
FAIL: Hand count after playing council_room was not correct. Expected 207, got 38
FAIL: Hand count after playing council_room was not correct. Expected 207, got 52
FAIL: Hand count after playing council_room was not correct. Expected 320, got 322
FAIL: Hand count after playing council_room was not correct. Expected 322, got 473
FAIL: Hand count after playing council_room was not correct. Expected 322, got 6
FAIL: Hand count after playing council_room was not correct. Expected 322, got 457
FAIL: Hand count after playing council_room was not correct. Expected 435, got 437
FAIL: Hand count after playing council_room was not correct. Expected 437, got 241
FAIL: Hand count after playing council_room was not correct. Expected 437, got 233
FAIL: Hand count after playing council_room was not correct. Expected 437, got 246
FAIL: Hand count after playing council_room was not correct. Expected 111, got 113
FAIL: Hand count after playing council_room was not correct. Expected 113, got 133
FAIL: Hand count after playing council_room was not correct. Expected 113, got 114
FAIL: Hand count after playing council_room was not correct. Expected 113, got 389
FAIL: Hand count after playing council_room was not correct. Expected 278, got 280
FAIL: Hand count after playing council_room was not correct. Expected 280, got 347
FAIL: Hand count after playing council_room was not correct. Expected 280, got 137
FAIL: Hand count after playing council_room was not correct. Expected 280, got 289
FAIL: Hand count after playing council_room was not correct. Expected 155, got 157
FAIL: Hand count after playing council_room was not correct. Expected 157, got 414
FAIL: Hand count after playing council_room was not correct. Expected 157, got 164
FAIL: Hand count after playing council_room was not correct. Expected 157, got 410
FAIL: Hand count after playing council_room was not correct. Expected 288, got 290
FAIL: Hand count after playing council_room was not correct. Expected 290, got 215
FAIL: Hand count after playing council_room was not correct. Expected 290, got 281
FAIL: Hand count after playing council_room was not correct. Expected 290, got 64
FAIL: Hand count after playing council_room was not correct. Expected 189, got 191
FAIL: Hand count after playing council_room was not correct. Expected 191, got 351
FAIL: Hand count after playing council_room was not correct. Expected 191, got 190
FAIL: Hand count after playing council_room was not correct. Expected 191, got 121
FAIL: Hand count after playing council_room was not correct. Expected 440, got 442
FAIL: Hand count after playing council_room was not correct. Expected 442, got 389
FAIL: Hand count after playing council_room was not correct. Expected 442, got 132
FAIL: Hand count after playing council_room was not correct. Expected 442, got 399
FAIL: Hand count after playing council_room was not correct. Expected 304, got 306
FAIL: Hand count after playing council_room was not correct. Expected 306, got 321
FAIL: Hand count after playing council_room was not correct. Expected 306, got 311
FAIL: Hand count after playing council_room was not correct. Expected 306, got 106
FAIL: Hand count after playing council_room was not correct. Expected 252, got 254
FAIL: Hand count after playing council_room was not correct. Expected 254, got 215
FAIL: Hand count after playing council_room was not correct. Expected 254, got 81
FAIL: Hand count after playing council_room was not correct. Expected 254, got 384
FAIL: Hand count after playing council_room was not correct. Expected 40, got 42
FAIL: Hand count after playing council_room was not correct. Expected 42, got 177
FAIL: Hand count after playing council_room was not correct. Expected 42, got 41
FAIL: Hand count after playing council_room was not correct. Expected 42, got 381
FAIL: Hand count after playing council_room was not correct. Expected 164, got 166
FAIL: Hand count after playing council_room was not correct. Expected 166, got 441
FAIL: Hand count after playing council_room was not correct. Expected 166, got 47
FAIL: Hand count after playing council_room was not correct. Expected 166, got 369
FAIL: Hand count after playing council_room was not correct. Expected 483, got 485
FAIL: Hand count after playing council_room was not correct. Expected 485, got 15
FAIL: Hand count after playing council_room was not correct. Expected 485, got 336
FAIL: Hand count after playing council_room was not correct. Expected 485, got 216
FAIL: Hand count after playing council_room was not correct. Expected 100, got 102
FAIL: Hand count after playing council_room was not correct. Expected 102, got 116
FAIL: Hand count after playing council_room was not correct. Expected 102, got 421
FAIL: Hand count after playing council_room was not correct. Expected 102, got 70
FAIL: Hand count after playing council_room was not correct. Expected 192, got 194
FAIL: Hand count after playing council_room was not correct. Expected 194, got 464
FAIL: Hand count after playing council_room was not correct. Expected 194, got 313
FAIL: Hand count after playing council_room was not correct. Expected 194, got 213
FAIL: Hand count after playing council_room was not correct. Expected 100, got 102
FAIL: Hand count after playing council_room was not correct. Expected 102, got 94
FAIL: Hand count after playing council_room was not correct. Expected 102, got 415
FAIL: Hand count after playing council_room was not correct. Expected 102, got 300
FAIL: Hand count after playing council_room was not correct. Expected 324, got 326
FAIL: Hand count after playing council_room was not correct. Expected 326, got 359
FAIL: Hand count after playing council_room was not correct. Expected 326, got 263
FAIL: Hand count after playing council_room was not correct. Expected 326, got 375
FAIL: Hand count after playing council_room was not correct. Expected 225, got 227
FAIL: Hand count after playing council_room was not correct. Expected 227, got 103
FAIL: Hand count after playing council_room was not correct. Expected 227, got 327
FAIL: Hand count after playing council_room was not correct. Expected 227, got 410
FAIL: Hand count after playing council_room was not correct. Expected 223, got 225
FAIL: Hand count after playing council_room was not correct. Expected 225, got 51
FAIL: Hand count after playing council_room was not correct. Expected 225, got 334
FAIL: Hand count after playing council_room was not correct. Expected 225, got 109
FAIL: Hand count after playing council_room was not correct. Expected 437, got 439
FAIL: Hand count after playing council_room was not correct. Expected 439, got 204
FAIL: Hand count after playing council_room was not correct. Expected 439, got 105
FAIL: Hand count after playing council_room was not correct. Expected 439, got 262
FAIL: Hand count after playing council_room was not correct. Expected 267, got 269
FAIL: Hand count after playing council_room was not correct. Expected 269, got 148
FAIL: Hand count after playing council_room was not correct. Expected 269, got 463
FAIL: Hand count after playing council_room was not correct. Expected 269, got 59
FAIL: Hand count after playing council_room was not correct. Expected 48, got 50
FAIL: Hand count after playing council_room was not correct. Expected 50, got 83
FAIL: Hand count after playing council_room was not correct. Expected 50, got 415
FAIL: Hand count after playing council_room was not correct. Expected 50, got 351
FAIL: Hand count after playing council_room was not correct. Expected 231, got 233
FAIL: Hand count after playing council_room was not correct. Expected 233, got 385
FAIL: Hand count after playing council_room was not correct. Expected 233, got 240
FAIL: Hand count after playing council_room was not correct. Expected 233, got 174
FAIL: Hand count after playing council_room was not correct. Expected 181, got 183
FAIL: Hand count after playing council_room was not correct. Expected 183, got 278
FAIL: Hand count after playing council_room was not correct. Expected 183, got 337
FAIL: Hand count after playing council_room was not correct. Expected 183, got 290
FAIL: Hand count after playing council_room was not correct. Expected 210, got 212
FAIL: Hand count after playing council_room was not correct. Expected 212, got 261
FAIL: Hand count after playing council_room was not correct. Expected 212, got 238
FAIL: Hand count after playing council_room was not correct. Expected 212, got 435
FAIL: Hand count after playing council_room was not correct. Expected 337, got 339
FAIL: Hand count after playing council_room was not correct. Expected 339, got 310
FAIL: Hand count after playing council_room was not correct. Expected 339, got 137
FAIL: Hand count after playing council_room was not correct. Expected 339, got 423
FAIL: Hand count after playing council_room was not correct. Expected 51, got 53
FAIL: Hand count after playing council_room was not correct. Expected 53, got 331
FAIL: Hand count after playing council_room was not correct. Expected 53, got 38
FAIL: Hand count after playing council_room was not correct. Expected 53, got 133
FAIL: Hand count after playing council_room was not correct. Expected 430, got 432
FAIL: Hand count after playing council_room was not correct. Expected 432, got 38
FAIL: Hand count after playing council_room was not correct. Expected 432, got 354
FAIL: Hand count after playing council_room was not correct. Expected 432, got 389
FAIL: Hand count after playing council_room was not correct. Expected 444, got 446
FAIL: Hand count after playing council_room was not correct. Expected 446, got 3
FAIL: Hand count after playing council_room was not correct. Expected 446, got 369
FAIL: Hand count after playing council_room was not correct. Expected 446, got 144
FAIL: Hand count after playing council_room was not correct. Expected 335, got 337
FAIL: Hand count after playing council_room was not correct. Expected 337, got 169
FAIL: Hand count after playing council_room was not correct. Expected 337, got 206
FAIL: Hand count after playing council_room was not correct. Expected 337, got 159
FAIL: Hand count after playing council_room was not correct. Expected 414, got 416
FAIL: Hand count after playing council_room was not correct. Expected 416, got 398
FAIL: Hand count after playing council_room was not correct. Expected 416, got 167
FAIL: Hand count after playing council_room was not correct. Expected 416, got 154
FAIL: Hand count after playing council_room was not correct. Expected 83, got 85
FAIL: Hand count after playing council_room was not correct. Expected 85, got 193
FAIL: Hand count after playing council_room was not correct. Expected 85, got 462
FAIL: Hand count after playing council_room was not correct. Expected 85, got 366
FAIL: Hand count after playing council_room was not correct. Expected 144, got 146
FAIL: Hand count after playing council_room was not correct. Expected 146, got 135
FAIL: Hand count after playing council_room was not correct. Expected 146, got 63
FAIL: Hand count after playing council_room was not correct. Expected 146, got 422
FAIL: Hand count after playing council_room was not correct. Expected 260, got 262
FAIL: Hand count after playing council_room was not correct. Expected 262, got 444
FAIL: Hand count after playing council_room was not correct. Expected 262, got 352
FAIL: Hand count after playing council_room was not correct. Expected 262, got 348
FAIL: Hand count after playing council_room was not correct. Expected 84, got 86
FAIL: Hand count after playing council_room was not correct. Expected 86, got 361
FAIL: Hand count after playing council_room was not correct. Expected 86, got 357
FAIL: Hand count after playing council_room was not correct. Expected 86, got 36
FAIL: Hand count after playing council_room was not correct. Expected 263, got 265
FAIL: Hand count after playing council_room was not correct. Expected 265, got 279
FAIL: Hand count after playing council_room was not correct. Expected 265, got 248
FAIL: Hand count after playing council_room was not correct. Expected 265, got 121
FAIL: Hand count after playing council_room was not correct. Expected 183, got 185
FAIL: Hand count after playing council_room was not correct. Expected 185, got 102
FAIL: Hand count after playing council_room was not correct. Expected 185, got 162
FAIL: Hand count after playing council_room was not correct. Expected 185, got 142
FAIL: Hand count after playing council_room was not correct. Expected 251, got 253
FAIL: Hand count after playing council_room was not correct. Expected 253, got 466
FAIL: Hand count after playing council_room was not correct. Expected 253, got 406
FAIL: Hand count after playing council_room was not correct. Expected 253, got 177
FAIL: Hand count after playing council_room was not correct. Expected 146, got 148
FAIL: Hand count after playing council_room was not correct. Expected 148, got 250
FAIL: Hand count after playing council_room was not correct. Expected 148, got 443
FAIL: Hand count after playing council_room was not correct. Expected 148, got 71
FAIL: Hand count after playing council_room was not correct. Expected 221, got 223
FAIL: Hand count after playing council_room was not correct. Expected 223, got 182
FAIL: Hand count after playing council_room was not correct. Expected 223, got 374
FAIL: Hand count after playing council_room was not correct. Expected 223, got 76
FAIL: Hand count after playing council_room was not correct. Expected 424, got 426
FAIL: Hand count after playing council_room was not correct. Expected 426, got 335
FAIL: Hand count after playing council_room was not correct. Expected 426, got 278
FAIL: Hand count after playing council_room was not correct. Expected 426, got 3
FAIL: Hand count after playing council_room was not correct. Expected 485, got 487
FAIL: Hand count after playing council_room was not correct. Expected 487, got 225
FAIL: Hand count after playing council_room was not correct. Expected 487, got 9
FAIL: Hand count after playing council_room was not correct. Expected 487, got 452
FAIL: Hand count after playing council_room was not correct. Expected 60, got 62
FAIL: Hand count after playing council_room was not correct. Expected 62, got 346
FAIL: Hand count after playing council_room was not correct. Expected 62, got 361
FAIL: Hand count after playing council_room was not correct. Expected 62, got 445
FAIL: Hand count after playing council_room was not correct. Expected 255, got 257
FAIL: Hand count after playing council_room was not correct. Expected 257, got 425
FAIL: Hand count after playing council_room was not correct. Expected 257, got 171
FAIL: Hand count after playing council_room was not correct. Expected 257, got 60
FAIL: Hand count after playing council_room was not correct. Expected 237, got 239
FAIL: Hand count after playing council_room was not correct. Expected 239, got 217
FAIL: Hand count after playing council_room was not correct. Expected 239, got 104
FAIL: Hand count after playing council_room was not correct. Expected 239, got 496
FAIL: Hand count after playing council_room was not correct. Expected 227, got 229
FAIL: Hand count after playing council_room was not correct. Expected 229, got 302
FAIL: Hand count after playing council_room was not correct. Expected 229, got 464
FAIL: Hand count after playing council_room was not correct. Expected 229, got 471
FAIL: Hand count after playing council_room was not correct. Expected 269, got 271
FAIL: Hand count after playing council_room was not correct. Expected 271, got 95
FAIL: Hand count after playing council_room was not correct. Expected 271, got 437
FAIL: Hand count after playing council_room was not correct. Expected 271, got 464
FAIL: Hand count after playing council_room was not correct. Expected 67, got 69
FAIL: Hand count after playing council_room was not correct. Expected 69, got 290
FAIL: Hand count after playing council_room was not correct. Expected 69, got 273
FAIL: Hand count after playing council_room was not correct. Expected 69, got 213
FAIL: Hand count after playing council_room was not correct. Expected 331, got 333
FAIL: Hand count after playing council_room was not correct. Expected 333, got 498
FAIL: Hand count after playing council_room was not correct. Expected 333, got 305
FAIL: Hand count after playing council_room was not correct. Expected 333, got 40
FAIL: Hand count after playing council_room was not correct. Expected 293, got 295
FAIL: Hand count after playing council_room was not correct. Expected 295, got 100
FAIL: Hand count after playing council_room was not correct. Expected 295, got 168
FAIL: Hand count after playing council_room was not correct. Expected 295, got 429
FAIL: Hand count after playing council_room was not correct. Expected 264, got 266
FAIL: Hand count after playing council_room was not correct. Expected 266, got 360
FAIL: Hand count after playing council_room was not correct. Expected 266, got 88
FAIL: Hand count after playing council_room was not correct. Expected 266, got 283
FAIL: Hand count after playing council_room was not correct. Expected 300, got 302
FAIL: Hand count after playing council_room was not correct. Expected 302, got 234
FAIL: Hand count after playing council_room was not correct. Expected 302, got 356
FAIL: Hand count after playing council_room was not correct. Expected 302, got 50
FAIL: Hand count after playing council_room was not correct. Expected 330, got 332
FAIL: Hand count after playing council_room was not correct. Expected 332, got 4
FAIL: Hand count after playing council_room was not correct. Expected 332, got 249
FAIL: Hand count after playing council_room was not correct. Expected 332, got 6
FAIL: Hand count after playing council_room was not correct. Expected 51, got 53
FAIL: Hand count after playing council_room was not correct. Expected 53, got 175
FAIL: Hand count after playing council_room was not correct. Expected 53, got 3
FAIL: Hand count after playing council_room was not correct. Expected 53, got 392
FAIL: Hand count after playing council_room was not correct. Expected 372, got 374
FAIL: Hand count after playing council_room was not correct. Expected 374, got 380
FAIL: Hand count after playing council_room was not correct. Expected 374, got 238
FAIL: Hand count after playing council_room was not correct. Expected 374, got 198
FAIL: Hand count after playing council_room was not correct. Expected 159, got 161
FAIL: Hand count after playing council_room was not correct. Expected 161, got 261
FAIL: Hand count after playing council_room was not correct. Expected 161, got 411
FAIL: Hand count after playing council_room was not correct. Expected 161, got 411
FAIL: Hand count after playing council_room was not correct. Expected 90, got 92
FAIL: Hand count after playing council_room was not correct. Expected 92, got 144
FAIL: Hand count after playing council_room was not correct. Expected 92, got 304
FAIL: Hand count after playing council_room was not correct. Expected 92, got 432
FAIL: Hand count after playing council_room was not correct. Expected 85, got 87
FAIL: Hand count after playing council_room was not correct. Expected 87, got 322
FAIL: Hand count after playing council_room was not correct. Expected 87, got 348
FAIL: Hand count after playing council_room was not correct. Expected 87, got 303
FAIL: Hand count after playing council_room was not correct. Expected 351, got 353
FAIL: Hand count after playing council_room was not correct. Expected 353, got 290
FAIL: Hand count after playing council_room was not correct. Expected 353, got 139
FAIL: Hand count after playing council_room was not correct. Expected 353, got 52
FAIL: Hand count after playing council_room was not correct. Expected 113, got 115
FAIL: Hand count after playing council_room was not correct. Expected 115, got 334
FAIL: Hand count after playing council_room was not correct. Expected 115, got 96
FAIL: Hand count after playing council_room was not correct. Expected 115, got 302
FAIL: Hand count after playing council_room was not correct. Expected 112, got 114
FAIL: Hand count after playing council_room was not correct. Expected 114, got 136
FAIL: Hand count after playing council_room was not correct. Expected 114, got 487
FAIL: Hand count after playing council_room was not correct. Expected 114, got 171
FAIL: Hand count after playing council_room was not correct. Expected 477, got 479
FAIL: Hand count after playing council_room was not correct. Expected 479, got 23
FAIL: Hand count after playing council_room was not correct. Expected 479, got 63
FAIL: Hand count after playing council_room was not correct. Expected 479, got 404
FAIL: Hand count after playing council_room was not correct. Expected 182, got 184
FAIL: Hand count after playing council_room was not correct. Expected 184, got 293
FAIL: Hand count after playing council_room was not correct. Expected 184, got 212
FAIL: Hand count after playing council_room was not correct. Expected 184, got 328
FAIL: Hand count after playing council_room was not correct. Expected 45, got 47
FAIL: Hand count after playing council_room was not correct. Expected 47, got 358
FAIL: Hand count after playing council_room was not correct. Expected 47, got 128
FAIL: Hand count after playing council_room was not correct. Expected 47, got 251
FAIL: Hand count after playing council_room was not correct. Expected 146, got 148
FAIL: Hand count after playing council_room was not correct. Expected 148, got 57
FAIL: Hand count after playing council_room was not correct. Expected 148, got 184
FAIL: Hand count after playing council_room was not correct. Expected 148, got 244
FAIL: Hand count after playing council_room was not correct. Expected 138, got 140
FAIL: Hand count after playing council_room was not correct. Expected 140, got 414
FAIL: Hand count after playing council_room was not correct. Expected 140, got 369
FAIL: Hand count after playing council_room was not correct. Expected 140, got 212
FAIL: Hand count after playing council_room was not correct. Expected 161, got 163
FAIL: Hand count after playing council_room was not correct. Expected 163, got 279
FAIL: Hand count after playing council_room was not correct. Expected 163, got 429
FAIL: Hand count after playing council_room was not correct. Expected 163, got 106
FAIL: Hand count after playing council_room was not correct. Expected 324, got 326
FAIL: Hand count after playing council_room was not correct. Expected 326, got 267
FAIL: Hand count after playing council_room was not correct. Expected 326, got 298
FAIL: Hand count after playing council_room was not correct. Expected 326, got 257
FAIL: Hand count after playing council_room was not correct. Expected 192, got 194
FAIL: Hand count after playing council_room was not correct. Expected 194, got 340
FAIL: Hand count after playing council_room was not correct. Expected 194, got 427
FAIL: Hand count after playing council_room was not correct. Expected 194, got 182
FAIL: Hand count after playing council_room was not correct. Expected 149, got 151
FAIL: Hand count after playing council_room was not correct. Expected 151, got 332
FAIL: Hand count after playing council_room was not correct. Expected 151, got 424
FAIL: Hand count after playing council_room was not correct. Expected 151, got 40
FAIL: Hand count after playing council_room was not correct. Expected 147, got 149
FAIL: Hand count after playing council_room was not correct. Expected 149, got 79
FAIL: Hand count after playing council_room was not correct. Expected 149, got 497
FAIL: Hand count after playing council_room was not correct. Expected 149, got 271
FAIL: Hand count after playing council_room was not correct. Expected 38, got 40
FAIL: Hand count after playing council_room was not correct. Expected 40, got 95
FAIL: Hand count after playing council_room was not correct. Expected 40, got 78
FAIL: Hand count after playing council_room was not correct. Expected 40, got 471
FAIL: Hand count after playing council_room was not correct. Expected 480, got 482
FAIL: Hand count after playing council_room was not correct. Expected 482, got 403
FAIL: Hand count after playing council_room was not correct. Expected 482, got 223
FAIL: Hand count after playing council_room was not correct. Expected 482, got 28
FAIL: Hand count after playing council_room was not correct. Expected 8, got 10
FAIL: Hand count after playing council_room was not correct. Expected 10, got 242
FAIL: Hand count after playing council_room was not correct. Expected 10, got 245
FAIL: Hand count after playing council_room was not correct. Expected 10, got 169
FAIL: Hand count after playing council_room was not correct. Expected 215, got 217
FAIL: Hand count after playing council_room was not correct. Expected 217, got 455
FAIL: Hand count after playing council_room was not correct. Expected 217, got 392
FAIL: Hand count after playing council_room was not correct. Expected 217, got 494
FAIL: Hand count after playing council_room was not correct. Expected 7, got 9
FAIL: Hand count after playing council_room was not correct. Expected 9, got 19
FAIL: Hand count after playing council_room was not correct. Expected 9, got 482
FAIL: Hand count after playing council_room was not correct. Expected 9, got 449
FAIL: Hand count after playing council_room was not correct. Expected 22, got 24
FAIL: Hand count after playing council_room was not correct. Expected 24, got 349
FAIL: Hand count after playing council_room was not correct. Expected 24, got 289
FAIL: Hand count after playing council_room was not correct. Expected 24, got 286
FAIL: Hand count after playing council_room was not correct. Expected 107, got 109
FAIL: Hand count after playing council_room was not correct. Expected 109, got 10
FAIL: Hand count after playing council_room was not correct. Expected 109, got 272
FAIL: Hand count after playing council_room was not correct. Expected 109, got 472
FAIL: Hand count after playing council_room was not correct. Expected 493, got 495
FAIL: Hand count after playing council_room was not correct. Expected 495, got 307
FAIL: Hand count after playing council_room was not correct. Expected 495, got 35
FAIL: Hand count after playing council_room was not correct. Expected 495, got 106
FAIL: Hand count after playing council_room was not correct. Expected 298, got 300
FAIL: Hand count after playing council_room was not correct. Expected 300, got 375
FAIL: Hand count after playing council_room was not correct. Expected 300, got 487
FAIL: Hand count after playing council_room was not correct. Expected 300, got 47
FAIL: Hand count after playing council_room was not correct. Expected 275, got 277
FAIL: Hand count after playing council_room was not correct. Expected 277, got 444
FAIL: Hand count after playing council_room was not correct. Expected 277, got 312
FAIL: Hand count after playing council_room was not correct. Expected 277, got 442
FAIL: Hand count after playing council_room was not correct. Expected 362, got 364
FAIL: Hand count after playing council_room was not correct. Expected 364, got 479
FAIL: Hand count after playing council_room was not correct. Expected 364, got 199
FAIL: Hand count after playing council_room was not correct. Expected 364, got 204
FAIL: Hand count after playing council_room was not correct. Expected 90, got 92
FAIL: Hand count after playing council_room was not correct. Expected 92, got 153
FAIL: Hand count after playing council_room was not correct. Expected 92, got 202
FAIL: Hand count after playing council_room was not correct. Expected 92, got 484
FAIL: Hand count after playing council_room was not correct. Expected 309, got 311
FAIL: Hand count after playing council_room was not correct. Expected 311, got 124
FAIL: Hand count after playing council_room was not correct. Expected 311, got 19
FAIL: Hand count after playing council_room was not correct. Expected 311, got 108
FAIL: Hand count after playing council_room was not correct. Expected 262, got 264
FAIL: Hand count after playing council_room was not correct. Expected 264, got 389
FAIL: Hand count after playing council_room was not correct. Expected 264, got 323
FAIL: Hand count after playing council_room was not correct. Expected 264, got 463
FAIL: Hand count after playing council_room was not correct. Expected 418, got 420
FAIL: Hand count after playing council_room was not correct. Expected 420, got 89
FAIL: Hand count after playing council_room was not correct. Expected 420, got 91
FAIL: Hand count after playing council_room was not correct. Expected 420, got 475
FAIL: Hand count after playing council_room was not correct. Expected 488, got 490
FAIL: Hand count after playing council_room was not correct. Expected 490, got 334
FAIL: Hand count after playing council_room was not correct. Expected 490, got 78
FAIL: Hand count after playing council_room was not correct. Expected 490, got 416
FAIL: Hand count after playing council_room was not correct. Expected 103, got 105
FAIL: Hand count after playing council_room was not correct. Expected 105, got 234
FAIL: Hand count after playing council_room was not correct. Expected 105, got 401
FAIL: Hand count after playing council_room was not correct. Expected 105, got 89
FAIL: Hand count after playing council_room was not correct. Expected 234, got 236
FAIL: Hand count after playing council_room was not correct. Expected 236, got 326
FAIL: Hand count after playing council_room was not correct. Expected 236, got 70
FAIL: Hand count after playing council_room was not correct. Expected 236, got 268
FAIL: Hand count after playing council_room was not correct. Expected 95, got 97
FAIL: Hand count after playing council_room was not correct. Expected 97, got 340
FAIL: Hand count after playing council_room was not correct. Expected 97, got 39
FAIL: Hand count after playing council_room was not correct. Expected 97, got 195
FAIL: Hand count after playing council_room was not correct. Expected 495, got 497
FAIL: Hand count after playing council_room was not correct. Expected 497, got 493
FAIL: Hand count after playing council_room was not correct. Expected 497, got 65
FAIL: Hand count after playing council_room was not correct. Expected 497, got 59
FAIL: Hand count after playing council_room was not correct. Expected 204, got 206
FAIL: Hand count after playing council_room was not correct. Expected 206, got 170
FAIL: Hand count after playing council_room was not correct. Expected 206, got 426
FAIL: Hand count after playing council_room was not correct. Expected 206, got 112
FAIL: Hand count after playing council_room was not correct. Expected 374, got 376
FAIL: Hand count after playing council_room was not correct. Expected 376, got 268
FAIL: Hand count after playing council_room was not correct. Expected 376, got 247
FAIL: Hand count after playing council_room was not correct. Expected 376, got 421
FAIL: Hand count after playing council_room was not correct. Expected 368, got 370
FAIL: Hand count after playing council_room was not correct. Expected 370, got 38
FAIL: Hand count after playing council_room was not correct. Expected 370, got 464
FAIL: Hand count after playing council_room was not correct. Expected 370, got 310
FAIL: Hand count after playing council_room was not correct. Expected 146, got 148
FAIL: Hand count after playing council_room was not correct. Expected 148, got 416
FAIL: Hand count after playing council_room was not correct. Expected 148, got 45
FAIL: Hand count after playing council_room was not correct. Expected 148, got 328
FAIL: Hand count after playing council_room was not correct. Expected 12, got 14
FAIL: Hand count after playing council_room was not correct. Expected 14, got 132
FAIL: Hand count after playing council_room was not correct. Expected 14, got 25
FAIL: Hand count after playing council_room was not correct. Expected 14, got 463
FAIL: Hand count after playing council_room was not correct. Expected 125, got 127
FAIL: Hand count after playing council_room was not correct. Expected 127, got 172
FAIL: Hand count after playing council_room was not correct. Expected 127, got 105
FAIL: Hand count after playing council_room was not correct. Expected 127, got 478
FAIL: Hand count after playing council_room was not correct. Expected 21, got 23
FAIL: Hand count after playing council_room was not correct. Expected 23, got 440
FAIL: Hand count after playing council_room was not correct. Expected 23, got 308
FAIL: Hand count after playing council_room was not correct. Expected 23, got 245
FAIL: Hand count after playing council_room was not correct. Expected 449, got 451
FAIL: Hand count after playing council_room was not correct. Expected 451, got 56
FAIL: Hand count after playing council_room was not correct. Expected 451, got 480
FAIL: Hand count after playing council_room was not correct. Expected 451, got 350
FAIL: Hand count after playing council_room was not correct. Expected 189, got 191
FAIL: Hand count after playing council_room was not correct. Expected 191, got 78
FAIL: Hand count after playing council_room was not correct. Expected 191, got 247
FAIL: Hand count after playing council_room was not correct. Expected 191, got 341
FAIL: Hand count after playing council_room was not correct. Expected 264, got 266
FAIL: Hand count after playing council_room was not correct. Expected 266, got 178
FAIL: Hand count after playing council_room was not correct. Expected 266, got 212
FAIL: Hand count after playing council_room was not correct. Expected 266, got 456
FAIL: Hand count after playing council_room was not correct. Expected 27, got 29
FAIL: Hand count after playing council_room was not correct. Expected 29, got 311
FAIL: Hand count after playing council_room was not correct. Expected 29, got 497
FAIL: Hand count after playing council_room was not correct. Expected 29, got 3
FAIL: Hand count after playing council_room was not correct. Expected 263, got 265
FAIL: Hand count after playing council_room was not correct. Expected 265, got 94
FAIL: Hand count after playing council_room was not correct. Expected 265, got 406
FAIL: Hand count after playing council_room was not correct. Expected 265, got 139
FAIL: Hand count after playing council_room was not correct. Expected 411, got 413
FAIL: Hand count after playing council_room was not correct. Expected 413, got 270
FAIL: Hand count after playing council_room was not correct. Expected 413, got 59
FAIL: Hand count after playing council_room was not correct. Expected 413, got 169
FAIL: Hand count after playing council_room was not correct. Expected 372, got 374
FAIL: Hand count after playing council_room was not correct. Expected 374, got 10
FAIL: Hand count after playing council_room was not correct. Expected 374, got 112
FAIL: Hand count after playing council_room was not correct. Expected 374, got 362
FAIL: Hand count after playing council_room was not correct. Expected 389, got 391
FAIL: Hand count after playing council_room was not correct. Expected 391, got 257
FAIL: Hand count after playing council_room was not correct. Expected 391, got 405
FAIL: Hand count after playing council_room was not correct. Expected 391, got 152
FAIL: Hand count after playing council_room was not correct. Expected 215, got 217
FAIL: Hand count after playing council_room was not correct. Expected 217, got 189
FAIL: Hand count after playing council_room was not correct. Expected 217, got 472
FAIL: Hand count after playing council_room was not correct. Expected 217, got 454
FAIL: Hand count after playing council_room was not correct. Expected 64, got 66
FAIL: Hand count after playing council_room was not correct. Expected 66, got 340
FAIL: Hand count after playing council_room was not correct. Expected 66, got 321
FAIL: Hand count after playing council_room was not correct. Expected 66, got 391
FAIL: Hand count after playing council_room was not correct. Expected 35, got 37
FAIL: Hand count after playing council_room was not correct. Expected 37, got 191
FAIL: Hand count after playing council_room was not correct. Expected 37, got 269
FAIL: Hand count after playing council_room was not correct. Expected 37, got 348
FAIL: Hand count after playing council_room was not correct. Expected 184, got 186
FAIL: Hand count after playing council_room was not correct. Expected 186, got 309
FAIL: Hand count after playing council_room was not correct. Expected 186, got 148
FAIL: Hand count after playing council_room was not correct. Expected 186, got 206
FAIL: Hand count after playing council_room was not correct. Expected 382, got 384
FAIL: Hand count after playing council_room was not correct. Expected 384, got 172
FAIL: Hand count after playing council_room was not correct. Expected 384, got 294
FAIL: Hand count after playing council_room was not correct. Expected 384, got 28
FAIL: Hand count after playing council_room was not correct. Expected 157, got 159
FAIL: Hand count after playing council_room was not correct. Expected 159, got 228
FAIL: Hand count after playing council_room was not correct. Expected 159, got 346
FAIL: Hand count after playing council_room was not correct. Expected 159, got 280
FAIL: Hand count after playing council_room was not correct. Expected 291, got 293
FAIL: Hand count after playing council_room was not correct. Expected 293, got 349
FAIL: Hand count after playing council_room was not correct. Expected 293, got 366
FAIL: Hand count after playing council_room was not correct. Expected 293, got 260
FAIL: Hand count after playing council_room was not correct. Expected 72, got 74
FAIL: Hand count after playing council_room was not correct. Expected 74, got 271
FAIL: Hand count after playing council_room was not correct. Expected 74, got 318
FAIL: Hand count after playing council_room was not correct. Expected 74, got 72
FAIL: Hand count after playing council_room was not correct. Expected 223, got 225
FAIL: Hand count after playing council_room was not correct. Expected 225, got 42
FAIL: Hand count after playing council_room was not correct. Expected 225, got 488
FAIL: Hand count after playing council_room was not correct. Expected 225, got 255
FAIL: Hand count after playing council_room was not correct. Expected 144, got 146
FAIL: Hand count after playing council_room was not correct. Expected 146, got 60
FAIL: Hand count after playing council_room was not correct. Expected 146, got 325
FAIL: Hand count after playing council_room was not correct. Expected 146, got 493
FAIL: Hand count after playing council_room was not correct. Expected 422, got 424
FAIL: Hand count after playing council_room was not correct. Expected 424, got 59
FAIL: Hand count after playing council_room was not correct. Expected 424, got 236
FAIL: Hand count after playing council_room was not correct. Expected 424, got 344
FAIL: Hand count after playing council_room was not correct. Expected 491, got 493
FAIL: Hand count after playing council_room was not correct. Expected 493, got 141
FAIL: Hand count after playing council_room was not correct. Expected 493, got 296
FAIL: Hand count after playing council_room was not correct. Expected 493, got 422
FAIL: Hand count after playing council_room was not correct. Expected 112, got 114
FAIL: Hand count after playing council_room was not correct. Expected 114, got 11
FAIL: Hand count after playing council_room was not correct. Expected 114, got 413
FAIL: Hand count after playing council_room was not correct. Expected 114, got 363
FAIL: Hand count after playing council_room was not correct. Expected 287, got 289
FAIL: Hand count after playing council_room was not correct. Expected 289, got 215
FAIL: Hand count after playing council_room was not correct. Expected 289, got 296
FAIL: Hand count after playing council_room was not correct. Expected 289, got 266
FAIL: Hand count after playing council_room was not correct. Expected 11, got 13
FAIL: Hand count after playing council_room was not correct. Expected 13, got 436
FAIL: Hand count after playing council_room was not correct. Expected 13, got 191
FAIL: Hand count after playing council_room was not correct. Expected 13, got 274
FAIL: Hand count after playing council_room was not correct. Expected 433, got 435
FAIL: Hand count after playing council_room was not correct. Expected 435, got 166
FAIL: Hand count after playing council_room was not correct. Expected 435, got 240
FAIL: Hand count after playing council_room was not correct. Expected 435, got 176
FAIL: Hand count after playing council_room was not correct. Expected 277, got 279
FAIL: Hand count after playing council_room was not correct. Expected 279, got 171
FAIL: Hand count after playing council_room was not correct. Expected 279, got 169
FAIL: Hand count after playing council_room was not correct. Expected 279, got 143
FAIL: Hand count after playing council_room was not correct. Expected 197, got 199
FAIL: Hand count after playing council_room was not correct. Expected 199, got 365
FAIL: Hand count after playing council_room was not correct. Expected 199, got 27
FAIL: Hand count after playing council_room was not correct. Expected 199, got 56
FAIL: Hand count after playing council_room was not correct. Expected 407, got 409
FAIL: Hand count after playing council_room was not correct. Expected 409, got 180
FAIL: Hand count after playing council_room was not correct. Expected 409, got 436
FAIL: Hand count after playing council_room was not correct. Expected 409, got 102
FAIL: Hand count after playing council_room was not correct. Expected 341, got 343
FAIL: Hand count after playing council_room was not correct. Expected 343, got 375
FAIL: Hand count after playing council_room was not correct. Expected 343, got 457
FAIL: Hand count after playing council_room was not correct. Expected 343, got 487
FAIL: Hand count after playing council_room was not correct. Expected 381, got 383
FAIL: Hand count after playing council_room was not correct. Expected 383, got 266
FAIL: Hand count after playing council_room was not correct. Expected 383, got 307
FAIL: Hand count after playing council_room was not correct. Expected 383, got 94
FAIL: Hand count after playing council_room was not correct. Expected 494, got 496
FAIL: Hand count after playing council_room was not correct. Expected 496, got 126
FAIL: Hand count after playing council_room was not correct. Expected 496, got 435
FAIL: Hand count after playing council_room was not correct. Expected 496, got 381
FAIL: Hand count after playing council_room was not correct. Expected 115, got 117
FAIL: Hand count after playing council_room was not correct. Expected 117, got 379
FAIL: Hand count after playing council_room was not correct. Expected 117, got 479
FAIL: Hand count after playing council_room was not correct. Expected 117, got 292
FAIL: Hand count after playing council_room was not correct. Expected 214, got 216
FAIL: Hand count after playing council_room was not correct. Expected 216, got 187
FAIL: Hand count after playing council_room was not correct. Expected 216, got 457
FAIL: Hand count after playing council_room was not correct. Expected 216, got 51
FAIL: Hand count after playing council_room was not correct. Expected 314, got 316
FAIL: Hand count after playing council_room was not correct. Expected 316, got 232
FAIL: Hand count after playing council_room was not correct. Expected 316, got 387
FAIL: Hand count after playing council_room was not correct. Expected 316, got 46
FAIL: Hand count after playing council_room was not correct. Expected 128, got 130
FAIL: Hand count after playing council_room was not correct. Expected 130, got 5
FAIL: Hand count after playing council_room was not correct. Expected 130, got 254
FAIL: Hand count after playing council_room was not correct. Expected 130, got 364
FAIL: Hand count after playing council_room was not correct. Expected 271, got 273
FAIL: Hand count after playing council_room was not correct. Expected 273, got 357
FAIL: Hand count after playing council_room was not correct. Expected 273, got 139
FAIL: Hand count after playing council_room was not correct. Expected 273, got 102
FAIL: Hand count after playing council_room was not correct. Expected 206, got 208
FAIL: Hand count after playing council_room was not correct. Expected 208, got 145
FAIL: Hand count after playing council_room was not correct. Expected 208, got 137
FAIL: Hand count after playing council_room was not correct. Expected 208, got 466
FAIL: Hand count after playing council_room was not correct. Expected 392, got 394
FAIL: Hand count after playing council_room was not correct. Expected 394, got 24
FAIL: Hand count after playing council_room was not correct. Expected 394, got 416
FAIL: Hand count after playing council_room was not correct. Expected 394, got 423
FAIL: Hand count after playing council_room was not correct. Expected 138, got 140
FAIL: Hand count after playing council_room was not correct. Expected 140, got 437
FAIL: Hand count after playing council_room was not correct. Expected 140, got 471
FAIL: Hand count after playing council_room was not correct. Expected 140, got 314
FAIL: Hand count after playing council_room was not correct. Expected 422, got 424
FAIL: Hand count after playing council_room was not correct. Expected 424, got 265
FAIL: Hand count after playing council_room was not correct. Expected 424, got 277
FAIL: Hand count after playing council_room was not correct. Expected 424, got 194
FAIL: Hand count after playing council_room was not correct. Expected 401, got 403
FAIL: Hand count after playing council_room was not correct. Expected 403, got 43
FAIL: Hand count after playing council_room was not correct. Expected 403, got 482
FAIL: Hand count after playing council_room was not correct. Expected 403, got 250
FAIL: Hand count after playing council_room was not correct. Expected 348, got 350
FAIL: Hand count after playing council_room was not correct. Expected 350, got 418
FAIL: Hand count after playing council_room was not correct. Expected 350, got 386
FAIL: Hand count after playing council_room was not correct. Expected 350, got 171
FAIL: Hand count after playing council_room was not correct. Expected 412, got 414
FAIL: Hand count after playing council_room was not correct. Expected 414, got 255
FAIL: Hand count after playing council_room was not correct. Expected 414, got 334
FAIL: Hand count after playing council_room was not correct. Expected 414, got 33
FAIL: Hand count after playing council_room was not correct. Expected 244, got 246
FAIL: Hand count after playing council_room was not correct. Expected 246, got 376
FAIL: Hand count after playing council_room was not correct. Expected 246, got 379
FAIL: Hand count after playing council_room was not correct. Expected 246, got 422
FAIL: Hand count after playing council_room was not correct. Expected 149, got 151
FAIL: Hand count after playing council_room was not correct. Expected 151, got 365
FAIL: Hand count after playing council_room was not correct. Expected 151, got 79
FAIL: Hand count after playing council_room was not correct. Expected 151, got 434
FAIL: Hand count after playing council_room was not correct. Expected 184, got 186
FAIL: Hand count after playing council_room was not correct. Expected 186, got 450
FAIL: Hand count after playing council_room was not correct. Expected 186, got 498
FAIL: Hand count after playing council_room was not correct. Expected 186, got 487
FAIL: Hand count after playing council_room was not correct. Expected 56, got 58
FAIL: Hand count after playing council_room was not correct. Expected 58, got 56
FAIL: Hand count after playing council_room was not correct. Expected 58, got 108
FAIL: Hand count after playing council_room was not correct. Expected 58, got 380
FAIL: Hand count after playing council_room was not correct. Expected 355, got 357
FAIL: Hand count after playing council_room was not correct. Expected 357, got 144
FAIL: Hand count after playing council_room was not correct. Expected 357, got 17
FAIL: Hand count after playing council_room was not correct. Expected 357, got 99
FAIL: Hand count after playing council_room was not correct. Expected 155, got 157
FAIL: Hand count after playing council_room was not correct. Expected 157, got 163
FAIL: Hand count after playing council_room was not correct. Expected 157, got 51
FAIL: Hand count after playing council_room was not correct. Expected 157, got 334
FAIL: Hand count after playing council_room was not correct. Expected 486, got 488
FAIL: Hand count after playing council_room was not correct. Expected 488, got 253
FAIL: Hand count after playing council_room was not correct. Expected 488, got 464
FAIL: Hand count after playing council_room was not correct. Expected 488, got 264
FAIL: Hand count after playing council_room was not correct. Expected 73, got 75
FAIL: Hand count after playing council_room was not correct. Expected 75, got 404
FAIL: Hand count after playing council_room was not correct. Expected 75, got 38
FAIL: Hand count after playing council_room was not correct. Expected 75, got 349
FAIL: Hand count after playing council_room was not correct. Expected 280, got 282
FAIL: Hand count after playing council_room was not correct. Expected 282, got 242
FAIL: Hand count after playing council_room was not correct. Expected 282, got 470
FAIL: Hand count after playing council_room was not correct. Expected 282, got 496
FAIL: Hand count after playing council_room was not correct. Expected 17, got 19
FAIL: Hand count after playing council_room was not correct. Expected 19, got 495
FAIL: Hand count after playing council_room was not correct. Expected 19, got 233
FAIL: Hand count after playing council_room was not correct. Expected 19, got 430
FAIL: Hand count after playing council_room was not correct. Expected 219, got 221
FAIL: Hand count after playing council_room was not correct. Expected 221, got 62
FAIL: Hand count after playing council_room was not correct. Expected 221, got 386
FAIL: Hand count after playing council_room was not correct. Expected 221, got 105
FAIL: Hand count after playing council_room was not correct. Expected 412, got 414
FAIL: Hand count after playing council_room was not correct. Expected 414, got 203
FAIL: Hand count after playing council_room was not correct. Expected 414, got 219
FAIL: Hand count after playing council_room was not correct. Expected 414, got 332
FAIL: Hand count after playing council_room was not correct. Expected 430, got 432
FAIL: Hand count after playing council_room was not correct. Expected 432, got 397
FAIL: Hand count after playing council_room was not correct. Expected 432, got 116
FAIL: Hand count after playing council_room was not correct. Expected 432, got 186
FAIL: Hand count after playing council_room was not correct. Expected 332, got 334
FAIL: Hand count after playing council_room was not correct. Expected 334, got 229
FAIL: Hand count after playing council_room was not correct. Expected 334, got 288
FAIL: Hand count after playing council_room was not correct. Expected 334, got 120
FAIL: Hand count after playing council_room was not correct. Expected 493, got 495
FAIL: Hand count after playing council_room was not correct. Expected 495, got 87
FAIL: Hand count after playing council_room was not correct. Expected 495, got 31
FAIL: Hand count after playing council_room was not correct. Expected 495, got 428
FAIL: Hand count after playing council_room was not correct. Expected 176, got 178
FAIL: Hand count after playing council_room was not correct. Expected 178, got 186
FAIL: Hand count after playing council_room was not correct. Expected 178, got 28
FAIL: Hand count after playing council_room was not correct. Expected 178, got 280
FAIL: Hand count after playing council_room was not correct. Expected 50, got 52
FAIL: Hand count after playing council_room was not correct. Expected 52, got 349
FAIL: Hand count after playing council_room was not correct. Expected 52, got 221
FAIL: Hand count after playing council_room was not correct. Expected 52, got 479
FAIL: Hand count after playing council_room was not correct. Expected 487, got 489
FAIL: Hand count after playing council_room was not correct. Expected 489, got 434
FAIL: Hand count after playing council_room was not correct. Expected 489, got 393
FAIL: Hand count after playing council_room was not correct. Expected 489, got 304
FAIL: Hand count after playing council_room was not correct. Expected 63, got 65
FAIL: Hand count after playing council_room was not correct. Expected 65, got 377
FAIL: Hand count after playing council_room was not correct. Expected 65, got 422
FAIL: Hand count after playing council_room was not correct. Expected 65, got 475
FAIL: Hand count after playing council_room was not correct. Expected 292, got 294
FAIL: Hand count after playing council_room was not correct. Expected 294, got 429
FAIL: Hand count after playing council_room was not correct. Expected 294, got 495
FAIL: Hand count after playing council_room was not correct. Expected 294, got 110
FAIL: Hand count after playing council_room was not correct. Expected 423, got 425
FAIL: Hand count after playing council_room was not correct. Expected 425, got 109
FAIL: Hand count after playing council_room was not correct. Expected 425, got 276
FAIL: Hand count after playing council_room was not correct. Expected 425, got 262
FAIL: Hand count after playing council_room was not correct. Expected 77, got 79
FAIL: Hand count after playing council_room was not correct. Expected 79, got 345
FAIL: Hand count after playing council_room was not correct. Expected 79, got 157
FAIL: Hand count after playing council_room was not correct. Expected 79, got 334
FAIL: Hand count after playing council_room was not correct. Expected 200, got 202
FAIL: Hand count after playing council_room was not correct. Expected 202, got 402
FAIL: Hand count after playing council_room was not correct. Expected 202, got 262
FAIL: Hand count after playing council_room was not correct. Expected 202, got 458
FAIL: Hand count after playing council_room was not correct. Expected 212, got 214
FAIL: Hand count after playing council_room was not correct. Expected 214, got 262
FAIL: Hand count after playing council_room was not correct. Expected 214, got 195
FAIL: Hand count after playing council_room was not correct. Expected 214, got 392
FAIL: Hand count after playing council_room was not correct. Expected 87, got 89
FAIL: Hand count after playing council_room was not correct. Expected 89, got 258
FAIL: Hand count after playing council_room was not correct. Expected 89, got 390
FAIL: Hand count after playing council_room was not correct. Expected 89, got 437
FAIL: Hand count after playing council_room was not correct. Expected 5, got 7
FAIL: Hand count after playing council_room was not correct. Expected 7, got 141
FAIL: Hand count after playing council_room was not correct. Expected 7, got 36
FAIL: Hand count after playing council_room was not correct. Expected 7, got 242
FAIL: Hand count after playing council_room was not correct. Expected 278, got 280
FAIL: Hand count after playing council_room was not correct. Expected 280, got 333
FAIL: Hand count after playing council_room was not correct. Expected 280, got 199
FAIL: Hand count after playing council_room was not correct. Expected 280, got 300
FAIL: Hand count after playing council_room was not correct. Expected 464, got 466
FAIL: Hand count after playing council_room was not correct. Expected 466, got 366
FAIL: Hand count after playing council_room was not correct. Expected 466, got 220
FAIL: Hand count after playing council_room was not correct. Expected 466, got 31
FAIL: Hand count after playing council_room was not correct. Expected 76, got 78
FAIL: Hand count after playing council_room was not correct. Expected 78, got 488
FAIL: Hand count after playing council_room was not correct. Expected 78, got 410
FAIL: Hand count after playing council_room was not correct. Expected 78, got 196
FAIL: Hand count after playing council_room was not correct. Expected 67, got 69
FAIL: Hand count after playing council_room was not correct. Expected 69, got 18
FAIL: Hand count after playing council_room was not correct. Expected 69, got 96
FAIL: Hand count after playing council_room was not correct. Expected 69, got 416
FAIL: Hand count after playing council_room was not correct. Expected 394, got 396
FAIL: Hand count after playing council_room was not correct. Expected 396, got 126
FAIL: Hand count after playing council_room was not correct. Expected 396, got 401
FAIL: Hand count after playing council_room was not correct. Expected 396, got 29
FAIL: Hand count after playing council_room was not correct. Expected 234, got 236
FAIL: Hand count after playing council_room was not correct. Expected 236, got 211
FAIL: Hand count after playing council_room was not correct. Expected 236, got 79
FAIL: Hand count after playing council_room was not correct. Expected 236, got 195
FAIL: Hand count after playing council_room was not correct. Expected 70, got 72
FAIL: Hand count after playing council_room was not correct. Expected 72, got 436
FAIL: Hand count after playing council_room was not correct. Expected 72, got 20
FAIL: Hand count after playing council_room was not correct. Expected 72, got 472
FAIL: Hand count after playing council_room was not correct. Expected 214, got 216
FAIL: Hand count after playing council_room was not correct. Expected 216, got 110
FAIL: Hand count after playing council_room was not correct. Expected 216, got 42
FAIL: Hand count after playing council_room was not correct. Expected 216, got 70
FAIL: Hand count after playing council_room was not correct. Expected 332, got 334
FAIL: Hand count after playing council_room was not correct. Expected 334, got 223
FAIL: Hand count after playing council_room was not correct. Expected 334, got 32
FAIL: Hand count after playing council_room was not correct. Expected 334, got 339
FAIL: Hand count after playing council_room was not correct. Expected 181, got 183
FAIL: Hand count after playing council_room was not correct. Expected 183, got 227
FAIL: Hand count after playing council_room was not correct. Expected 183, got 69
FAIL: Hand count after playing council_room was not correct. Expected 183, got 465
FAIL: Hand count after playing council_room was not correct. Expected 466, got 468
FAIL: Hand count after playing council_room was not correct. Expected 468, got 76
FAIL: Hand count after playing council_room was not correct. Expected 468, got 73
FAIL: Hand count after playing council_room was not correct. Expected 468, got 469
FAIL: Hand count after playing council_room was not correct. Expected 477, got 479
FAIL: Hand count after playing council_room was not correct. Expected 479, got 415
FAIL: Hand count after playing council_room was not correct. Expected 479, got 112
FAIL: Hand count after playing council_room was not correct. Expected 479, got 406
FAIL: Hand count after playing council_room was not correct. Expected 405, got 407
FAIL: Hand count after playing council_room was not correct. Expected 407, got 170
FAIL: Hand count after playing council_room was not correct. Expected 407, got 159
FAIL: Hand count after playing council_room was not correct. Expected 407, got 52
FAIL: Hand count after playing council_room was not correct. Expected 20, got 22
FAIL: Hand count after playing council_room was not correct. Expected 22, got 217
FAIL: Hand count after playing council_room was not correct. Expected 22, got 38
FAIL: Hand count after playing council_room was not correct. Expected 22, got 137
FAIL: Hand count after playing council_room was not correct. Expected 357, got 359
FAIL: Hand count after playing council_room was not correct. Expected 359, got 76
FAIL: Hand count after playing council_room was not correct. Expected 359, got 312
FAIL: Hand count after playing council_room was not correct. Expected 359, got 425
FAIL: Hand count after playing council_room was not correct. Expected 257, got 259
FAIL: Hand count after playing council_room was not correct. Expected 259, got 294
FAIL: Hand count after playing council_room was not correct. Expected 259, got 73
FAIL: Hand count after playing council_room was not correct. Expected 259, got 491
FAIL: Hand count after playing council_room was not correct. Expected 233, got 235
FAIL: Hand count after playing council_room was not correct. Expected 235, got 437
FAIL: Hand count after playing council_room was not correct. Expected 235, got 290
FAIL: Hand count after playing council_room was not correct. Expected 235, got 450
FAIL: Hand count after playing council_room was not correct. Expected 201, got 203
FAIL: Hand count after playing council_room was not correct. Expected 203, got 321
FAIL: Hand count after playing council_room was not correct. Expected 203, got 276
FAIL: Hand count after playing council_room was not correct. Expected 203, got 215
FAIL: Hand count after playing council_room was not correct. Expected 434, got 436
FAIL: Hand count after playing council_room was not correct. Expected 436, got 156
FAIL: Hand count after playing council_room was not correct. Expected 436, got 441
FAIL: Hand count after playing council_room was not correct. Expected 436, got 67
FAIL: Hand count after playing council_room was not correct. Expected 200, got 202
FAIL: Hand count after playing council_room was not correct. Expected 202, got 292
FAIL: Hand count after playing council_room was not correct. Expected 202, got 46
FAIL: Hand count after playing council_room was not correct. Expected 202, got 220
FAIL: Hand count after playing council_room was not correct. Expected 126, got 128
FAIL: Hand count after playing council_room was not correct. Expected 128, got 345
FAIL: Hand count after playing council_room was not correct. Expected 128, got 95
FAIL: Hand count after playing council_room was not correct. Expected 128, got 239
FAIL: Hand count after playing council_room was not correct. Expected 404, got 406
FAIL: Hand count after playing council_room was not correct. Expected 406, got 8
FAIL: Hand count after playing council_room was not correct. Expected 406, got 41
FAIL: Hand count after playing council_room was not correct. Expected 406, got 42
FAIL: Hand count after playing council_room was not correct. Expected 42, got 44
FAIL: Hand count after playing council_room was not correct. Expected 44, got 374
FAIL: Hand count after playing council_room was not correct. Expected 44, got 1
FAIL: Hand count after playing council_room was not correct. Expected 44, got 367
FAIL: Hand count after playing council_room was not correct. Expected 432, got 434
FAIL: Hand count after playing council_room was not correct. Expected 434, got 361
FAIL: Hand count after playing council_room was not correct. Expected 434, got 251
FAIL: Hand count after playing council_room was not correct. Expected 434, got 362
FAIL: Hand count after playing council_room was not correct. Expected 426, got 428
FAIL: Hand count after playing council_room was not correct. Expected 428, got 226
FAIL: Hand count after playing council_room was not correct. Expected 428, got 440
FAIL: Hand count after playing council_room was not correct. Expected 428, got 66
FAIL: Hand count after playing council_room was not correct. Expected 84, got 86
FAIL: Hand count after playing council_room was not correct. Expected 86, got 452
FAIL: Hand count after playing council_room was not correct. Expected 86, got 9
FAIL: Hand count after playing council_room was not correct. Expected 86, got 152
FAIL: Hand count after playing council_room was not correct. Expected 31, got 33
FAIL: Hand count after playing council_room was not correct. Expected 33, got 311
FAIL: Hand count after playing council_room was not correct. Expected 33, got 200
FAIL: Hand count after playing council_room was not correct. Expected 33, got 87
FAIL: Hand count after playing council_room was not correct. Expected 178, got 180
FAIL: Hand count after playing council_room was not correct. Expected 180, got 146
FAIL: Hand count after playing council_room was not correct. Expected 180, got 262
FAIL: Hand count after playing council_room was not correct. Expected 180, got 24
FAIL: Hand count after playing council_room was not correct. Expected 390, got 392
FAIL: Hand count after playing council_room was not correct. Expected 392, got 65
FAIL: Hand count after playing council_room was not correct. Expected 392, got 477
FAIL: Hand count after playing council_room was not correct. Expected 392, got 183
FAIL: Hand count after playing council_room was not correct. Expected 280, got 282
FAIL: Hand count after playing council_room was not correct. Expected 282, got 323
FAIL: Hand count after playing council_room was not correct. Expected 282, got 30
FAIL: Hand count after playing council_room was not correct. Expected 282, got 225
FAIL: Hand count after playing council_room was not correct. Expected 53, got 55
FAIL: Hand count after playing council_room was not correct. Expected 55, got 304
FAIL: Hand count after playing council_room was not correct. Expected 55, got 94
FAIL: Hand count after playing council_room was not correct. Expected 55, got 9
FAIL: Hand count after playing council_room was not correct. Expected 274, got 276
FAIL: Hand count after playing council_room was not correct. Expected 276, got 297
FAIL: Hand count after playing council_room was not correct. Expected 276, got 319
FAIL: Hand count after playing council_room was not correct. Expected 276, got 53
FAIL: Hand count after playing council_room was not correct. Expected 426, got 428
FAIL: Hand count after playing council_room was not correct. Expected 428, got 280
FAIL: Hand count after playing council_room was not correct. Expected 428, got 371
FAIL: Hand count after playing council_room was not correct. Expected 428, got 455
FAIL: Hand count after playing council_room was not correct. Expected 374, got 376
FAIL: Hand count after playing council_room was not correct. Expected 376, got 207
FAIL: Hand count after playing council_room was not correct. Expected 376, got 179
FAIL: Hand count after playing council_room was not correct. Expected 376, got 355
FAIL: Hand count after playing council_room was not correct. Expected 22, got 24
FAIL: Hand count after playing council_room was not correct. Expected 24, got 332
FAIL: Hand count after playing council_room was not correct. Expected 24, got 285
FAIL: Hand count after playing council_room was not correct. Expected 24, got 446
FAIL: Hand count after playing council_room was not correct. Expected 173, got 175
FAIL: Hand count after playing council_room was not correct. Expected 175, got 127
FAIL: Hand count after playing council_room was not correct. Expected 175, got 437
FAIL: Hand count after playing council_room was not correct. Expected 175, got 236
FAIL: Hand count after playing council_room was not correct. Expected 226, got 228
FAIL: Hand count after playing council_room was not correct. Expected 228, got 310
FAIL: Hand count after playing council_room was not correct. Expected 228, got 394
FAIL: Hand count after playing council_room was not correct. Expected 228, got 156
FAIL: Hand count after playing council_room was not correct. Expected 206, got 208
FAIL: Hand count after playing council_room was not correct. Expected 208, got 500
FAIL: Hand count after playing council_room was not correct. Expected 208, got 105
FAIL: Hand count after playing council_room was not correct. Expected 208, got 12
FAIL: Hand count after playing council_room was not correct. Expected 467, got 469
FAIL: Hand count after playing council_room was not correct. Expected 469, got 255
FAIL: Hand count after playing council_room was not correct. Expected 469, got 197
FAIL: Hand count after playing council_room was not correct. Expected 469, got 4
FAIL: Hand count after playing council_room was not correct. Expected 345, got 347
FAIL: Hand count after playing council_room was not correct. Expected 347, got 229
FAIL: Hand count after playing council_room was not correct. Expected 347, got 215
FAIL: Hand count after playing council_room was not correct. Expected 347, got 274
FAIL: Hand count after playing council_room was not correct. Expected 61, got 63
FAIL: Hand count after playing council_room was not correct. Expected 63, got 260
FAIL: Hand count after playing council_room was not correct. Expected 63, got 241
FAIL: Hand count after playing council_room was not correct. Expected 63, got 328
FAIL: Hand count after playing council_room was not correct. Expected 495, got 497
FAIL: Hand count after playing council_room was not correct. Expected 497, got 128
FAIL: Hand count after playing council_room was not correct. Expected 497, got 194
FAIL: Hand count after playing council_room was not correct. Expected 497, got 145
FAIL: Hand count after playing council_room was not correct. Expected 274, got 276
FAIL: Hand count after playing council_room was not correct. Expected 276, got 475
FAIL: Hand count after playing council_room was not correct. Expected 276, got 258
FAIL: Hand count after playing council_room was not correct. Expected 276, got 138
FAIL: Hand count after playing council_room was not correct. Expected 46, got 48
FAIL: Hand count after playing council_room was not correct. Expected 48, got 61
FAIL: Hand count after playing council_room was not correct. Expected 48, got 418
FAIL: Hand count after playing council_room was not correct. Expected 48, got 498
FAIL: Hand count after playing council_room was not correct. Expected 446, got 448
FAIL: Hand count after playing council_room was not correct. Expected 448, got 439
FAIL: Hand count after playing council_room was not correct. Expected 448, got 360
FAIL: Hand count after playing council_room was not correct. Expected 448, got 179
FAIL: Hand count after playing council_room was not correct. Expected 144, got 146
FAIL: Hand count after playing council_room was not correct. Expected 146, got 339
FAIL: Hand count after playing council_room was not correct. Expected 146, got 39
FAIL: Hand count after playing council_room was not correct. Expected 146, got 408
FAIL: Hand count after playing council_room was not correct. Expected 119, got 121
FAIL: Hand count after playing council_room was not correct. Expected 121, got 431
FAIL: Hand count after playing council_room was not correct. Expected 121, got 464
FAIL: Hand count after playing council_room was not correct. Expected 121, got 431
FAIL: Hand count after playing council_room was not correct. Expected 374, got 376
FAIL: Hand count after playing council_room was not correct. Expected 376, got 240
FAIL: Hand count after playing council_room was not correct. Expected 376, got 168
FAIL: Hand count after playing council_room was not correct. Expected 376, got 453
FAIL: Hand count after playing council_room was not correct. Expected 222, got 224
FAIL: Hand count after playing council_room was not correct. Expected 224, got 420
FAIL: Hand count after playing council_room was not correct. Expected 224, got 380
FAIL: Hand count after playing council_room was not correct. Expected 224, got 153
FAIL: Hand count after playing council_room was not correct. Expected 480, got 482
FAIL: Hand count after playing council_room was not correct. Expected 482, got 84
FAIL: Hand count after playing council_room was not correct. Expected 482, got 271
FAIL: Hand count after playing council_room was not correct. Expected 482, got 353
FAIL: Hand count after playing council_room was not correct. Expected 204, got 206
FAIL: Hand count after playing council_room was not correct. Expected 206, got 357
FAIL: Hand count after playing council_room was not correct. Expected 206, got 164
FAIL: Hand count after playing council_room was not correct. Expected 206, got 231
FAIL: Hand count after playing council_room was not correct. Expected 119, got 121
FAIL: Hand count after playing council_room was not correct. Expected 121, got 187
FAIL: Hand count after playing council_room was not correct. Expected 121, got 350
FAIL: Hand count after playing council_room was not correct. Expected 121, got 47
FAIL: Hand count after playing council_room was not correct. Expected 180, got 182
FAIL: Hand count after playing council_room was not correct. Expected 182, got 405
FAIL: Hand count after playing council_room was not correct. Expected 182, got 54
FAIL: Hand count after playing council_room was not correct. Expected 182, got 112
FAIL: Hand count after playing council_room was not correct. Expected 76, got 78
FAIL: Hand count after playing council_room was not correct. Expected 78, got 324
FAIL: Hand count after playing council_room was not correct. Expected 78, got 337
FAIL: Hand count after playing council_room was not correct. Expected 78, got 447
FAIL: Hand count after playing council_room was not correct. Expected 201, got 203
FAIL: Hand count after playing council_room was not correct. Expected 203, got 231
FAIL: Hand count after playing council_room was not correct. Expected 203, got 399
FAIL: Hand count after playing council_room was not correct. Expected 203, got 453
FAIL: Hand count after playing council_room was not correct. Expected 239, got 241
FAIL: Hand count after playing council_room was not correct. Expected 241, got 288
FAIL: Hand count after playing council_room was not correct. Expected 241, got 461
FAIL: Hand count after playing council_room was not correct. Expected 241, got 45
FAIL: Hand count after playing council_room was not correct. Expected 248, got 250
FAIL: Hand count after playing council_room was not correct. Expected 250, got 187
FAIL: Hand count after playing council_room was not correct. Expected 250, got 498
FAIL: Hand count after playing council_room was not correct. Expected 250, got 423
FAIL: Hand count after playing council_room was not correct. Expected 271, got 273
FAIL: Hand count after playing council_room was not correct. Expected 273, got 391
FAIL: Hand count after playing council_room was not correct. Expected 273, got 306
FAIL: Hand count after playing council_room was not correct. Expected 273, got 464
FAIL: Hand count after playing council_room was not correct. Expected 21, got 23
FAIL: Hand count after playing council_room was not correct. Expected 23, got 181
FAIL: Hand count after playing council_room was not correct. Expected 23, got 493
FAIL: Hand count after playing council_room was not correct. Expected 23, got 468
FAIL: Hand count after playing council_room was not correct. Expected 415, got 417
FAIL: Hand count after playing council_room was not correct. Expected 417, got 227
FAIL: Hand count after playing council_room was not correct. Expected 417, got 395
FAIL: Hand count after playing council_room was not correct. Expected 417, got 114
FAIL: Hand count after playing council_room was not correct. Expected 67, got 69
FAIL: Hand count after playing council_room was not correct. Expected 69, got 482
FAIL: Hand count after playing council_room was not correct. Expected 69, got 75
FAIL: Hand count after playing council_room was not correct. Expected 69, got 144
FAIL: Hand count after playing council_room was not correct. Expected 204, got 206
FAIL: Hand count after playing council_room was not correct. Expected 206, got 344
FAIL: Hand count after playing council_room was not correct. Expected 206, got 329
FAIL: Hand count after playing council_room was not correct. Expected 206, got 247
FAIL: Hand count after playing council_room was not correct. Expected 174, got 176
FAIL: Hand count after playing council_room was not correct. Expected 176, got 499
FAIL: Hand count after playing council_room was not correct. Expected 176, got 248
FAIL: Hand count after playing council_room was not correct. Expected 176, got 250
FAIL: Hand count after playing council_room was not correct. Expected 184, got 186
FAIL: Hand count after playing council_room was not correct. Expected 186, got 245
FAIL: Hand count after playing council_room was not correct. Expected 186, got 33
FAIL: Hand count after playing council_room was not correct. Expected 186, got 289
FAIL: Hand count after playing council_room was not correct. Expected 414, got 416
FAIL: Hand count after playing council_room was not correct. Expected 416, got 453
FAIL: Hand count after playing council_room was not correct. Expected 416, got 413
FAIL: Hand count after playing council_room was not correct. Expected 416, got 353
FAIL: Hand count after playing council_room was not correct. Expected 338, got 340
FAIL: Hand count after playing council_room was not correct. Expected 340, got 459
FAIL: Hand count after playing council_room was not correct. Expected 340, got 328
FAIL: Hand count after playing council_room was not correct. Expected 340, got 447
FAIL: Hand count after playing council_room was not correct. Expected 317, got 319
FAIL: Hand count after playing council_room was not correct. Expected 319, got 334
FAIL: Hand count after playing council_room was not correct. Expected 319, got 62
FAIL: Hand count after playing council_room was not correct. Expected 319, got 169
FAIL: Hand count after playing council_room was not correct. Expected 336, got 338
FAIL: Hand count after playing council_room was not correct. Expected 338, got 110
FAIL: Hand count after playing council_room was not correct. Expected 338, got 248
FAIL: Hand count after playing council_room was not correct. Expected 338, got 161
FAIL: Hand count after playing council_room was not correct. Expected 420, got 422
FAIL: Hand count after playing council_room was not correct. Expected 422, got 127
FAIL: Hand count after playing council_room was not correct. Expected 422, got 1
FAIL: Hand count after playing council_room was not correct. Expected 422, got 84
FAIL: Hand count after playing council_room was not correct. Expected 473, got 475
FAIL: Hand count after playing council_room was not correct. Expected 475, got 315
FAIL: Hand count after playing council_room was not correct. Expected 475, got 163
FAIL: Hand count after playing council_room was not correct. Expected 475, got 157
FAIL: Hand count after playing council_room was not correct. Expected 47, got 49
FAIL: Hand count after playing council_room was not correct. Expected 49, got 249
FAIL: Hand count after playing council_room was not correct. Expected 49, got 152
FAIL: Hand count after playing council_room was not correct. Expected 49, got 182
FAIL: Hand count after playing council_room was not correct. Expected 333, got 335
FAIL: Hand count after playing council_room was not correct. Expected 335, got 167
FAIL: Hand count after playing council_room was not correct. Expected 335, got 309
FAIL: Hand count after playing council_room was not correct. Expected 335, got 208
FAIL: Hand count after playing council_room was not correct. Expected 159, got 161
FAIL: Hand count after playing council_room was not correct. Expected 161, got 285
FAIL: Hand count after playing council_room was not correct. Expected 161, got 199
FAIL: Hand count after playing council_room was not correct. Expected 161, got 54
FAIL: Hand count after playing council_room was not correct. Expected 35, got 37
FAIL: Hand count after playing council_room was not correct. Expected 37, got 239
FAIL: Hand count after playing council_room was not correct. Expected 37, got 19
FAIL: Hand count after playing council_room was not correct. Expected 37, got 377
FAIL: Hand count after playing council_room was not correct. Expected 473, got 475
FAIL: Hand count after playing council_room was not correct. Expected 475, got 430
FAIL: Hand count after playing council_room was not correct. Expected 475, got 353
FAIL: Hand count after playing council_room was not correct. Expected 475, got 324
FAIL: Hand count after playing council_room was not correct. Expected 436, got 438
FAIL: Hand count after playing council_room was not correct. Expected 438, got 120
FAIL: Hand count after playing council_room was not correct. Expected 438, got 33
FAIL: Hand count after playing council_room was not correct. Expected 438, got 454
FAIL: Hand count after playing council_room was not correct. Expected 413, got 415
FAIL: Hand count after playing council_room was not correct. Expected 415, got 257
FAIL: Hand count after playing council_room was not correct. Expected 415, got 150
FAIL: Hand count after playing council_room was not correct. Expected 415, got 287
FAIL: Hand count after playing council_room was not correct. Expected 133, got 135
FAIL: Hand count after playing council_room was not correct. Expected 135, got 493
FAIL: Hand count after playing council_room was not correct. Expected 135, got 349
FAIL: Hand count after playing council_room was not correct. Expected 135, got 448
FAIL: Hand count after playing council_room was not correct. Expected 329, got 331
FAIL: Hand count after playing council_room was not correct. Expected 331, got 282
FAIL: Hand count after playing council_room was not correct. Expected 331, got 440
FAIL: Hand count after playing council_room was not correct. Expected 331, got 310
FAIL: Hand count after playing council_room was not correct. Expected 139, got 141
FAIL: Hand count after playing council_room was not correct. Expected 141, got 30
FAIL: Hand count after playing council_room was not correct. Expected 141, got 1
FAIL: Hand count after playing council_room was not correct. Expected 141, got 397
FAIL: Hand count after playing council_room was not correct. Expected 371, got 373
FAIL: Hand count after playing council_room was not correct. Expected 373, got 360
FAIL: Hand count after playing council_room was not correct. Expected 373, got 309
FAIL: Hand count after playing council_room was not correct. Expected 373, got 263
FAIL: Hand count after playing council_room was not correct. Expected 338, got 340
FAIL: Hand count after playing council_room was not correct. Expected 340, got 347
FAIL: Hand count after playing council_room was not correct. Expected 340, got 458
FAIL: Hand count after playing council_room was not correct. Expected 340, got 187
FAIL: Hand count after playing council_room was not correct. Expected 94, got 96
FAIL: Hand count after playing council_room was not correct. Expected 96, got 256
FAIL: Hand count after playing council_room was not correct. Expected 96, got 332
FAIL: Hand count after playing council_room was not correct. Expected 96, got 142
FAIL: Hand count after playing council_room was not correct. Expected 161, got 163
FAIL: Hand count after playing council_room was not correct. Expected 163, got 279
FAIL: Hand count after playing council_room was not correct. Expected 163, got 147
FAIL: Hand count after playing council_room was not correct. Expected 163, got 329
FAIL: Hand count after playing council_room was not correct. Expected 54, got 56
FAIL: Hand count after playing council_room was not correct. Expected 56, got 438
FAIL: Hand count after playing council_room was not correct. Expected 56, got 98
FAIL: Hand count after playing council_room was not correct. Expected 56, got 284
FAIL: Hand count after playing council_room was not correct. Expected 196, got 198
FAIL: Hand count after playing council_room was not correct. Expected 198, got 102
FAIL: Hand count after playing council_room was not correct. Expected 198, got 303
FAIL: Hand count after playing council_room was not correct. Expected 198, got 337
FAIL: Hand count after playing council_room was not correct. Expected 363, got 365
FAIL: Hand count after playing council_room was not correct. Expected 365, got 380
FAIL: Hand count after playing council_room was not correct. Expected 365, got 433
FAIL: Hand count after playing council_room was not correct. Expected 365, got 116
FAIL: Hand count after playing council_room was not correct. Expected 183, got 185
FAIL: Hand count after playing council_room was not correct. Expected 185, got 437
FAIL: Hand count after playing council_room was not correct. Expected 185, got 315
FAIL: Hand count after playing council_room was not correct. Expected 185, got 177
FAIL: Hand count after playing council_room was not correct. Expected 89, got 91
FAIL: Hand count after playing council_room was not correct. Expected 91, got 85
FAIL: Hand count after playing council_room was not correct. Expected 91, got 280
FAIL: Hand count after playing council_room was not correct. Expected 91, got 188
FAIL: Hand count after playing council_room was not correct. Expected 471, got 473
FAIL: Hand count after playing council_room was not correct. Expected 473, got 456
FAIL: Hand count after playing council_room was not correct. Expected 473, got 15
FAIL: Hand count after playing council_room was not correct. Expected 473, got 393
FAIL: Hand count after playing council_room was not correct. Expected 147, got 149
FAIL: Hand count after playing council_room was not correct. Expected 149, got 53
FAIL: Hand count after playing council_room was not correct. Expected 149, got 473
FAIL: Hand count after playing council_room was not correct. Expected 149, got 105
FAIL: Hand count after playing council_room was not correct. Expected 180, got 182
FAIL: Hand count after playing council_room was not correct. Expected 182, got 282
FAIL: Hand count after playing council_room was not correct. Expected 182, got 24
FAIL: Hand count after playing council_room was not correct. Expected 182, got 282
FAIL: Hand count after playing council_room was not correct. Expected 134, got 136
FAIL: Hand count after playing council_room was not correct. Expected 136, got 271
FAIL: Hand count after playing council_room was not correct. Expected 136, got 438
FAIL: Hand count after playing council_room was not correct. Expected 136, got 53
FAIL: Hand count after playing council_room was not correct. Expected 187, got 189
FAIL: Hand count after playing council_room was not correct. Expected 189, got 209
FAIL: Hand count after playing council_room was not correct. Expected 189, got 453
FAIL: Hand count after playing council_room was not correct. Expected 189, got 412
FAIL: Hand count after playing council_room was not correct. Expected 243, got 245
FAIL: Hand count after playing council_room was not correct. Expected 245, got 374
FAIL: Hand count after playing council_room was not correct. Expected 245, got 78
FAIL: Hand count after playing council_room was not correct. Expected 245, got 376
FAIL: Hand count after playing council_room was not correct. Expected 124, got 126
FAIL: Hand count after playing council_room was not correct. Expected 126, got 394
FAIL: Hand count after playing council_room was not correct. Expected 126, got 2
FAIL: Hand count after playing council_room was not correct. Expected 126, got 150
FAIL: Hand count after playing council_room was not correct. Expected 299, got 301
FAIL: Hand count after playing council_room was not correct. Expected 301, got 67
FAIL: Hand count after playing council_room was not correct. Expected 301, got 327
FAIL: Hand count after playing council_room was not correct. Expected 301, got 202
FAIL: Hand count after playing council_room was not correct. Expected 234, got 236
FAIL: Hand count after playing council_room was not correct. Expected 236, got 457
FAIL: Hand count after playing council_room was not correct. Expected 236, got 8
FAIL: Hand count after playing council_room was not correct. Expected 236, got 148
FAIL: Hand count after playing council_room was not correct. Expected 492, got 494
FAIL: Hand count after playing council_room was not correct. Expected 494, got 250
FAIL: Hand count after playing council_room was not correct. Expected 494, got 63
FAIL: Hand count after playing council_room was not correct. Expected 494, got 130
FAIL: Hand count after playing council_room was not correct. Expected 26, got 28
FAIL: Hand count after playing council_room was not correct. Expected 28, got 239
FAIL: Hand count after playing council_room was not correct. Expected 28, got 74
FAIL: Hand count after playing council_room was not correct. Expected 28, got 440
FAIL: Hand count after playing council_room was not correct. Expected 398, got 400
FAIL: Hand count after playing council_room was not correct. Expected 400, got 348
FAIL: Hand count after playing council_room was not correct. Expected 400, got 246
FAIL: Hand count after playing council_room was not correct. Expected 400, got 395
FAIL: Hand count after playing council_room was not correct. Expected 111, got 113
FAIL: Hand count after playing council_room was not correct. Expected 113, got 135
FAIL: Hand count after playing council_room was not correct. Expected 113, got 84
FAIL: Hand count after playing council_room was not correct. Expected 113, got 101
FAIL: Hand count after playing council_room was not correct. Expected 355, got 357
FAIL: Hand count after playing council_room was not correct. Expected 357, got 53
FAIL: Hand count after playing council_room was not correct. Expected 357, got 126
FAIL: Hand count after playing council_room was not correct. Expected 357, got 492
FAIL: Hand count after playing council_room was not correct. Expected 258, got 260
FAIL: Hand count after playing council_room was not correct. Expected 260, got 384
FAIL: Hand count after playing council_room was not correct. Expected 260, got 255
FAIL: Hand count after playing council_room was not correct. Expected 260, got 496
FAIL: Hand count after playing council_room was not correct. Expected 390, got 392
FAIL: Hand count after playing council_room was not correct. Expected 392, got 103
FAIL: Hand count after playing council_room was not correct. Expected 392, got 422
FAIL: Hand count after playing council_room was not correct. Expected 392, got 38
FAIL: Hand count after playing council_room was not correct. Expected 76, got 78
FAIL: Hand count after playing council_room was not correct. Expected 78, got 498
FAIL: Hand count after playing council_room was not correct. Expected 78, got 124
FAIL: Hand count after playing council_room was not correct. Expected 78, got 158
FAIL: Hand count after playing council_room was not correct. Expected 101, got 103
FAIL: Hand count after playing council_room was not correct. Expected 103, got 318
FAIL: Hand count after playing council_room was not correct. Expected 103, got 199
FAIL: Hand count after playing council_room was not correct. Expected 103, got 372
FAIL: Hand count after playing council_room was not correct. Expected 319, got 321
FAIL: Hand count after playing council_room was not correct. Expected 321, got 190
FAIL: Hand count after playing council_room was not correct. Expected 321, got 238
FAIL: Hand count after playing council_room was not correct. Expected 321, got 172
FAIL: Hand count after playing council_room was not correct. Expected 485, got 487
FAIL: Hand count after playing council_room was not correct. Expected 487, got 209
FAIL: Hand count after playing council_room was not correct. Expected 487, got 30
FAIL: Hand count after playing council_room was not correct. Expected 487, got 2
FAIL: Hand count after playing council_room was not correct. Expected 224, got 226
FAIL: Hand count after playing council_room was not correct. Expected 226, got 148
FAIL: Hand count after playing council_room was not correct. Expected 226, got 340
FAIL: Hand count after playing council_room was not correct. Expected 226, got 427
FAIL: Hand count after playing council_room was not correct. Expected 317, got 319
FAIL: Hand count after playing council_room was not correct. Expected 319, got 467
FAIL: Hand count after playing council_room was not correct. Expected 319, got 36
FAIL: Hand count after playing council_room was not correct. Expected 319, got 11
FAIL: Hand count after playing council_room was not correct. Expected 405, got 407
FAIL: Hand count after playing council_room was not correct. Expected 407, got 362
FAIL: Hand count after playing council_room was not correct. Expected 407, got 280
FAIL: Hand count after playing council_room was not correct. Expected 407, got 443
FAIL: Hand count after playing council_room was not correct. Expected 294, got 296
FAIL: Hand count after playing council_room was not correct. Expected 296, got 167
FAIL: Hand count after playing council_room was not correct. Expected 296, got 392
FAIL: Hand count after playing council_room was not correct. Expected 296, got 122
FAIL: Hand count after playing council_room was not correct. Expected 296, got 298
FAIL: Hand count after playing council_room was not correct. Expected 298, got 308
FAIL: Hand count after playing council_room was not correct. Expected 298, got 355
FAIL: Hand count after playing council_room was not correct. Expected 298, got 84
FAIL: Hand count after playing council_room was not correct. Expected 436, got 438
FAIL: Hand count after playing council_room was not correct. Expected 438, got 154
FAIL: Hand count after playing council_room was not correct. Expected 438, got 185
FAIL: Hand count after playing council_room was not correct. Expected 438, got 115
FAIL: Hand count after playing council_room was not correct. Expected 365, got 367
FAIL: Hand count after playing council_room was not correct. Expected 367, got 229
FAIL: Hand count after playing council_room was not correct. Expected 367, got 385
FAIL: Hand count after playing council_room was not correct. Expected 367, got 90
FAIL: Hand count after playing council_room was not correct. Expected 421, got 423
FAIL: Hand count after playing council_room was not correct. Expected 423, got 313
FAIL: Hand count after playing council_room was not correct. Expected 423, got 37
FAIL: Hand count after playing council_room was not correct. Expected 423, got 93
FAIL: Hand count after playing council_room was not correct. Expected 442, got 444
FAIL: Hand count after playing council_room was not correct. Expected 444, got 111
FAIL: Hand count after playing council_room was not correct. Expected 444, got 317
FAIL: Hand count after playing council_room was not correct. Expected 444, got 57
FAIL: Hand count after playing council_room was not correct. Expected 459, got 461
FAIL: Hand count after playing council_room was not correct. Expected 461, got 384
FAIL: Hand count after playing council_room was not correct. Expected 461, got 360
FAIL: Hand count after playing council_room was not correct. Expected 461, got 57
FAIL: Hand count after playing council_room was not correct. Expected 469, got 471
FAIL: Hand count after playing council_room was not correct. Expected 471, got 94
FAIL: Hand count after playing council_room was not correct. Expected 471, got 141
FAIL: Hand count after playing council_room was not correct. Expected 471, got 286
FAIL: Hand count after playing council_room was not correct. Expected 25, got 27
FAIL: Hand count after playing council_room was not correct. Expected 27, got 461
FAIL: Hand count after playing council_room was not correct. Expected 27, got 201
FAIL: Hand count after playing council_room was not correct. Expected 27, got 95
FAIL: Hand count after playing council_room was not correct. Expected 420, got 422
FAIL: Hand count after playing council_room was not correct. Expected 422, got 490
FAIL: Hand count after playing council_room was not correct. Expected 422, got 479
FAIL: Hand count after playing council_room was not correct. Expected 422, got 105
FAIL: Hand count after playing council_room was not correct. Expected 426, got 428
FAIL: Hand count after playing council_room was not correct. Expected 428, got 114
FAIL: Hand count after playing council_room was not correct. Expected 428, got 321
FAIL: Hand count after playing council_room was not correct. Expected 428, got 440
FAIL: Hand count after playing council_room was not correct. Expected 177, got 179
FAIL: Hand count after playing council_room was not correct. Expected 179, got 422
FAIL: Hand count after playing council_room was not correct. Expected 179, got 82
FAIL: Hand count after playing council_room was not correct. Expected 179, got 341
FAIL: Hand count after playing council_room was not correct. Expected 353, got 355
FAIL: Hand count after playing council_room was not correct. Expected 355, got 257
FAIL: Hand count after playing council_room was not correct. Expected 355, got 340
FAIL: Hand count after playing council_room was not correct. Expected 355, got 399
FAIL: Hand count after playing council_room was not correct. Expected 24, got 26
FAIL: Hand count after playing council_room was not correct. Expected 26, got 212
FAIL: Hand count after playing council_room was not correct. Expected 26, got 215
FAIL: Hand count after playing council_room was not correct. Expected 26, got 401
FAIL: Hand count after playing council_room was not correct. Expected 334, got 336
FAIL: Hand count after playing council_room was not correct. Expected 336, got 157
FAIL: Hand count after playing council_room was not correct. Expected 336, got 88
FAIL: Hand count after playing council_room was not correct. Expected 336, got 74
FAIL: Hand count after playing council_room was not correct. Expected 9, got 11
FAIL: Hand count after playing council_room was not correct. Expected 11, got 427
FAIL: Hand count after playing council_room was not correct. Expected 11, got 169
FAIL: Hand count after playing council_room was not correct. Expected 11, got 426
FAIL: Hand count after playing council_room was not correct. Expected 159, got 161
FAIL: Hand count after playing council_room was not correct. Expected 161, got 329
FAIL: Hand count after playing council_room was not correct. Expected 161, got 84
FAIL: Hand count after playing council_room was not correct. Expected 161, got 462
FAIL: Hand count after playing council_room was not correct. Expected 365, got 367
FAIL: Hand count after playing council_room was not correct. Expected 367, got 231
FAIL: Hand count after playing council_room was not correct. Expected 367, got 459
FAIL: Hand count after playing council_room was not correct. Expected 367, got 235
FAIL: Hand count after playing council_room was not correct. Expected 36, got 38
FAIL: Hand count after playing council_room was not correct. Expected 38, got 307
FAIL: Hand count after playing council_room was not correct. Expected 38, got 380
FAIL: Hand count after playing council_room was not correct. Expected 38, got 305
FAIL: Hand count after playing council_room was not correct. Expected 358, got 360
FAIL: Hand count after playing council_room was not correct. Expected 360, got 85
FAIL: Hand count after playing council_room was not correct. Expected 360, got 197
FAIL: Hand count after playing council_room was not correct. Expected 360, got 61
FAIL: Hand count after playing council_room was not correct. Expected 58, got 60
FAIL: Hand count after playing council_room was not correct. Expected 60, got 12
FAIL: Hand count after playing council_room was not correct. Expected 60, got 107
FAIL: Hand count after playing council_room was not correct. Expected 60, got 318
FAIL: Hand count after playing council_room was not correct. Expected 33, got 35
FAIL: Hand count after playing council_room was not correct. Expected 35, got 259
FAIL: Hand count after playing council_room was not correct. Expected 35, got 184
FAIL: Hand count after playing council_room was not correct. Expected 35, got 92
FAIL: Hand count after playing council_room was not correct. Expected 476, got 478
FAIL: Hand count after playing council_room was not correct. Expected 478, got 45
FAIL: Hand count after playing council_room was not correct. Expected 478, got 343
FAIL: Hand count after playing council_room was not correct. Expected 478, got 212
FAIL: Hand count after playing council_room was not correct. Expected 243, got 245
FAIL: Hand count after playing council_room was not correct. Expected 245, got 77
FAIL: Hand count after playing council_room was not correct. Expected 245, got 221
FAIL: Hand count after playing council_room was not correct. Expected 245, got 37
FAIL: Hand count after playing council_room was not correct. Expected 375, got 377
FAIL: Hand count after playing council_room was not correct. Expected 377, got 405
FAIL: Hand count after playing council_room was not correct. Expected 377, got 303
FAIL: Hand count after playing council_room was not correct. Expected 377, got 19
FAIL: Hand count after playing council_room was not correct. Expected 232, got 234
FAIL: Hand count after playing council_room was not correct. Expected 234, got 122
FAIL: Hand count after playing council_room was not correct. Expected 234, got 178
FAIL: Hand count after playing council_room was not correct. Expected 234, got 140
FAIL: Hand count after playing council_room was not correct. Expected 133, got 135
FAIL: Hand count after playing council_room was not correct. Expected 135, got 202
FAIL: Hand count after playing council_room was not correct. Expected 135, got 181
FAIL: Hand count after playing council_room was not correct. Expected 135, got 116
FAIL: Hand count after playing council_room was not correct. Expected 73, got 75
FAIL: Hand count after playing council_room was not correct. Expected 75, got 52
FAIL: Hand count after playing council_room was not correct. Expected 75, got 264
FAIL: Hand count after playing council_room was not correct. Expected 75, got 372
FAIL: Hand count after playing council_room was not correct. Expected 166, got 168
FAIL: Hand count after playing council_room was not correct. Expected 168, got 77
FAIL: Hand count after playing council_room was not correct. Expected 168, got 55
FAIL: Hand count after playing council_room was not correct. Expected 168, got 314
FAIL: Hand count after playing council_room was not correct. Expected 206, got 208
FAIL: Hand count after playing council_room was not correct. Expected 208, got 336
FAIL: Hand count after playing council_room was not correct. Expected 208, got 100
FAIL: Hand count after playing council_room was not correct. Expected 208, got 140
FAIL: Hand count after playing council_room was not correct. Expected 493, got 495
FAIL: Hand count after playing council_room was not correct. Expected 495, got 463
FAIL: Hand count after playing council_room was not correct. Expected 495, got 361
FAIL: Hand count after playing council_room was not correct. Expected 495, got 288
FAIL: Hand count after playing council_room was not correct. Expected 104, got 106
FAIL: Hand count after playing council_room was not correct. Expected 106, got 415
FAIL: Hand count after playing council_room was not correct. Expected 106, got 412
FAIL: Hand count after playing council_room was not correct. Expected 106, got 361
FAIL: Hand count after playing council_room was not correct. Expected 298, got 300
FAIL: Hand count after playing council_room was not correct. Expected 300, got 152
FAIL: Hand count after playing council_room was not correct. Expected 300, got 45
FAIL: Hand count after playing council_room was not correct. Expected 300, got 394
FAIL: Hand count after playing council_room was not correct. Expected 5, got 7
FAIL: Hand count after playing council_room was not correct. Expected 7, got 343
FAIL: Hand count after playing council_room was not correct. Expected 7, got 275
FAIL: Hand count after playing council_room was not correct. Expected 7, got 493
FAIL: Hand count after playing council_room was not correct. Expected 331, got 333
FAIL: Hand count after playing council_room was not correct. Expected 333, got 158
FAIL: Hand count after playing council_room was not correct. Expected 333, got 202
FAIL: Hand count after playing council_room was not correct. Expected 333, got 459
FAIL: Hand count after playing council_room was not correct. Expected 170, got 172
FAIL: Hand count after playing council_room was not correct. Expected 172, got 303
FAIL: Hand count after playing council_room was not correct. Expected 172, got 224
FAIL: Hand count after playing council_room was not correct. Expected 172, got 279
FAIL: Hand count after playing council_room was not correct. Expected 219, got 221
FAIL: Hand count after playing council_room was not correct. Expected 221, got 149
FAIL: Hand count after playing council_room was not correct. Expected 221, got 271
FAIL: Hand count after playing council_room was not correct. Expected 221, got 460
FAIL: Hand count after playing council_room was not correct. Expected 419, got 421
FAIL: Hand count after playing council_room was not correct. Expected 421, got 201
FAIL: Hand count after playing council_room was not correct. Expected 421, got 133
FAIL: Hand count after playing council_room was not correct. Expected 421, got 249
FAIL: Hand count after playing council_room was not correct. Expected 316, got 318
FAIL: Hand count after playing council_room was not correct. Expected 318, got 81
FAIL: Hand count after playing council_room was not correct. Expected 318, got 88
FAIL: Hand count after playing council_room was not correct. Expected 318, got 5
FAIL: Hand count after playing council_room was not correct. Expected 298, got 300
FAIL: Hand count after playing council_room was not correct. Expected 300, got 91
FAIL: Hand count after playing council_room was not correct. Expected 300, got 268
FAIL: Hand count after playing council_room was not correct. Expected 300, got 210
FAIL: Hand count after playing council_room was not correct. Expected 374, got 376
FAIL: Hand count after playing council_room was not correct. Expected 376, got 41
FAIL: Hand count after playing council_room was not correct. Expected 376, got 263
FAIL: Hand count after playing council_room was not correct. Expected 376, got 196
FAIL: Hand count after playing council_room was not correct. Expected 349, got 351
FAIL: Hand count after playing council_room was not correct. Expected 351, got 432
FAIL: Hand count after playing council_room was not correct. Expected 351, got 421
FAIL: Hand count after playing council_room was not correct. Expected 351, got 113
FAIL: Hand count after playing council_room was not correct. Expected 439, got 441
FAIL: Hand count after playing council_room was not correct. Expected 441, got 343
FAIL: Hand count after playing council_room was not correct. Expected 441, got 452
FAIL: Hand count after playing council_room was not correct. Expected 441, got 209
FAIL: Hand count after playing council_room was not correct. Expected 427, got 429
FAIL: Hand count after playing council_room was not correct. Expected 429, got 141
FAIL: Hand count after playing council_room was not correct. Expected 429, got 71
FAIL: Hand count after playing council_room was not correct. Expected 429, got 435
FAIL: Hand count after playing council_room was not correct. Expected 201, got 203
FAIL: Hand count after playing council_room was not correct. Expected 203, got 237
FAIL: Hand count after playing council_room was not correct. Expected 203, got 228
FAIL: Hand count after playing council_room was not correct. Expected 203, got 343
FAIL: Hand count after playing council_room was not correct. Expected 231, got 233
FAIL: Hand count after playing council_room was not correct. Expected 233, got 212
FAIL: Hand count after playing council_room was not correct. Expected 233, got 82
FAIL: Hand count after playing council_room was not correct. Expected 233, got 405
FAIL: Hand count after playing council_room was not correct. Expected 67, got 69
FAIL: Hand count after playing council_room was not correct. Expected 69, got 279
FAIL: Hand count after playing council_room was not correct. Expected 69, got 177
FAIL: Hand count after playing council_room was not correct. Expected 69, got 126
FAIL: Hand count after playing council_room was not correct. Expected 31, got 33
FAIL: Hand count after playing council_room was not correct. Expected 33, got 357
FAIL: Hand count after playing council_room was not correct. Expected 33, got 90
FAIL: Hand count after playing council_room was not correct. Expected 33, got 76
FAIL: Hand count after playing council_room was not correct. Expected 196, got 198
FAIL: Hand count after playing council_room was not correct. Expected 198, got 182
FAIL: Hand count after playing council_room was not correct. Expected 198, got 100
FAIL: Hand count after playing council_room was not correct. Expected 198, got 174
FAIL: Hand count after playing council_room was not correct. Expected 15, got 17
FAIL: Hand count after playing council_room was not correct. Expected 17, got 14
FAIL: Hand count after playing council_room was not correct. Expected 17, got 35
FAIL: Hand count after playing council_room was not correct. Expected 17, got 108
FAIL: Hand count after playing council_room was not correct. Expected 209, got 211
FAIL: Hand count after playing council_room was not correct. Expected 211, got 257
FAIL: Hand count after playing council_room was not correct. Expected 211, got 97
FAIL: Hand count after playing council_room was not correct. Expected 211, got 232
FAIL: Hand count after playing council_room was not correct. Expected 89, got 91
FAIL: Hand count after playing council_room was not correct. Expected 91, got 295
FAIL: Hand count after playing council_room was not correct. Expected 91, got 106
FAIL: Hand count after playing council_room was not correct. Expected 91, got 244
FAIL: Hand count after playing council_room was not correct. Expected 438, got 440
FAIL: Hand count after playing council_room was not correct. Expected 440, got 12
FAIL: Hand count after playing council_room was not correct. Expected 440, got 356
FAIL: Hand count after playing council_room was not correct. Expected 440, got 364
FAIL: Hand count after playing council_room was not correct. Expected 182, got 184
FAIL: Hand count after playing council_room was not correct. Expected 184, got 219
FAIL: Hand count after playing council_room was not correct. Expected 184, got 174
FAIL: Hand count after playing council_room was not correct. Expected 184, got 66
FAIL: Hand count after playing council_room was not correct. Expected 100, got 102
FAIL: Hand count after playing council_room was not correct. Expected 102, got 461
FAIL: Hand count after playing council_room was not correct. Expected 102, got 298
FAIL: Hand count after playing council_room was not correct. Expected 102, got 229
FAIL: Hand count after playing council_room was not correct. Expected 344, got 346
FAIL: Hand count after playing council_room was not correct. Expected 346, got 250
FAIL: Hand count after playing council_room was not correct. Expected 346, got 343
FAIL: Hand count after playing council_room was not correct. Expected 346, got 352
FAIL: Hand count after playing council_room was not correct. Expected 332, got 334
FAIL: Hand count after playing council_room was not correct. Expected 334, got 344
FAIL: Hand count after playing council_room was not correct. Expected 334, got 214
FAIL: Hand count after playing council_room was not correct. Expected 334, got 317
FAIL: Hand count after playing council_room was not correct. Expected 493, got 495
FAIL: Hand count after playing council_room was not correct. Expected 495, got 257
FAIL: Hand count after playing council_room was not correct. Expected 495, got 356
FAIL: Hand count after playing council_room was not correct. Expected 495, got 62
FAIL: Hand count after playing council_room was not correct. Expected 42, got 44
FAIL: Hand count after playing council_room was not correct. Expected 44, got 444
FAIL: Hand count after playing council_room was not correct. Expected 44, got 239
FAIL: Hand count after playing council_room was not correct. Expected 44, got 315
FAIL: Hand count after playing council_room was not correct. Expected 114, got 116
FAIL: Hand count after playing council_room was not correct. Expected 116, got 433
FAIL: Hand count after playing council_room was not correct. Expected 116, got 394
FAIL: Hand count after playing council_room was not correct. Expected 116, got 386
FAIL: Hand count after playing council_room was not correct. Expected 293, got 295
FAIL: Hand count after playing council_room was not correct. Expected 295, got 465
FAIL: Hand count after playing council_room was not correct. Expected 295, got 74
FAIL: Hand count after playing council_room was not correct. Expected 295, got 275
FAIL: Hand count after playing council_room was not correct. Expected 85, got 87
FAIL: Hand count after playing council_room was not correct. Expected 87, got 86
FAIL: Hand count after playing council_room was not correct. Expected 87, got 169
FAIL: Hand count after playing council_room was not correct. Expected 87, got 282
FAIL: Hand count after playing council_room was not correct. Expected 287, got 289
FAIL: Hand count after playing council_room was not correct. Expected 289, got 227
FAIL: Hand count after playing council_room was not correct. Expected 289, got 22
FAIL: Hand count after playing council_room was not correct. Expected 289, got 315
FAIL: Hand count after playing council_room was not correct. Expected 452, got 454
FAIL: Hand count after playing council_room was not correct. Expected 454, got 117
FAIL: Hand count after playing council_room was not correct. Expected 454, got 344
FAIL: Hand count after playing council_room was not correct. Expected 454, got 138
FAIL: Hand count after playing council_room was not correct. Expected 241, got 243
FAIL: Hand count after playing council_room was not correct. Expected 243, got 192
FAIL: Hand count after playing council_room was not correct. Expected 243, got 36
FAIL: Hand count after playing council_room was not correct. Expected 243, got 500
FAIL: Hand count after playing council_room was not correct. Expected 254, got 256
FAIL: Hand count after playing council_room was not correct. Expected 256, got 463
FAIL: Hand count after playing council_room was not correct. Expected 256, got 385
FAIL: Hand count after playing council_room was not correct. Expected 256, got 265
FAIL: Hand count after playing council_room was not correct. Expected 34, got 36
FAIL: Hand count after playing council_room was not correct. Expected 36, got 329
FAIL: Hand count after playing council_room was not correct. Expected 36, got 143
FAIL: Hand count after playing council_room was not correct. Expected 36, got 36
FAIL: Hand count after playing council_room was not correct. Expected 60, got 62
FAIL: Hand count after playing council_room was not correct. Expected 62, got 489
FAIL: Hand count after playing council_room was not correct. Expected 62, got 228
FAIL: Hand count after playing council_room was not correct. Expected 62, got 192
FAIL: Hand count after playing council_room was not correct. Expected 236, got 238
FAIL: Hand count after playing council_room was not correct. Expected 238, got 236
FAIL: Hand count after playing council_room was not correct. Expected 238, got 110
FAIL: Hand count after playing council_room was not correct. Expected 238, got 460
FAIL: Hand count after playing council_room was not correct. Expected 334, got 336
FAIL: Hand count after playing council_room was not correct. Expected 336, got 337
FAIL: Hand count after playing council_room was not correct. Expected 336, got 43
FAIL: Hand count after playing council_room was not correct. Expected 336, got 431
FAIL: Hand count after playing council_room was not correct. Expected 111, got 113
FAIL: Hand count after playing council_room was not correct. Expected 113, got 162
FAIL: Hand count after playing council_room was not correct. Expected 113, got 264
FAIL: Hand count after playing council_room was not correct. Expected 113, got 15
FAIL: Hand count after playing council_room was not correct. Expected 132, got 134
FAIL: Hand count after playing council_room was not correct. Expected 134, got 146
FAIL: Hand count after playing council_room was not correct. Expected 134, got 219
FAIL: Hand count after playing council_room was not correct. Expected 134, got 209
FAIL: Hand count after playing council_room was not correct. Expected 240, got 242
FAIL: Hand count after playing council_room was not correct. Expected 242, got 300
FAIL: Hand count after playing council_room was not correct. Expected 242, got 23
FAIL: Hand count after playing council_room was not correct. Expected 242, got 2
FAIL: Hand count after playing council_room was not correct. Expected 209, got 211
FAIL: Hand count after playing council_room was not correct. Expected 211, got 146
FAIL: Hand count after playing council_room was not correct. Expected 211, got 2
FAIL: Hand count after playing council_room was not correct. Expected 211, got 191
FAIL: Hand count after playing council_room was not correct. Expected 113, got 115
FAIL: Hand count after playing council_room was not correct. Expected 115, got 320
FAIL: Hand count after playing council_room was not correct. Expected 115, got 60
FAIL: Hand count after playing council_room was not correct. Expected 115, got 456
FAIL: Hand count after playing council_room was not correct. Expected 336, got 338
FAIL: Hand count after playing council_room was not correct. Expected 338, got 139
FAIL: Hand count after playing council_room was not correct. Expected 338, got 387
FAIL: Hand count after playing council_room was not correct. Expected 338, got 422
FAIL: Hand count after playing council_room was not correct. Expected 132, got 134
FAIL: Hand count after playing council_room was not correct. Expected 134, got 291
FAIL: Hand count after playing council_room was not correct. Expected 134, got 256
FAIL: Hand count after playing council_room was not correct. Expected 134, got 452
FAIL: Hand count after playing council_room was not correct. Expected 62, got 64
FAIL: Hand count after playing council_room was not correct. Expected 64, got 243
FAIL: Hand count after playing council_room was not correct. Expected 64, got 303
FAIL: Hand count after playing council_room was not correct. Expected 64, got 185
FAIL: Hand count after playing council_room was not correct. Expected 294, got 296
FAIL: Hand count after playing council_room was not correct. Expected 296, got 72
FAIL: Hand count after playing council_room was not correct. Expected 296, got 66
FAIL: Hand count after playing council_room was not correct. Expected 296, got 311
FAIL: Hand count after playing council_room was not correct. Expected 440, got 442
FAIL: Hand count after playing council_room was not correct. Expected 442, got 351
FAIL: Hand count after playing council_room was not correct. Expected 442, got 376
FAIL: Hand count after playing council_room was not correct. Expected 442, got 253
FAIL: Hand count after playing council_room was not correct. Expected 13, got 15
FAIL: Hand count after playing council_room was not correct. Expected 15, got 363
FAIL: Hand count after playing council_room was not correct. Expected 15, got 66
FAIL: Hand count after playing council_room was not correct. Expected 15, got 170
FAIL: Hand count after playing council_room was not correct. Expected 483, got 485
FAIL: Hand count after playing council_room was not correct. Expected 485, got 346
FAIL: Hand count after playing council_room was not correct. Expected 485, got 37
FAIL: Hand count after playing council_room was not correct. Expected 485, got 390
FAIL: Hand count after playing council_room was not correct. Expected 434, got 436
FAIL: Hand count after playing council_room was not correct. Expected 436, got 170
FAIL: Hand count after playing council_room was not correct. Expected 436, got 192
FAIL: Hand count after playing council_room was not correct. Expected 436, got 359
FAIL: Hand count after playing council_room was not correct. Expected 365, got 367
FAIL: Hand count after playing council_room was not correct. Expected 367, got 97
FAIL: Hand count after playing council_room was not correct. Expected 367, got 459
FAIL: Hand count after playing council_room was not correct. Expected 367, got 395
FAIL: Hand count after playing council_room was not correct. Expected 497, got 499
FAIL: Hand count after playing council_room was not correct. Expected 499, got 107
FAIL: Hand count after playing council_room was not correct. Expected 499, got 372
FAIL: Hand count after playing council_room was not correct. Expected 499, got 3
FAIL: Hand count after playing council_room was not correct. Expected 487, got 489
FAIL: Hand count after playing council_room was not correct. Expected 489, got 221
FAIL: Hand count after playing council_room was not correct. Expected 489, got 328
FAIL: Hand count after playing council_room was not correct. Expected 489, got 314
FAIL: Hand count after playing council_room was not correct. Expected 327, got 329
FAIL: Hand count after playing council_room was not correct. Expected 329, got 130
FAIL: Hand count after playing council_room was not correct. Expected 329, got 173
FAIL: Hand count after playing council_room was not correct. Expected 329, got 392
FAIL: Hand count after playing council_room was not correct. Expected 180, got 182
FAIL: Hand count after playing council_room was not correct. Expected 182, got 440
FAIL: Hand count after playing council_room was not correct. Expected 182, got 39
FAIL: Hand count after playing council_room was not correct. Expected 182, got 343
FAIL: Hand count after playing council_room was not correct. Expected 324, got 326
FAIL: Hand count after playing council_room was not correct. Expected 326, got 318
FAIL: Hand count after playing council_room was not correct. Expected 326, got 108
FAIL: Hand count after playing council_room was not correct. Expected 326, got 356
FAIL: Hand count after playing council_room was not correct. Expected 340, got 342
FAIL: Hand count after playing council_room was not correct. Expected 342, got 122
FAIL: Hand count after playing council_room was not correct. Expected 342, got 116
FAIL: Hand count after playing council_room was not correct. Expected 342, got 426
FAIL: Hand count after playing council_room was not correct. Expected 474, got 476
FAIL: Hand count after playing council_room was not correct. Expected 476, got 207
FAIL: Hand count after playing council_room was not correct. Expected 476, got 215
FAIL: Hand count after playing council_room was not correct. Expected 476, got 112
FAIL: Hand count after playing council_room was not correct. Expected 496, got 498
FAIL: Hand count after playing council_room was not correct. Expected 498, got 181
FAIL: Hand count after playing council_room was not correct. Expected 498, got 130
FAIL: Hand count after playing council_room was not correct. Expected 498, got 205
FAIL: Hand count after playing council_room was not correct. Expected 76, got 78
FAIL: Hand count after playing council_room was not correct. Expected 78, got 457
FAIL: Hand count after playing council_room was not correct. Expected 78, got 221
FAIL: Hand count after playing council_room was not correct. Expected 78, got 356
FAIL: Hand count after playing council_room was not correct. Expected 159, got 161
FAIL: Hand count after playing council_room was not correct. Expected 161, got 431
FAIL: Hand count after playing council_room was not correct. Expected 161, got 474
FAIL: Hand count after playing council_room was not correct. Expected 161, got 451
FAIL: Hand count after playing council_room was not correct. Expected 261, got 263
FAIL: Hand count after playing council_room was not correct. Expected 263, got 71
FAIL: Hand count after playing council_room was not correct. Expected 263, got 446
FAIL: Hand count after playing council_room was not correct. Expected 263, got 137
FAIL: Hand count after playing council_room was not correct. Expected 240, got 242
FAIL: Hand count after playing council_room was not correct. Expected 242, got 394
FAIL: Hand count after playing council_room was not correct. Expected 242, got 315
FAIL: Hand count after playing council_room was not correct. Expected 242, got 397
FAIL: Hand count after playing council_room was not correct. Expected 89, got 91
FAIL: Hand count after playing council_room was not correct. Expected 91, got 11
FAIL: Hand count after playing council_room was not correct. Expected 91, got 28
FAIL: Hand count after playing council_room was not correct. Expected 91, got 229
FAIL: Hand count after playing council_room was not correct. Expected 230, got 232
FAIL: Hand count after playing council_room was not correct. Expected 232, got 290
FAIL: Hand count after playing council_room was not correct. Expected 232, got 407
FAIL: Hand count after playing council_room was not correct. Expected 232, got 393
FAIL: Hand count after playing council_room was not correct. Expected 282, got 284
FAIL: Hand count after playing council_room was not correct. Expected 284, got 340
FAIL: Hand count after playing council_room was not correct. Expected 284, got 444
FAIL: Hand count after playing council_room was not correct. Expected 284, got 74
FAIL: Hand count after playing council_room was not correct. Expected 415, got 417
FAIL: Hand count after playing council_room was not correct. Expected 417, got 400
FAIL: Hand count after playing council_room was not correct. Expected 417, got 323
FAIL: Hand count after playing council_room was not correct. Expected 417, got 112
FAIL: Hand count after playing council_room was not correct. Expected 197, got 199
FAIL: Hand count after playing council_room was not correct. Expected 199, got 314
FAIL: Hand count after playing council_room was not correct. Expected 199, got 472
FAIL: Hand count after playing council_room was not correct. Expected 199, got 259
FAIL: Hand count after playing council_room was not correct. Expected 218, got 220
FAIL: Hand count after playing council_room was not correct. Expected 220, got 198
FAIL: Hand count after playing council_room was not correct. Expected 220, got 19
FAIL: Hand count after playing council_room was not correct. Expected 220, got 314
FAIL: Hand count after playing council_room was not correct. Expected 169, got 171
FAIL: Hand count after playing council_room was not correct. Expected 171, got 284
FAIL: Hand count after playing council_room was not correct. Expected 171, got 406
FAIL: Hand count after playing council_room was not correct. Expected 171, got 349
FAIL: Hand count after playing council_room was not correct. Expected 468, got 470
FAIL: Hand count after playing council_room was not correct. Expected 470, got 414
FAIL: Hand count after playing council_room was not correct. Expected 470, got 100
FAIL: Hand count after playing council_room was not correct. Expected 470, got 243
FAIL: Hand count after playing council_room was not correct. Expected 234, got 236
FAIL: Hand count after playing council_room was not correct. Expected 236, got 336
FAIL: Hand count after playing council_room was not correct. Expected 236, got 102
FAIL: Hand count after playing council_room was not correct. Expected 236, got 487
FAIL: Hand count after playing council_room was not correct. Expected 71, got 73
FAIL: Hand count after playing council_room was not correct. Expected 73, got 52
FAIL: Hand count after playing council_room was not correct. Expected 73, got 46
FAIL: Hand count after playing council_room was not correct. Expected 73, got 435
FAIL: Hand count after playing council_room was not correct. Expected 169, got 171
FAIL: Hand count after playing council_room was not correct. Expected 171, got 154
FAIL: Hand count after playing council_room was not correct. Expected 171, got 223
FAIL: Hand count after playing council_room was not correct. Expected 171, got 350
FAIL: Hand count after playing council_room was not correct. Expected 380, got 382
FAIL: Hand count after playing council_room was not correct. Expected 382, got 411
FAIL: Hand count after playing council_room was not correct. Expected 382, got 234
FAIL: Hand count after playing council_room was not correct. Expected 382, got 51
FAIL: Hand count after playing council_room was not correct. Expected 294, got 296
FAIL: Hand count after playing council_room was not correct. Expected 296, got 259
FAIL: Hand count after playing council_room was not correct. Expected 296, got 156
FAIL: Hand count after playing council_room was not correct. Expected 296, got 431
FAIL: Hand count after playing council_room was not correct. Expected 464, got 466
FAIL: Hand count after playing council_room was not correct. Expected 466, got 392
FAIL: Hand count after playing council_room was not correct. Expected 466, got 71
FAIL: Hand count after playing council_room was not correct. Expected 466, got 267
FAIL: Hand count after playing council_room was not correct. Expected 258, got 260
FAIL: Hand count after playing council_room was not correct. Expected 260, got 191
FAIL: Hand count after playing council_room was not correct. Expected 260, got 485
FAIL: Hand count after playing council_room was not correct. Expected 260, got 66
FAIL: Hand count after playing council_room was not correct. Expected 345, got 347
FAIL: Hand count after playing council_room was not correct. Expected 347, got 43
FAIL: Hand count after playing council_room was not correct. Expected 347, got 5
FAIL: Hand count after playing council_room was not correct. Expected 347, got 186
FAIL: Hand count after playing council_room was not correct. Expected 429, got 431
FAIL: Hand count after playing council_room was not correct. Expected 431, got 21
FAIL: Hand count after playing council_room was not correct. Expected 431, got 394
FAIL: Hand count after playing council_room was not correct. Expected 431, got 390
FAIL: Hand count after playing council_room was not correct. Expected 350, got 352
FAIL: Hand count after playing council_room was not correct. Expected 352, got 152
FAIL: Hand count after playing council_room was not correct. Expected 352, got 396
FAIL: Hand count after playing council_room was not correct. Expected 352, got 74
FAIL: Hand count after playing council_room was not correct. Expected 454, got 456
FAIL: Hand count after playing council_room was not correct. Expected 456, got 17
FAIL: Hand count after playing council_room was not correct. Expected 456, got 115
FAIL: Hand count after playing council_room was not correct. Expected 456, got 13
FAIL: Hand count after playing council_room was not correct. Expected 203, got 205
FAIL: Hand count after playing council_room was not correct. Expected 205, got 104
FAIL: Hand count after playing council_room was not correct. Expected 205, got 59
FAIL: Hand count after playing council_room was not correct. Expected 205, got 127
FAIL: Hand count after playing council_room was not correct. Expected 155, got 157
FAIL: Hand count after playing council_room was not correct. Expected 157, got 315
FAIL: Hand count after playing council_room was not correct. Expected 157, got 193
FAIL: Hand count after playing council_room was not correct. Expected 157, got 455
FAIL: Hand count after playing council_room was not correct. Expected 443, got 445
FAIL: Hand count after playing council_room was not correct. Expected 445, got 436
FAIL: Hand count after playing council_room was not correct. Expected 445, got 359
FAIL: Hand count after playing council_room was not correct. Expected 445, got 3
FAIL: Hand count after playing council_room was not correct. Expected 304, got 306
FAIL: Hand count after playing council_room was not correct. Expected 306, got 113
FAIL: Hand count after playing council_room was not correct. Expected 306, got 404
FAIL: Hand count after playing council_room was not correct. Expected 306, got 227
FAIL: Hand count after playing council_room was not correct. Expected 274, got 276
FAIL: Hand count after playing council_room was not correct. Expected 276, got 14
FAIL: Hand count after playing council_room was not correct. Expected 276, got 125
FAIL: Hand count after playing council_room was not correct. Expected 276, got 379
FAIL: Hand count after playing council_room was not correct. Expected 110, got 112
FAIL: Hand count after playing council_room was not correct. Expected 112, got 404
FAIL: Hand count after playing council_room was not correct. Expected 112, got 73
FAIL: Hand count after playing council_room was not correct. Expected 112, got 341
FAIL: Hand count after playing council_room was not correct. Expected 273, got 275
FAIL: Hand count after playing council_room was not correct. Expected 275, got 158
FAIL: Hand count after playing council_room was not correct. Expected 275, got 440
FAIL: Hand count after playing council_room was not correct. Expected 275, got 333
FAIL: Hand count after playing council_room was not correct. Expected 186, got 188
FAIL: Hand count after playing council_room was not correct. Expected 188, got 487
FAIL: Hand count after playing council_room was not correct. Expected 188, got 207
FAIL: Hand count after playing council_room was not correct. Expected 188, got 95
FAIL: Hand count after playing council_room was not correct. Expected 280, got 282
FAIL: Hand count after playing council_room was not correct. Expected 282, got 140
FAIL: Hand count after playing council_room was not correct. Expected 282, got 245
FAIL: Hand count after playing council_room was not correct. Expected 282, got 88
FAIL: Hand count after playing council_room was not correct. Expected 109, got 111
FAIL: Hand count after playing council_room was not correct. Expected 111, got 71
FAIL: Hand count after playing council_room was not correct. Expected 111, got 23
FAIL: Hand count after playing council_room was not correct. Expected 111, got 175
FAIL: Hand count after playing council_room was not correct. Expected 109, got 111
FAIL: Hand count after playing council_room was not correct. Expected 111, got 238
FAIL: Hand count after playing council_room was not correct. Expected 111, got 383
FAIL: Hand count after playing council_room was not correct. Expected 111, got 89
FAIL: Hand count after playing council_room was not correct. Expected 14, got 16
FAIL: Hand count after playing council_room was not correct. Expected 16, got 248
FAIL: Hand count after playing council_room was not correct. Expected 16, got 314
FAIL: Hand count after playing council_room was not correct. Expected 16, got 381
FAIL: Hand count after playing council_room was not correct. Expected 302, got 304
FAIL: Hand count after playing council_room was not correct. Expected 304, got 498
FAIL: Hand count after playing council_room was not correct. Expected 304, got 263
FAIL: Hand count after playing council_room was not correct. Expected 304, got 294
FAIL: Hand count after playing council_room was not correct. Expected 311, got 313
FAIL: Hand count after playing council_room was not correct. Expected 313, got 116
FAIL: Hand count after playing council_room was not correct. Expected 313, got 223
FAIL: Hand count after playing council_room was not correct. Expected 313, got 40
FAIL: Hand count after playing council_room was not correct. Expected 480, got 482
FAIL: Hand count after playing council_room was not correct. Expected 482, got 358
FAIL: Hand count after playing council_room was not correct. Expected 482, got 405
FAIL: Hand count after playing council_room was not correct. Expected 482, got 215
FAIL: Hand count after playing council_room was not correct. Expected 161, got 163
FAIL: Hand count after playing council_room was not correct. Expected 163, got 99
FAIL: Hand count after playing council_room was not correct. Expected 163, got 146
FAIL: Hand count after playing council_room was not correct. Expected 163, got 95
FAIL: Hand count after playing council_room was not correct. Expected 10, got 12
FAIL: Hand count after playing council_room was not correct. Expected 12, got 236
FAIL: Hand count after playing council_room was not correct. Expected 12, got 267
FAIL: Hand count after playing council_room was not correct. Expected 12, got 249
FAIL: Hand count after playing council_room was not correct. Expected 341, got 343
FAIL: Hand count after playing council_room was not correct. Expected 343, got 449
FAIL: Hand count after playing council_room was not correct. Expected 343, got 240
FAIL: Hand count after playing council_room was not correct. Expected 343, got 104
FAIL: Hand count after playing council_room was not correct. Expected 119, got 121
FAIL: Hand count after playing council_room was not correct. Expected 121, got 43
FAIL: Hand count after playing council_room was not correct. Expected 121, got 47
FAIL: Hand count after playing council_room was not correct. Expected 121, got 265
FAIL: Hand count after playing council_room was not correct. Expected 338, got 340
FAIL: Hand count after playing council_room was not correct. Expected 340, got 304
FAIL: Hand count after playing council_room was not correct. Expected 340, got 349
FAIL: Hand count after playing council_room was not correct. Expected 340, got 253
FAIL: Hand count after playing council_room was not correct. Expected 313, got 315
FAIL: Hand count after playing council_room was not correct. Expected 315, got 62
FAIL: Hand count after playing council_room was not correct. Expected 315, got 129
FAIL: Hand count after playing council_room was not correct. Expected 315, got 361
FAIL: Hand count after playing council_room was not correct. Expected 7, got 9
FAIL: Hand count after playing council_room was not correct. Expected 9, got 280
FAIL: Hand count after playing council_room was not correct. Expected 9, got 441
FAIL: Hand count after playing council_room was not correct. Expected 9, got 475
FAIL: Hand count after playing council_room was not correct. Expected 4, got 6
FAIL: Hand count after playing council_room was not correct. Expected 6, got 454
FAIL: Hand count after playing council_room was not correct. Expected 6, got 56
FAIL: Hand count after playing council_room was not correct. Expected 6, got 473
FAIL: Hand count after playing council_room was not correct. Expected 120, got 122
FAIL: Hand count after playing council_room was not correct. Expected 122, got 271
FAIL: Hand count after playing council_room was not correct. Expected 122, got 306
FAIL: Hand count after playing council_room was not correct. Expected 122, got 213
FAIL: Hand count after playing council_room was not correct. Expected 229, got 231
FAIL: Hand count after playing council_room was not correct. Expected 231, got 97
FAIL: Hand count after playing council_room was not correct. Expected 231, got 248
FAIL: Hand count after playing council_room was not correct. Expected 231, got 150
FAIL: Hand count after playing council_room was not correct. Expected 412, got 414
FAIL: Hand count after playing council_room was not correct. Expected 414, got 352
FAIL: Hand count after playing council_room was not correct. Expected 414, got 60
FAIL: Hand count after playing council_room was not correct. Expected 414, got 225
FAIL: Hand count after playing council_room was not correct. Expected 115, got 117
FAIL: Hand count after playing council_room was not correct. Expected 117, got 468
FAIL: Hand count after playing council_room was not correct. Expected 117, got 8
FAIL: Hand count after playing council_room was not correct. Expected 117, got 316
FAIL: Hand count after playing council_room was not correct. Expected 231, got 233
FAIL: Hand count after playing council_room was not correct. Expected 233, got 177
FAIL: Hand count after playing council_room was not correct. Expected 233, got 83
FAIL: Hand count after playing council_room was not correct. Expected 233, got 88
FAIL: Hand count after playing council_room was not correct. Expected 413, got 415
FAIL: Hand count after playing council_room was not correct. Expected 415, got 274
FAIL: Hand count after playing council_room was not correct. Expected 415, got 110
FAIL: Hand count after playing council_room was not correct. Expected 415, got 406
FAIL: Hand count after playing council_room was not correct. Expected 321, got 323
FAIL: Hand count after playing council_room was not correct. Expected 323, got 377
FAIL: Hand count after playing council_room was not correct. Expected 323, got 401
FAIL: Hand count after playing council_room was not correct. Expected 323, got 256
FAIL: Hand count after playing council_room was not correct. Expected 24, got 26
FAIL: Hand count after playing council_room was not correct. Expected 26, got 222
FAIL: Hand count after playing council_room was not correct. Expected 26, got 355
FAIL: Hand count after playing council_room was not correct. Expected 26, got 290
FAIL: Hand count after playing council_room was not correct. Expected 63, got 65
FAIL: Hand count after playing council_room was not correct. Expected 65, got 230
FAIL: Hand count after playing council_room was not correct. Expected 65, got 313
FAIL: Hand count after playing council_room was not correct. Expected 65, got 123
FAIL: Hand count after playing council_room was not correct. Expected 172, got 174
FAIL: Hand count after playing council_room was not correct. Expected 174, got 131
FAIL: Hand count after playing council_room was not correct. Expected 174, got 357
FAIL: Hand count after playing council_room was not correct. Expected 174, got 92
FAIL: Hand count after playing council_room was not correct. Expected 91, got 93
FAIL: Hand count after playing council_room was not correct. Expected 93, got 199
FAIL: Hand count after playing council_room was not correct. Expected 93, got 90
FAIL: Hand count after playing council_room was not correct. Expected 93, got 207
FAIL: Hand count after playing council_room was not correct. Expected 269, got 271
FAIL: Hand count after playing council_room was not correct. Expected 271, got 185
FAIL: Hand count after playing council_room was not correct. Expected 271, got 332
FAIL: Hand count after playing council_room was not correct. Expected 271, got 438
FAIL: Hand count after playing council_room was not correct. Expected 47, got 49
FAIL: Hand count after playing council_room was not correct. Expected 49, got 469
FAIL: Hand count after playing council_room was not correct. Expected 49, got 53
FAIL: Hand count after playing council_room was not correct. Expected 49, got 297
FAIL: Hand count after playing council_room was not correct. Expected 246, got 248
FAIL: Hand count after playing council_room was not correct. Expected 248, got 149
FAIL: Hand count after playing council_room was not correct. Expected 248, got 496
FAIL: Hand count after playing council_room was not correct. Expected 248, got 380
FAIL: Hand count after playing council_room was not correct. Expected 376, got 378
FAIL: Hand count after playing council_room was not correct. Expected 378, got 205
FAIL: Hand count after playing council_room was not correct. Expected 378, got 435
FAIL: Hand count after playing council_room was not correct. Expected 378, got 107
FAIL: Hand count after playing council_room was not correct. Expected 348, got 350
FAIL: Hand count after playing council_room was not correct. Expected 350, got 90
FAIL: Hand count after playing council_room was not correct. Expected 350, got 78
FAIL: Hand count after playing council_room was not correct. Expected 350, got 389
FAIL: Hand count after playing council_room was not correct. Expected 81, got 83
FAIL: Hand count after playing council_room was not correct. Expected 83, got 452
FAIL: Hand count after playing council_room was not correct. Expected 83, got 500
FAIL: Hand count after playing council_room was not correct. Expected 83, got 366
FAIL: Hand count after playing council_room was not correct. Expected 146, got 148
FAIL: Hand count after playing council_room was not correct. Expected 148, got 8
FAIL: Hand count after playing council_room was not correct. Expected 148, got 113
FAIL: Hand count after playing council_room was not correct. Expected 148, got 247
FAIL: Hand count after playing council_room was not correct. Expected 46, got 48
FAIL: Hand count after playing council_room was not correct. Expected 48, got 29
FAIL: Hand count after playing council_room was not correct. Expected 48, got 92
FAIL: Hand count after playing council_room was not correct. Expected 48, got 353
FAIL: Hand count after playing council_room was not correct. Expected 247, got 249
FAIL: Hand count after playing council_room was not correct. Expected 249, got 412
FAIL: Hand count after playing council_room was not correct. Expected 249, got 48
FAIL: Hand count after playing council_room was not correct. Expected 249, got 200
FAIL: Hand count after playing council_room was not correct. Expected 448, got 450
FAIL: Hand count after playing council_room was not correct. Expected 450, got 236
FAIL: Hand count after playing council_room was not correct. Expected 450, got 387
FAIL: Hand count after playing council_room was not correct. Expected 450, got 393
FAIL: Hand count after playing council_room was not correct. Expected 48, got 50
FAIL: Hand count after playing council_room was not correct. Expected 50, got 482
FAIL: Hand count after playing council_room was not correct. Expected 50, got 272
FAIL: Hand count after playing council_room was not correct. Expected 50, got 292
FAIL: Hand count after playing council_room was not correct. Expected 100, got 102
FAIL: Hand count after playing council_room was not correct. Expected 102, got 466
FAIL: Hand count after playing council_room was not correct. Expected 102, got 137
FAIL: Hand count after playing council_room was not correct. Expected 102, got 14
FAIL: Hand count after playing council_room was not correct. Expected 156, got 158
FAIL: Hand count after playing council_room was not correct. Expected 158, got 210
FAIL: Hand count after playing council_room was not correct. Expected 158, got 327
FAIL: Hand count after playing council_room was not correct. Expected 158, got 424
FAIL: Hand count after playing council_room was not correct. Expected 130, got 132
FAIL: Hand count after playing council_room was not correct. Expected 132, got 204
FAIL: Hand count after playing council_room was not correct. Expected 132, got 441
FAIL: Hand count after playing council_room was not correct. Expected 132, got 434
FAIL: Hand count after playing council_room was not correct. Expected 407, got 409
FAIL: Hand count after playing council_room was not correct. Expected 409, got 494
FAIL: Hand count after playing council_room was not correct. Expected 409, got 201
FAIL: Hand count after playing council_room was not correct. Expected 409, got 346
FAIL: Hand count after playing council_room was not correct. Expected 70, got 72
FAIL: Hand count after playing council_room was not correct. Expected 72, got 276
FAIL: Hand count after playing council_room was not correct. Expected 72, got 139
FAIL: Hand count after playing council_room was not correct. Expected 72, got 13
FAIL: Hand count after playing council_room was not correct. Expected 7, got 9
FAIL: Hand count after playing council_room was not correct. Expected 9, got 353
FAIL: Hand count after playing council_room was not correct. Expected 9, got 21
FAIL: Hand count after playing council_room was not correct. Expected 9, got 175
FAIL: Hand count after playing council_room was not correct. Expected 237, got 239
FAIL: Hand count after playing council_room was not correct. Expected 239, got 280
FAIL: Hand count after playing council_room was not correct. Expected 239, got 59
FAIL: Hand count after playing council_room was not correct. Expected 239, got 33
FAIL: Hand count after playing council_room was not correct. Expected 184, got 186
FAIL: Hand count after playing council_room was not correct. Expected 186, got 345
FAIL: Hand count after playing council_room was not correct. Expected 186, got 335
FAIL: Hand count after playing council_room was not correct. Expected 186, got 471
FAIL: Hand count after playing council_room was not correct. Expected 130, got 132
FAIL: Hand count after playing council_room was not correct. Expected 132, got 334
FAIL: Hand count after playing council_room was not correct. Expected 132, got 275
FAIL: Hand count after playing council_room was not correct. Expected 132, got 16
FAIL: Hand count after playing council_room was not correct. Expected 255, got 257
FAIL: Hand count after playing council_room was not correct. Expected 257, got 398
FAIL: Hand count after playing council_room was not correct. Expected 257, got 220
FAIL: Hand count after playing council_room was not correct. Expected 257, got 338
FAIL: Hand count after playing council_room was not correct. Expected 327, got 329
FAIL: Hand count after playing council_room was not correct. Expected 329, got 95
FAIL: Hand count after playing council_room was not correct. Expected 329, got 168
FAIL: Hand count after playing council_room was not correct. Expected 329, got 155
FAIL: Hand count after playing council_room was not correct. Expected 114, got 116
FAIL: Hand count after playing council_room was not correct. Expected 116, got 380
FAIL: Hand count after playing council_room was not correct. Expected 116, got 493
FAIL: Hand count after playing council_room was not correct. Expected 116, got 233
FAIL: Hand count after playing council_room was not correct. Expected 144, got 146
FAIL: Hand count after playing council_room was not correct. Expected 146, got 375
FAIL: Hand count after playing council_room was not correct. Expected 146, got 393
FAIL: Hand count after playing council_room was not correct. Expected 146, got 232
FAIL: Hand count after playing council_room was not correct. Expected 25, got 27
FAIL: Hand count after playing council_room was not correct. Expected 27, got 345
FAIL: Hand count after playing council_room was not correct. Expected 27, got 338
FAIL: Hand count after playing council_room was not correct. Expected 27, got 70
FAIL: Hand count after playing council_room was not correct. Expected 98, got 100
FAIL: Hand count after playing council_room was not correct. Expected 100, got 246
FAIL: Hand count after playing council_room was not correct. Expected 100, got 219
FAIL: Hand count after playing council_room was not correct. Expected 100, got 145
FAIL: Hand count after playing council_room was not correct. Expected 400, got 402
FAIL: Hand count after playing council_room was not correct. Expected 402, got 189
FAIL: Hand count after playing council_room was not correct. Expected 402, got 468
FAIL: Hand count after playing council_room was not correct. Expected 402, got 254
FAIL: Hand count after playing council_room was not correct. Expected 102, got 104
FAIL: Hand count after playing council_room was not correct. Expected 104, got 359
FAIL: Hand count after playing council_room was not correct. Expected 104, got 355
FAIL: Hand count after playing council_room was not correct. Expected 104, got 17
FAIL: Hand count after playing council_room was not correct. Expected 363, got 365
FAIL: Hand count after playing council_room was not correct. Expected 365, got 437
FAIL: Hand count after playing council_room was not correct. Expected 365, got 54
FAIL: Hand count after playing council_room was not correct. Expected 365, got 457
FAIL: Hand count after playing council_room was not correct. Expected 464, got 466
FAIL: Hand count after playing council_room was not correct. Expected 466, got 163
FAIL: Hand count after playing council_room was not correct. Expected 466, got 445
FAIL: Hand count after playing council_room was not correct. Expected 466, got 436
FAIL: Hand count after playing council_room was not correct. Expected 442, got 444
FAIL: Hand count after playing council_room was not correct. Expected 444, got 281
FAIL: Hand count after playing council_room was not correct. Expected 444, got 246
FAIL: Hand count after playing council_room was not correct. Expected 444, got 460
FAIL: Hand count after playing council_room was not correct. Expected 197, got 199
FAIL: Hand count after playing council_room was not correct. Expected 199, got 366
FAIL: Hand count after playing council_room was not correct. Expected 199, got 445
FAIL: Hand count after playing council_room was not correct. Expected 199, got 96
FAIL: Hand count after playing council_room was not correct. Expected 266, got 268
FAIL: Hand count after playing council_room was not correct. Expected 268, got 446
FAIL: Hand count after playing council_room was not correct. Expected 268, got 20
FAIL: Hand count after playing council_room was not correct. Expected 268, got 133
FAIL: Hand count after playing council_room was not correct. Expected 346, got 348
FAIL: Hand count after playing council_room was not correct. Expected 348, got 205
FAIL: Hand count after playing council_room was not correct. Expected 348, got 381
FAIL: Hand count after playing council_room was not correct. Expected 348, got 462
FAIL: Hand count after playing council_room was not correct. Expected 412, got 414
FAIL: Hand count after playing council_room was not correct. Expected 414, got 27
FAIL: Hand count after playing council_room was not correct. Expected 414, got 239
FAIL: Hand count after playing council_room was not correct. Expected 414, got 224
FAIL: Hand count after playing council_room was not correct. Expected 461, got 463
FAIL: Hand count after playing council_room was not correct. Expected 463, got 67
FAIL: Hand count after playing council_room was not correct. Expected 463, got 453
FAIL: Hand count after playing council_room was not correct. Expected 463, got 395
FAIL: Hand count after playing council_room was not correct. Expected 445, got 447
FAIL: Hand count after playing council_room was not correct. Expected 447, got 234
FAIL: Hand count after playing council_room was not correct. Expected 447, got 8
FAIL: Hand count after playing council_room was not correct. Expected 447, got 199
FAIL: Hand count after playing council_room was not correct. Expected 185, got 187
FAIL: Hand count after playing council_room was not correct. Expected 187, got 420
FAIL: Hand count after playing council_room was not correct. Expected 187, got 198
FAIL: Hand count after playing council_room was not correct. Expected 187, got 392
FAIL: Hand count after playing council_room was not correct. Expected 479, got 481
FAIL: Hand count after playing council_room was not correct. Expected 481, got 174
FAIL: Hand count after playing council_room was not correct. Expected 481, got 75
FAIL: Hand count after playing council_room was not correct. Expected 481, got 277
FAIL: Hand count after playing council_room was not correct. Expected 457, got 459
FAIL: Hand count after playing council_room was not correct. Expected 459, got 72
FAIL: Hand count after playing council_room was not correct. Expected 459, got 144
FAIL: Hand count after playing council_room was not correct. Expected 459, got 80
FAIL: Hand count after playing council_room was not correct. Expected 361, got 363
FAIL: Hand count after playing council_room was not correct. Expected 363, got 442
FAIL: Hand count after playing council_room was not correct. Expected 363, got 377
FAIL: Hand count after playing council_room was not correct. Expected 363, got 118
FAIL: Hand count after playing council_room was not correct. Expected 176, got 178
FAIL: Hand count after playing council_room was not correct. Expected 178, got 333
FAIL: Hand count after playing council_room was not correct. Expected 178, got 169
FAIL: Hand count after playing council_room was not correct. Expected 178, got 177
FAIL: Hand count after playing council_room was not correct. Expected 361, got 363
FAIL: Hand count after playing council_room was not correct. Expected 363, got 194
FAIL: Hand count after playing council_room was not correct. Expected 363, got 175
FAIL: Hand count after playing council_room was not correct. Expected 363, got 469
FAIL: Hand count after playing council_room was not correct. Expected 402, got 404
FAIL: Hand count after playing council_room was not correct. Expected 404, got 59
FAIL: Hand count after playing council_room was not correct. Expected 404, got 241
FAIL: Hand count after playing council_room was not correct. Expected 404, got 277
FAIL: Hand count after playing council_room was not correct. Expected 232, got 234
FAIL: Hand count after playing council_room was not correct. Expected 234, got 454
FAIL: Hand count after playing council_room was not correct. Expected 234, got 15
FAIL: Hand count after playing council_room was not correct. Expected 234, got 53
FAIL: Hand count after playing council_room was not correct. Expected 14, got 16
FAIL: Hand count after playing council_room was not correct. Expected 16, got 155
FAIL: Hand count after playing council_room was not correct. Expected 16, got 315
FAIL: Hand count after playing council_room was not correct. Expected 16, got 51
FAIL: Hand count after playing council_room was not correct. Expected 27, got 29
FAIL: Hand count after playing council_room was not correct. Expected 29, got 151
FAIL: Hand count after playing council_room was not correct. Expected 29, got 202
FAIL: Hand count after playing council_room was not correct. Expected 29, got 374
FAIL: Hand count after playing council_room was not correct. Expected 107, got 109
FAIL: Hand count after playing council_room was not correct. Expected 109, got 19
FAIL: Hand count after playing council_room was not correct. Expected 109, got 190
FAIL: Hand count after playing council_room was not correct. Expected 109, got 72
FAIL: Hand count after playing council_room was not correct. Expected 7, got 9
FAIL: Hand count after playing council_room was not correct. Expected 9, got 6
FAIL: Hand count after playing council_room was not correct. Expected 9, got 278
FAIL: Hand count after playing council_room was not correct. Expected 9, got 106
FAIL: Hand count after playing council_room was not correct. Expected 142, got 144
FAIL: Hand count after playing council_room was not correct. Expected 144, got 370
FAIL: Hand count after playing council_room was not correct. Expected 144, got 428
FAIL: Hand count after playing council_room was not correct. Expected 144, got 41
FAIL: Hand count after playing council_room was not correct. Expected 15, got 17
FAIL: Hand count after playing council_room was not correct. Expected 17, got 444
FAIL: Hand count after playing council_room was not correct. Expected 17, got 253
FAIL: Hand count after playing council_room was not correct. Expected 17, got 274
FAIL: Hand count after playing council_room was not correct. Expected 444, got 446
FAIL: Hand count after playing council_room was not correct. Expected 446, got 393
FAIL: Hand count after playing council_room was not correct. Expected 446, got 3
FAIL: Hand count after playing council_room was not correct. Expected 446, got 413
FAIL: Hand count after playing council_room was not correct. Expected 322, got 324
FAIL: Hand count after playing council_room was not correct. Expected 324, got 410
FAIL: Hand count after playing council_room was not correct. Expected 324, got 25
FAIL: Hand count after playing council_room was not correct. Expected 324, got 291
FAIL: Hand count after playing council_room was not correct. Expected 465, got 467
FAIL: Hand count after playing council_room was not correct. Expected 467, got 340
FAIL: Hand count after playing council_room was not correct. Expected 467, got 307
FAIL: Hand count after playing council_room was not correct. Expected 467, got 465
FAIL: Hand count after playing council_room was not correct. Expected 439, got 441
FAIL: Hand count after playing council_room was not correct. Expected 441, got 472
FAIL: Hand count after playing council_room was not correct. Expected 441, got 449
FAIL: Hand count after playing council_room was not correct. Expected 441, got 423
FAIL: Hand count after playing council_room was not correct. Expected 488, got 490
FAIL: Hand count after playing council_room was not correct. Expected 490, got 261
FAIL: Hand count after playing council_room was not correct. Expected 490, got 275
FAIL: Hand count after playing council_room was not correct. Expected 490, got 335
FAIL: Hand count after playing council_room was not correct. Expected 248, got 250
FAIL: Hand count after playing council_room was not correct. Expected 250, got 448
FAIL: Hand count after playing council_room was not correct. Expected 250, got 151
FAIL: Hand count after playing council_room was not correct. Expected 250, got 344
FAIL: Hand count after playing council_room was not correct. Expected 110, got 112
FAIL: Hand count after playing council_room was not correct. Expected 112, got 94
FAIL: Hand count after playing council_room was not correct. Expected 112, got 116
FAIL: Hand count after playing council_room was not correct. Expected 112, got 47
FAIL: Hand count after playing council_room was not correct. Expected 169, got 171
FAIL: Hand count after playing council_room was not correct. Expected 171, got 367
FAIL: Hand count after playing council_room was not correct. Expected 171, got 412
FAIL: Hand count after playing council_room was not correct. Expected 171, got 50
FAIL: Hand count after playing council_room was not correct. Expected 427, got 429
FAIL: Hand count after playing council_room was not correct. Expected 429, got 466
FAIL: Hand count after playing council_room was not correct. Expected 429, got 441
FAIL: Hand count after playing council_room was not correct. Expected 429, got 182
FAIL: Hand count after playing council_room was not correct. Expected 472, got 474
FAIL: Hand count after playing council_room was not correct. Expected 474, got 104
FAIL: Hand count after playing council_room was not correct. Expected 474, got 337
FAIL: Hand count after playing council_room was not correct. Expected 474, got 313
FAIL: Hand count after playing council_room was not correct. Expected 268, got 270
FAIL: Hand count after playing council_room was not correct. Expected 270, got 392
FAIL: Hand count after playing council_room was not correct. Expected 270, got 19
FAIL: Hand count after playing council_room was not correct. Expected 270, got 152
FAIL: Hand count after playing council_room was not correct. Expected 26, got 28
FAIL: Hand count after playing council_room was not correct. Expected 28, got 25
FAIL: Hand count after playing council_room was not correct. Expected 28, got 316
FAIL: Hand count after playing council_room was not correct. Expected 28, got 324
FAIL: Hand count after playing council_room was not correct. Expected 386, got 388
FAIL: Hand count after playing council_room was not correct. Expected 388, got 350
FAIL: Hand count after playing council_room was not correct. Expected 388, got 356
FAIL: Hand count after playing council_room was not correct. Expected 388, got 126
FAIL: Hand count after playing council_room was not correct. Expected 49, got 51
FAIL: Hand count after playing council_room was not correct. Expected 51, got 315
FAIL: Hand count after playing council_room was not correct. Expected 51, got 261
FAIL: Hand count after playing council_room was not correct. Expected 51, got 144
FAIL: Hand count after playing council_room was not correct. Expected 164, got 166
FAIL: Hand count after playing council_room was not correct. Expected 166, got 150
FAIL: Hand count after playing council_room was not correct. Expected 166, got 340
FAIL: Hand count after playing council_room was not correct. Expected 166, got 287
FAIL: Hand count after playing council_room was not correct. Expected 193, got 195
FAIL: Hand count after playing council_room was not correct. Expected 195, got 446
FAIL: Hand count after playing council_room was not correct. Expected 195, got 288
FAIL: Hand count after playing council_room was not correct. Expected 195, got 3
FAIL: Hand count after playing council_room was not correct. Expected 11, got 13
FAIL: Hand count after playing council_room was not correct. Expected 13, got 353
FAIL: Hand count after playing council_room was not correct. Expected 13, got 220
FAIL: Hand count after playing council_room was not correct. Expected 13, got 129
FAIL: Hand count after playing council_room was not correct. Expected 255, got 257
FAIL: Hand count after playing council_room was not correct. Expected 257, got 32
FAIL: Hand count after playing council_room was not correct. Expected 257, got 480
FAIL: Hand count after playing council_room was not correct. Expected 257, got 193
FAIL: Hand count after playing council_room was not correct. Expected 145, got 147
FAIL: Hand count after playing council_room was not correct. Expected 147, got 38
FAIL: Hand count after playing council_room was not correct. Expected 147, got 376
FAIL: Hand count after playing council_room was not correct. Expected 147, got 359
FAIL: Hand count after playing council_room was not correct. Expected 246, got 248
FAIL: Hand count after playing council_room was not correct. Expected 248, got 120
FAIL: Hand count after playing council_room was not correct. Expected 248, got 177
FAIL: Hand count after playing council_room was not correct. Expected 248, got 250
FAIL: Hand count after playing council_room was not correct. Expected 235, got 237
FAIL: Hand count after playing council_room was not correct. Expected 237, got 434
FAIL: Hand count after playing council_room was not correct. Expected 237, got 151
FAIL: Hand count after playing council_room was not correct. Expected 237, got 371
FAIL: Hand count after playing council_room was not correct. Expected 54, got 56
FAIL: Hand count after playing council_room was not correct. Expected 56, got 276
FAIL: Hand count after playing council_room was not correct. Expected 56, got 49
FAIL: Hand count after playing council_room was not correct. Expected 56, got 163
FAIL: Hand count after playing council_room was not correct. Expected 18, got 20
FAIL: Hand count after playing council_room was not correct. Expected 20, got 317
FAIL: Hand count after playing council_room was not correct. Expected 20, got 91
FAIL: Hand count after playing council_room was not correct. Expected 20, got 492
FAIL: Hand count after playing council_room was not correct. Expected 189, got 191
FAIL: Hand count after playing council_room was not correct. Expected 191, got 286
FAIL: Hand count after playing council_room was not correct. Expected 191, got 300
FAIL: Hand count after playing council_room was not correct. Expected 191, got 190
FAIL: Hand count after playing council_room was not correct. Expected 17, got 19
FAIL: Hand count after playing council_room was not correct. Expected 19, got 242
FAIL: Hand count after playing council_room was not correct. Expected 19, got 261
FAIL: Hand count after playing council_room was not correct. Expected 19, got 458
FAIL: Hand count after playing council_room was not correct. Expected 261, got 263
FAIL: Hand count after playing council_room was not correct. Expected 263, got 47
FAIL: Hand count after playing council_room was not correct. Expected 263, got 401
FAIL: Hand count after playing council_room was not correct. Expected 263, got 139
FAIL: Hand count after playing council_room was not correct. Expected 330, got 332
FAIL: Hand count after playing council_room was not correct. Expected 332, got 250
FAIL: Hand count after playing council_room was not correct. Expected 332, got 487
FAIL: Hand count after playing council_room was not correct. Expected 332, got 106
FAIL: Hand count after playing council_room was not correct. Expected 175, got 177
FAIL: Hand count after playing council_room was not correct. Expected 177, got 161
FAIL: Hand count after playing council_room was not correct. Expected 177, got 251
FAIL: Hand count after playing council_room was not correct. Expected 177, got 336
FAIL: Hand count after playing council_room was not correct. Expected 464, got 466
FAIL: Hand count after playing council_room was not correct. Expected 466, got 388
FAIL: Hand count after playing council_room was not correct. Expected 466, got 276
FAIL: Hand count after playing council_room was not correct. Expected 466, got 16
FAIL: Hand count after playing council_room was not correct. Expected 56, got 58
FAIL: Hand count after playing council_room was not correct. Expected 58, got 415
FAIL: Hand count after playing council_room was not correct. Expected 58, got 279
FAIL: Hand count after playing council_room was not correct. Expected 58, got 300
FAIL: Hand count after playing council_room was not correct. Expected 49, got 51
FAIL: Hand count after playing council_room was not correct. Expected 51, got 309
FAIL: Hand count after playing council_room was not correct. Expected 51, got 183
FAIL: Hand count after playing council_room was not correct. Expected 51, got 484
FAIL: Hand count after playing council_room was not correct. Expected 341, got 343
FAIL: Hand count after playing council_room was not correct. Expected 343, got 149
FAIL: Hand count after playing council_room was not correct. Expected 343, got 489
FAIL: Hand count after playing council_room was not correct. Expected 343, got 482
FAIL: Hand count after playing council_room was not correct. Expected 65, got 67
FAIL: Hand count after playing council_room was not correct. Expected 67, got 59
FAIL: Hand count after playing council_room was not correct. Expected 67, got 231
FAIL: Hand count after playing council_room was not correct. Expected 67, got 38
FAIL: Hand count after playing council_room was not correct. Expected 249, got 251
FAIL: Hand count after playing council_room was not correct. Expected 251, got 420
FAIL: Hand count after playing council_room was not correct. Expected 251, got 192
FAIL: Hand count after playing council_room was not correct. Expected 251, got 90
FAIL: Hand count after playing council_room was not correct. Expected 48, got 50
FAIL: Hand count after playing council_room was not correct. Expected 50, got 73
FAIL: Hand count after playing council_room was not correct. Expected 50, got 85
FAIL: Hand count after playing council_room was not correct. Expected 50, got 62
FAIL: Hand count after playing council_room was not correct. Expected 299, got 301
FAIL: Hand count after playing council_room was not correct. Expected 301, got 291
FAIL: Hand count after playing council_room was not correct. Expected 301, got 258
FAIL: Hand count after playing council_room was not correct. Expected 301, got 78
FAIL: Hand count after playing council_room was not correct. Expected 395, got 397
FAIL: Hand count after playing council_room was not correct. Expected 397, got 124
FAIL: Hand count after playing council_room was not correct. Expected 397, got 305
FAIL: Hand count after playing council_room was not correct. Expected 397, got 119
FAIL: Hand count after playing council_room was not correct. Expected 99, got 101
FAIL: Hand count after playing council_room was not correct. Expected 101, got 275
FAIL: Hand count after playing council_room was not correct. Expected 101, got 384
FAIL: Hand count after playing council_room was not correct. Expected 101, got 27
FAIL: Hand count after playing council_room was not correct. Expected 237, got 239
FAIL: Hand count after playing council_room was not correct. Expected 239, got 335
FAIL: Hand count after playing council_room was not correct. Expected 239, got 101
FAIL: Hand count after playing council_room was not correct. Expected 239, got 356
FAIL: Hand count after playing council_room was not correct. Expected 184, got 186
FAIL: Hand count after playing council_room was not correct. Expected 186, got 126
FAIL: Hand count after playing council_room was not correct. Expected 186, got 94
FAIL: Hand count after playing council_room was not correct. Expected 186, got 28
FAIL: Hand count after playing council_room was not correct. Expected 314, got 316
FAIL: Hand count after playing council_room was not correct. Expected 316, got 457
FAIL: Hand count after playing council_room was not correct. Expected 316, got 439
FAIL: Hand count after playing council_room was not correct. Expected 316, got 57
FAIL: Hand count after playing council_room was not correct. Expected 141, got 143
FAIL: Hand count after playing council_room was not correct. Expected 143, got 351
FAIL: Hand count after playing council_room was not correct. Expected 143, got 259
FAIL: Hand count after playing council_room was not correct. Expected 143, got 149
FAIL: Hand count after playing council_room was not correct. Expected 123, got 125
FAIL: Hand count after playing council_room was not correct. Expected 125, got 344
FAIL: Hand count after playing council_room was not correct. Expected 125, got 88
FAIL: Hand count after playing council_room was not correct. Expected 125, got 172
FAIL: Hand count after playing council_room was not correct. Expected 433, got 435
FAIL: Hand count after playing council_room was not correct. Expected 435, got 306
FAIL: Hand count after playing council_room was not correct. Expected 435, got 13
FAIL: Hand count after playing council_room was not correct. Expected 435, got 187
FAIL: Hand count after playing council_room was not correct. Expected 12, got 14
FAIL: Hand count after playing council_room was not correct. Expected 14, got 459
FAIL: Hand count after playing council_room was not correct. Expected 14, got 437
FAIL: Hand count after playing council_room was not correct. Expected 14, got 106
FAIL: Hand count after playing council_room was not correct. Expected 84, got 86
FAIL: Hand count after playing council_room was not correct. Expected 86, got 179
FAIL: Hand count after playing council_room was not correct. Expected 86, got 12
FAIL: Hand count after playing council_room was not correct. Expected 86, got 95
FAIL: Hand count after playing council_room was not correct. Expected 82, got 84
FAIL: Hand count after playing council_room was not correct. Expected 84, got 401
FAIL: Hand count after playing council_room was not correct. Expected 84, got 192
FAIL: Hand count after playing council_room was not correct. Expected 84, got 104
FAIL: Hand count after playing council_room was not correct. Expected 273, got 275
FAIL: Hand count after playing council_room was not correct. Expected 275, got 279
FAIL: Hand count after playing council_room was not correct. Expected 275, got 457
FAIL: Hand count after playing council_room was not correct. Expected 275, got 113
FAIL: Hand count after playing council_room was not correct. Expected 336, got 338
FAIL: Hand count after playing council_room was not correct. Expected 338, got 475
FAIL: Hand count after playing council_room was not correct. Expected 338, got 365
FAIL: Hand count after playing council_room was not correct. Expected 338, got 41
FAIL: Hand count after playing council_room was not correct. Expected 276, got 278
FAIL: Hand count after playing council_room was not correct. Expected 278, got 90
FAIL: Hand count after playing council_room was not correct. Expected 278, got 112
FAIL: Hand count after playing council_room was not correct. Expected 278, got 282
FAIL: Hand count after playing council_room was not correct. Expected 458, got 460
FAIL: Hand count after playing council_room was not correct. Expected 460, got 177
FAIL: Hand count after playing council_room was not correct. Expected 460, got 301
FAIL: Hand count after playing council_room was not correct. Expected 460, got 311
FAIL: Hand count after playing council_room was not correct. Expected 153, got 155
FAIL: Hand count after playing council_room was not correct. Expected 155, got 249
FAIL: Hand count after playing council_room was not correct. Expected 155, got 332
FAIL: Hand count after playing council_room was not correct. Expected 155, got 190
FAIL: Hand count after playing council_room was not correct. Expected 157, got 159
FAIL: Hand count after playing council_room was not correct. Expected 159, got 269
FAIL: Hand count after playing council_room was not correct. Expected 159, got 1
FAIL: Hand count after playing council_room was not correct. Expected 159, got 122
FAIL: Hand count after playing council_room was not correct. Expected 393, got 395
FAIL: Hand count after playing council_room was not correct. Expected 395, got 440
FAIL: Hand count after playing council_room was not correct. Expected 395, got 163
FAIL: Hand count after playing council_room was not correct. Expected 395, got 438
FAIL: Hand count after playing council_room was not correct. Expected 29, got 31
FAIL: Hand count after playing council_room was not correct. Expected 31, got 389
FAIL: Hand count after playing council_room was not correct. Expected 31, got 99
FAIL: Hand count after playing council_room was not correct. Expected 31, got 49
FAIL: Hand count after playing council_room was not correct. Expected 56, got 58
FAIL: Hand count after playing council_room was not correct. Expected 58, got 419
FAIL: Hand count after playing council_room was not correct. Expected 58, got 347
FAIL: Hand count after playing council_room was not correct. Expected 58, got 222
FAIL: Hand count after playing council_room was not correct. Expected 293, got 295
FAIL: Hand count after playing council_room was not correct. Expected 295, got 440
FAIL: Hand count after playing council_room was not correct. Expected 295, got 265
FAIL: Hand count after playing council_room was not correct. Expected 295, got 185
FAIL: Hand count after playing council_room was not correct. Expected 387, got 389
FAIL: Hand count after playing council_room was not correct. Expected 389, got 482
FAIL: Hand count after playing council_room was not correct. Expected 389, got 451
FAIL: Hand count after playing council_room was not correct. Expected 389, got 41
FAIL: Hand count after playing council_room was not correct. Expected 287, got 289
FAIL: Hand count after playing council_room was not correct. Expected 289, got 361
FAIL: Hand count after playing council_room was not correct. Expected 289, got 439
FAIL: Hand count after playing council_room was not correct. Expected 289, got 355
FAIL: Hand count after playing council_room was not correct. Expected 193, got 195
FAIL: Hand count after playing council_room was not correct. Expected 195, got 253
FAIL: Hand count after playing council_room was not correct. Expected 195, got 142
FAIL: Hand count after playing council_room was not correct. Expected 195, got 255
FAIL: Hand count after playing council_room was not correct. Expected 493, got 495
FAIL: Hand count after playing council_room was not correct. Expected 495, got 423
FAIL: Hand count after playing council_room was not correct. Expected 495, got 220
FAIL: Hand count after playing council_room was not correct. Expected 495, got 421
FAIL: Hand count after playing council_room was not correct. Expected 427, got 429
FAIL: Hand count after playing council_room was not correct. Expected 429, got 105
FAIL: Hand count after playing council_room was not correct. Expected 429, got 300
FAIL: Hand count after playing council_room was not correct. Expected 429, got 159
FAIL: Hand count after playing council_room was not correct. Expected 158, got 160
FAIL: Hand count after playing council_room was not correct. Expected 160, got 217
FAIL: Hand count after playing council_room was not correct. Expected 160, got 168
FAIL: Hand count after playing council_room was not correct. Expected 160, got 79
FAIL: Hand count after playing council_room was not correct. Expected 328, got 330
FAIL: Hand count after playing council_room was not correct. Expected 330, got 195
FAIL: Hand count after playing council_room was not correct. Expected 330, got 200
FAIL: Hand count after playing council_room was not correct. Expected 330, got 468
FAIL: Hand count after playing council_room was not correct. Expected 82, got 84
FAIL: Hand count after playing council_room was not correct. Expected 84, got 494
FAIL: Hand count after playing council_room was not correct. Expected 84, got 123
FAIL: Hand count after playing council_room was not correct. Expected 84, got 197
FAIL: Hand count after playing council_room was not correct. Expected 474, got 476
FAIL: Hand count after playing council_room was not correct. Expected 476, got 471
FAIL: Hand count after playing council_room was not correct. Expected 476, got 62
FAIL: Hand count after playing council_room was not correct. Expected 476, got 25
FAIL: Hand count after playing council_room was not correct. Expected 208, got 210
FAIL: Hand count after playing council_room was not correct. Expected 210, got 444
FAIL: Hand count after playing council_room was not correct. Expected 210, got 181
FAIL: Hand count after playing council_room was not correct. Expected 210, got 83
FAIL: Hand count after playing council_room was not correct. Expected 187, got 189
FAIL: Hand count after playing council_room was not correct. Expected 189, got 411
FAIL: Hand count after playing council_room was not correct. Expected 189, got 433
FAIL: Hand count after playing council_room was not correct. Expected 189, got 92
FAIL: Hand count after playing council_room was not correct. Expected 117, got 119
FAIL: Hand count after playing council_room was not correct. Expected 119, got 349
FAIL: Hand count after playing council_room was not correct. Expected 119, got 164
FAIL: Hand count after playing council_room was not correct. Expected 119, got 433
FAIL: Hand count after playing council_room was not correct. Expected 217, got 219
FAIL: Hand count after playing council_room was not correct. Expected 219, got 358
FAIL: Hand count after playing council_room was not correct. Expected 219, got 480
FAIL: Hand count after playing council_room was not correct. Expected 219, got 448
FAIL: Hand count after playing council_room was not correct. Expected 84, got 86
FAIL: Hand count after playing council_room was not correct. Expected 86, got 55
FAIL: Hand count after playing council_room was not correct. Expected 86, got 466
FAIL: Hand count after playing council_room was not correct. Expected 86, got 265
FAIL: Hand count after playing council_room was not correct. Expected 408, got 410
FAIL: Hand count after playing council_room was not correct. Expected 410, got 442
FAIL: Hand count after playing council_room was not correct. Expected 410, got 270
FAIL: Hand count after playing council_room was not correct. Expected 410, got 297
FAIL: Hand count after playing council_room was not correct. Expected 350, got 352
FAIL: Hand count after playing council_room was not correct. Expected 352, got 118
FAIL: Hand count after playing council_room was not correct. Expected 352, got 371
FAIL: Hand count after playing council_room was not correct. Expected 352, got 176
FAIL: Hand count after playing council_room was not correct. Expected 212, got 214
FAIL: Hand count after playing council_room was not correct. Expected 214, got 348
FAIL: Hand count after playing council_room was not correct. Expected 214, got 238
FAIL: Hand count after playing council_room was not correct. Expected 214, got 308
FAIL: Hand count after playing council_room was not correct. Expected 17, got 19
FAIL: Hand count after playing council_room was not correct. Expected 19, got 70
FAIL: Hand count after playing council_room was not correct. Expected 19, got 46
FAIL: Hand count after playing council_room was not correct. Expected 19, got 428
FAIL: Hand count after playing council_room was not correct. Expected 415, got 417
FAIL: Hand count after playing council_room was not correct. Expected 417, got 138
FAIL: Hand count after playing council_room was not correct. Expected 417, got 219
FAIL: Hand count after playing council_room was not correct. Expected 417, got 265
FAIL: Hand count after playing council_room was not correct. Expected 63, got 65
FAIL: Hand count after playing council_room was not correct. Expected 65, got 238
FAIL: Hand count after playing council_room was not correct. Expected 65, got 44
FAIL: Hand count after playing council_room was not correct. Expected 65, got 166
FAIL: Hand count after playing council_room was not correct. Expected 258, got 260
FAIL: Hand count after playing council_room was not correct. Expected 260, got 345
FAIL: Hand count after playing council_room was not correct. Expected 260, got 157
FAIL: Hand count after playing council_room was not correct. Expected 260, got 396
FAIL: Hand count after playing council_room was not correct. Expected 11, got 13
FAIL: Hand count after playing council_room was not correct. Expected 13, got 16
FAIL: Hand count after playing council_room was not correct. Expected 13, got 223
FAIL: Hand count after playing council_room was not correct. Expected 13, got 311
FAIL: Hand count after playing council_room was not correct. Expected 318, got 320
FAIL: Hand count after playing council_room was not correct. Expected 320, got 75
FAIL: Hand count after playing council_room was not correct. Expected 320, got 434
FAIL: Hand count after playing council_room was not correct. Expected 320, got 437
FAIL: Hand count after playing council_room was not correct. Expected 260, got 262
FAIL: Hand count after playing council_room was not correct. Expected 262, got 488
FAIL: Hand count after playing council_room was not correct. Expected 262, got 485
FAIL: Hand count after playing council_room was not correct. Expected 262, got 71
FAIL: Hand count after playing council_room was not correct. Expected 266, got 268
FAIL: Hand count after playing council_room was not correct. Expected 268, got 31
FAIL: Hand count after playing council_room was not correct. Expected 268, got 264
FAIL: Hand count after playing council_room was not correct. Expected 268, got 6
FAIL: Hand count after playing council_room was not correct. Expected 409, got 411
FAIL: Hand count after playing council_room was not correct. Expected 411, got 497
FAIL: Hand count after playing council_room was not correct. Expected 411, got 323
FAIL: Hand count after playing council_room was not correct. Expected 411, got 59
FAIL: Hand count after playing council_room was not correct. Expected 159, got 161
FAIL: Hand count after playing council_room was not correct. Expected 161, got 396
FAIL: Hand count after playing council_room was not correct. Expected 161, got 194
FAIL: Hand count after playing council_room was not correct. Expected 161, got 29
FAIL: Hand count after playing council_room was not correct. Expected 148, got 150
FAIL: Hand count after playing council_room was not correct. Expected 150, got 435
FAIL: Hand count after playing council_room was not correct. Expected 150, got 271
FAIL: Hand count after playing council_room was not correct. Expected 150, got 122
FAIL: Hand count after playing council_room was not correct. Expected 429, got 431
FAIL: Hand count after playing council_room was not correct. Expected 431, got 202
FAIL: Hand count after playing council_room was not correct. Expected 431, got 71
FAIL: Hand count after playing council_room was not correct. Expected 431, got 109
FAIL: Hand count after playing council_room was not correct. Expected 172, got 174
FAIL: Hand count after playing council_room was not correct. Expected 174, got 383
FAIL: Hand count after playing council_room was not correct. Expected 174, got 402
FAIL: Hand count after playing council_room was not correct. Expected 174, got 225
FAIL: Hand count after playing council_room was not correct. Expected 313, got 315
FAIL: Hand count after playing council_room was not correct. Expected 315, got 218
FAIL: Hand count after playing council_room was not correct. Expected 315, got 238
FAIL: Hand count after playing council_room was not correct. Expected 315, got 229
FAIL: Hand count after playing council_room was not correct. Expected 303, got 305
FAIL: Hand count after playing council_room was not correct. Expected 305, got 43
FAIL: Hand count after playing council_room was not correct. Expected 305, got 138
FAIL: Hand count after playing council_room was not correct. Expected 305, got 409
FAIL: Hand count after playing council_room was not correct. Expected 487, got 489
FAIL: Hand count after playing council_room was not correct. Expected 489, got 82
FAIL: Hand count after playing council_room was not correct. Expected 489, got 112
FAIL: Hand count after playing council_room was not correct. Expected 489, got 230
FAIL: Hand count after playing council_room was not correct. Expected 34, got 36
FAIL: Hand count after playing council_room was not correct. Expected 36, got 485
FAIL: Hand count after playing council_room was not correct. Expected 36, got 486
FAIL: Hand count after playing council_room was not correct. Expected 36, got 395
FAIL: Hand count after playing council_room was not correct. Expected 125, got 127
FAIL: Hand count after playing council_room was not correct. Expected 127, got 483
FAIL: Hand count after playing council_room was not correct. Expected 127, got 219
FAIL: Hand count after playing council_room was not correct. Expected 127, got 365
FAIL: Hand count after playing council_room was not correct. Expected 421, got 423
FAIL: Hand count after playing council_room was not correct. Expected 423, got 261
FAIL: Hand count after playing council_room was not correct. Expected 423, got 136
FAIL: Hand count after playing council_room was not correct. Expected 423, got 478
FAIL: Hand count after playing council_room was not correct. Expected 300, got 302
FAIL: Hand count after playing council_room was not correct. Expected 302, got 37
FAIL: Hand count after playing council_room was not correct. Expected 302, got 494
FAIL: Hand count after playing council_room was not correct. Expected 302, got 486
FAIL: Hand count after playing council_room was not correct. Expected 370, got 372
FAIL: Hand count after playing council_room was not correct. Expected 372, got 473
FAIL: Hand count after playing council_room was not correct. Expected 372, got 217
FAIL: Hand count after playing council_room was not correct. Expected 372, got 338
FAIL: Hand count after playing council_room was not correct. Expected 268, got 270
FAIL: Hand count after playing council_room was not correct. Expected 270, got 423
FAIL: Hand count after playing council_room was not correct. Expected 270, got 110
FAIL: Hand count after playing council_room was not correct. Expected 270, got 341
FAIL: Hand count after playing council_room was not correct. Expected 472, got 474
FAIL: Hand count after playing council_room was not correct. Expected 474, got 391
FAIL: Hand count after playing council_room was not correct. Expected 474, got 460
FAIL: Hand count after playing council_room was not correct. Expected 474, got 464
FAIL: Hand count after playing council_room was not correct. Expected 129, got 131
FAIL: Hand count after playing council_room was not correct. Expected 131, got 453
FAIL: Hand count after playing council_room was not correct. Expected 131, got 487
FAIL: Hand count after playing council_room was not correct. Expected 131, got 228
FAIL: Hand count after playing council_room was not correct. Expected 75, got 77
FAIL: Hand count after playing council_room was not correct. Expected 77, got 61
FAIL: Hand count after playing council_room was not correct. Expected 77, got 30
FAIL: Hand count after playing council_room was not correct. Expected 77, got 360
FAIL: Hand count after playing council_room was not correct. Expected 124, got 126
FAIL: Hand count after playing council_room was not correct. Expected 126, got 215
FAIL: Hand count after playing council_room was not correct. Expected 126, got 64
FAIL: Hand count after playing council_room was not correct. Expected 126, got 241
FAIL: Hand count after playing council_room was not correct. Expected 481, got 483
FAIL: Hand count after playing council_room was not correct. Expected 483, got 69
FAIL: Hand count after playing council_room was not correct. Expected 483, got 228
FAIL: Hand count after playing council_room was not correct. Expected 483, got 123
FAIL: Hand count after playing council_room was not correct. Expected 116, got 118
FAIL: Hand count after playing council_room was not correct. Expected 118, got 429
FAIL: Hand count after playing council_room was not correct. Expected 118, got 360
FAIL: Hand count after playing council_room was not correct. Expected 118, got 489
FAIL: Hand count after playing council_room was not correct. Expected 35, got 37
FAIL: Hand count after playing council_room was not correct. Expected 37, got 329
FAIL: Hand count after playing council_room was not correct. Expected 37, got 139
FAIL: Hand count after playing council_room was not correct. Expected 37, got 336
FAIL: Hand count after playing council_room was not correct. Expected 22, got 24
FAIL: Hand count after playing council_room was not correct. Expected 24, got 331
FAIL: Hand count after playing council_room was not correct. Expected 24, got 186
FAIL: Hand count after playing council_room was not correct. Expected 24, got 67
FAIL: Hand count after playing council_room was not correct. Expected 448, got 450
FAIL: Hand count after playing council_room was not correct. Expected 450, got 243
FAIL: Hand count after playing council_room was not correct. Expected 450, got 350
FAIL: Hand count after playing council_room was not correct. Expected 450, got 333
FAIL: Hand count after playing council_room was not correct. Expected 246, got 248
FAIL: Hand count after playing council_room was not correct. Expected 248, got 383
FAIL: Hand count after playing council_room was not correct. Expected 248, got 392
FAIL: Hand count after playing council_room was not correct. Expected 248, got 401
FAIL: Hand count after playing council_room was not correct. Expected 190, got 192
FAIL: Hand count after playing council_room was not correct. Expected 192, got 327
FAIL: Hand count after playing council_room was not correct. Expected 192, got 137
FAIL: Hand count after playing council_room was not correct. Expected 192, got 412
FAIL: Hand count after playing council_room was not correct. Expected 220, got 222
FAIL: Hand count after playing council_room was not correct. Expected 222, got 43
FAIL: Hand count after playing council_room was not correct. Expected 222, got 416
FAIL: Hand count after playing council_room was not correct. Expected 222, got 177
FAIL: Hand count after playing council_room was not correct. Expected 251, got 253
FAIL: Hand count after playing council_room was not correct. Expected 253, got 24
FAIL: Hand count after playing council_room was not correct. Expected 253, got 476
FAIL: Hand count after playing council_room was not correct. Expected 253, got 223
FAIL: Hand count after playing council_room was not correct. Expected 488, got 490
FAIL: Hand count after playing council_room was not correct. Expected 490, got 330
FAIL: Hand count after playing council_room was not correct. Expected 490, got 492
FAIL: Hand count after playing council_room was not correct. Expected 490, got 390
FAIL: Hand count after playing council_room was not correct. Expected 69, got 71
FAIL: Hand count after playing council_room was not correct. Expected 71, got 388
FAIL: Hand count after playing council_room was not correct. Expected 71, got 197
FAIL: Hand count after playing council_room was not correct. Expected 71, got 39
FAIL: Hand count after playing council_room was not correct. Expected 318, got 320
FAIL: Hand count after playing council_room was not correct. Expected 320, got 340
FAIL: Hand count after playing council_room was not correct. Expected 320, got 195
FAIL: Hand count after playing council_room was not correct. Expected 320, got 365
FAIL: Hand count after playing council_room was not correct. Expected 62, got 64
FAIL: Hand count after playing council_room was not correct. Expected 64, got 289
FAIL: Hand count after playing council_room was not correct. Expected 64, got 409
FAIL: Hand count after playing council_room was not correct. Expected 64, got 246
FAIL: Hand count after playing council_room was not correct. Expected 119, got 121
FAIL: Hand count after playing council_room was not correct. Expected 121, got 53
FAIL: Hand count after playing council_room was not correct. Expected 121, got 307
FAIL: Hand count after playing council_room was not correct. Expected 121, got 53
FAIL: Hand count after playing council_room was not correct. Expected 289, got 291
FAIL: Hand count after playing council_room was not correct. Expected 291, got 271
FAIL: Hand count after playing council_room was not correct. Expected 291, got 459
FAIL: Hand count after playing council_room was not correct. Expected 291, got 148
FAIL: Hand count after playing council_room was not correct. Expected 418, got 420
FAIL: Hand count after playing council_room was not correct. Expected 420, got 233
FAIL: Hand count after playing council_room was not correct. Expected 420, got 190
FAIL: Hand count after playing council_room was not correct. Expected 420, got 81
FAIL: Hand count after playing council_room was not correct. Expected 469, got 471
FAIL: Hand count after playing council_room was not correct. Expected 471, got 369
FAIL: Hand count after playing council_room was not correct. Expected 471, got 141
FAIL: Hand count after playing council_room was not correct. Expected 471, got 344
FAIL: Hand count after playing council_room was not correct. Expected 30, got 32
FAIL: Hand count after playing council_room was not correct. Expected 32, got 289
FAIL: Hand count after playing council_room was not correct. Expected 32, got 285
FAIL: Hand count after playing council_room was not correct. Expected 32, got 70
FAIL: Hand count after playing council_room was not correct. Expected 171, got 173
FAIL: Hand count after playing council_room was not correct. Expected 173, got 458
FAIL: Hand count after playing council_room was not correct. Expected 173, got 183
FAIL: Hand count after playing council_room was not correct. Expected 173, got 156
FAIL: Hand count after playing council_room was not correct. Expected 12, got 14
FAIL: Hand count after playing council_room was not correct. Expected 14, got 477
FAIL: Hand count after playing council_room was not correct. Expected 14, got 70
FAIL: Hand count after playing council_room was not correct. Expected 14, got 480
FAIL: Hand count after playing council_room was not correct. Expected 188, got 190
FAIL: Hand count after playing council_room was not correct. Expected 190, got 158
FAIL: Hand count after playing council_room was not correct. Expected 190, got 386
FAIL: Hand count after playing council_room was not correct. Expected 190, got 370
FAIL: Hand count after playing council_room was not correct. Expected 351, got 353
FAIL: Hand count after playing council_room was not correct. Expected 353, got 480
FAIL: Hand count after playing council_room was not correct. Expected 353, got 434
FAIL: Hand count after playing council_room was not correct. Expected 353, got 186
FAIL: Hand count after playing council_room was not correct. Expected 244, got 246
FAIL: Hand count after playing council_room was not correct. Expected 246, got 238
FAIL: Hand count after playing council_room was not correct. Expected 246, got 300
FAIL: Hand count after playing council_room was not correct. Expected 246, got 293
FAIL: Hand count after playing council_room was not correct. Expected 195, got 197
FAIL: Hand count after playing council_room was not correct. Expected 197, got 334
FAIL: Hand count after playing council_room was not correct. Expected 197, got 275
FAIL: Hand count after playing council_room was not correct. Expected 197, got 341
FAIL: Hand count after playing council_room was not correct. Expected 468, got 470
FAIL: Hand count after playing council_room was not correct. Expected 470, got 424
FAIL: Hand count after playing council_room was not correct. Expected 470, got 260
FAIL: Hand count after playing council_room was not correct. Expected 470, got 117
FAIL: Hand count after playing council_room was not correct. Expected 420, got 422
FAIL: Hand count after playing council_room was not correct. Expected 422, got 65
FAIL: Hand count after playing council_room was not correct. Expected 422, got 310
FAIL: Hand count after playing council_room was not correct. Expected 422, got 75
FAIL: Hand count after playing council_room was not correct. Expected 274, got 276
FAIL: Hand count after playing council_room was not correct. Expected 276, got 424
FAIL: Hand count after playing council_room was not correct. Expected 276, got 243
FAIL: Hand count after playing council_room was not correct. Expected 276, got 420
FAIL: Hand count after playing council_room was not correct. Expected 104, got 106
FAIL: Hand count after playing council_room was not correct. Expected 106, got 392
FAIL: Hand count after playing council_room was not correct. Expected 106, got 96
FAIL: Hand count after playing council_room was not correct. Expected 106, got 229
FAIL: Hand count after playing council_room was not correct. Expected 221, got 223
FAIL: Hand count after playing council_room was not correct. Expected 223, got 197
FAIL: Hand count after playing council_room was not correct. Expected 223, got 68
FAIL: Hand count after playing council_room was not correct. Expected 223, got 165
FAIL: Hand count after playing council_room was not correct. Expected 329, got 331
FAIL: Hand count after playing council_room was not correct. Expected 331, got 78
FAIL: Hand count after playing council_room was not correct. Expected 331, got 399
FAIL: Hand count after playing council_room was not correct. Expected 331, got 298
FAIL: Hand count after playing council_room was not correct. Expected 186, got 188
FAIL: Hand count after playing council_room was not correct. Expected 188, got 386
FAIL: Hand count after playing council_room was not correct. Expected 188, got 453
FAIL: Hand count after playing council_room was not correct. Expected 188, got 171
FAIL: Hand count after playing council_room was not correct. Expected 162, got 164
FAIL: Hand count after playing council_room was not correct. Expected 164, got 304
FAIL: Hand count after playing council_room was not correct. Expected 164, got 272
FAIL: Hand count after playing council_room was not correct. Expected 164, got 107
FAIL: Hand count after playing council_room was not correct. Expected 204, got 206
FAIL: Hand count after playing council_room was not correct. Expected 206, got 24
FAIL: Hand count after playing council_room was not correct. Expected 206, got 20
FAIL: Hand count after playing council_room was not correct. Expected 206, got 160
FAIL: Hand count after playing council_room was not correct. Expected 166, got 168
FAIL: Hand count after playing council_room was not correct. Expected 168, got 125
FAIL: Hand count after playing council_room was not correct. Expected 168, got 289
FAIL: Hand count after playing council_room was not correct. Expected 168, got 492
FAIL: Hand count after playing council_room was not correct. Expected 466, got 468
FAIL: Hand count after playing council_room was not correct. Expected 468, got 441
FAIL: Hand count after playing council_room was not correct. Expected 468, got 460
FAIL: Hand count after playing council_room was not correct. Expected 468, got 50
FAIL: Hand count after playing council_room was not correct. Expected 440, got 442
FAIL: Hand count after playing council_room was not correct. Expected 442, got 244
FAIL: Hand count after playing council_room was not correct. Expected 442, got 497
FAIL: Hand count after playing council_room was not correct. Expected 442, got 192
FAIL: Hand count after playing council_room was not correct. Expected 436, got 438
FAIL: Hand count after playing council_room was not correct. Expected 438, got 344
FAIL: Hand count after playing council_room was not correct. Expected 438, got 54
FAIL: Hand count after playing council_room was not correct. Expected 438, got 314
FAIL: Hand count after playing council_room was not correct. Expected 327, got 329
FAIL: Hand count after playing council_room was not correct. Expected 329, got 265
FAIL: Hand count after playing council_room was not correct. Expected 329, got 86
FAIL: Hand count after playing council_room was not correct. Expected 329, got 241
FAIL: Hand count after playing council_room was not correct. Expected 323, got 325
FAIL: Hand count after playing council_room was not correct. Expected 325, got 19
FAIL: Hand count after playing council_room was not correct. Expected 325, got 358
FAIL: Hand count after playing council_room was not correct. Expected 325, got 302
FAIL: Hand count after playing council_room was not correct. Expected 464, got 466
FAIL: Hand count after playing council_room was not correct. Expected 466, got 381
FAIL: Hand count after playing council_room was not correct. Expected 466, got 253
FAIL: Hand count after playing council_room was not correct. Expected 466, got 120
FAIL: Hand count after playing council_room was not correct. Expected 36, got 38
FAIL: Hand count after playing council_room was not correct. Expected 38, got 417
FAIL: Hand count after playing council_room was not correct. Expected 38, got 467
FAIL: Hand count after playing council_room was not correct. Expected 38, got 22
FAIL: Hand count after playing council_room was not correct. Expected 90, got 92
FAIL: Hand count after playing council_room was not correct. Expected 92, got 127
FAIL: Hand count after playing council_room was not correct. Expected 92, got 103
FAIL: Hand count after playing council_room was not correct. Expected 92, got 423
FAIL: Hand count after playing council_room was not correct. Expected 322, got 324
FAIL: Hand count after playing council_room was not correct. Expected 324, got 178
FAIL: Hand count after playing council_room was not correct. Expected 324, got 408
FAIL: Hand count after playing council_room was not correct. Expected 324, got 88
FAIL: Hand count after playing council_room was not correct. Expected 310, got 312
FAIL: Hand count after playing council_room was not correct. Expected 312, got 465
FAIL: Hand count after playing council_room was not correct. Expected 312, got 63
FAIL: Hand count after playing council_room was not correct. Expected 312, got 453
FAIL: Hand count after playing council_room was not correct. Expected 451, got 453
FAIL: Hand count after playing council_room was not correct. Expected 453, got 156
FAIL: Hand count after playing council_room was not correct. Expected 453, got 353
FAIL: Hand count after playing council_room was not correct. Expected 453, got 138
FAIL: Hand count after playing council_room was not correct. Expected 388, got 390
FAIL: Hand count after playing council_room was not correct. Expected 390, got 190
FAIL: Hand count after playing council_room was not correct. Expected 390, got 406
FAIL: Hand count after playing council_room was not correct. Expected 390, got 495
FAIL: Hand count after playing council_room was not correct. Expected 86, got 88
FAIL: Hand count after playing council_room was not correct. Expected 88, got 284
FAIL: Hand count after playing council_room was not correct. Expected 88, got 380
FAIL: Hand count after playing council_room was not correct. Expected 88, got 412
FAIL: Hand count after playing council_room was not correct. Expected 276, got 278
FAIL: Hand count after playing council_room was not correct. Expected 278, got 91
FAIL: Hand count after playing council_room was not correct. Expected 278, got 453
FAIL: Hand count after playing council_room was not correct. Expected 278, got 475
FAIL: Hand count after playing council_room was not correct. Expected 497, got 499
FAIL: Hand count after playing council_room was not correct. Expected 499, got 223
FAIL: Hand count after playing council_room was not correct. Expected 499, got 375
FAIL: Hand count after playing council_room was not correct. Expected 499, got 69
FAIL: Hand count after playing council_room was not correct. Expected 235, got 237
FAIL: Hand count after playing council_room was not correct. Expected 237, got 115
FAIL: Hand count after playing council_room was not correct. Expected 237, got 407
FAIL: Hand count after playing council_room was not correct. Expected 237, got 445
FAIL: Hand count after playing council_room was not correct. Expected 213, got 215
FAIL: Hand count after playing council_room was not correct. Expected 215, got 375
FAIL: Hand count after playing council_room was not correct. Expected 215, got 429
FAIL: Hand count after playing council_room was not correct. Expected 215, got 209
FAIL: Hand count after playing council_room was not correct. Expected 285, got 287
FAIL: Hand count after playing council_room was not correct. Expected 287, got 271
FAIL: Hand count after playing council_room was not correct. Expected 287, got 107
FAIL: Hand count after playing council_room was not correct. Expected 287, got 244
FAIL: Hand count after playing council_room was not correct. Expected 225, got 227
FAIL: Hand count after playing council_room was not correct. Expected 227, got 303
FAIL: Hand count after playing council_room was not correct. Expected 227, got 369
FAIL: Hand count after playing council_room was not correct. Expected 227, got 27
FAIL: Hand count after playing council_room was not correct. Expected 356, got 358
FAIL: Hand count after playing council_room was not correct. Expected 358, got 188
FAIL: Hand count after playing council_room was not correct. Expected 358, got 312
FAIL: Hand count after playing council_room was not correct. Expected 358, got 87
FAIL: Hand count after playing council_room was not correct. Expected 243, got 245
FAIL: Hand count after playing council_room was not correct. Expected 245, got 95
FAIL: Hand count after playing council_room was not correct. Expected 245, got 41
FAIL: Hand count after playing council_room was not correct. Expected 245, got 405
FAIL: Hand count after playing council_room was not correct. Expected 148, got 150
FAIL: Hand count after playing council_room was not correct. Expected 150, got 119
FAIL: Hand count after playing council_room was not correct. Expected 150, got 347
FAIL: Hand count after playing council_room was not correct. Expected 150, got 492
FAIL: Hand count after playing council_room was not correct. Expected 284, got 286
FAIL: Hand count after playing council_room was not correct. Expected 286, got 236
FAIL: Hand count after playing council_room was not correct. Expected 286, got 500
FAIL: Hand count after playing council_room was not correct. Expected 286, got 20
FAIL: Hand count after playing council_room was not correct. Expected 167, got 169
FAIL: Hand count after playing council_room was not correct. Expected 169, got 356
FAIL: Hand count after playing council_room was not correct. Expected 169, got 417
FAIL: Hand count after playing council_room was not correct. Expected 169, got 328
FAIL: Hand count after playing council_room was not correct. Expected 98, got 100
FAIL: Hand count after playing council_room was not correct. Expected 100, got 129
FAIL: Hand count after playing council_room was not correct. Expected 100, got 125
FAIL: Hand count after playing council_room was not correct. Expected 100, got 427
FAIL: Hand count after playing council_room was not correct. Expected 294, got 296
FAIL: Hand count after playing council_room was not correct. Expected 296, got 102
FAIL: Hand count after playing council_room was not correct. Expected 296, got 243
FAIL: Hand count after playing council_room was not correct. Expected 296, got 380
FAIL: Hand count after playing council_room was not correct. Expected 93, got 95
FAIL: Hand count after playing council_room was not correct. Expected 95, got 471
FAIL: Hand count after playing council_room was not correct. Expected 95, got 400
FAIL: Hand count after playing council_room was not correct. Expected 95, got 440
FAIL: Hand count after playing council_room was not correct. Expected 25, got 27
FAIL: Hand count after playing council_room was not correct. Expected 27, got 444
FAIL: Hand count after playing council_room was not correct. Expected 27, got 222
FAIL: Hand count after playing council_room was not correct. Expected 27, got 468
FAIL: Hand count after playing council_room was not correct. Expected 24, got 26
FAIL: Hand count after playing council_room was not correct. Expected 26, got 110
FAIL: Hand count after playing council_room was not correct. Expected 26, got 349
FAIL: Hand count after playing council_room was not correct. Expected 26, got 94
FAIL: Hand count after playing council_room was not correct. Expected 192, got 194
FAIL: Hand count after playing council_room was not correct. Expected 194, got 496
FAIL: Hand count after playing council_room was not correct. Expected 194, got 389
FAIL: Hand count after playing council_room was not correct. Expected 194, got 332
FAIL: Hand count after playing council_room was not correct. Expected 392, got 394
FAIL: Hand count after playing council_room was not correct. Expected 394, got 298
FAIL: Hand count after playing council_room was not correct. Expected 394, got 5
FAIL: Hand count after playing council_room was not correct. Expected 394, got 44
FAIL: Hand count after playing council_room was not correct. Expected 473, got 475
FAIL: Hand count after playing council_room was not correct. Expected 475, got 393
FAIL: Hand count after playing council_room was not correct. Expected 475, got 247
FAIL: Hand count after playing council_room was not correct. Expected 475, got 122
FAIL: Hand count after playing council_room was not correct. Expected 66, got 68
FAIL: Hand count after playing council_room was not correct. Expected 68, got 358
FAIL: Hand count after playing council_room was not correct. Expected 68, got 231
FAIL: Hand count after playing council_room was not correct. Expected 68, got 15
FAIL: Hand count after playing council_room was not correct. Expected 43, got 45
FAIL: Hand count after playing council_room was not correct. Expected 45, got 490
FAIL: Hand count after playing council_room was not correct. Expected 45, got 39
FAIL: Hand count after playing council_room was not correct. Expected 45, got 175
FAIL: Hand count after playing council_room was not correct. Expected 259, got 261
FAIL: Hand count after playing council_room was not correct. Expected 261, got 338
FAIL: Hand count after playing council_room was not correct. Expected 261, got 207
FAIL: Hand count after playing council_room was not correct. Expected 261, got 181
FAIL: Hand count after playing council_room was not correct. Expected 324, got 326
FAIL: Hand count after playing council_room was not correct. Expected 326, got 156
FAIL: Hand count after playing council_room was not correct. Expected 326, got 261
FAIL: Hand count after playing council_room was not correct. Expected 326, got 419
FAIL: Hand count after playing council_room was not correct. Expected 55, got 57
FAIL: Hand count after playing council_room was not correct. Expected 57, got 324
FAIL: Hand count after playing council_room was not correct. Expected 57, got 36
FAIL: Hand count after playing council_room was not correct. Expected 57, got 392
FAIL: Hand count after playing council_room was not correct. Expected 470, got 472
FAIL: Hand count after playing council_room was not correct. Expected 472, got 260
FAIL: Hand count after playing council_room was not correct. Expected 472, got 169
FAIL: Hand count after playing council_room was not correct. Expected 472, got 414
FAIL: Hand count after playing council_room was not correct. Expected 213, got 215
FAIL: Hand count after playing council_room was not correct. Expected 215, got 316
FAIL: Hand count after playing council_room was not correct. Expected 215, got 148
FAIL: Hand count after playing council_room was not correct. Expected 215, got 266
FAIL: Hand count after playing council_room was not correct. Expected 174, got 176
FAIL: Hand count after playing council_room was not correct. Expected 176, got 192
FAIL: Hand count after playing council_room was not correct. Expected 176, got 206
FAIL: Hand count after playing council_room was not correct. Expected 176, got 484
FAIL: Hand count after playing council_room was not correct. Expected 451, got 453
FAIL: Hand count after playing council_room was not correct. Expected 453, got 229
FAIL: Hand count after playing council_room was not correct. Expected 453, got 26
FAIL: Hand count after playing council_room was not correct. Expected 453, got 67
FAIL: Hand count after playing council_room was not correct. Expected 264, got 266
FAIL: Hand count after playing council_room was not correct. Expected 266, got 203
FAIL: Hand count after playing council_room was not correct. Expected 266, got 127
FAIL: Hand count after playing council_room was not correct. Expected 266, got 498
FAIL: Hand count after playing council_room was not correct. Expected 139, got 141
FAIL: Hand count after playing council_room was not correct. Expected 141, got 83
FAIL: Hand count after playing council_room was not correct. Expected 141, got 361
FAIL: Hand count after playing council_room was not correct. Expected 141, got 31
FAIL: Hand count after playing council_room was not correct. Expected 90, got 92
FAIL: Hand count after playing council_room was not correct. Expected 92, got 216
FAIL: Hand count after playing council_room was not correct. Expected 92, got 67
FAIL: Hand count after playing council_room was not correct. Expected 92, got 441
FAIL: Hand count after playing council_room was not correct. Expected 288, got 290
FAIL: Hand count after playing council_room was not correct. Expected 290, got 16
FAIL: Hand count after playing council_room was not correct. Expected 290, got 253
FAIL: Hand count after playing council_room was not correct. Expected 290, got 90
FAIL: Hand count after playing council_room was not correct. Expected 31, got 33
FAIL: Hand count after playing council_room was not correct. Expected 33, got 321
FAIL: Hand count after playing council_room was not correct. Expected 33, got 308
FAIL: Hand count after playing council_room was not correct. Expected 33, got 359
FAIL: Hand count after playing council_room was not correct. Expected 171, got 173
FAIL: Hand count after playing council_room was not correct. Expected 173, got 259
FAIL: Hand count after playing council_room was not correct. Expected 173, got 304
FAIL: Hand count after playing council_room was not correct. Expected 173, got 56
FAIL: Hand count after playing council_room was not correct. Expected 22, got 24
FAIL: Hand count after playing council_room was not correct. Expected 24, got 376
FAIL: Hand count after playing council_room was not correct. Expected 24, got 373
FAIL: Hand count after playing council_room was not correct. Expected 24, got 349
FAIL: Hand count after playing council_room was not correct. Expected 105, got 107
FAIL: Hand count after playing council_room was not correct. Expected 107, got 171
FAIL: Hand count after playing council_room was not correct. Expected 107, got 92
FAIL: Hand count after playing council_room was not correct. Expected 107, got 206
FAIL: Hand count after playing council_room was not correct. Expected 445, got 447
FAIL: Hand count after playing council_room was not correct. Expected 447, got 110
FAIL: Hand count after playing council_room was not correct. Expected 447, got 202
FAIL: Hand count after playing council_room was not correct. Expected 447, got 480
FAIL: Hand count after playing council_room was not correct. Expected 151, got 153
FAIL: Hand count after playing council_room was not correct. Expected 153, got 489
FAIL: Hand count after playing council_room was not correct. Expected 153, got 285
FAIL: Hand count after playing council_room was not correct. Expected 153, got 417
FAIL: Hand count after playing council_room was not correct. Expected 396, got 398
FAIL: Hand count after playing council_room was not correct. Expected 398, got 66
FAIL: Hand count after playing council_room was not correct. Expected 398, got 351
FAIL: Hand count after playing council_room was not correct. Expected 398, got 373
FAIL: Hand count after playing council_room was not correct. Expected 346, got 348
FAIL: Hand count after playing council_room was not correct. Expected 348, got 311
FAIL: Hand count after playing council_room was not correct. Expected 348, got 68
FAIL: Hand count after playing council_room was not correct. Expected 348, got 113
FAIL: Hand count after playing council_room was not correct. Expected 208, got 210
FAIL: Hand count after playing council_room was not correct. Expected 210, got 484
FAIL: Hand count after playing council_room was not correct. Expected 210, got 118
FAIL: Hand count after playing council_room was not correct. Expected 210, got 87
FAIL: Hand count after playing council_room was not correct. Expected 216, got 218
FAIL: Hand count after playing council_room was not correct. Expected 218, got 26
FAIL: Hand count after playing council_room was not correct. Expected 218, got 314
FAIL: Hand count after playing council_room was not correct. Expected 218, got 289
FAIL: Hand count after playing council_room was not correct. Expected 435, got 437
FAIL: Hand count after playing council_room was not correct. Expected 437, got 43
FAIL: Hand count after playing council_room was not correct. Expected 437, got 247
FAIL: Hand count after playing council_room was not correct. Expected 437, got 490
FAIL: Hand count after playing council_room was not correct. Expected 152, got 154
FAIL: Hand count after playing council_room was not correct. Expected 154, got 245
FAIL: Hand count after playing council_room was not correct. Expected 154, got 251
FAIL: Hand count after playing council_room was not correct. Expected 154, got 257
FAIL: Hand count after playing council_room was not correct. Expected 114, got 116
FAIL: Hand count after playing council_room was not correct. Expected 116, got 60
FAIL: Hand count after playing council_room was not correct. Expected 116, got 474
FAIL: Hand count after playing council_room was not correct. Expected 116, got 267
FAIL: Hand count after playing council_room was not correct. Expected 168, got 170
FAIL: Hand count after playing council_room was not correct. Expected 170, got 433
FAIL: Hand count after playing council_room was not correct. Expected 170, got 55
FAIL: Hand count after playing council_room was not correct. Expected 170, got 114
FAIL: Hand count after playing council_room was not correct. Expected 210, got 212
FAIL: Hand count after playing council_room was not correct. Expected 212, got 80
FAIL: Hand count after playing council_room was not correct. Expected 212, got 18
FAIL: Hand count after playing council_room was not correct. Expected 212, got 454
FAIL: Hand count after playing council_room was not correct. Expected 187, got 189
FAIL: Hand count after playing council_room was not correct. Expected 189, got 26
FAIL: Hand count after playing council_room was not correct. Expected 189, got 234
FAIL: Hand count after playing council_room was not correct. Expected 189, got 201
FAIL: Hand count after playing council_room was not correct. Expected 236, got 238
FAIL: Hand count after playing council_room was not correct. Expected 238, got 42
FAIL: Hand count after playing council_room was not correct. Expected 238, got 54
FAIL: Hand count after playing council_room was not correct. Expected 238, got 341
FAIL: Hand count after playing council_room was not correct. Expected 350, got 352
FAIL: Hand count after playing council_room was not correct. Expected 352, got 399
FAIL: Hand count after playing council_room was not correct. Expected 352, got 209
FAIL: Hand count after playing council_room was not correct. Expected 352, got 165
FAIL: Hand count after playing council_room was not correct. Expected 272, got 274
FAIL: Hand count after playing council_room was not correct. Expected 274, got 28
FAIL: Hand count after playing council_room was not correct. Expected 274, got 392
FAIL: Hand count after playing council_room was not correct. Expected 274, got 139
FAIL: Hand count after playing council_room was not correct. Expected 347, got 349
FAIL: Hand count after playing council_room was not correct. Expected 349, got 258
FAIL: Hand count after playing council_room was not correct. Expected 349, got 456
FAIL: Hand count after playing council_room was not correct. Expected 349, got 495
FAIL: Hand count after playing council_room was not correct. Expected 374, got 376
FAIL: Hand count after playing council_room was not correct. Expected 376, got 87
FAIL: Hand count after playing council_room was not correct. Expected 376, got 64
FAIL: Hand count after playing council_room was not correct. Expected 376, got 261
FAIL: Hand count after playing council_room was not correct. Expected 293, got 295
FAIL: Hand count after playing council_room was not correct. Expected 295, got 330
FAIL: Hand count after playing council_room was not correct. Expected 295, got 70
FAIL: Hand count after playing council_room was not correct. Expected 295, got 309
FAIL: Hand count after playing council_room was not correct. Expected 138, got 140
FAIL: Hand count after playing council_room was not correct. Expected 140, got 257
FAIL: Hand count after playing council_room was not correct. Expected 140, got 12
FAIL: Hand count after playing council_room was not correct. Expected 140, got 159
FAIL: Hand count after playing council_room was not correct. Expected 453, got 455
FAIL: Hand count after playing council_room was not correct. Expected 455, got 237
FAIL: Hand count after playing council_room was not correct. Expected 455, got 186
FAIL: Hand count after playing council_room was not correct. Expected 455, got 2
FAIL: Hand count after playing council_room was not correct. Expected 145, got 147
FAIL: Hand count after playing council_room was not correct. Expected 147, got 370
FAIL: Hand count after playing council_room was not correct. Expected 147, got 396
FAIL: Hand count after playing council_room was not correct. Expected 147, got 466
FAIL: Hand count after playing council_room was not correct. Expected 121, got 123
FAIL: Hand count after playing council_room was not correct. Expected 123, got 127
FAIL: Hand count after playing council_room was not correct. Expected 123, got 30
FAIL: Hand count after playing council_room was not correct. Expected 123, got 470
FAIL: Hand count after playing council_room was not correct. Expected 208, got 210
FAIL: Hand count after playing council_room was not correct. Expected 210, got 429
FAIL: Hand count after playing council_room was not correct. Expected 210, got 242
FAIL: Hand count after playing council_room was not correct. Expected 210, got 78
FAIL: Hand count after playing council_room was not correct. Expected 457, got 459
FAIL: Hand count after playing council_room was not correct. Expected 459, got 223
FAIL: Hand count after playing council_room was not correct. Expected 459, got 81
FAIL: Hand count after playing council_room was not correct. Expected 459, got 104
FAIL: Hand count after playing council_room was not correct. Expected 127, got 129
FAIL: Hand count after playing council_room was not correct. Expected 129, got 60
FAIL: Hand count after playing council_room was not correct. Expected 129, got 35
FAIL: Hand count after playing council_room was not correct. Expected 129, got 16
FAIL: Hand count after playing council_room was not correct. Expected 52, got 54
FAIL: Hand count after playing council_room was not correct. Expected 54, got 97
FAIL: Hand count after playing council_room was not correct. Expected 54, got 68
FAIL: Hand count after playing council_room was not correct. Expected 54, got 312
FAIL: Hand count after playing council_room was not correct. Expected 476, got 478
FAIL: Hand count after playing council_room was not correct. Expected 478, got 207
FAIL: Hand count after playing council_room was not correct. Expected 478, got 269
FAIL: Hand count after playing council_room was not correct. Expected 478, got 253
FAIL: Hand count after playing council_room was not correct. Expected 488, got 490
FAIL: Hand count after playing council_room was not correct. Expected 490, got 162
FAIL: Hand count after playing council_room was not correct. Expected 490, got 142
FAIL: Hand count after playing council_room was not correct. Expected 490, got 499
FAIL: Hand count after playing council_room was not correct. Expected 250, got 252
FAIL: Hand count after playing council_room was not correct. Expected 252, got 190
FAIL: Hand count after playing council_room was not correct. Expected 252, got 271
FAIL: Hand count after playing council_room was not correct. Expected 252, got 68
FAIL: Hand count after playing council_room was not correct. Expected 380, got 382
FAIL: Hand count after playing council_room was not correct. Expected 382, got 291
FAIL: Hand count after playing council_room was not correct. Expected 382, got 420
FAIL: Hand count after playing council_room was not correct. Expected 382, got 343
FAIL: Hand count after playing council_room was not correct. Expected 171, got 173
FAIL: Hand count after playing council_room was not correct. Expected 173, got 186
FAIL: Hand count after playing council_room was not correct. Expected 173, got 215
FAIL: Hand count after playing council_room was not correct. Expected 173, got 1
FAIL: Hand count after playing council_room was not correct. Expected 159, got 161
FAIL: Hand count after playing council_room was not correct. Expected 161, got 6
FAIL: Hand count after playing council_room was not correct. Expected 161, got 104
FAIL: Hand count after playing council_room was not correct. Expected 161, got 408
FAIL: Hand count after playing council_room was not correct. Expected 177, got 179
FAIL: Hand count after playing council_room was not correct. Expected 179, got 161
FAIL: Hand count after playing council_room was not correct. Expected 179, got 357
FAIL: Hand count after playing council_room was not correct. Expected 179, got 130
FAIL: Hand count after playing council_room was not correct. Expected 257, got 259
FAIL: Hand count after playing council_room was not correct. Expected 259, got 293
FAIL: Hand count after playing council_room was not correct. Expected 259, got 130
FAIL: Hand count after playing council_room was not correct. Expected 259, got 246
FAIL: Hand count after playing council_room was not correct. Expected 71, got 73
FAIL: Hand count after playing council_room was not correct. Expected 73, got 5
FAIL: Hand count after playing council_room was not correct. Expected 73, got 266
FAIL: Hand count after playing council_room was not correct. Expected 73, got 233
FAIL: Hand count after playing council_room was not correct. Expected 98, got 100
FAIL: Hand count after playing council_room was not correct. Expected 100, got 141
FAIL: Hand count after playing council_room was not correct. Expected 100, got 178
FAIL: Hand count after playing council_room was not correct. Expected 100, got 238
FAIL: Hand count after playing council_room was not correct. Expected 200, got 202
FAIL: Hand count after playing council_room was not correct. Expected 202, got 13
FAIL: Hand count after playing council_room was not correct. Expected 202, got 394
FAIL: Hand count after playing council_room was not correct. Expected 202, got 53
FAIL: Hand count after playing council_room was not correct. Expected 211, got 213
FAIL: Hand count after playing council_room was not correct. Expected 213, got 458
FAIL: Hand count after playing council_room was not correct. Expected 213, got 18
FAIL: Hand count after playing council_room was not correct. Expected 213, got 337
FAIL: Hand count after playing council_room was not correct. Expected 196, got 198
FAIL: Hand count after playing council_room was not correct. Expected 198, got 310
FAIL: Hand count after playing council_room was not correct. Expected 198, got 288
FAIL: Hand count after playing council_room was not correct. Expected 198, got 374
FAIL: Hand count after playing council_room was not correct. Expected 306, got 308
FAIL: Hand count after playing council_room was not correct. Expected 308, got 458
FAIL: Hand count after playing council_room was not correct. Expected 308, got 179
FAIL: Hand count after playing council_room was not correct. Expected 308, got 231
FAIL: Hand count after playing council_room was not correct. Expected 184, got 186
FAIL: Hand count after playing council_room was not correct. Expected 186, got 399
FAIL: Hand count after playing council_room was not correct. Expected 186, got 394
FAIL: Hand count after playing council_room was not correct. Expected 186, got 84
FAIL: Hand count after playing council_room was not correct. Expected 300, got 302
FAIL: Hand count after playing council_room was not correct. Expected 302, got 296
FAIL: Hand count after playing council_room was not correct. Expected 302, got 150
FAIL: Hand count after playing council_room was not correct. Expected 302, got 57
FAIL: Hand count after playing council_room was not correct. Expected 334, got 336
FAIL: Hand count after playing council_room was not correct. Expected 336, got 45
FAIL: Hand count after playing council_room was not correct. Expected 336, got 415
FAIL: Hand count after playing council_room was not correct. Expected 336, got 37
FAIL: Hand count after playing council_room was not correct. Expected 393, got 395
FAIL: Hand count after playing council_room was not correct. Expected 395, got 138
FAIL: Hand count after playing council_room was not correct. Expected 395, got 180
FAIL: Hand count after playing council_room was not correct. Expected 395, got 320
FAIL: Hand count after playing council_room was not correct. Expected 81, got 83
FAIL: Hand count after playing council_room was not correct. Expected 83, got 368
FAIL: Hand count after playing council_room was not correct. Expected 83, got 166
FAIL: Hand count after playing council_room was not correct. Expected 83, got 314
FAIL: Hand count after playing council_room was not correct. Expected 146, got 148
FAIL: Hand count after playing council_room was not correct. Expected 148, got 106
FAIL: Hand count after playing council_room was not correct. Expected 148, got 366
FAIL: Hand count after playing council_room was not correct. Expected 148, got 199
FAIL: Hand count after playing council_room was not correct. Expected 100, got 102
FAIL: Hand count after playing council_room was not correct. Expected 102, got 423
FAIL: Hand count after playing council_room was not correct. Expected 102, got 6
FAIL: Hand count after playing council_room was not correct. Expected 102, got 109
FAIL: Hand count after playing council_room was not correct. Expected 97, got 99
FAIL: Hand count after playing council_room was not correct. Expected 99, got 130
FAIL: Hand count after playing council_room was not correct. Expected 99, got 229
FAIL: Hand count after playing council_room was not correct. Expected 99, got 175
FAIL: Hand count after playing council_room was not correct. Expected 193, got 195
FAIL: Hand count after playing council_room was not correct. Expected 195, got 227
FAIL: Hand count after playing council_room was not correct. Expected 195, got 170
FAIL: Hand count after playing council_room was not correct. Expected 195, got 257
FAIL: Hand count after playing council_room was not correct. Expected 482, got 484
FAIL: Hand count after playing council_room was not correct. Expected 484, got 342
FAIL: Hand count after playing council_room was not correct. Expected 484, got 91
FAIL: Hand count after playing council_room was not correct. Expected 484, got 28
FAIL: Hand count after playing council_room was not correct. Expected 245, got 247
FAIL: Hand count after playing council_room was not correct. Expected 247, got 172
FAIL: Hand count after playing council_room was not correct. Expected 247, got 395
FAIL: Hand count after playing council_room was not correct. Expected 247, got 215
FAIL: Hand count after playing council_room was not correct. Expected 366, got 368
FAIL: Hand count after playing council_room was not correct. Expected 368, got 66
FAIL: Hand count after playing council_room was not correct. Expected 368, got 152
FAIL: Hand count after playing council_room was not correct. Expected 368, got 329
FAIL: Hand count after playing council_room was not correct. Expected 5, got 7
FAIL: Hand count after playing council_room was not correct. Expected 7, got 395
FAIL: Hand count after playing council_room was not correct. Expected 7, got 163
FAIL: Hand count after playing council_room was not correct. Expected 7, got 436
FAIL: Hand count after playing council_room was not correct. Expected 353, got 355
FAIL: Hand count after playing council_room was not correct. Expected 355, got 129
FAIL: Hand count after playing council_room was not correct. Expected 355, got 112
FAIL: Hand count after playing council_room was not correct. Expected 355, got 384
FAIL: Hand count after playing council_room was not correct. Expected 107, got 109
FAIL: Hand count after playing council_room was not correct. Expected 109, got 251
FAIL: Hand count after playing council_room was not correct. Expected 109, got 112
FAIL: Hand count after playing council_room was not correct. Expected 109, got 478
FAIL: Hand count after playing council_room was not correct. Expected 165, got 167
FAIL: Hand count after playing council_room was not correct. Expected 167, got 280
FAIL: Hand count after playing council_room was not correct. Expected 167, got 314
FAIL: Hand count after playing council_room was not correct. Expected 167, got 397
FAIL: Hand count after playing council_room was not correct. Expected 382, got 384
FAIL: Hand count after playing council_room was not correct. Expected 384, got 299
FAIL: Hand count after playing council_room was not correct. Expected 384, got 389
FAIL: Hand count after playing council_room was not correct. Expected 384, got 468
FAIL: Hand count after playing council_room was not correct. Expected 68, got 70
FAIL: Hand count after playing council_room was not correct. Expected 70, got 474
FAIL: Hand count after playing council_room was not correct. Expected 70, got 330
FAIL: Hand count after playing council_room was not correct. Expected 70, got 365
FAIL: Hand count after playing council_room was not correct. Expected 117, got 119
FAIL: Hand count after playing council_room was not correct. Expected 119, got 443
FAIL: Hand count after playing council_room was not correct. Expected 119, got 300
FAIL: Hand count after playing council_room was not correct. Expected 119, got 413
FAIL: Hand count after playing council_room was not correct. Expected 343, got 345
FAIL: Hand count after playing council_room was not correct. Expected 345, got 10
FAIL: Hand count after playing council_room was not correct. Expected 345, got 496
FAIL: Hand count after playing council_room was not correct. Expected 345, got 40
FAIL: Hand count after playing council_room was not correct. Expected 338, got 340
FAIL: Hand count after playing council_room was not correct. Expected 340, got 231
FAIL: Hand count after playing council_room was not correct. Expected 340, got 298
FAIL: Hand count after playing council_room was not correct. Expected 340, got 23
FAIL: Hand count after playing council_room was not correct. Expected 177, got 179
FAIL: Hand count after playing council_room was not correct. Expected 179, got 60
FAIL: Hand count after playing council_room was not correct. Expected 179, got 84
FAIL: Hand count after playing council_room was not correct. Expected 179, got 124
FAIL: Hand count after playing council_room was not correct. Expected 445, got 447
FAIL: Hand count after playing council_room was not correct. Expected 447, got 66
FAIL: Hand count after playing council_room was not correct. Expected 447, got 9
FAIL: Hand count after playing council_room was not correct. Expected 447, got 489
FAIL: Hand count after playing council_room was not correct. Expected 373, got 375
FAIL: Hand count after playing council_room was not correct. Expected 375, got 437
FAIL: Hand count after playing council_room was not correct. Expected 375, got 281
FAIL: Hand count after playing council_room was not correct. Expected 375, got 308
FAIL: Hand count after playing council_room was not correct. Expected 318, got 320
FAIL: Hand count after playing council_room was not correct. Expected 320, got 198
FAIL: Hand count after playing council_room was not correct. Expected 320, got 351
FAIL: Hand count after playing council_room was not correct. Expected 320, got 461
FAIL: Hand count after playing council_room was not correct. Expected 382, got 384
FAIL: Hand count after playing council_room was not correct. Expected 384, got 81
FAIL: Hand count after playing council_room was not correct. Expected 384, got 470
FAIL: Hand count after playing council_room was not correct. Expected 384, got 368
FAIL: Hand count after playing council_room was not correct. Expected 187, got 189
FAIL: Hand count after playing council_room was not correct. Expected 189, got 483
FAIL: Hand count after playing council_room was not correct. Expected 189, got 136
FAIL: Hand count after playing council_room was not correct. Expected 189, got 492
FAIL: Hand count after playing council_room was not correct. Expected 97, got 99
FAIL: Hand count after playing council_room was not correct. Expected 99, got 353
FAIL: Hand count after playing council_room was not correct. Expected 99, got 408
FAIL: Hand count after playing council_room was not correct. Expected 99, got 361
FAIL: Hand count after playing council_room was not correct. Expected 217, got 219
FAIL: Hand count after playing council_room was not correct. Expected 219, got 424
FAIL: Hand count after playing council_room was not correct. Expected 219, got 362
FAIL: Hand count after playing council_room was not correct. Expected 219, got 261
FAIL: Hand count after playing council_room was not correct. Expected 379, got 381
FAIL: Hand count after playing council_room was not correct. Expected 381, got 183
FAIL: Hand count after playing council_room was not correct. Expected 381, got 442
FAIL: Hand count after playing council_room was not correct. Expected 381, got 180
FAIL: Hand count after playing council_room was not correct. Expected 123, got 125
FAIL: Hand count after playing council_room was not correct. Expected 125, got 270
FAIL: Hand count after playing council_room was not correct. Expected 125, got 483
FAIL: Hand count after playing council_room was not correct. Expected 125, got 188
FAIL: Hand count after playing council_room was not correct. Expected 147, got 149
FAIL: Hand count after playing council_room was not correct. Expected 149, got 400
FAIL: Hand count after playing council_room was not correct. Expected 149, got 267
FAIL: Hand count after playing council_room was not correct. Expected 149, got 221
FAIL: Hand count after playing council_room was not correct. Expected 42, got 44
FAIL: Hand count after playing council_room was not correct. Expected 44, got 151
FAIL: Hand count after playing council_room was not correct. Expected 44, got 146
FAIL: Hand count after playing council_room was not correct. Expected 44, got 1
FAIL: Hand count after playing council_room was not correct. Expected 126, got 128
FAIL: Hand count after playing council_room was not correct. Expected 128, got 483
FAIL: Hand count after playing council_room was not correct. Expected 128, got 162
FAIL: Hand count after playing council_room was not correct. Expected 128, got 40
FAIL: Hand count after playing council_room was not correct. Expected 481, got 483
FAIL: Hand count after playing council_room was not correct. Expected 483, got 298
FAIL: Hand count after playing council_room was not correct. Expected 483, got 234
FAIL: Hand count after playing council_room was not correct. Expected 483, got 453
FAIL: Hand count after playing council_room was not correct. Expected 318, got 320
FAIL: Hand count after playing council_room was not correct. Expected 320, got 412
FAIL: Hand count after playing council_room was not correct. Expected 320, got 181
FAIL: Hand count after playing council_room was not correct. Expected 320, got 38
FAIL: Hand count after playing council_room was not correct. Expected 15, got 17
FAIL: Hand count after playing council_room was not correct. Expected 17, got 149
FAIL: Hand count after playing council_room was not correct. Expected 17, got 205
FAIL: Hand count after playing council_room was not correct. Expected 17, got 474
FAIL: Hand count after playing council_room was not correct. Expected 151, got 153
FAIL: Hand count after playing council_room was not correct. Expected 153, got 53
FAIL: Hand count after playing council_room was not correct. Expected 153, got 176
FAIL: Hand count after playing council_room was not correct. Expected 153, got 120
FAIL: Hand count after playing council_room was not correct. Expected 27, got 29
FAIL: Hand count after playing council_room was not correct. Expected 29, got 228
FAIL: Hand count after playing council_room was not correct. Expected 29, got 89
FAIL: Hand count after playing council_room was not correct. Expected 29, got 165
FAIL: Hand count after playing council_room was not correct. Expected 487, got 489
FAIL: Hand count after playing council_room was not correct. Expected 489, got 290
FAIL: Hand count after playing council_room was not correct. Expected 489, got 71
FAIL: Hand count after playing council_room was not correct. Expected 489, got 57
FAIL: Hand count after playing council_room was not correct. Expected 456, got 458
FAIL: Hand count after playing council_room was not correct. Expected 458, got 315
FAIL: Hand count after playing council_room was not correct. Expected 458, got 168
FAIL: Hand count after playing council_room was not correct. Expected 458, got 429
FAIL: Hand count after playing council_room was not correct. Expected 384, got 386
FAIL: Hand count after playing council_room was not correct. Expected 386, got 264
FAIL: Hand count after playing council_room was not correct. Expected 386, got 232
FAIL: Hand count after playing council_room was not correct. Expected 386, got 182
FAIL: Hand count after playing council_room was not correct. Expected 179, got 181
FAIL: Hand count after playing council_room was not correct. Expected 181, got 160
FAIL: Hand count after playing council_room was not correct. Expected 181, got 308
FAIL: Hand count after playing council_room was not correct. Expected 181, got 171
FAIL: Hand count after playing council_room was not correct. Expected 456, got 458
FAIL: Hand count after playing council_room was not correct. Expected 458, got 229
FAIL: Hand count after playing council_room was not correct. Expected 458, got 390
FAIL: Hand count after playing council_room was not correct. Expected 458, got 262
FAIL: Hand count after playing council_room was not correct. Expected 496, got 498
FAIL: Hand count after playing council_room was not correct. Expected 498, got 133
FAIL: Hand count after playing council_room was not correct. Expected 498, got 426
FAIL: Hand count after playing council_room was not correct. Expected 498, got 342
FAIL: Hand count after playing council_room was not correct. Expected 338, got 340
FAIL: Hand count after playing council_room was not correct. Expected 340, got 232
FAIL: Hand count after playing council_room was not correct. Expected 340, got 342
FAIL: Hand count after playing council_room was not correct. Expected 340, got 413
FAIL: Hand count after playing council_room was not correct. Expected 360, got 362
FAIL: Hand count after playing council_room was not correct. Expected 362, got 236
FAIL: Hand count after playing council_room was not correct. Expected 362, got 350
FAIL: Hand count after playing council_room was not correct. Expected 362, got 334
FAIL: Hand count after playing council_room was not correct. Expected 373, got 375
FAIL: Hand count after playing council_room was not correct. Expected 375, got 242
FAIL: Hand count after playing council_room was not correct. Expected 375, got 440
FAIL: Hand count after playing council_room was not correct. Expected 375, got 404
FAIL: Hand count after playing council_room was not correct. Expected 363, got 365
FAIL: Hand count after playing council_room was not correct. Expected 365, got 61
FAIL: Hand count after playing council_room was not correct. Expected 365, got 289
FAIL: Hand count after playing council_room was not correct. Expected 365, got 25
FAIL: Hand count after playing council_room was not correct. Expected 157, got 159
FAIL: Hand count after playing council_room was not correct. Expected 159, got 40
FAIL: Hand count after playing council_room was not correct. Expected 159, got 337
FAIL: Hand count after playing council_room was not correct. Expected 159, got 404
FAIL: Hand count after playing council_room was not correct. Expected 57, got 59
FAIL: Hand count after playing council_room was not correct. Expected 59, got 374
FAIL: Hand count after playing council_room was not correct. Expected 59, got 8
FAIL: Hand count after playing council_room was not correct. Expected 59, got 434
FAIL: Hand count after playing council_room was not correct. Expected 413, got 415
FAIL: Hand count after playing council_room was not correct. Expected 415, got 177
FAIL: Hand count after playing council_room was not correct. Expected 415, got 168
FAIL: Hand count after playing council_room was not correct. Expected 415, got 14
FAIL: Hand count after playing council_room was not correct. Expected 395, got 397
FAIL: Hand count after playing council_room was not correct. Expected 397, got 167
FAIL: Hand count after playing council_room was not correct. Expected 397, got 17
FAIL: Hand count after playing council_room was not correct. Expected 397, got 60
FAIL: Hand count after playing council_room was not correct. Expected 51, got 53
FAIL: Hand count after playing council_room was not correct. Expected 53, got 379
FAIL: Hand count after playing council_room was not correct. Expected 53, got 161
FAIL: Hand count after playing council_room was not correct. Expected 53, got 6
FAIL: Hand count after playing council_room was not correct. Expected 12, got 14
FAIL: Hand count after playing council_room was not correct. Expected 14, got 79
FAIL: Hand count after playing council_room was not correct. Expected 14, got 498
FAIL: Hand count after playing council_room was not correct. Expected 14, got 490
FAIL: Hand count after playing council_room was not correct. Expected 318, got 320
FAIL: Hand count after playing council_room was not correct. Expected 320, got 479
FAIL: Hand count after playing council_room was not correct. Expected 320, got 392
FAIL: Hand count after playing council_room was not correct. Expected 320, got 444
FAIL: Hand count after playing council_room was not correct. Expected 149, got 151
FAIL: Hand count after playing council_room was not correct. Expected 151, got 263
FAIL: Hand count after playing council_room was not correct. Expected 151, got 127
FAIL: Hand count after playing council_room was not correct. Expected 151, got 55
FAIL: Hand count after playing council_room was not correct. Expected 351, got 353
FAIL: Hand count after playing council_room was not correct. Expected 353, got 405
FAIL: Hand count after playing council_room was not correct. Expected 353, got 91
FAIL: Hand count after playing council_room was not correct. Expected 353, got 132
FAIL: Hand count after playing council_room was not correct. Expected 141, got 143
FAIL: Hand count after playing council_room was not correct. Expected 143, got 478
FAIL: Hand count after playing council_room was not correct. Expected 143, got 330
FAIL: Hand count after playing council_room was not correct. Expected 143, got 255
FAIL: Hand count after playing council_room was not correct. Expected 383, got 385
FAIL: Hand count after playing council_room was not correct. Expected 385, got 29
FAIL: Hand count after playing council_room was not correct. Expected 385, got 399
FAIL: Hand count after playing council_room was not correct. Expected 385, got 113
FAIL: Hand count after playing council_room was not correct. Expected 115, got 117
FAIL: Hand count after playing council_room was not correct. Expected 117, got 207
FAIL: Hand count after playing council_room was not correct. Expected 117, got 153
FAIL: Hand count after playing council_room was not correct. Expected 117, got 465
FAIL: Hand count after playing council_room was not correct. Expected 473, got 475
FAIL: Hand count after playing council_room was not correct. Expected 475, got 288
FAIL: Hand count after playing council_room was not correct. Expected 475, got 149
FAIL: Hand count after playing council_room was not correct. Expected 475, got 406
FAIL: Hand count after playing council_room was not correct. Expected 332, got 334
FAIL: Hand count after playing council_room was not correct. Expected 334, got 361
FAIL: Hand count after playing council_room was not correct. Expected 334, got 423
FAIL: Hand count after playing council_room was not correct. Expected 334, got 349
FAIL: Hand count after playing council_room was not correct. Expected 246, got 248
FAIL: Hand count after playing council_room was not correct. Expected 248, got 483
FAIL: Hand count after playing council_room was not correct. Expected 248, got 436
FAIL: Hand count after playing council_room was not correct. Expected 248, got 483
FAIL: Hand count after playing council_room was not correct. Expected 323, got 325
FAIL: Hand count after playing council_room was not correct. Expected 325, got 73
FAIL: Hand count after playing council_room was not correct. Expected 325, got 47
FAIL: Hand count after playing council_room was not correct. Expected 325, got 87
FAIL: Hand count after playing council_room was not correct. Expected 331, got 333
FAIL: Hand count after playing council_room was not correct. Expected 333, got 125
FAIL: Hand count after playing council_room was not correct. Expected 333, got 252
FAIL: Hand count after playing council_room was not correct. Expected 333, got 104
FAIL: Hand count after playing council_room was not correct. Expected 26, got 28
FAIL: Hand count after playing council_room was not correct. Expected 28, got 250
FAIL: Hand count after playing council_room was not correct. Expected 28, got 267
FAIL: Hand count after playing council_room was not correct. Expected 28, got 479
FAIL: Hand count after playing council_room was not correct. Expected 438, got 440
FAIL: Hand count after playing council_room was not correct. Expected 440, got 132
FAIL: Hand count after playing council_room was not correct. Expected 440, got 469
FAIL: Hand count after playing council_room was not correct. Expected 440, got 185
FAIL: Hand count after playing council_room was not correct. Expected 433, got 435
FAIL: Hand count after playing council_room was not correct. Expected 435, got 491
FAIL: Hand count after playing council_room was not correct. Expected 435, got 390
FAIL: Hand count after playing council_room was not correct. Expected 435, got 304
FAIL: Hand count after playing council_room was not correct. Expected 191, got 193
FAIL: Hand count after playing council_room was not correct. Expected 193, got 214
FAIL: Hand count after playing council_room was not correct. Expected 193, got 382
FAIL: Hand count after playing council_room was not correct. Expected 193, got 58
FAIL: Hand count after playing council_room was not correct. Expected 130, got 132
FAIL: Hand count after playing council_room was not correct. Expected 132, got 216
FAIL: Hand count after playing council_room was not correct. Expected 132, got 276
FAIL: Hand count after playing council_room was not correct. Expected 132, got 275
FAIL: Hand count after playing council_room was not correct. Expected 119, got 121
FAIL: Hand count after playing council_room was not correct. Expected 121, got 323
FAIL: Hand count after playing council_room was not correct. Expected 121, got 21
FAIL: Hand count after playing council_room was not correct. Expected 121, got 50
FAIL: Hand count after playing council_room was not correct. Expected 47, got 49
FAIL: Hand count after playing council_room was not correct. Expected 49, got 110
FAIL: Hand count after playing council_room was not correct. Expected 49, got 246
FAIL: Hand count after playing council_room was not correct. Expected 49, got 202
FAIL: Hand count after playing council_room was not correct. Expected 67, got 69
FAIL: Hand count after playing council_room was not correct. Expected 69, got 217
FAIL: Hand count after playing council_room was not correct. Expected 69, got 391
FAIL: Hand count after playing council_room was not correct. Expected 69, got 48
FAIL: Hand count after playing council_room was not correct. Expected 144, got 146
FAIL: Hand count after playing council_room was not correct. Expected 146, got 459
FAIL: Hand count after playing council_room was not correct. Expected 146, got 347
FAIL: Hand count after playing council_room was not correct. Expected 146, got 365
FAIL: Hand count after playing council_room was not correct. Expected 186, got 188
FAIL: Hand count after playing council_room was not correct. Expected 188, got 117
FAIL: Hand count after playing council_room was not correct. Expected 188, got 217
FAIL: Hand count after playing council_room was not correct. Expected 188, got 285
FAIL: Hand count after playing council_room was not correct. Expected 16, got 18
FAIL: Hand count after playing council_room was not correct. Expected 18, got 148
FAIL: Hand count after playing council_room was not correct. Expected 18, got 115
FAIL: Hand count after playing council_room was not correct. Expected 18, got 323
FAIL: Hand count after playing council_room was not correct. Expected 183, got 185
FAIL: Hand count after playing council_room was not correct. Expected 185, got 193
FAIL: Hand count after playing council_room was not correct. Expected 185, got 366
FAIL: Hand count after playing council_room was not correct. Expected 185, got 27
FAIL: Hand count after playing council_room was not correct. Expected 234, got 236
FAIL: Hand count after playing council_room was not correct. Expected 236, got 194
FAIL: Hand count after playing council_room was not correct. Expected 236, got 464
FAIL: Hand count after playing council_room was not correct. Expected 236, got 302
FAIL: Hand count after playing council_room was not correct. Expected 351, got 353
FAIL: Hand count after playing council_room was not correct. Expected 353, got 234
FAIL: Hand count after playing council_room was not correct. Expected 353, got 241
FAIL: Hand count after playing council_room was not correct. Expected 353, got 131
FAIL: Hand count after playing council_room was not correct. Expected 43, got 45
FAIL: Hand count after playing council_room was not correct. Expected 45, got 54
FAIL: Hand count after playing council_room was not correct. Expected 45, got 2
FAIL: Hand count after playing council_room was not correct. Expected 45, got 304
FAIL: Hand count after playing council_room was not correct. Expected 150, got 152
FAIL: Hand count after playing council_room was not correct. Expected 152, got 137
FAIL: Hand count after playing council_room was not correct. Expected 152, got 251
FAIL: Hand count after playing council_room was not correct. Expected 152, got 252
FAIL: Hand count after playing council_room was not correct. Expected 248, got 250
FAIL: Hand count after playing council_room was not correct. Expected 250, got 399
FAIL: Hand count after playing council_room was not correct. Expected 250, got 276
FAIL: Hand count after playing council_room was not correct. Expected 250, got 387
FAIL: Hand count after playing council_room was not correct. Expected 25, got 27
FAIL: Hand count after playing council_room was not correct. Expected 27, got 247
FAIL: Hand count after playing council_room was not correct. Expected 27, got 54
FAIL: Hand count after playing council_room was not correct. Expected 27, got 328
FAIL: Hand count after playing council_room was not correct. Expected 306, got 308
FAIL: Hand count after playing council_room was not correct. Expected 308, got 263
FAIL: Hand count after playing council_room was not correct. Expected 308, got 451
FAIL: Hand count after playing council_room was not correct. Expected 308, got 358
FAIL: Hand count after playing council_room was not correct. Expected 116, got 118
FAIL: Hand count after playing council_room was not correct. Expected 118, got 490
FAIL: Hand count after playing council_room was not correct. Expected 118, got 79
FAIL: Hand count after playing council_room was not correct. Expected 118, got 85
FAIL: Hand count after playing council_room was not correct. Expected 16, got 18
FAIL: Hand count after playing council_room was not correct. Expected 18, got 145
FAIL: Hand count after playing council_room was not correct. Expected 18, got 231
FAIL: Hand count after playing council_room was not correct. Expected 18, got 3
FAIL: Hand count after playing council_room was not correct. Expected 477, got 479
FAIL: Hand count after playing council_room was not correct. Expected 479, got 16
FAIL: Hand count after playing council_room was not correct. Expected 479, got 206
FAIL: Hand count after playing council_room was not correct. Expected 479, got 289
FAIL: Hand count after playing council_room was not correct. Expected 318, got 320
FAIL: Hand count after playing council_room was not correct. Expected 320, got 300
FAIL: Hand count after playing council_room was not correct. Expected 320, got 93
FAIL: Hand count after playing council_room was not correct. Expected 320, got 369
FAIL: Hand count after playing council_room was not correct. Expected 174, got 176
FAIL: Hand count after playing council_room was not correct. Expected 176, got 96
FAIL: Hand count after playing council_room was not correct. Expected 176, got 290
FAIL: Hand count after playing council_room was not correct. Expected 176, got 10
FAIL: Hand count after playing council_room was not correct. Expected 223, got 225
FAIL: Hand count after playing council_room was not correct. Expected 225, got 152
FAIL: Hand count after playing council_room was not correct. Expected 225, got 290
FAIL: Hand count after playing council_room was not correct. Expected 225, got 248
FAIL: Hand count after playing council_room was not correct. Expected 211, got 213
FAIL: Hand count after playing council_room was not correct. Expected 213, got 190
FAIL: Hand count after playing council_room was not correct. Expected 213, got 347
FAIL: Hand count after playing council_room was not correct. Expected 213, got 92
FAIL: Hand count after playing council_room was not correct. Expected 69, got 71
FAIL: Hand count after playing council_room was not correct. Expected 71, got 230
FAIL: Hand count after playing council_room was not correct. Expected 71, got 311
FAIL: Hand count after playing council_room was not correct. Expected 71, got 252
FAIL: Hand count after playing council_room was not correct. Expected 37, got 39
FAIL: Hand count after playing council_room was not correct. Expected 39, got 462
FAIL: Hand count after playing council_room was not correct. Expected 39, got 226
FAIL: Hand count after playing council_room was not correct. Expected 39, got 35
FAIL: Hand count after playing council_room was not correct. Expected 487, got 489
FAIL: Hand count after playing council_room was not correct. Expected 489, got 59
FAIL: Hand count after playing council_room was not correct. Expected 489, got 275
FAIL: Hand count after playing council_room was not correct. Expected 489, got 469
FAIL: Hand count after playing council_room was not correct. Expected 469, got 471
FAIL: Hand count after playing council_room was not correct. Expected 471, got 183
FAIL: Hand count after playing council_room was not correct. Expected 471, got 368
FAIL: Hand count after playing council_room was not correct. Expected 471, got 238
FAIL: Hand count after playing council_room was not correct. Expected 402, got 404
FAIL: Hand count after playing council_room was not correct. Expected 404, got 242
FAIL: Hand count after playing council_room was not correct. Expected 404, got 212
FAIL: Hand count after playing council_room was not correct. Expected 404, got 472
FAIL: Hand count after playing council_room was not correct. Expected 379, got 381
FAIL: Hand count after playing council_room was not correct. Expected 381, got 433
FAIL: Hand count after playing council_room was not correct. Expected 381, got 128
FAIL: Hand count after playing council_room was not correct. Expected 381, got 299
FAIL: Hand count after playing council_room was not correct. Expected 110, got 112
FAIL: Hand count after playing council_room was not correct. Expected 112, got 453
FAIL: Hand count after playing council_room was not correct. Expected 112, got 178
FAIL: Hand count after playing council_room was not correct. Expected 112, got 480
FAIL: Hand count after playing council_room was not correct. Expected 288, got 290
FAIL: Hand count after playing council_room was not correct. Expected 290, got 439
FAIL: Hand count after playing council_room was not correct. Expected 290, got 393
FAIL: Hand count after playing council_room was not correct. Expected 290, got 3
FAIL: Hand count after playing council_room was not correct. Expected 357, got 359
FAIL: Hand count after playing council_room was not correct. Expected 359, got 447
FAIL: Hand count after playing council_room was not correct. Expected 359, got 469
FAIL: Hand count after playing council_room was not correct. Expected 359, got 469
FAIL: Hand count after playing council_room was not correct. Expected 103, got 105
FAIL: Hand count after playing council_room was not correct. Expected 105, got 86
FAIL: Hand count after playing council_room was not correct. Expected 105, got 107
FAIL: Hand count after playing council_room was not correct. Expected 105, got 350
FAIL: Hand count after playing council_room was not correct. Expected 161, got 163
FAIL: Hand count after playing council_room was not correct. Expected 163, got 417
FAIL: Hand count after playing council_room was not correct. Expected 163, got 105
FAIL: Hand count after playing council_room was not correct. Expected 163, got 363
FAIL: Hand count after playing council_room was not correct. Expected 89, got 91
FAIL: Hand count after playing council_room was not correct. Expected 91, got 11
FAIL: Hand count after playing council_room was not correct. Expected 91, got 261
FAIL: Hand count after playing council_room was not correct. Expected 91, got 41
FAIL: Hand count after playing council_room was not correct. Expected 465, got 467
FAIL: Hand count after playing council_room was not correct. Expected 467, got 268
FAIL: Hand count after playing council_room was not correct. Expected 467, got 500
FAIL: Hand count after playing council_room was not correct. Expected 467, got 383
FAIL: Hand count after playing council_room was not correct. Expected 68, got 70
FAIL: Hand count after playing council_room was not correct. Expected 70, got 12
FAIL: Hand count after playing council_room was not correct. Expected 70, got 86
FAIL: Hand count after playing council_room was not correct. Expected 70, got 75
FAIL: Hand count after playing council_room was not correct. Expected 241, got 243
FAIL: Hand count after playing council_room was not correct. Expected 243, got 137
FAIL: Hand count after playing council_room was not correct. Expected 243, got 341
FAIL: Hand count after playing council_room was not correct. Expected 243, got 136
FAIL: Hand count after playing council_room was not correct. Expected 33, got 35
FAIL: Hand count after playing council_room was not correct. Expected 35, got 201
FAIL: Hand count after playing council_room was not correct. Expected 35, got 102
FAIL: Hand count after playing council_room was not correct. Expected 35, got 339
FAIL: Hand count after playing council_room was not correct. Expected 257, got 259
FAIL: Hand count after playing council_room was not correct. Expected 259, got 25
FAIL: Hand count after playing council_room was not correct. Expected 259, got 277
FAIL: Hand count after playing council_room was not correct. Expected 259, got 260
FAIL: Hand count after playing council_room was not correct. Expected 453, got 455
FAIL: Hand count after playing council_room was not correct. Expected 455, got 289
FAIL: Hand count after playing council_room was not correct. Expected 455, got 173
FAIL: Hand count after playing council_room was not correct. Expected 455, got 246
FAIL: Hand count after playing council_room was not correct. Expected 247, got 249
FAIL: Hand count after playing council_room was not correct. Expected 249, got 351
FAIL: Hand count after playing council_room was not correct. Expected 249, got 278
FAIL: Hand count after playing council_room was not correct. Expected 249, got 206
FAIL: Hand count after playing council_room was not correct. Expected 8, got 10
FAIL: Hand count after playing council_room was not correct. Expected 10, got 323
FAIL: Hand count after playing council_room was not correct. Expected 10, got 359
FAIL: Hand count after playing council_room was not correct. Expected 10, got 495
FAIL: Hand count after playing council_room was not correct. Expected 324, got 326
FAIL: Hand count after playing council_room was not correct. Expected 326, got 283
FAIL: Hand count after playing council_room was not correct. Expected 326, got 239
FAIL: Hand count after playing council_room was not correct. Expected 326, got 55
FAIL: Hand count after playing council_room was not correct. Expected 52, got 54
FAIL: Hand count after playing council_room was not correct. Expected 54, got 109
FAIL: Hand count after playing council_room was not correct. Expected 54, got 472
FAIL: Hand count after playing council_room was not correct. Expected 54, got 154
FAIL: Hand count after playing council_room was not correct. Expected 11, got 13
FAIL: Hand count after playing council_room was not correct. Expected 13, got 81
FAIL: Hand count after playing council_room was not correct. Expected 13, got 58
FAIL: Hand count after playing council_room was not correct. Expected 13, got 421
FAIL: Hand count after playing council_room was not correct. Expected 98, got 100
FAIL: Hand count after playing council_room was not correct. Expected 100, got 249
FAIL: Hand count after playing council_room was not correct. Expected 100, got 455
FAIL: Hand count after playing council_room was not correct. Expected 100, got 434
FAIL: Hand count after playing council_room was not correct. Expected 154, got 156
FAIL: Hand count after playing council_room was not correct. Expected 156, got 54
FAIL: Hand count after playing council_room was not correct. Expected 156, got 172
FAIL: Hand count after playing council_room was not correct. Expected 156, got 76
FAIL: Hand count after playing council_room was not correct. Expected 227, got 229
FAIL: Hand count after playing council_room was not correct. Expected 229, got 110
FAIL: Hand count after playing council_room was not correct. Expected 229, got 217
FAIL: Hand count after playing council_room was not correct. Expected 229, got 192
FAIL: Hand count after playing council_room was not correct. Expected 4, got 6
FAIL: Hand count after playing council_room was not correct. Expected 6, got 49
FAIL: Hand count after playing council_room was not correct. Expected 6, got 407
FAIL: Hand count after playing council_room was not correct. Expected 6, got 40
FAIL: Hand count after playing council_room was not correct. Expected 15, got 17
FAIL: Hand count after playing council_room was not correct. Expected 17, got 325
FAIL: Hand count after playing council_room was not correct. Expected 17, got 410
FAIL: Hand count after playing council_room was not correct. Expected 17, got 167
FAIL: Hand count after playing council_room was not correct. Expected 171, got 173
FAIL: Hand count after playing council_room was not correct. Expected 173, got 491
FAIL: Hand count after playing council_room was not correct. Expected 173, got 129
FAIL: Hand count after playing council_room was not correct. Expected 173, got 10
FAIL: Hand count after playing council_room was not correct. Expected 493, got 495
FAIL: Hand count after playing council_room was not correct. Expected 495, got 258
FAIL: Hand count after playing council_room was not correct. Expected 495, got 478
FAIL: Hand count after playing council_room was not correct. Expected 495, got 114
FAIL: Hand count after playing council_room was not correct. Expected 96, got 98
FAIL: Hand count after playing council_room was not correct. Expected 98, got 24
FAIL: Hand count after playing council_room was not correct. Expected 98, got 403
FAIL: Hand count after playing council_room was not correct. Expected 98, got 272
FAIL: Hand count after playing council_room was not correct. Expected 259, got 261
FAIL: Hand count after playing council_room was not correct. Expected 261, got 284
FAIL: Hand count after playing council_room was not correct. Expected 261, got 231
FAIL: Hand count after playing council_room was not correct. Expected 261, got 220
FAIL: Hand count after playing council_room was not correct. Expected 236, got 238
FAIL: Hand count after playing council_room was not correct. Expected 238, got 477
FAIL: Hand count after playing council_room was not correct. Expected 238, got 229
FAIL: Hand count after playing council_room was not correct. Expected 238, got 143
FAIL: Hand count after playing council_room was not correct. Expected 23, got 25
FAIL: Hand count after playing council_room was not correct. Expected 25, got 66
FAIL: Hand count after playing council_room was not correct. Expected 25, got 313
FAIL: Hand count after playing council_room was not correct. Expected 25, got 82
FAIL: Hand count after playing council_room was not correct. Expected 193, got 195
FAIL: Hand count after playing council_room was not correct. Expected 195, got 397
FAIL: Hand count after playing council_room was not correct. Expected 195, got 159
FAIL: Hand count after playing council_room was not correct. Expected 195, got 34
FAIL: Hand count after playing council_room was not correct. Expected 222, got 224
FAIL: Hand count after playing council_room was not correct. Expected 224, got 15
FAIL: Hand count after playing council_room was not correct. Expected 224, got 439
FAIL: Hand count after playing council_room was not correct. Expected 224, got 471
FAIL: Hand count after playing council_room was not correct. Expected 255, got 257
FAIL: Hand count after playing council_room was not correct. Expected 257, got 340
FAIL: Hand count after playing council_room was not correct. Expected 257, got 499
FAIL: Hand count after playing council_room was not correct. Expected 257, got 409
FAIL: Hand count after playing council_room was not correct. Expected 237, got 239
FAIL: Hand count after playing council_room was not correct. Expected 239, got 73
FAIL: Hand count after playing council_room was not correct. Expected 239, got 107
FAIL: Hand count after playing council_room was not correct. Expected 239, got 86
FAIL: Hand count after playing council_room was not correct. Expected 479, got 481
FAIL: Hand count after playing council_room was not correct. Expected 481, got 168
FAIL: Hand count after playing council_room was not correct. Expected 481, got 461
FAIL: Hand count after playing council_room was not correct. Expected 481, got 487
FAIL: Hand count after playing council_room was not correct. Expected 303, got 305
FAIL: Hand count after playing council_room was not correct. Expected 305, got 200
FAIL: Hand count after playing council_room was not correct. Expected 305, got 199
FAIL: Hand count after playing council_room was not correct. Expected 305, got 162
FAIL: Hand count after playing council_room was not correct. Expected 29, got 31
FAIL: Hand count after playing council_room was not correct. Expected 31, got 330
FAIL: Hand count after playing council_room was not correct. Expected 31, got 448
FAIL: Hand count after playing council_room was not correct. Expected 31, got 410
FAIL: Hand count after playing council_room was not correct. Expected 341, got 343
FAIL: Hand count after playing council_room was not correct. Expected 343, got 224
FAIL: Hand count after playing council_room was not correct. Expected 343, got 13
FAIL: Hand count after playing council_room was not correct. Expected 343, got 255
FAIL: Hand count after playing council_room was not correct. Expected 407, got 409
FAIL: Hand count after playing council_room was not correct. Expected 409, got 284
FAIL: Hand count after playing council_room was not correct. Expected 409, got 328
FAIL: Hand count after playing council_room was not correct. Expected 409, got 293
FAIL: Hand count after playing council_room was not correct. Expected 162, got 164
FAIL: Hand count after playing council_room was not correct. Expected 164, got 137
FAIL: Hand count after playing council_room was not correct. Expected 164, got 73
FAIL: Hand count after playing council_room was not correct. Expected 164, got 494
FAIL: Hand count after playing council_room was not correct. Expected 347, got 349
FAIL: Hand count after playing council_room was not correct. Expected 349, got 171
FAIL: Hand count after playing council_room was not correct. Expected 349, got 122
FAIL: Hand count after playing council_room was not correct. Expected 349, got 420
FAIL: Hand count after playing council_room was not correct. Expected 175, got 177
FAIL: Hand count after playing council_room was not correct. Expected 177, got 8
FAIL: Hand count after playing council_room was not correct. Expected 177, got 310
FAIL: Hand count after playing council_room was not correct. Expected 177, got 111
FAIL: Hand count after playing council_room was not correct. Expected 238, got 240
FAIL: Hand count after playing council_room was not correct. Expected 240, got 483
FAIL: Hand count after playing council_room was not correct. Expected 240, got 100
FAIL: Hand count after playing council_room was not correct. Expected 240, got 494
FAIL: Hand count after playing council_room was not correct. Expected 407, got 409
FAIL: Hand count after playing council_room was not correct. Expected 409, got 314
FAIL: Hand count after playing council_room was not correct. Expected 409, got 356
FAIL: Hand count after playing council_room was not correct. Expected 409, got 361
FAIL: Hand count after playing council_room was not correct. Expected 472, got 474
FAIL: Hand count after playing council_room was not correct. Expected 474, got 209
FAIL: Hand count after playing council_room was not correct. Expected 474, got 332
FAIL: Hand count after playing council_room was not correct. Expected 474, got 35
FAIL: Hand count after playing council_room was not correct. Expected 23, got 25
FAIL: Hand count after playing council_room was not correct. Expected 25, got 6
FAIL: Hand count after playing council_room was not correct. Expected 25, got 381
FAIL: Hand count after playing council_room was not correct. Expected 25, got 401
FAIL: Hand count after playing council_room was not correct. Expected 361, got 363
FAIL: Hand count after playing council_room was not correct. Expected 363, got 62
FAIL: Hand count after playing council_room was not correct. Expected 363, got 353
FAIL: Hand count after playing council_room was not correct. Expected 363, got 446
FAIL: Hand count after playing council_room was not correct. Expected 364, got 366
FAIL: Hand count after playing council_room was not correct. Expected 366, got 496
FAIL: Hand count after playing council_room was not correct. Expected 366, got 6
FAIL: Hand count after playing council_room was not correct. Expected 366, got 211
FAIL: Hand count after playing council_room was not correct. Expected 361, got 363
FAIL: Hand count after playing council_room was not correct. Expected 363, got 484
FAIL: Hand count after playing council_room was not correct. Expected 363, got 28
FAIL: Hand count after playing council_room was not correct. Expected 363, got 152
FAIL: Hand count after playing council_room was not correct. Expected 17, got 19
FAIL: Hand count after playing council_room was not correct. Expected 19, got 178
FAIL: Hand count after playing council_room was not correct. Expected 19, got 360
FAIL: Hand count after playing council_room was not correct. Expected 19, got 89
FAIL: Hand count after playing council_room was not correct. Expected 90, got 92
FAIL: Hand count after playing council_room was not correct. Expected 92, got 500
FAIL: Hand count after playing council_room was not correct. Expected 92, got 438
FAIL: Hand count after playing council_room was not correct. Expected 92, got 253
FAIL: Hand count after playing council_room was not correct. Expected 194, got 196
FAIL: Hand count after playing council_room was not correct. Expected 196, got 391
FAIL: Hand count after playing council_room was not correct. Expected 196, got 429
FAIL: Hand count after playing council_room was not correct. Expected 196, got 129
FAIL: Hand count after playing council_room was not correct. Expected 487, got 489
FAIL: Hand count after playing council_room was not correct. Expected 489, got 297
FAIL: Hand count after playing council_room was not correct. Expected 489, got 401
FAIL: Hand count after playing council_room was not correct. Expected 489, got 380
FAIL: Hand count after playing council_room was not correct. Expected 372, got 374
FAIL: Hand count after playing council_room was not correct. Expected 374, got 324
FAIL: Hand count after playing council_room was not correct. Expected 374, got 240
FAIL: Hand count after playing council_room was not correct. Expected 374, got 219
FAIL: Hand count after playing council_room was not correct. Expected 283, got 285
FAIL: Hand count after playing council_room was not correct. Expected 285, got 495
FAIL: Hand count after playing council_room was not correct. Expected 285, got 176
FAIL: Hand count after playing council_room was not correct. Expected 285, got 190
FAIL: Hand count after playing council_room was not correct. Expected 57, got 59
FAIL: Hand count after playing council_room was not correct. Expected 59, got 188
FAIL: Hand count after playing council_room was not correct. Expected 59, got 328
FAIL: Hand count after playing council_room was not correct. Expected 59, got 380
FAIL: Hand count after playing council_room was not correct. Expected 459, got 461
FAIL: Hand count after playing council_room was not correct. Expected 461, got 325
FAIL: Hand count after playing council_room was not correct. Expected 461, got 119
FAIL: Hand count after playing council_room was not correct. Expected 461, got 130
FAIL: Hand count after playing council_room was not correct. Expected 259, got 261
FAIL: Hand count after playing council_room was not correct. Expected 261, got 426
FAIL: Hand count after playing council_room was not correct. Expected 261, got 318
FAIL: Hand count after playing council_room was not correct. Expected 261, got 21
FAIL: Hand count after playing council_room was not correct. Expected 197, got 199
FAIL: Hand count after playing council_room was not correct. Expected 199, got 343
FAIL: Hand count after playing council_room was not correct. Expected 199, got 379
FAIL: Hand count after playing council_room was not correct. Expected 199, got 86
FAIL: Hand count after playing council_room was not correct. Expected 43, got 45
FAIL: Hand count after playing council_room was not correct. Expected 45, got 229
FAIL: Hand count after playing council_room was not correct. Expected 45, got 225
FAIL: Hand count after playing council_room was not correct. Expected 45, got 118
FAIL: Hand count after playing council_room was not correct. Expected 422, got 424
FAIL: Hand count after playing council_room was not correct. Expected 424, got 433
FAIL: Hand count after playing council_room was not correct. Expected 424, got 421
FAIL: Hand count after playing council_room was not correct. Expected 424, got 208
FAIL: Hand count after playing council_room was not correct. Expected 498, got 500
FAIL: Hand count after playing council_room was not correct. Expected 500, got 31
FAIL: Hand count after playing council_room was not correct. Expected 500, got 115
FAIL: Hand count after playing council_room was not correct. Expected 500, got 54
FAIL: Hand count after playing council_room was not correct. Expected 4, got 6
FAIL: Hand count after playing council_room was not correct. Expected 6, got 42
FAIL: Hand count after playing council_room was not correct. Expected 6, got 440
FAIL: Hand count after playing council_room was not correct. Expected 6, got 234
FAIL: Hand count after playing council_room was not correct. Expected 205, got 207
FAIL: Hand count after playing council_room was not correct. Expected 207, got 479
FAIL: Hand count after playing council_room was not correct. Expected 207, got 258
FAIL: Hand count after playing council_room was not correct. Expected 207, got 203
FAIL: Hand count after playing council_room was not correct. Expected 339, got 341
FAIL: Hand count after playing council_room was not correct. Expected 341, got 461
FAIL: Hand count after playing council_room was not correct. Expected 341, got 388
FAIL: Hand count after playing council_room was not correct. Expected 341, got 445
FAIL: Hand count after playing council_room was not correct. Expected 378, got 380
FAIL: Hand count after playing council_room was not correct. Expected 380, got 482
FAIL: Hand count after playing council_room was not correct. Expected 380, got 213
FAIL: Hand count after playing council_room was not correct. Expected 380, got 499
FAIL: Hand count after playing council_room was not correct. Expected 93, got 95
FAIL: Hand count after playing council_room was not correct. Expected 95, got 257
FAIL: Hand count after playing council_room was not correct. Expected 95, got 125
FAIL: Hand count after playing council_room was not correct. Expected 95, got 198
FAIL: Hand count after playing council_room was not correct. Expected 446, got 448
FAIL: Hand count after playing council_room was not correct. Expected 448, got 139
FAIL: Hand count after playing council_room was not correct. Expected 448, got 278
FAIL: Hand count after playing council_room was not correct. Expected 448, got 490
FAIL: Hand count after playing council_room was not correct. Expected 87, got 89
FAIL: Hand count after playing council_room was not correct. Expected 89, got 379
FAIL: Hand count after playing council_room was not correct. Expected 89, got 327
FAIL: Hand count after playing council_room was not correct. Expected 89, got 411
FAIL: Hand count after playing council_room was not correct. Expected 104, got 106
FAIL: Hand count after playing council_room was not correct. Expected 106, got 222
FAIL: Hand count after playing council_room was not correct. Expected 106, got 465
FAIL: Hand count after playing council_room was not correct. Expected 106, got 217
FAIL: Hand count after playing council_room was not correct. Expected 151, got 153
FAIL: Hand count after playing council_room was not correct. Expected 153, got 500
FAIL: Hand count after playing council_room was not correct. Expected 153, got 123
FAIL: Hand count after playing council_room was not correct. Expected 153, got 41
FAIL: Hand count after playing council_room was not correct. Expected 473, got 475
FAIL: Hand count after playing council_room was not correct. Expected 475, got 280
FAIL: Hand count after playing council_room was not correct. Expected 475, got 348
FAIL: Hand count after playing council_room was not correct. Expected 475, got 159
FAIL: Hand count after playing council_room was not correct. Expected 448, got 450
FAIL: Hand count after playing council_room was not correct. Expected 450, got 355
FAIL: Hand count after playing council_room was not correct. Expected 450, got 323
FAIL: Hand count after playing council_room was not correct. Expected 450, got 9
FAIL: Hand count after playing council_room was not correct. Expected 305, got 307
FAIL: Hand count after playing council_room was not correct. Expected 307, got 496
FAIL: Hand count after playing council_room was not correct. Expected 307, got 366
FAIL: Hand count after playing council_room was not correct. Expected 307, got 396
FAIL: Hand count after playing council_room was not correct. Expected 158, got 160
FAIL: Hand count after playing council_room was not correct. Expected 160, got 192
FAIL: Hand count after playing council_room was not correct. Expected 160, got 155
FAIL: Hand count after playing council_room was not correct. Expected 160, got 85
FAIL: Hand count after playing council_room was not correct. Expected 441, got 443
FAIL: Hand count after playing council_room was not correct. Expected 443, got 281
FAIL: Hand count after playing council_room was not correct. Expected 443, got 192
FAIL: Hand count after playing council_room was not correct. Expected 443, got 166
FAIL: Hand count after playing council_room was not correct. Expected 82, got 84
FAIL: Hand count after playing council_room was not correct. Expected 84, got 298
FAIL: Hand count after playing council_room was not correct. Expected 84, got 415
FAIL: Hand count after playing council_room was not correct. Expected 84, got 292
FAIL: Hand count after playing council_room was not correct. Expected 382, got 384
FAIL: Hand count after playing council_room was not correct. Expected 384, got 418
FAIL: Hand count after playing council_room was not correct. Expected 384, got 382
FAIL: Hand count after playing council_room was not correct. Expected 384, got 474
FAIL: Hand count after playing council_room was not correct. Expected 496, got 498
FAIL: Hand count after playing council_room was not correct. Expected 498, got 12
FAIL: Hand count after playing council_room was not correct. Expected 498, got 251
FAIL: Hand count after playing council_room was not correct. Expected 498, got 357
FAIL: Hand count after playing council_room was not correct. Expected 286, got 288
FAIL: Hand count after playing council_room was not correct. Expected 288, got 284
FAIL: Hand count after playing council_room was not correct. Expected 288, got 388
FAIL: Hand count after playing council_room was not correct. Expected 288, got 42
FAIL: Hand count after playing council_room was not correct. Expected 174, got 176
FAIL: Hand count after playing council_room was not correct. Expected 176, got 388
FAIL: Hand count after playing council_room was not correct. Expected 176, got 301
FAIL: Hand count after playing council_room was not correct. Expected 176, got 466
FAIL: Hand count after playing council_room was not correct. Expected 453, got 455
FAIL: Hand count after playing council_room was not correct. Expected 455, got 29
FAIL: Hand count after playing council_room was not correct. Expected 455, got 126
FAIL: Hand count after playing council_room was not correct. Expected 455, got 168
FAIL: Hand count after playing council_room was not correct. Expected 211, got 213
FAIL: Hand count after playing council_room was not correct. Expected 213, got 453
FAIL: Hand count after playing council_room was not correct. Expected 213, got 394
FAIL: Hand count after playing council_room was not correct. Expected 213, got 413
FAIL: Hand count after playing council_room was not correct. Expected 428, got 430
FAIL: Hand count after playing council_room was not correct. Expected 430, got 168
FAIL: Hand count after playing council_room was not correct. Expected 430, got 219
FAIL: Hand count after playing council_room was not correct. Expected 430, got 468
FAIL: Hand count after playing council_room was not correct. Expected 23, got 25
FAIL: Hand count after playing council_room was not correct. Expected 25, got 366
FAIL: Hand count after playing council_room was not correct. Expected 25, got 366
FAIL: Hand count after playing council_room was not correct. Expected 25, got 193
FAIL: Hand count after playing council_room was not correct. Expected 248, got 250
FAIL: Hand count after playing council_room was not correct. Expected 250, got 408
FAIL: Hand count after playing council_room was not correct. Expected 250, got 203
FAIL: Hand count after playing council_room was not correct. Expected 250, got 408
FAIL: Hand count after playing council_room was not correct. Expected 302, got 304
FAIL: Hand count after playing council_room was not correct. Expected 304, got 435
FAIL: Hand count after playing council_room was not correct. Expected 304, got 371
FAIL: Hand count after playing council_room was not correct. Expected 304, got 192
FAIL: Hand count after playing council_room was not correct. Expected 420, got 422
FAIL: Hand count after playing council_room was not correct. Expected 422, got 490
FAIL: Hand count after playing council_room was not correct. Expected 422, got 498
FAIL: Hand count after playing council_room was not correct. Expected 422, got 20
FAIL: Hand count after playing council_room was not correct. Expected 116, got 118
FAIL: Hand count after playing council_room was not correct. Expected 118, got 375
FAIL: Hand count after playing council_room was not correct. Expected 118, got 435
FAIL: Hand count after playing council_room was not correct. Expected 118, got 124
FAIL: Hand count after playing council_room was not correct. Expected 47, got 49
FAIL: Hand count after playing council_room was not correct. Expected 49, got 192
FAIL: Hand count after playing council_room was not correct. Expected 49, got 184
FAIL: Hand count after playing council_room was not correct. Expected 49, got 401
FAIL: Hand count after playing council_room was not correct. Expected 311, got 313
FAIL: Hand count after playing council_room was not correct. Expected 313, got 362
FAIL: Hand count after playing council_room was not correct. Expected 313, got 454
FAIL: Hand count after playing council_room was not correct. Expected 313, got 385
FAIL: Hand count after playing council_room was not correct. Expected 497, got 499
FAIL: Hand count after playing council_room was not correct. Expected 499, got 53
FAIL: Hand count after playing council_room was not correct. Expected 499, got 187
FAIL: Hand count after playing council_room was not correct. Expected 499, got 55
FAIL: Hand count after playing council_room was not correct. Expected 452, got 454
FAIL: Hand count after playing council_room was not correct. Expected 454, got 213
FAIL: Hand count after playing council_room was not correct. Expected 454, got 236
FAIL: Hand count after playing council_room was not correct. Expected 454, got 408
FAIL: Hand count after playing council_room was not correct. Expected 354, got 356
FAIL: Hand count after playing council_room was not correct. Expected 356, got 407
FAIL: Hand count after playing council_room was not correct. Expected 356, got 65
FAIL: Hand count after playing council_room was not correct. Expected 356, got 180
FAIL: Hand count after playing council_room was not correct. Expected 284, got 286
FAIL: Hand count after playing council_room was not correct. Expected 286, got 81
FAIL: Hand count after playing council_room was not correct. Expected 286, got 312
FAIL: Hand count after playing council_room was not correct. Expected 286, got 179
FAIL: Hand count after playing council_room was not correct. Expected 125, got 127
FAIL: Hand count after playing council_room was not correct. Expected 127, got 157
FAIL: Hand count after playing council_room was not correct. Expected 127, got 340
FAIL: Hand count after playing council_room was not correct. Expected 127, got 32
FAIL: Hand count after playing council_room was not correct. Expected 280, got 282
FAIL: Hand count after playing council_room was not correct. Expected 282, got 126
FAIL: Hand count after playing council_room was not correct. Expected 282, got 262
FAIL: Hand count after playing council_room was not correct. Expected 282, got 206
FAIL: Hand count after playing council_room was not correct. Expected 104, got 106
FAIL: Hand count after playing council_room was not correct. Expected 106, got 293
FAIL: Hand count after playing council_room was not correct. Expected 106, got 102
FAIL: Hand count after playing council_room was not correct. Expected 106, got 453
FAIL: Hand count after playing council_room was not correct. Expected 196, got 198
FAIL: Hand count after playing council_room was not correct. Expected 198, got 496
FAIL: Hand count after playing council_room was not correct. Expected 198, got 200
FAIL: Hand count after playing council_room was not correct. Expected 198, got 254
FAIL: Hand count after playing council_room was not correct. Expected 490, got 492
FAIL: Hand count after playing council_room was not correct. Expected 492, got 172
FAIL: Hand count after playing council_room was not correct. Expected 492, got 491
FAIL: Hand count after playing council_room was not correct. Expected 492, got 484
FAIL: Hand count after playing council_room was not correct. Expected 29, got 31
FAIL: Hand count after playing council_room was not correct. Expected 31, got 265
FAIL: Hand count after playing council_room was not correct. Expected 31, got 97
FAIL: Hand count after playing council_room was not correct. Expected 31, got 187
FAIL: Hand count after playing council_room was not correct. Expected 468, got 470
FAIL: Hand count after playing council_room was not correct. Expected 470, got 167
FAIL: Hand count after playing council_room was not correct. Expected 470, got 34
FAIL: Hand count after playing council_room was not correct. Expected 470, got 197
FAIL: Hand count after playing council_room was not correct. Expected 284, got 286
FAIL: Hand count after playing council_room was not correct. Expected 286, got 265
FAIL: Hand count after playing council_room was not correct. Expected 286, got 402
FAIL: Hand count after playing council_room was not correct. Expected 286, got 240
FAIL: Hand count after playing council_room was not correct. Expected 379, got 381
FAIL: Hand count after playing council_room was not correct. Expected 381, got 82
FAIL: Hand count after playing council_room was not correct. Expected 381, got 362
FAIL: Hand count after playing council_room was not correct. Expected 381, got 212
FAIL: Hand count after playing council_room was not correct. Expected 144, got 146
FAIL: Hand count after playing council_room was not correct. Expected 146, got 474
FAIL: Hand count after playing council_room was not correct. Expected 146, got 419
FAIL: Hand count after playing council_room was not correct. Expected 146, got 338
FAIL: Hand count after playing council_room was not correct. Expected 13, got 15
FAIL: Hand count after playing council_room was not correct. Expected 15, got 420
FAIL: Hand count after playing council_room was not correct. Expected 15, got 405
FAIL: Hand count after playing council_room was not correct. Expected 15, got 166
FAIL: Hand count after playing council_room was not correct. Expected 40, got 42
FAIL: Hand count after playing council_room was not correct. Expected 42, got 435
FAIL: Hand count after playing council_room was not correct. Expected 42, got 128
FAIL: Hand count after playing council_room was not correct. Expected 42, got 393
FAIL: Hand count after playing council_room was not correct. Expected 443, got 445
FAIL: Hand count after playing council_room was not correct. Expected 445, got 140
FAIL: Hand count after playing council_room was not correct. Expected 445, got 269
FAIL: Hand count after playing council_room was not correct. Expected 445, got 321
FAIL: Hand count after playing council_room was not correct. Expected 158, got 160
FAIL: Hand count after playing council_room was not correct. Expected 160, got 243
FAIL: Hand count after playing council_room was not correct. Expected 160, got 423
FAIL: Hand count after playing council_room was not correct. Expected 160, got 159
FAIL: Hand count after playing council_room was not correct. Expected 35, got 37
FAIL: Hand count after playing council_room was not correct. Expected 37, got 240
FAIL: Hand count after playing council_room was not correct. Expected 37, got 344
FAIL: Hand count after playing council_room was not correct. Expected 37, got 49
FAIL: Hand count after playing council_room was not correct. Expected 10, got 12
FAIL: Hand count after playing council_room was not correct. Expected 12, got 38
FAIL: Hand count after playing council_room was not correct. Expected 12, got 18
FAIL: Hand count after playing council_room was not correct. Expected 12, got 488
FAIL: Hand count after playing council_room was not correct. Expected 258, got 260
FAIL: Hand count after playing council_room was not correct. Expected 260, got 227
FAIL: Hand count after playing council_room was not correct. Expected 260, got 55
FAIL: Hand count after playing council_room was not correct. Expected 260, got 153
FAIL: Hand count after playing council_room was not correct. Expected 203, got 205
FAIL: Hand count after playing council_room was not correct. Expected 205, got 406
FAIL: Hand count after playing council_room was not correct. Expected 205, got 337
FAIL: Hand count after playing council_room was not correct. Expected 205, got 302
FAIL: Hand count after playing council_room was not correct. Expected 79, got 81
FAIL: Hand count after playing council_room was not correct. Expected 81, got 46
FAIL: Hand count after playing council_room was not correct. Expected 81, got 111
FAIL: Hand count after playing council_room was not correct. Expected 81, got 42
FAIL: Hand count after playing council_room was not correct. Expected 109, got 111
FAIL: Hand count after playing council_room was not correct. Expected 111, got 432
FAIL: Hand count after playing council_room was not correct. Expected 111, got 47
FAIL: Hand count after playing council_room was not correct. Expected 111, got 87
FAIL: Hand count after playing council_room was not correct. Expected 287, got 289
FAIL: Hand count after playing council_room was not correct. Expected 289, got 310
FAIL: Hand count after playing council_room was not correct. Expected 289, got 138
FAIL: Hand count after playing council_room was not correct. Expected 289, got 20
FAIL: Hand count after playing council_room was not correct. Expected 212, got 214
FAIL: Hand count after playing council_room was not correct. Expected 214, got 422
FAIL: Hand count after playing council_room was not correct. Expected 214, got 264
FAIL: Hand count after playing council_room was not correct. Expected 214, got 410
FAIL: Hand count after playing council_room was not correct. Expected 393, got 395
FAIL: Hand count after playing council_room was not correct. Expected 395, got 468
FAIL: Hand count after playing council_room was not correct. Expected 395, got 30
FAIL: Hand count after playing council_room was not correct. Expected 395, got 225
FAIL: Hand count after playing council_room was not correct. Expected 73, got 75
FAIL: Hand count after playing council_room was not correct. Expected 75, got 175
FAIL: Hand count after playing council_room was not correct. Expected 75, got 307
FAIL: Hand count after playing council_room was not correct. Expected 75, got 36
FAIL: Hand count after playing council_room was not correct. Expected 192, got 194
FAIL: Hand count after playing council_room was not correct. Expected 194, got 158
FAIL: Hand count after playing council_room was not correct. Expected 194, got 436
FAIL: Hand count after playing council_room was not correct. Expected 194, got 114
FAIL: Hand count after playing council_room was not correct. Expected 482, got 484
FAIL: Hand count after playing council_room was not correct. Expected 484, got 61
FAIL: Hand count after playing council_room was not correct. Expected 484, got 277
FAIL: Hand count after playing council_room was not correct. Expected 484, got 184
FAIL: Hand count after playing council_room was not correct. Expected 476, got 478
FAIL: Hand count after playing council_room was not correct. Expected 478, got 167
FAIL: Hand count after playing council_room was not correct. Expected 478, got 192
FAIL: Hand count after playing council_room was not correct. Expected 478, got 258
FAIL: Hand count after playing council_room was not correct. Expected 457, got 459
FAIL: Hand count after playing council_room was not correct. Expected 459, got 184
FAIL: Hand count after playing council_room was not correct. Expected 459, got 71
FAIL: Hand count after playing council_room was not correct. Expected 459, got 331
FAIL: Hand count after playing council_room was not correct. Expected 217, got 219
FAIL: Hand count after playing council_room was not correct. Expected 219, got 373
FAIL: Hand count after playing council_room was not correct. Expected 219, got 28
FAIL: Hand count after playing council_room was not correct. Expected 219, got 109
FAIL: Hand count after playing council_room was not correct. Expected 187, got 189
FAIL: Hand count after playing council_room was not correct. Expected 189, got 487
FAIL: Hand count after playing council_room was not correct. Expected 189, got 227
FAIL: Hand count after playing council_room was not correct. Expected 189, got 65
FAIL: Hand count after playing council_room was not correct. Expected 429, got 431
FAIL: Hand count after playing council_room was not correct. Expected 431, got 423
FAIL: Hand count after playing council_room was not correct. Expected 431, got 216
FAIL: Hand count after playing council_room was not correct. Expected 431, got 220
FAIL: Hand count after playing council_room was not correct. Expected 155, got 157
FAIL: Hand count after playing council_room was not correct. Expected 157, got 463
FAIL: Hand count after playing council_room was not correct. Expected 157, got 384
FAIL: Hand count after playing council_room was not correct. Expected 157, got 421
FAIL: Hand count after playing council_room was not correct. Expected 214, got 216
FAIL: Hand count after playing council_room was not correct. Expected 216, got 443
FAIL: Hand count after playing council_room was not correct. Expected 216, got 153
FAIL: Hand count after playing council_room was not correct. Expected 216, got 394
FAIL: Hand count after playing council_room was not correct. Expected 277, got 279
FAIL: Hand count after playing council_room was not correct. Expected 279, got 206
FAIL: Hand count after playing council_room was not correct. Expected 279, got 157
FAIL: Hand count after playing council_room was not correct. Expected 279, got 268
FAIL: Hand count after playing council_room was not correct. Expected 17, got 19
FAIL: Hand count after playing council_room was not correct. Expected 19, got 34
FAIL: Hand count after playing council_room was not correct. Expected 19, got 57
FAIL: Hand count after playing council_room was not correct. Expected 19, got 367
FAIL: Hand count after playing council_room was not correct. Expected 20, got 22
FAIL: Hand count after playing council_room was not correct. Expected 22, got 197
FAIL: Hand count after playing council_room was not correct. Expected 22, got 90
FAIL: Hand count after playing council_room was not correct. Expected 22, got 44
FAIL: Hand count after playing council_room was not correct. Expected 315, got 317
FAIL: Hand count after playing council_room was not correct. Expected 317, got 51
FAIL: Hand count after playing council_room was not correct. Expected 317, got 78
FAIL: Hand count after playing council_room was not correct. Expected 317, got 329
FAIL: Hand count after playing council_room was not correct. Expected 138, got 140
FAIL: Hand count after playing council_room was not correct. Expected 140, got 376
FAIL: Hand count after playing council_room was not correct. Expected 140, got 128
FAIL: Hand count after playing council_room was not correct. Expected 140, got 76
FAIL: Hand count after playing council_room was not correct. Expected 260, got 262
FAIL: Hand count after playing council_room was not correct. Expected 262, got 216
FAIL: Hand count after playing council_room was not correct. Expected 262, got 318
FAIL: Hand count after playing council_room was not correct. Expected 262, got 84
FAIL: Hand count after playing council_room was not correct. Expected 462, got 464
FAIL: Hand count after playing council_room was not correct. Expected 464, got 150
FAIL: Hand count after playing council_room was not correct. Expected 464, got 222
FAIL: Hand count after playing council_room was not correct. Expected 464, got 211
FAIL: Hand count after playing council_room was not correct. Expected 337, got 339
FAIL: Hand count after playing council_room was not correct. Expected 339, got 39
FAIL: Hand count after playing council_room was not correct. Expected 339, got 43
FAIL: Hand count after playing council_room was not correct. Expected 339, got 70
FAIL: Hand count after playing council_room was not correct. Expected 348, got 350
FAIL: Hand count after playing council_room was not correct. Expected 350, got 400
FAIL: Hand count after playing council_room was not correct. Expected 350, got 221
FAIL: Hand count after playing council_room was not correct. Expected 350, got 122
FAIL: Hand count after playing council_room was not correct. Expected 170, got 172
FAIL: Hand count after playing council_room was not correct. Expected 172, got 185
FAIL: Hand count after playing council_room was not correct. Expected 172, got 394
FAIL: Hand count after playing council_room was not correct. Expected 172, got 280
FAIL: Hand count after playing council_room was not correct. Expected 385, got 387
FAIL: Hand count after playing council_room was not correct. Expected 387, got 46
FAIL: Hand count after playing council_room was not correct. Expected 387, got 146
FAIL: Hand count after playing council_room was not correct. Expected 387, got 159
FAIL: Hand count after playing council_room was not correct. Expected 237, got 239
FAIL: Hand count after playing council_room was not correct. Expected 239, got 142
FAIL: Hand count after playing council_room was not correct. Expected 239, got 239
FAIL: Hand count after playing council_room was not correct. Expected 239, got 251
FAIL: Hand count after playing council_room was not correct. Expected 229, got 231
FAIL: Hand count after playing council_room was not correct. Expected 231, got 150
FAIL: Hand count after playing council_room was not correct. Expected 231, got 229
FAIL: Hand count after playing council_room was not correct. Expected 231, got 116
FAIL: Hand count after playing council_room was not correct. Expected 140, got 142
FAIL: Hand count after playing council_room was not correct. Expected 142, got 378
FAIL: Hand count after playing council_room was not correct. Expected 142, got 8
FAIL: Hand count after playing council_room was not correct. Expected 142, got 465
FAIL: Hand count after playing council_room was not correct. Expected 303, got 305
FAIL: Hand count after playing council_room was not correct. Expected 305, got 64
FAIL: Hand count after playing council_room was not correct. Expected 305, got 383
FAIL: Hand count after playing council_room was not correct. Expected 305, got 304
FAIL: Hand count after playing council_room was not correct. Expected 180, got 182
FAIL: Hand count after playing council_room was not correct. Expected 182, got 54
FAIL: Hand count after playing council_room was not correct. Expected 182, got 454
FAIL: Hand count after playing council_room was not correct. Expected 182, got 167
FAIL: Hand count after playing council_room was not correct. Expected 105, got 107
FAIL: Hand count after playing council_room was not correct. Expected 107, got 451
FAIL: Hand count after playing council_room was not correct. Expected 107, got 214
FAIL: Hand count after playing council_room was not correct. Expected 107, got 83
FAIL: Hand count after playing council_room was not correct. Expected 144, got 146
FAIL: Hand count after playing council_room was not correct. Expected 146, got 354
FAIL: Hand count after playing council_room was not correct. Expected 146, got 276
FAIL: Hand count after playing council_room was not correct. Expected 146, got 205
FAIL: Hand count after playing council_room was not correct. Expected 27, got 29
FAIL: Hand count after playing council_room was not correct. Expected 29, got 453
FAIL: Hand count after playing council_room was not correct. Expected 29, got 317
FAIL: Hand count after playing council_room was not correct. Expected 29, got 465
FAIL: Hand count after playing council_room was not correct. Expected 131, got 133
FAIL: Hand count after playing council_room was not correct. Expected 133, got 1
FAIL: Hand count after playing council_room was not correct. Expected 133, got 179
FAIL: Hand count after playing council_room was not correct. Expected 133, got 209
FAIL: Hand count after playing council_room was not correct. Expected 433, got 435
FAIL: Hand count after playing council_room was not correct. Expected 435, got 19
FAIL: Hand count after playing council_room was not correct. Expected 435, got 279
FAIL: Hand count after playing council_room was not correct. Expected 435, got 158
FAIL: Hand count after playing council_room was not correct. Expected 228, got 230
FAIL: Hand count after playing council_room was not correct. Expected 230, got 482
FAIL: Hand count after playing council_room was not correct. Expected 230, got 286
FAIL: Hand count after playing council_room was not correct. Expected 230, got 45
FAIL: Hand count after playing council_room was not correct. Expected 173, got 175
FAIL: Hand count after playing council_room was not correct. Expected 175, got 425
FAIL: Hand count after playing council_room was not correct. Expected 175, got 245
FAIL: Hand count after playing council_room was not correct. Expected 175, got 428
FAIL: Hand count after playing council_room was not correct. Expected 370, got 372
FAIL: Hand count after playing council_room was not correct. Expected 372, got 29
FAIL: Hand count after playing council_room was not correct. Expected 372, got 28
FAIL: Hand count after playing council_room was not correct. Expected 372, got 34
FAIL: Hand count after playing council_room was not correct. Expected 233, got 235
FAIL: Hand count after playing council_room was not correct. Expected 235, got 388
FAIL: Hand count after playing council_room was not correct. Expected 235, got 275
FAIL: Hand count after playing council_room was not correct. Expected 235, got 172
FAIL: Hand count after playing council_room was not correct. Expected 161, got 163
FAIL: Hand count after playing council_room was not correct. Expected 163, got 118
FAIL: Hand count after playing council_room was not correct. Expected 163, got 238
FAIL: Hand count after playing council_room was not correct. Expected 163, got 186
FAIL: Hand count after playing council_room was not correct. Expected 277, got 279
FAIL: Hand count after playing council_room was not correct. Expected 279, got 450
FAIL: Hand count after playing council_room was not correct. Expected 279, got 324
FAIL: Hand count after playing council_room was not correct. Expected 279, got 303
FAIL: Hand count after playing council_room was not correct. Expected 203, got 205
FAIL: Hand count after playing council_room was not correct. Expected 205, got 407
FAIL: Hand count after playing council_room was not correct. Expected 205, got 308
FAIL: Hand count after playing council_room was not correct. Expected 205, got 163
FAIL: Hand count after playing council_room was not correct. Expected 498, got 500
FAIL: Hand count after playing council_room was not correct. Expected 500, got 276
FAIL: Hand count after playing council_room was not correct. Expected 500, got 114
FAIL: Hand count after playing council_room was not correct. Expected 500, got 115
FAIL: Hand count after playing council_room was not correct. Expected 232, got 234
FAIL: Hand count after playing council_room was not correct. Expected 234, got 330
FAIL: Hand count after playing council_room was not correct. Expected 234, got 437
FAIL: Hand count after playing council_room was not correct. Expected 234, got 240
FAIL: Hand count after playing council_room was not correct. Expected 269, got 271
FAIL: Hand count after playing council_room was not correct. Expected 271, got 51
FAIL: Hand count after playing council_room was not correct. Expected 271, got 247
FAIL: Hand count after playing council_room was not correct. Expected 271, got 3
FAIL: Hand count after playing council_room was not correct. Expected 242, got 244
FAIL: Hand count after playing council_room was not correct. Expected 244, got 74
FAIL: Hand count after playing council_room was not correct. Expected 244, got 368
FAIL: Hand count after playing council_room was not correct. Expected 244, got 210
FAIL: Hand count after playing council_room was not correct. Expected 387, got 389
FAIL: Hand count after playing council_room was not correct. Expected 389, got 382
FAIL: Hand count after playing council_room was not correct. Expected 389, got 441
FAIL: Hand count after playing council_room was not correct. Expected 389, got 4
FAIL: Hand count after playing council_room was not correct. Expected 161, got 163
FAIL: Hand count after playing council_room was not correct. Expected 163, got 235
FAIL: Hand count after playing council_room was not correct. Expected 163, got 394
FAIL: Hand count after playing council_room was not correct. Expected 163, got 436
FAIL: Hand count after playing council_room was not correct. Expected 76, got 78
FAIL: Hand count after playing council_room was not correct. Expected 78, got 182
FAIL: Hand count after playing council_room was not correct. Expected 78, got 475
FAIL: Hand count after playing council_room was not correct. Expected 78, got 412
FAIL: Hand count after playing council_room was not correct. Expected 497, got 499
FAIL: Hand count after playing council_room was not correct. Expected 499, got 177
FAIL: Hand count after playing council_room was not correct. Expected 499, got 427
FAIL: Hand count after playing council_room was not correct. Expected 499, got 144
FAIL: Hand count after playing council_room was not correct. Expected 135, got 137
FAIL: Hand count after playing council_room was not correct. Expected 137, got 372
FAIL: Hand count after playing council_room was not correct. Expected 137, got 389
FAIL: Hand count after playing council_room was not correct. Expected 137, got 327
FAIL: Hand count after playing council_room was not correct. Expected 180, got 182
FAIL: Hand count after playing council_room was not correct. Expected 182, got 229
FAIL: Hand count after playing council_room was not correct. Expected 182, got 39
FAIL: Hand count after playing council_room was not correct. Expected 182, got 12
FAIL: Hand count after playing council_room was not correct. Expected 448, got 450
FAIL: Hand count after playing council_room was not correct. Expected 450, got 94
FAIL: Hand count after playing council_room was not correct. Expected 450, got 446
FAIL: Hand count after playing council_room was not correct. Expected 450, got 459
FAIL: Hand count after playing council_room was not correct. Expected 225, got 227
FAIL: Hand count after playing council_room was not correct. Expected 227, got 469
FAIL: Hand count after playing council_room was not correct. Expected 227, got 146
FAIL: Hand count after playing council_room was not correct. Expected 227, got 449
FAIL: Hand count after playing council_room was not correct. Expected 455, got 457
FAIL: Hand count after playing council_room was not correct. Expected 457, got 480
FAIL: Hand count after playing council_room was not correct. Expected 457, got 419
FAIL: Hand count after playing council_room was not correct. Expected 457, got 303
FAIL: Hand count after playing council_room was not correct. Expected 82, got 84
FAIL: Hand count after playing council_room was not correct. Expected 84, got 433
FAIL: Hand count after playing council_room was not correct. Expected 84, got 135
FAIL: Hand count after playing council_room was not correct. Expected 84, got 133
FAIL: Hand count after playing council_room was not correct. Expected 143, got 145
FAIL: Hand count after playing council_room was not correct. Expected 145, got 473
FAIL: Hand count after playing council_room was not correct. Expected 145, got 38
FAIL: Hand count after playing council_room was not correct. Expected 145, got 95
FAIL: Hand count after playing council_room was not correct. Expected 46, got 48
FAIL: Hand count after playing council_room was not correct. Expected 48, got 242
FAIL: Hand count after playing council_room was not correct. Expected 48, got 81
FAIL: Hand count after playing council_room was not correct. Expected 48, got 497
FAIL: Hand count after playing council_room was not correct. Expected 372, got 374
FAIL: Hand count after playing council_room was not correct. Expected 374, got 494
FAIL: Hand count after playing council_room was not correct. Expected 374, got 172
FAIL: Hand count after playing council_room was not correct. Expected 374, got 76
FAIL: Hand count after playing council_room was not correct. Expected 181, got 183
FAIL: Hand count after playing council_room was not correct. Expected 183, got 9
FAIL: Hand count after playing council_room was not correct. Expected 183, got 69
FAIL: Hand count after playing council_room was not correct. Expected 183, got 194
FAIL: Hand count after playing council_room was not correct. Expected 191, got 193
FAIL: Hand count after playing council_room was not correct. Expected 193, got 368
FAIL: Hand count after playing council_room was not correct. Expected 193, got 71
FAIL: Hand count after playing council_room was not correct. Expected 193, got 218
FAIL: Hand count after playing council_room was not correct. Expected 292, got 294
FAIL: Hand count after playing council_room was not correct. Expected 294, got 189
FAIL: Hand count after playing council_room was not correct. Expected 294, got 64
FAIL: Hand count after playing council_room was not correct. Expected 294, got 164
FAIL: Hand count after playing council_room was not correct. Expected 369, got 371
FAIL: Hand count after playing council_room was not correct. Expected 371, got 146
FAIL: Hand count after playing council_room was not correct. Expected 371, got 29
FAIL: Hand count after playing council_room was not correct. Expected 371, got 210
FAIL: Hand count after playing council_room was not correct. Expected 169, got 171
FAIL: Hand count after playing council_room was not correct. Expected 171, got 443
FAIL: Hand count after playing council_room was not correct. Expected 171, got 243
FAIL: Hand count after playing council_room was not correct. Expected 171, got 454
FAIL: Hand count after playing council_room was not correct. Expected 56, got 58
FAIL: Hand count after playing council_room was not correct. Expected 58, got 403
FAIL: Hand count after playing council_room was not correct. Expected 58, got 475
FAIL: Hand count after playing council_room was not correct. Expected 58, got 313
FAIL: Hand count after playing council_room was not correct. Expected 451, got 453
FAIL: Hand count after playing council_room was not correct. Expected 453, got 86
FAIL: Hand count after playing council_room was not correct. Expected 453, got 295
FAIL: Hand count after playing council_room was not correct. Expected 453, got 79
FAIL: Hand count after playing council_room was not correct. Expected 57, got 59
FAIL: Hand count after playing council_room was not correct. Expected 59, got 288
FAIL: Hand count after playing council_room was not correct. Expected 59, got 313
FAIL: Hand count after playing council_room was not correct. Expected 59, got 168
FAIL: Hand count after playing council_room was not correct. Expected 430, got 432
FAIL: Hand count after playing council_room was not correct. Expected 432, got 417
FAIL: Hand count after playing council_room was not correct. Expected 432, got 20
FAIL: Hand count after playing council_room was not correct. Expected 432, got 482
FAIL: Hand count after playing council_room was not correct. Expected 96, got 98
FAIL: Hand count after playing council_room was not correct. Expected 98, got 152
FAIL: Hand count after playing council_room was not correct. Expected 98, got 20
FAIL: Hand count after playing council_room was not correct. Expected 98, got 494
FAIL: Hand count after playing council_room was not correct. Expected 29, got 31
FAIL: Hand count after playing council_room was not correct. Expected 31, got 130
FAIL: Hand count after playing council_room was not correct. Expected 31, got 212
FAIL: Hand count after playing council_room was not correct. Expected 31, got 16
FAIL: Hand count after playing council_room was not correct. Expected 42, got 44
FAIL: Hand count after playing council_room was not correct. Expected 44, got 113
FAIL: Hand count after playing council_room was not correct. Expected 44, got 170
FAIL: Hand count after playing council_room was not correct. Expected 44, got 3
FAIL: Hand count after playing council_room was not correct. Expected 376, got 378
FAIL: Hand count after playing council_room was not correct. Expected 378, got 297
FAIL: Hand count after playing council_room was not correct. Expected 378, got 341
FAIL: Hand count after playing council_room was not correct. Expected 378, got 252
FAIL: Hand count after playing council_room was not correct. Expected 395, got 397
FAIL: Hand count after playing council_room was not correct. Expected 397, got 49
FAIL: Hand count after playing council_room was not correct. Expected 397, got 499
FAIL: Hand count after playing council_room was not correct. Expected 397, got 493
FAIL: Hand count after playing council_room was not correct. Expected 488, got 490
FAIL: Hand count after playing council_room was not correct. Expected 490, got 27
FAIL: Hand count after playing council_room was not correct. Expected 490, got 101
FAIL: Hand count after playing council_room was not correct. Expected 490, got 71
FAIL: Hand count after playing council_room was not correct. Expected 99, got 101
FAIL: Hand count after playing council_room was not correct. Expected 101, got 325
FAIL: Hand count after playing council_room was not correct. Expected 101, got 126
FAIL: Hand count after playing council_room was not correct. Expected 101, got 83
FAIL: Hand count after playing council_room was not correct. Expected 195, got 197
FAIL: Hand count after playing council_room was not correct. Expected 197, got 14
FAIL: Hand count after playing council_room was not correct. Expected 197, got 467
FAIL: Hand count after playing council_room was not correct. Expected 197, got 493
FAIL: Hand count after playing council_room was not correct. Expected 445, got 447
FAIL: Hand count after playing council_room was not correct. Expected 447, got 456
FAIL: Hand count after playing council_room was not correct. Expected 447, got 443
FAIL: Hand count after playing council_room was not correct. Expected 447, got 321
FAIL: Hand count after playing council_room was not correct. Expected 402, got 404
FAIL: Hand count after playing council_room was not correct. Expected 404, got 403
FAIL: Hand count after playing council_room was not correct. Expected 404, got 184
FAIL: Hand count after playing council_room was not correct. Expected 404, got 357
FAIL: Hand count after playing council_room was not correct. Expected 167, got 169
FAIL: Hand count after playing council_room was not correct. Expected 169, got 440
FAIL: Hand count after playing council_room was not correct. Expected 169, got 53
FAIL: Hand count after playing council_room was not correct. Expected 169, got 86
FAIL: Hand count after playing council_room was not correct. Expected 148, got 150
FAIL: Hand count after playing council_room was not correct. Expected 150, got 152
FAIL: Hand count after playing council_room was not correct. Expected 150, got 187
FAIL: Hand count after playing council_room was not correct. Expected 150, got 205
FAIL: Hand count after playing council_room was not correct. Expected 303, got 305
FAIL: Hand count after playing council_room was not correct. Expected 305, got 441
FAIL: Hand count after playing council_room was not correct. Expected 305, got 442
FAIL: Hand count after playing council_room was not correct. Expected 305, got 35
FAIL: Hand count after playing council_room was not correct. Expected 482, got 484
FAIL: Hand count after playing council_room was not correct. Expected 484, got 346
FAIL: Hand count after playing council_room was not correct. Expected 484, got 451
FAIL: Hand count after playing council_room was not correct. Expected 484, got 125
FAIL: Hand count after playing council_room was not correct. Expected 235, got 237
FAIL: Hand count after playing council_room was not correct. Expected 237, got 121
FAIL: Hand count after playing council_room was not correct. Expected 237, got 389
FAIL: Hand count after playing council_room was not correct. Expected 237, got 405
FAIL: Hand count after playing council_room was not correct. Expected 338, got 340
FAIL: Hand count after playing council_room was not correct. Expected 340, got 435
FAIL: Hand count after playing council_room was not correct. Expected 340, got 498
FAIL: Hand count after playing council_room was not correct. Expected 340, got 420
FAIL: Hand count after playing council_room was not correct. Expected 194, got 196
FAIL: Hand count after playing council_room was not correct. Expected 196, got 255
FAIL: Hand count after playing council_room was not correct. Expected 196, got 332
FAIL: Hand count after playing council_room was not correct. Expected 196, got 25
FAIL: Hand count after playing council_room was not correct. Expected 62, got 64
FAIL: Hand count after playing council_room was not correct. Expected 64, got 290
FAIL: Hand count after playing council_room was not correct. Expected 64, got 42
FAIL: Hand count after playing council_room was not correct. Expected 64, got 96
FAIL: Hand count after playing council_room was not correct. Expected 85, got 87
FAIL: Hand count after playing council_room was not correct. Expected 87, got 224
FAIL: Hand count after playing council_room was not correct. Expected 87, got 227
FAIL: Hand count after playing council_room was not correct. Expected 87, got 340
FAIL: Hand count after playing council_room was not correct. Expected 67, got 69
FAIL: Hand count after playing council_room was not correct. Expected 69, got 477
FAIL: Hand count after playing council_room was not correct. Expected 69, got 130
FAIL: Hand count after playing council_room was not correct. Expected 69, got 423
FAIL: Hand count after playing council_room was not correct. Expected 447, got 449
FAIL: Hand count after playing council_room was not correct. Expected 449, got 93
FAIL: Hand count after playing council_room was not correct. Expected 449, got 316
FAIL: Hand count after playing council_room was not correct. Expected 449, got 36
FAIL: Hand count after playing council_room was not correct. Expected 219, got 221
FAIL: Hand count after playing council_room was not correct. Expected 221, got 462
FAIL: Hand count after playing council_room was not correct. Expected 221, got 26
FAIL: Hand count after playing council_room was not correct. Expected 221, got 246
FAIL: Hand count after playing council_room was not correct. Expected 442, got 444
FAIL: Hand count after playing council_room was not correct. Expected 444, got 405
FAIL: Hand count after playing council_room was not correct. Expected 444, got 286
FAIL: Hand count after playing council_room was not correct. Expected 444, got 473
FAIL: Hand count after playing council_room was not correct. Expected 477, got 479
FAIL: Hand count after playing council_room was not correct. Expected 479, got 196
FAIL: Hand count after playing council_room was not correct. Expected 479, got 446
FAIL: Hand count after playing council_room was not correct. Expected 479, got 119
FAIL: Hand count after playing council_room was not correct. Expected 12, got 14
FAIL: Hand count after playing council_room was not correct. Expected 14, got 249
FAIL: Hand count after playing council_room was not correct. Expected 14, got 1
FAIL: Hand count after playing council_room was not correct. Expected 14, got 346
FAIL: Hand count after playing council_room was not correct. Expected 244, got 246
FAIL: Hand count after playing council_room was not correct. Expected 246, got 196
FAIL: Hand count after playing council_room was not correct. Expected 246, got 323
FAIL: Hand count after playing council_room was not correct. Expected 246, got 128
FAIL: Hand count after playing council_room was not correct. Expected 317, got 319
FAIL: Hand count after playing council_room was not correct. Expected 319, got 66
FAIL: Hand count after playing council_room was not correct. Expected 319, got 244
FAIL: Hand count after playing council_room was not correct. Expected 319, got 202
FAIL: Hand count after playing council_room was not correct. Expected 197, got 199
FAIL: Hand count after playing council_room was not correct. Expected 199, got 104
FAIL: Hand count after playing council_room was not correct. Expected 199, got 488
FAIL: Hand count after playing council_room was not correct. Expected 199, got 442
FAIL: Hand count after playing council_room was not correct. Expected 479, got 481
FAIL: Hand count after playing council_room was not correct. Expected 481, got 438
FAIL: Hand count after playing council_room was not correct. Expected 481, got 436
FAIL: Hand count after playing council_room was not correct. Expected 481, got 313
FAIL: Hand count after playing council_room was not correct. Expected 427, got 429
FAIL: Hand count after playing council_room was not correct. Expected 429, got 246
FAIL: Hand count after playing council_room was not correct. Expected 429, got 3
FAIL: Hand count after playing council_room was not correct. Expected 429, got 144
FAIL: Hand count after playing council_room was not correct. Expected 327, got 329
FAIL: Hand count after playing council_room was not correct. Expected 329, got 281
FAIL: Hand count after playing council_room was not correct. Expected 329, got 412
FAIL: Hand count after playing council_room was not correct. Expected 329, got 15
FAIL: Hand count after playing council_room was not correct. Expected 264, got 266
FAIL: Hand count after playing council_room was not correct. Expected 266, got 434
FAIL: Hand count after playing council_room was not correct. Expected 266, got 208
FAIL: Hand count after playing council_room was not correct. Expected 266, got 335
FAIL: Hand count after playing council_room was not correct. Expected 148, got 150
FAIL: Hand count after playing council_room was not correct. Expected 150, got 82
FAIL: Hand count after playing council_room was not correct. Expected 150, got 93
FAIL: Hand count after playing council_room was not correct. Expected 150, got 142
FAIL: Hand count after playing council_room was not correct. Expected 18, got 20
FAIL: Hand count after playing council_room was not correct. Expected 20, got 252
FAIL: Hand count after playing council_room was not correct. Expected 20, got 169
FAIL: Hand count after playing council_room was not correct. Expected 20, got 353
FAIL: Hand count after playing council_room was not correct. Expected 312, got 314
FAIL: Hand count after playing council_room was not correct. Expected 314, got 258
FAIL: Hand count after playing council_room was not correct. Expected 314, got 223
FAIL: Hand count after playing council_room was not correct. Expected 314, got 150
FAIL: Hand count after playing council_room was not correct. Expected 347, got 349
FAIL: Hand count after playing council_room was not correct. Expected 349, got 80
FAIL: Hand count after playing council_room was not correct. Expected 349, got 423
FAIL: Hand count after playing council_room was not correct. Expected 349, got 476
FAIL: Hand count after playing council_room was not correct. Expected 321, got 323
FAIL: Hand count after playing council_room was not correct. Expected 323, got 379
FAIL: Hand count after playing council_room was not correct. Expected 323, got 394
FAIL: Hand count after playing council_room was not correct. Expected 323, got 174
FAIL: Hand count after playing council_room was not correct. Expected 162, got 164
FAIL: Hand count after playing council_room was not correct. Expected 164, got 68
FAIL: Hand count after playing council_room was not correct. Expected 164, got 137
FAIL: Hand count after playing council_room was not correct. Expected 164, got 455
FAIL: Hand count after playing council_room was not correct. Expected 140, got 142
FAIL: Hand count after playing council_room was not correct. Expected 142, got 291
FAIL: Hand count after playing council_room was not correct. Expected 142, got 40
FAIL: Hand count after playing council_room was not correct. Expected 142, got 339
FAIL: Hand count after playing council_room was not correct. Expected 495, got 497
FAIL: Hand count after playing council_room was not correct. Expected 497, got 62
FAIL: Hand count after playing council_room was not correct. Expected 497, got 260
FAIL: Hand count after playing council_room was not correct. Expected 497, got 111
FAIL: Hand count after playing council_room was not correct. Expected 259, got 261
FAIL: Hand count after playing council_room was not correct. Expected 261, got 382
FAIL: Hand count after playing council_room was not correct. Expected 261, got 208
FAIL: Hand count after playing council_room was not correct. Expected 261, got 312
FAIL: Hand count after playing council_room was not correct. Expected 124, got 126
FAIL: Hand count after playing council_room was not correct. Expected 126, got 169
FAIL: Hand count after playing council_room was not correct. Expected 126, got 258
FAIL: Hand count after playing council_room was not correct. Expected 126, got 153
FAIL: Hand count after playing council_room was not correct. Expected 235, got 237
FAIL: Hand count after playing council_room was not correct. Expected 237, got 77
FAIL: Hand count after playing council_room was not correct. Expected 237, got 401
FAIL: Hand count after playing council_room was not correct. Expected 237, got 117
FAIL: Hand count after playing council_room was not correct. Expected 66, got 68
FAIL: Hand count after playing council_room was not correct. Expected 68, got 453
FAIL: Hand count after playing council_room was not correct. Expected 68, got 90
FAIL: Hand count after playing council_room was not correct. Expected 68, got 145
FAIL: Hand count after playing council_room was not correct. Expected 275, got 277
FAIL: Hand count after playing council_room was not correct. Expected 277, got 431
FAIL: Hand count after playing council_room was not correct. Expected 277, got 72
FAIL: Hand count after playing council_room was not correct. Expected 277, got 38
FAIL: Hand count after playing council_room was not correct. Expected 15, got 17
FAIL: Hand count after playing council_room was not correct. Expected 17, got 60
FAIL: Hand count after playing council_room was not correct. Expected 17, got 393
FAIL: Hand count after playing council_room was not correct. Expected 17, got 345
FAIL: Hand count after playing council_room was not correct. Expected 203, got 205
FAIL: Hand count after playing council_room was not correct. Expected 205, got 150
FAIL: Hand count after playing council_room was not correct. Expected 205, got 110
FAIL: Hand count after playing council_room was not correct. Expected 205, got 88
FAIL: Hand count after playing council_room was not correct. Expected 206, got 208
FAIL: Hand count after playing council_room was not correct. Expected 208, got 448
FAIL: Hand count after playing council_room was not correct. Expected 208, got 381
FAIL: Hand count after playing council_room was not correct. Expected 208, got 462
FAIL: Hand count after playing council_room was not correct. Expected 147, got 149
FAIL: Hand count after playing council_room was not correct. Expected 149, got 217
FAIL: Hand count after playing council_room was not correct. Expected 149, got 119
FAIL: Hand count after playing council_room was not correct. Expected 149, got 1
FAIL: Hand count after playing council_room was not correct. Expected 417, got 419
FAIL: Hand count after playing council_room was not correct. Expected 419, got 296
FAIL: Hand count after playing council_room was not correct. Expected 419, got 487
FAIL: Hand count after playing council_room was not correct. Expected 419, got 106
FAIL: Hand count after playing council_room was not correct. Expected 479, got 481
FAIL: Hand count after playing council_room was not correct. Expected 481, got 368
FAIL: Hand count after playing council_room was not correct. Expected 481, got 82
FAIL: Hand count after playing council_room was not correct. Expected 481, got 90
FAIL: Hand count after playing council_room was not correct. Expected 161, got 163
FAIL: Hand count after playing council_room was not correct. Expected 163, got 487
FAIL: Hand count after playing council_room was not correct. Expected 163, got 111
FAIL: Hand count after playing council_room was not correct. Expected 163, got 65
FAIL: Hand count after playing council_room was not correct. Expected 213, got 215
FAIL: Hand count after playing council_room was not correct. Expected 215, got 208
FAIL: Hand count after playing council_room was not correct. Expected 215, got 193
FAIL: Hand count after playing council_room was not correct. Expected 215, got 416
FAIL: Hand count after playing council_room was not correct. Expected 60, got 62
FAIL: Hand count after playing council_room was not correct. Expected 62, got 463
FAIL: Hand count after playing council_room was not correct. Expected 62, got 235
FAIL: Hand count after playing council_room was not correct. Expected 62, got 17
FAIL: Hand count after playing council_room was not correct. Expected 35, got 37
FAIL: Hand count after playing council_room was not correct. Expected 37, got 246
FAIL: Hand count after playing council_room was not correct. Expected 37, got 128
FAIL: Hand count after playing council_room was not correct. Expected 37, got 441
FAIL: Hand count after playing council_room was not correct. Expected 446, got 448
FAIL: Hand count after playing council_room was not correct. Expected 448, got 3
FAIL: Hand count after playing council_room was not correct. Expected 448, got 482
FAIL: Hand count after playing council_room was not correct. Expected 448, got 150
FAIL: Hand count after playing council_room was not correct. Expected 452, got 454
FAIL: Hand count after playing council_room was not correct. Expected 454, got 320
FAIL: Hand count after playing council_room was not correct. Expected 454, got 332
FAIL: Hand count after playing council_room was not correct. Expected 454, got 443
FAIL: Hand count after playing council_room was not correct. Expected 497, got 499
FAIL: Hand count after playing council_room was not correct. Expected 499, got 304
FAIL: Hand count after playing council_room was not correct. Expected 499, got 495
FAIL: Hand count after playing council_room was not correct. Expected 499, got 409
FAIL: Hand count after playing council_room was not correct. Expected 467, got 469
FAIL: Hand count after playing council_room was not correct. Expected 469, got 293
FAIL: Hand count after playing council_room was not correct. Expected 469, got 211
FAIL: Hand count after playing council_room was not correct. Expected 469, got 121
FAIL: Hand count after playing council_room was not correct. Expected 152, got 154
FAIL: Hand count after playing council_room was not correct. Expected 154, got 464
FAIL: Hand count after playing council_room was not correct. Expected 154, got 123
FAIL: Hand count after playing council_room was not correct. Expected 154, got 406
FAIL: Hand count after playing council_room was not correct. Expected 158, got 160
FAIL: Hand count after playing council_room was not correct. Expected 160, got 72
FAIL: Hand count after playing council_room was not correct. Expected 160, got 373
FAIL: Hand count after playing council_room was not correct. Expected 160, got 72
FAIL: Hand count after playing council_room was not correct. Expected 360, got 362
FAIL: Hand count after playing council_room was not correct. Expected 362, got 274
FAIL: Hand count after playing council_room was not correct. Expected 362, got 58
FAIL: Hand count after playing council_room was not correct. Expected 362, got 21
FAIL: Hand count after playing council_room was not correct. Expected 121, got 123
FAIL: Hand count after playing council_room was not correct. Expected 123, got 291
FAIL: Hand count after playing council_room was not correct. Expected 123, got 141
FAIL: Hand count after playing council_room was not correct. Expected 123, got 488
FAIL: Hand count after playing council_room was not correct. Expected 402, got 404
FAIL: Hand count after playing council_room was not correct. Expected 404, got 218
FAIL: Hand count after playing council_room was not correct. Expected 404, got 260
FAIL: Hand count after playing council_room was not correct. Expected 404, got 334
FAIL: Hand count after playing council_room was not correct. Expected 126, got 128
FAIL: Hand count after playing council_room was not correct. Expected 128, got 435
FAIL: Hand count after playing council_room was not correct. Expected 128, got 408
FAIL: Hand count after playing council_room was not correct. Expected 128, got 346
FAIL: Hand count after playing council_room was not correct. Expected 368, got 370
FAIL: Hand count after playing council_room was not correct. Expected 370, got 310
FAIL: Hand count after playing council_room was not correct. Expected 370, got 90
FAIL: Hand count after playing council_room was not correct. Expected 370, got 226
FAIL: Hand count after playing council_room was not correct. Expected 284, got 286
FAIL: Hand count after playing council_room was not correct. Expected 286, got 274
FAIL: Hand count after playing council_room was not correct. Expected 286, got 49
FAIL: Hand count after playing council_room was not correct. Expected 286, got 500
FAIL: Hand count after playing council_room was not correct. Expected 306, got 308
FAIL: Hand count after playing council_room was not correct. Expected 308, got 382
FAIL: Hand count after playing council_room was not correct. Expected 308, got 162
FAIL: Hand count after playing council_room was not correct. Expected 308, got 275
FAIL: Hand count after playing council_room was not correct. Expected 331, got 333
FAIL: Hand count after playing council_room was not correct. Expected 333, got 100
FAIL: Hand count after playing council_room was not correct. Expected 333, got 240
FAIL: Hand count after playing council_room was not correct. Expected 333, got 171
FAIL: Hand count after playing council_room was not correct. Expected 359, got 361
FAIL: Hand count after playing council_room was not correct. Expected 361, got 461
FAIL: Hand count after playing council_room was not correct. Expected 361, got 270
FAIL: Hand count after playing council_room was not correct. Expected 361, got 362
FAIL: Hand count after playing council_room was not correct. Expected 302, got 304
FAIL: Hand count after playing council_room was not correct. Expected 304, got 321
FAIL: Hand count after playing council_room was not correct. Expected 304, got 242
FAIL: Hand count after playing council_room was not correct. Expected 304, got 488
FAIL: Hand count after playing council_room was not correct. Expected 261, got 263
FAIL: Hand count after playing council_room was not correct. Expected 263, got 126
FAIL: Hand count after playing council_room was not correct. Expected 263, got 369
FAIL: Hand count after playing council_room was not correct. Expected 263, got 167
FAIL: Hand count after playing council_room was not correct. Expected 468, got 470
FAIL: Hand count after playing council_room was not correct. Expected 470, got 161
FAIL: Hand count after playing council_room was not correct. Expected 470, got 102
FAIL: Hand count after playing council_room was not correct. Expected 470, got 494
FAIL: Hand count after playing council_room was not correct. Expected 375, got 377
FAIL: Hand count after playing council_room was not correct. Expected 377, got 21
FAIL: Hand count after playing council_room was not correct. Expected 377, got 273
FAIL: Hand count after playing council_room was not correct. Expected 377, got 483
FAIL: Hand count after playing council_room was not correct. Expected 437, got 439
FAIL: Hand count after playing council_room was not correct. Expected 439, got 2
FAIL: Hand count after playing council_room was not correct. Expected 439, got 86
FAIL: Hand count after playing council_room was not correct. Expected 439, got 133
FAIL: Hand count after playing council_room was not correct. Expected 249, got 251
FAIL: Hand count after playing council_room was not correct. Expected 251, got 204
FAIL: Hand count after playing council_room was not correct. Expected 251, got 122
FAIL: Hand count after playing council_room was not correct. Expected 251, got 183
FAIL: Hand count after playing council_room was not correct. Expected 456, got 458
FAIL: Hand count after playing council_room was not correct. Expected 458, got 440
FAIL: Hand count after playing council_room was not correct. Expected 458, got 493
FAIL: Hand count after playing council_room was not correct. Expected 458, got 476
FAIL: Hand count after playing council_room was not correct. Expected 37, got 39
FAIL: Hand count after playing council_room was not correct. Expected 39, got 349
FAIL: Hand count after playing council_room was not correct. Expected 39, got 195
FAIL: Hand count after playing council_room was not correct. Expected 39, got 180
FAIL: Hand count after playing council_room was not correct. Expected 79, got 81
FAIL: Hand count after playing council_room was not correct. Expected 81, got 285
FAIL: Hand count after playing council_room was not correct. Expected 81, got 396
FAIL: Hand count after playing council_room was not correct. Expected 81, got 24
FAIL: Hand count after playing council_room was not correct. Expected 304, got 306
FAIL: Hand count after playing council_room was not correct. Expected 306, got 259
FAIL: Hand count after playing council_room was not correct. Expected 306, got 116
FAIL: Hand count after playing council_room was not correct. Expected 306, got 102
FAIL: Hand count after playing council_room was not correct. Expected 254, got 256
FAIL: Hand count after playing council_room was not correct. Expected 256, got 283
FAIL: Hand count after playing council_room was not correct. Expected 256, got 184
FAIL: Hand count after playing council_room was not correct. Expected 256, got 269
FAIL: Hand count after playing council_room was not correct. Expected 429, got 431
FAIL: Hand count after playing council_room was not correct. Expected 431, got 106
FAIL: Hand count after playing council_room was not correct. Expected 431, got 341
FAIL: Hand count after playing council_room was not correct. Expected 431, got 232
FAIL: Hand count after playing council_room was not correct. Expected 6, got 8
FAIL: Hand count after playing council_room was not correct. Expected 8, got 173
FAIL: Hand count after playing council_room was not correct. Expected 8, got 347
FAIL: Hand count after playing council_room was not correct. Expected 8, got 489
FAIL: Hand count after playing council_room was not correct. Expected 66, got 68
FAIL: Hand count after playing council_room was not correct. Expected 68, got 276
FAIL: Hand count after playing council_room was not correct. Expected 68, got 175
FAIL: Hand count after playing council_room was not correct. Expected 68, got 224
FAIL: Hand count after playing council_room was not correct. Expected 27, got 29
FAIL: Hand count after playing council_room was not correct. Expected 29, got 347
FAIL: Hand count after playing council_room was not correct. Expected 29, got 310
FAIL: Hand count after playing council_room was not correct. Expected 29, got 83
FAIL: Hand count after playing council_room was not correct. Expected 220, got 222
FAIL: Hand count after playing council_room was not correct. Expected 222, got 266
FAIL: Hand count after playing council_room was not correct. Expected 222, got 455
FAIL: Hand count after playing council_room was not correct. Expected 222, got 403
FAIL: Hand count after playing council_room was not correct. Expected 345, got 347
FAIL: Hand count after playing council_room was not correct. Expected 347, got 455
FAIL: Hand count after playing council_room was not correct. Expected 347, got 50
FAIL: Hand count after playing council_room was not correct. Expected 347, got 204
FAIL: Hand count after playing council_room was not correct. Expected 362, got 364
FAIL: Hand count after playing council_room was not correct. Expected 364, got 276
FAIL: Hand count after playing council_room was not correct. Expected 364, got 138
FAIL: Hand count after playing council_room was not correct. Expected 364, got 293
FAIL: Hand count after playing council_room was not correct. Expected 337, got 339
FAIL: Hand count after playing council_room was not correct. Expected 339, got 290
FAIL: Hand count after playing council_room was not correct. Expected 339, got 50
FAIL: Hand count after playing council_room was not correct. Expected 339, got 61
FAIL: Hand count after playing council_room was not correct. Expected 303, got 305
FAIL: Hand count after playing council_room was not correct. Expected 305, got 99
FAIL: Hand count after playing council_room was not correct. Expected 305, got 464
FAIL: Hand count after playing council_room was not correct. Expected 305, got 351
FAIL: Hand count after playing council_room was not correct. Expected 359, got 361
FAIL: Hand count after playing council_room was not correct. Expected 361, got 73
FAIL: Hand count after playing council_room was not correct. Expected 361, got 487
FAIL: Hand count after playing council_room was not correct. Expected 361, got 321
FAIL: Hand count after playing council_room was not correct. Expected 316, got 318
FAIL: Hand count after playing council_room was not correct. Expected 318, got 230
FAIL: Hand count after playing council_room was not correct. Expected 318, got 283
FAIL: Hand count after playing council_room was not correct. Expected 318, got 350
FAIL: Hand count after playing council_room was not correct. Expected 268, got 270
FAIL: Hand count after playing council_room was not correct. Expected 270, got 298
FAIL: Hand count after playing council_room was not correct. Expected 270, got 402
FAIL: Hand count after playing council_room was not correct. Expected 270, got 359
FAIL: Hand count after playing council_room was not correct. Expected 102, got 104
FAIL: Hand count after playing council_room was not correct. Expected 104, got 113
FAIL: Hand count after playing council_room was not correct. Expected 104, got 204
FAIL: Hand count after playing council_room was not correct. Expected 104, got 106
FAIL: Hand count after playing council_room was not correct. Expected 150, got 152
FAIL: Hand count after playing council_room was not correct. Expected 152, got 373
FAIL: Hand count after playing council_room was not correct. Expected 152, got 182
FAIL: Hand count after playing council_room was not correct. Expected 152, got 244
FAIL: Hand count after playing council_room was not correct. Expected 413, got 415
FAIL: Hand count after playing council_room was not correct. Expected 415, got 270
FAIL: Hand count after playing council_room was not correct. Expected 415, got 453
FAIL: Hand count after playing council_room was not correct. Expected 415, got 436
FAIL: Hand count after playing council_room was not correct. Expected 168, got 170
FAIL: Hand count after playing council_room was not correct. Expected 170, got 169
FAIL: Hand count after playing council_room was not correct. Expected 170, got 310
FAIL: Hand count after playing council_room was not correct. Expected 170, got 317
FAIL: Hand count after playing council_room was not correct. Expected 400, got 402
FAIL: Hand count after playing council_room was not correct. Expected 402, got 32
FAIL: Hand count after playing council_room was not correct. Expected 402, got 69
FAIL: Hand count after playing council_room was not correct. Expected 402, got 322
FAIL: Hand count after playing council_room was not correct. Expected 404, got 406
FAIL: Hand count after playing council_room was not correct. Expected 406, got 314
FAIL: Hand count after playing council_room was not correct. Expected 406, got 401
FAIL: Hand count after playing council_room was not correct. Expected 406, got 234
FAIL: Hand count after playing council_room was not correct. Expected 423, got 425
FAIL: Hand count after playing council_room was not correct. Expected 425, got 491
FAIL: Hand count after playing council_room was not correct. Expected 425, got 313
FAIL: Hand count after playing council_room was not correct. Expected 425, got 142
FAIL: Hand count after playing council_room was not correct. Expected 162, got 164
FAIL: Hand count after playing council_room was not correct. Expected 164, got 186
FAIL: Hand count after playing council_room was not correct. Expected 164, got 228
FAIL: Hand count after playing council_room was not correct. Expected 164, got 348
FAIL: Hand count after playing council_room was not correct. Expected 464, got 466
FAIL: Hand count after playing council_room was not correct. Expected 466, got 124
FAIL: Hand count after playing council_room was not correct. Expected 466, got 224
FAIL: Hand count after playing council_room was not correct. Expected 466, got 54
FAIL: Hand count after playing council_room was not correct. Expected 205, got 207
FAIL: Hand count after playing council_room was not correct. Expected 207, got 291
FAIL: Hand count after playing council_room was not correct. Expected 207, got 442
FAIL: Hand count after playing council_room was not correct. Expected 207, got 164
FAIL: Hand count after playing council_room was not correct. Expected 198, got 200
FAIL: Hand count after playing council_room was not correct. Expected 200, got 334
FAIL: Hand count after playing council_room was not correct. Expected 200, got 123
FAIL: Hand count after playing council_room was not correct. Expected 200, got 170
FAIL: Hand count after playing council_room was not correct. Expected 360, got 362
FAIL: Hand count after playing council_room was not correct. Expected 362, got 121
FAIL: Hand count after playing council_room was not correct. Expected 362, got 433
FAIL: Hand count after playing council_room was not correct. Expected 362, got 498
FAIL: Hand count after playing council_room was not correct. Expected 418, got 420
FAIL: Hand count after playing council_room was not correct. Expected 420, got 440
FAIL: Hand count after playing council_room was not correct. Expected 420, got 334
FAIL: Hand count after playing council_room was not correct. Expected 420, got 275
FAIL: Hand count after playing council_room was not correct. Expected 127, got 129
FAIL: Hand count after playing council_room was not correct. Expected 129, got 54
FAIL: Hand count after playing council_room was not correct. Expected 129, got 332
FAIL: Hand count after playing council_room was not correct. Expected 129, got 314
FAIL: Hand count after playing council_room was not correct. Expected 241, got 243
FAIL: Hand count after playing council_room was not correct. Expected 243, got 17
FAIL: Hand count after playing council_room was not correct. Expected 243, got 102
FAIL: Hand count after playing council_room was not correct. Expected 243, got 59
FAIL: Hand count after playing council_room was not correct. Expected 460, got 462
FAIL: Hand count after playing council_room was not correct. Expected 462, got 220
FAIL: Hand count after playing council_room was not correct. Expected 462, got 274
FAIL: Hand count after playing council_room was not correct. Expected 462, got 85
FAIL: Hand count after playing council_room was not correct. Expected 358, got 360
FAIL: Hand count after playing council_room was not correct. Expected 360, got 391
FAIL: Hand count after playing council_room was not correct. Expected 360, got 175
FAIL: Hand count after playing council_room was not correct. Expected 360, got 131
FAIL: Hand count after playing council_room was not correct. Expected 94, got 96
FAIL: Hand count after playing council_room was not correct. Expected 96, got 231
FAIL: Hand count after playing council_room was not correct. Expected 96, got 52
FAIL: Hand count after playing council_room was not correct. Expected 96, got 479
FAIL: Hand count after playing council_room was not correct. Expected 453, got 455
FAIL: Hand count after playing council_room was not correct. Expected 455, got 49
FAIL: Hand count after playing council_room was not correct. Expected 455, got 447
FAIL: Hand count after playing council_room was not correct. Expected 455, got 355
FAIL: Hand count after playing council_room was not correct. Expected 128, got 130
FAIL: Hand count after playing council_room was not correct. Expected 130, got 99
FAIL: Hand count after playing council_room was not correct. Expected 130, got 106
FAIL: Hand count after playing council_room was not correct. Expected 130, got 208
FAIL: Hand count after playing council_room was not correct. Expected 455, got 457
FAIL: Hand count after playing council_room was not correct. Expected 457, got 92
FAIL: Hand count after playing council_room was not correct. Expected 457, got 453
FAIL: Hand count after playing council_room was not correct. Expected 457, got 316
FAIL: Hand count after playing council_room was not correct. Expected 66, got 68
FAIL: Hand count after playing council_room was not correct. Expected 68, got 42
FAIL: Hand count after playing council_room was not correct. Expected 68, got 269
FAIL: Hand count after playing council_room was not correct. Expected 68, got 228
FAIL: Hand count after playing council_room was not correct. Expected 448, got 450
FAIL: Hand count after playing council_room was not correct. Expected 450, got 3
FAIL: Hand count after playing council_room was not correct. Expected 450, got 499
FAIL: Hand count after playing council_room was not correct. Expected 450, got 114
FAIL: Hand count after playing council_room was not correct. Expected 479, got 481
FAIL: Hand count after playing council_room was not correct. Expected 481, got 293
FAIL: Hand count after playing council_room was not correct. Expected 481, got 350
FAIL: Hand count after playing council_room was not correct. Expected 481, got 344
FAIL: Hand count after playing council_room was not correct. Expected 397, got 399
FAIL: Hand count after playing council_room was not correct. Expected 399, got 450
FAIL: Hand count after playing council_room was not correct. Expected 399, got 295
FAIL: Hand count after playing council_room was not correct. Expected 399, got 463
FAIL: Hand count after playing council_room was not correct. Expected 443, got 445
FAIL: Hand count after playing council_room was not correct. Expected 445, got 120
FAIL: Hand count after playing council_room was not correct. Expected 445, got 291
FAIL: Hand count after playing council_room was not correct. Expected 445, got 110
FAIL: Hand count after playing council_room was not correct. Expected 330, got 332
FAIL: Hand count after playing council_room was not correct. Expected 332, got 157
FAIL: Hand count after playing council_room was not correct. Expected 332, got 425
FAIL: Hand count after playing council_room was not correct. Expected 332, got 315
FAIL: Hand count after playing council_room was not correct. Expected 493, got 495
FAIL: Hand count after playing council_room was not correct. Expected 495, got 139
FAIL: Hand count after playing council_room was not correct. Expected 495, got 71
FAIL: Hand count after playing council_room was not correct. Expected 495, got 323
FAIL: Hand count after playing council_room was not correct. Expected 103, got 105
FAIL: Hand count after playing council_room was not correct. Expected 105, got 89
FAIL: Hand count after playing council_room was not correct. Expected 105, got 465
FAIL: Hand count after playing council_room was not correct. Expected 105, got 314
FAIL: Hand count after playing council_room was not correct. Expected 364, got 366
FAIL: Hand count after playing council_room was not correct. Expected 366, got 344
FAIL: Hand count after playing council_room was not correct. Expected 366, got 26
FAIL: Hand count after playing council_room was not correct. Expected 366, got 320
FAIL: Hand count after playing council_room was not correct. Expected 266, got 268
FAIL: Hand count after playing council_room was not correct. Expected 268, got 423
FAIL: Hand count after playing council_room was not correct. Expected 268, got 207
FAIL: Hand count after playing council_room was not correct. Expected 268, got 443
FAIL: Hand count after playing council_room was not correct. Expected 128, got 130
FAIL: Hand count after playing council_room was not correct. Expected 130, got 9
FAIL: Hand count after playing council_room was not correct. Expected 130, got 203
FAIL: Hand count after playing council_room was not correct. Expected 130, got 4
FAIL: Hand count after playing council_room was not correct. Expected 122, got 124
FAIL: Hand count after playing council_room was not correct. Expected 124, got 416
FAIL: Hand count after playing council_room was not correct. Expected 124, got 96
FAIL: Hand count after playing council_room was not correct. Expected 124, got 212
FAIL: Hand count after playing council_room was not correct. Expected 365, got 367
FAIL: Hand count after playing council_room was not correct. Expected 367, got 46
FAIL: Hand count after playing council_room was not correct. Expected 367, got 476
FAIL: Hand count after playing council_room was not correct. Expected 367, got 466
FAIL: Hand count after playing council_room was not correct. Expected 280, got 282
FAIL: Hand count after playing council_room was not correct. Expected 282, got 29
FAIL: Hand count after playing council_room was not correct. Expected 282, got 241
FAIL: Hand count after playing council_room was not correct. Expected 282, got 499
FAIL: Hand count after playing council_room was not correct. Expected 257, got 259
FAIL: Hand count after playing council_room was not correct. Expected 259, got 290
FAIL: Hand count after playing council_room was not correct. Expected 259, got 124
FAIL: Hand count after playing council_room was not correct. Expected 259, got 467
FAIL: Hand count after playing council_room was not correct. Expected 36, got 38
FAIL: Hand count after playing council_room was not correct. Expected 38, got 107
FAIL: Hand count after playing council_room was not correct. Expected 38, got 133
FAIL: Hand count after playing council_room was not correct. Expected 38, got 114
FAIL: Hand count after playing council_room was not correct. Expected 270, got 272
FAIL: Hand count after playing council_room was not correct. Expected 272, got 413
FAIL: Hand count after playing council_room was not correct. Expected 272, got 163
FAIL: Hand count after playing council_room was not correct. Expected 272, got 11
FAIL: Hand count after playing council_room was not correct. Expected 457, got 459
FAIL: Hand count after playing council_room was not correct. Expected 459, got 390
FAIL: Hand count after playing council_room was not correct. Expected 459, got 133
FAIL: Hand count after playing council_room was not correct. Expected 459, got 323
FAIL: Hand count after playing council_room was not correct. Expected 404, got 406
FAIL: Hand count after playing council_room was not correct. Expected 406, got 73
FAIL: Hand count after playing council_room was not correct. Expected 406, got 374
FAIL: Hand count after playing council_room was not correct. Expected 406, got 40
FAIL: Hand count after playing council_room was not correct. Expected 429, got 431
FAIL: Hand count after playing council_room was not correct. Expected 431, got 196
FAIL: Hand count after playing council_room was not correct. Expected 431, got 275
FAIL: Hand count after playing council_room was not correct. Expected 431, got 476
FAIL: Hand count after playing council_room was not correct. Expected 297, got 299
FAIL: Hand count after playing council_room was not correct. Expected 299, got 95
FAIL: Hand count after playing council_room was not correct. Expected 299, got 58
FAIL: Hand count after playing council_room was not correct. Expected 299, got 153
FAIL: Hand count after playing council_room was not correct. Expected 396, got 398
FAIL: Hand count after playing council_room was not correct. Expected 398, got 162
FAIL: Hand count after playing council_room was not correct. Expected 398, got 316
FAIL: Hand count after playing council_room was not correct. Expected 398, got 52
FAIL: Hand count after playing council_room was not correct. Expected 252, got 254
FAIL: Hand count after playing council_room was not correct. Expected 254, got 417
FAIL: Hand count after playing council_room was not correct. Expected 254, got 170
FAIL: Hand count after playing council_room was not correct. Expected 254, got 367
FAIL: Hand count after playing council_room was not correct. Expected 164, got 166
FAIL: Hand count after playing council_room was not correct. Expected 166, got 322
FAIL: Hand count after playing council_room was not correct. Expected 166, got 50
FAIL: Hand count after playing council_room was not correct. Expected 166, got 220
FAIL: Hand count after playing council_room was not correct. Expected 29, got 31
FAIL: Hand count after playing council_room was not correct. Expected 31, got 35
FAIL: Hand count after playing council_room was not correct. Expected 31, got 308
FAIL: Hand count after playing council_room was not correct. Expected 31, got 399
FAIL: Hand count after playing council_room was not correct. Expected 144, got 146
FAIL: Hand count after playing council_room was not correct. Expected 146, got 305
FAIL: Hand count after playing council_room was not correct. Expected 146, got 275
FAIL: Hand count after playing council_room was not correct. Expected 146, got 105
FAIL: Hand count after playing council_room was not correct. Expected 357, got 359
FAIL: Hand count after playing council_room was not correct. Expected 359, got 108
FAIL: Hand count after playing council_room was not correct. Expected 359, got 69
FAIL: Hand count after playing council_room was not correct. Expected 359, got 401
FAIL: Hand count after playing council_room was not correct. Expected 258, got 260
FAIL: Hand count after playing council_room was not correct. Expected 260, got 185
FAIL: Hand count after playing council_room was not correct. Expected 260, got 413
FAIL: Hand count after playing council_room was not correct. Expected 260, got 165
FAIL: Hand count after playing council_room was not correct. Expected 421, got 423
FAIL: Hand count after playing council_room was not correct. Expected 423, got 121
FAIL: Hand count after playing council_room was not correct. Expected 423, got 348
FAIL: Hand count after playing council_room was not correct. Expected 423, got 385
FAIL: Hand count after playing council_room was not correct. Expected 330, got 332
FAIL: Hand count after playing council_room was not correct. Expected 332, got 309
FAIL: Hand count after playing council_room was not correct. Expected 332, got 248
FAIL: Hand count after playing council_room was not correct. Expected 332, got 163
FAIL: Hand count after playing council_room was not correct. Expected 71, got 73
FAIL: Hand count after playing council_room was not correct. Expected 73, got 165
FAIL: Hand count after playing council_room was not correct. Expected 73, got 2
FAIL: Hand count after playing council_room was not correct. Expected 73, got 371
FAIL: Hand count after playing council_room was not correct. Expected 248, got 250
FAIL: Hand count after playing council_room was not correct. Expected 250, got 307
FAIL: Hand count after playing council_room was not correct. Expected 250, got 66
FAIL: Hand count after playing council_room was not correct. Expected 250, got 457
FAIL: Hand count after playing council_room was not correct. Expected 52, got 54
FAIL: Hand count after playing council_room was not correct. Expected 54, got 150
FAIL: Hand count after playing council_room was not correct. Expected 54, got 477
FAIL: Hand count after playing council_room was not correct. Expected 54, got 1
FAIL: Hand count after playing council_room was not correct. Expected 89, got 91
FAIL: Hand count after playing council_room was not correct. Expected 91, got 187
FAIL: Hand count after playing council_room was not correct. Expected 91, got 500
FAIL: Hand count after playing council_room was not correct. Expected 91, got 179
FAIL: Hand count after playing council_room was not correct. Expected 26, got 28
FAIL: Hand count after playing council_room was not correct. Expected 28, got 382
FAIL: Hand count after playing council_room was not correct. Expected 28, got 261
FAIL: Hand count after playing council_room was not correct. Expected 28, got 207
FAIL: Hand count after playing council_room was not correct. Expected 450, got 452
FAIL: Hand count after playing council_room was not correct. Expected 452, got 444
FAIL: Hand count after playing council_room was not correct. Expected 452, got 225
FAIL: Hand count after playing council_room was not correct. Expected 452, got 109
FAIL: Hand count after playing council_room was not correct. Expected 134, got 136
FAIL: Hand count after playing council_room was not correct. Expected 136, got 302
FAIL: Hand count after playing council_room was not correct. Expected 136, got 146
FAIL: Hand count after playing council_room was not correct. Expected 136, got 111
FAIL: Hand count after playing council_room was not correct. Expected 195, got 197
FAIL: Hand count after playing council_room was not correct. Expected 197, got 331
FAIL: Hand count after playing council_room was not correct. Expected 197, got 86
FAIL: Hand count after playing council_room was not correct. Expected 197, got 30
FAIL: Hand count after playing council_room was not correct. Expected 103, got 105
FAIL: Hand count after playing council_room was not correct. Expected 105, got 114
FAIL: Hand count after playing council_room was not correct. Expected 105, got 228
FAIL: Hand count after playing council_room was not correct. Expected 105, got 169
FAIL: Hand count after playing council_room was not correct. Expected 187, got 189
FAIL: Hand count after playing council_room was not correct. Expected 189, got 341
FAIL: Hand count after playing council_room was not correct. Expected 189, got 247
FAIL: Hand count after playing council_room was not correct. Expected 189, got 375
FAIL: Hand count after playing council_room was not correct. Expected 60, got 62
FAIL: Hand count after playing council_room was not correct. Expected 62, got 111
FAIL: Hand count after playing council_room was not correct. Expected 62, got 111
FAIL: Hand count after playing council_room was not correct. Expected 62, got 19
FAIL: Hand count after playing council_room was not correct. Expected 414, got 416
FAIL: Hand count after playing council_room was not correct. Expected 416, got 152
FAIL: Hand count after playing council_room was not correct. Expected 416, got 58
FAIL: Hand count after playing council_room was not correct. Expected 416, got 330
FAIL: Hand count after playing council_room was not correct. Expected 354, got 356
FAIL: Hand count after playing council_room was not correct. Expected 356, got 425
FAIL: Hand count after playing council_room was not correct. Expected 356, got 364
FAIL: Hand count after playing council_room was not correct. Expected 356, got 9
FAIL: Hand count after playing council_room was not correct. Expected 356, got 358
FAIL: Hand count after playing council_room was not correct. Expected 358, got 188
FAIL: Hand count after playing council_room was not correct. Expected 358, got 295
FAIL: Hand count after playing council_room was not correct. Expected 358, got 115
FAIL: Hand count after playing council_room was not correct. Expected 493, got 495
FAIL: Hand count after playing council_room was not correct. Expected 495, got 96
FAIL: Hand count after playing council_room was not correct. Expected 495, got 51
FAIL: Hand count after playing council_room was not correct. Expected 495, got 419
FAIL: Hand count after playing council_room was not correct. Expected 364, got 366
FAIL: Hand count after playing council_room was not correct. Expected 366, got 38
FAIL: Hand count after playing council_room was not correct. Expected 366, got 431
FAIL: Hand count after playing council_room was not correct. Expected 366, got 157
FAIL: Hand count after playing council_room was not correct. Expected 49, got 51
FAIL: Hand count after playing council_room was not correct. Expected 51, got 16
FAIL: Hand count after playing council_room was not correct. Expected 51, got 154
FAIL: Hand count after playing council_room was not correct. Expected 51, got 450
FAIL: Hand count after playing council_room was not correct. Expected 378, got 380
FAIL: Hand count after playing council_room was not correct. Expected 380, got 145
FAIL: Hand count after playing council_room was not correct. Expected 380, got 235
FAIL: Hand count after playing council_room was not correct. Expected 380, got 291
FAIL: Hand count after playing council_room was not correct. Expected 497, got 499
FAIL: Hand count after playing council_room was not correct. Expected 499, got 28
FAIL: Hand count after playing council_room was not correct. Expected 499, got 448
FAIL: Hand count after playing council_room was not correct. Expected 499, got 51
FAIL: Hand count after playing council_room was not correct. Expected 143, got 145
FAIL: Hand count after playing council_room was not correct. Expected 145, got 244
FAIL: Hand count after playing council_room was not correct. Expected 145, got 428
FAIL: Hand count after playing council_room was not correct. Expected 145, got 323
FAIL: Hand count after playing council_room was not correct. Expected 174, got 176
FAIL: Hand count after playing council_room was not correct. Expected 176, got 431
FAIL: Hand count after playing council_room was not correct. Expected 176, got 348
FAIL: Hand count after playing council_room was not correct. Expected 176, got 124
FAIL: Hand count after playing council_room was not correct. Expected 137, got 139
FAIL: Hand count after playing council_room was not correct. Expected 139, got 37
FAIL: Hand count after playing council_room was not correct. Expected 139, got 474
FAIL: Hand count after playing council_room was not correct. Expected 139, got 77
FAIL: Hand count after playing council_room was not correct. Expected 116, got 118
FAIL: Hand count after playing council_room was not correct. Expected 118, got 68
FAIL: Hand count after playing council_room was not correct. Expected 118, got 337
FAIL: Hand count after playing council_room was not correct. Expected 118, got 411
FAIL: Hand count after playing council_room was not correct. Expected 198, got 200
FAIL: Hand count after playing council_room was not correct. Expected 200, got 481
FAIL: Hand count after playing council_room was not correct. Expected 200, got 436
FAIL: Hand count after playing council_room was not correct. Expected 200, got 498
FAIL: Hand count after playing council_room was not correct. Expected 411, got 413
FAIL: Hand count after playing council_room was not correct. Expected 413, got 2
FAIL: Hand count after playing council_room was not correct. Expected 413, got 53
FAIL: Hand count after playing council_room was not correct. Expected 413, got 356
FAIL: Hand count after playing council_room was not correct. Expected 109, got 111
FAIL: Hand count after playing council_room was not correct. Expected 111, got 487
FAIL: Hand count after playing council_room was not correct. Expected 111, got 12
FAIL: Hand count after playing council_room was not correct. Expected 111, got 304
FAIL: Hand count after playing council_room was not correct. Expected 461, got 463
FAIL: Hand count after playing council_room was not correct. Expected 463, got 491
FAIL: Hand count after playing council_room was not correct. Expected 463, got 333
FAIL: Hand count after playing council_room was not correct. Expected 463, got 395
FAIL: Hand count after playing council_room was not correct. Expected 402, got 404
FAIL: Hand count after playing council_room was not correct. Expected 404, got 163
FAIL: Hand count after playing council_room was not correct. Expected 404, got 477
FAIL: Hand count after playing council_room was not correct. Expected 404, got 318
FAIL: Hand count after playing council_room was not correct. Expected 361, got 363
FAIL: Hand count after playing council_room was not correct. Expected 363, got 319
FAIL: Hand count after playing council_room was not correct. Expected 363, got 150
FAIL: Hand count after playing council_room was not correct. Expected 363, got 152
FAIL: Hand count after playing council_room was not correct. Expected 158, got 160
FAIL: Hand count after playing council_room was not correct. Expected 160, got 276
FAIL: Hand count after playing council_room was not correct. Expected 160, got 353
FAIL: Hand count after playing council_room was not correct. Expected 160, got 270
FAIL: Hand count after playing council_room was not correct. Expected 323, got 325
FAIL: Hand count after playing council_room was not correct. Expected 325, got 492
FAIL: Hand count after playing council_room was not correct. Expected 325, got 52
FAIL: Hand count after playing council_room was not correct. Expected 325, got 190
FAIL: Hand count after playing council_room was not correct. Expected 48, got 50
FAIL: Hand count after playing council_room was not correct. Expected 50, got 53
FAIL: Hand count after playing council_room was not correct. Expected 50, got 144
FAIL: Hand count after playing council_room was not correct. Expected 50, got 252
FAIL: Hand count after playing council_room was not correct. Expected 485, got 487
FAIL: Hand count after playing council_room was not correct. Expected 487, got 287
FAIL: Hand count after playing council_room was not correct. Expected 487, got 445
FAIL: Hand count after playing council_room was not correct. Expected 487, got 141
FAIL: Hand count after playing council_room was not correct. Expected 393, got 395
FAIL: Hand count after playing council_room was not correct. Expected 395, got 83
FAIL: Hand count after playing council_room was not correct. Expected 395, got 294
FAIL: Hand count after playing council_room was not correct. Expected 395, got 136
FAIL: Hand count after playing council_room was not correct. Expected 492, got 494
FAIL: Hand count after playing council_room was not correct. Expected 494, got 180
FAIL: Hand count after playing council_room was not correct. Expected 494, got 174
FAIL: Hand count after playing council_room was not correct. Expected 494, got 203
FAIL: Hand count after playing council_room was not correct. Expected 460, got 462
FAIL: Hand count after playing council_room was not correct. Expected 462, got 17
FAIL: Hand count after playing council_room was not correct. Expected 462, got 390
FAIL: Hand count after playing council_room was not correct. Expected 462, got 252
FAIL: Hand count after playing council_room was not correct. Expected 245, got 247
FAIL: Hand count after playing council_room was not correct. Expected 247, got 294
FAIL: Hand count after playing council_room was not correct. Expected 247, got 114
FAIL: Hand count after playing council_room was not correct. Expected 247, got 409
FAIL: Hand count after playing council_room was not correct. Expected 316, got 318
FAIL: Hand count after playing council_room was not correct. Expected 318, got 180
FAIL: Hand count after playing council_room was not correct. Expected 318, got 28
FAIL: Hand count after playing council_room was not correct. Expected 318, got 317
FAIL: Hand count after playing council_room was not correct. Expected 85, got 87
FAIL: Hand count after playing council_room was not correct. Expected 87, got 342
FAIL: Hand count after playing council_room was not correct. Expected 87, got 407
FAIL: Hand count after playing council_room was not correct. Expected 87, got 323
FAIL: Hand count after playing council_room was not correct. Expected 405, got 407
FAIL: Hand count after playing council_room was not correct. Expected 407, got 434
FAIL: Hand count after playing council_room was not correct. Expected 407, got 378
FAIL: Hand count after playing council_room was not correct. Expected 407, got 302
FAIL: Hand count after playing council_room was not correct. Expected 428, got 430
FAIL: Hand count after playing council_room was not correct. Expected 430, got 281
FAIL: Hand count after playing council_room was not correct. Expected 430, got 88
FAIL: Hand count after playing council_room was not correct. Expected 430, got 299
FAIL: Hand count after playing council_room was not correct. Expected 365, got 367
FAIL: Hand count after playing council_room was not correct. Expected 367, got 447
FAIL: Hand count after playing council_room was not correct. Expected 367, got 308
FAIL: Hand count after playing council_room was not correct. Expected 367, got 172
FAIL: Hand count after playing council_room was not correct. Expected 154, got 156
FAIL: Hand count after playing council_room was not correct. Expected 156, got 413
FAIL: Hand count after playing council_room was not correct. Expected 156, got 243
FAIL: Hand count after playing council_room was not correct. Expected 156, got 390
FAIL: Hand count after playing council_room was not correct. Expected 171, got 173
FAIL: Hand count after playing council_room was not correct. Expected 173, got 267
FAIL: Hand count after playing council_room was not correct. Expected 173, got 382
FAIL: Hand count after playing council_room was not correct. Expected 173, got 233
FAIL: Hand count after playing council_room was not correct. Expected 64, got 66
FAIL: Hand count after playing council_room was not correct. Expected 66, got 144
FAIL: Hand count after playing council_room was not correct. Expected 66, got 375
FAIL: Hand count after playing council_room was not correct. Expected 66, got 405
FAIL: Hand count after playing council_room was not correct. Expected 6, got 8
FAIL: Hand count after playing council_room was not correct. Expected 8, got 192
FAIL: Hand count after playing council_room was not correct. Expected 8, got 39
FAIL: Hand count after playing council_room was not correct. Expected 8, got 320
FAIL: Hand count after playing council_room was not correct. Expected 275, got 277
FAIL: Hand count after playing council_room was not correct. Expected 277, got 28
FAIL: Hand count after playing council_room was not correct. Expected 277, got 275
FAIL: Hand count after playing council_room was not correct. Expected 277, got 5
FAIL: Hand count after playing council_room was not correct. Expected 158, got 160
FAIL: Hand count after playing council_room was not correct. Expected 160, got 181
FAIL: Hand count after playing council_room was not correct. Expected 160, got 449
FAIL: Hand count after playing council_room was not correct. Expected 160, got 396
FAIL: Hand count after playing council_room was not correct. Expected 478, got 480
FAIL: Hand count after playing council_room was not correct. Expected 480, got 342
FAIL: Hand count after playing council_room was not correct. Expected 480, got 376
FAIL: Hand count after playing council_room was not correct. Expected 480, got 259
FAIL: Hand count after playing council_room was not correct. Expected 368, got 370
FAIL: Hand count after playing council_room was not correct. Expected 370, got 435
FAIL: Hand count after playing council_room was not correct. Expected 370, got 354
FAIL: Hand count after playing council_room was not correct. Expected 370, got 83
FAIL: Hand count after playing council_room was not correct. Expected 166, got 168
FAIL: Hand count after playing council_room was not correct. Expected 168, got 483
FAIL: Hand count after playing council_room was not correct. Expected 168, got 412
FAIL: Hand count after playing council_room was not correct. Expected 168, got 396
FAIL: Hand count after playing council_room was not correct. Expected 364, got 366
FAIL: Hand count after playing council_room was not correct. Expected 366, got 287
FAIL: Hand count after playing council_room was not correct. Expected 366, got 129
FAIL: Hand count after playing council_room was not correct. Expected 366, got 97
FAIL: Hand count after playing council_room was not correct. Expected 119, got 121
FAIL: Hand count after playing council_room was not correct. Expected 121, got 355
FAIL: Hand count after playing council_room was not correct. Expected 121, got 248
FAIL: Hand count after playing council_room was not correct. Expected 121, got 200
FAIL: Hand count after playing council_room was not correct. Expected 59, got 61
FAIL: Hand count after playing council_room was not correct. Expected 61, got 38
FAIL: Hand count after playing council_room was not correct. Expected 61, got 448
FAIL: Hand count after playing council_room was not correct. Expected 61, got 347
FAIL: Hand count after playing council_room was not correct. Expected 432, got 434
FAIL: Hand count after playing council_room was not correct. Expected 434, got 8
FAIL: Hand count after playing council_room was not correct. Expected 434, got 82
FAIL: Hand count after playing council_room was not correct. Expected 434, got 263
FAIL: Hand count after playing council_room was not correct. Expected 376, got 378
FAIL: Hand count after playing council_room was not correct. Expected 378, got 152
FAIL: Hand count after playing council_room was not correct. Expected 378, got 214
FAIL: Hand count after playing council_room was not correct. Expected 378, got 144
FAIL: Hand count after playing council_room was not correct. Expected 409, got 411
FAIL: Hand count after playing council_room was not correct. Expected 411, got 472
FAIL: Hand count after playing council_room was not correct. Expected 411, got 388
FAIL: Hand count after playing council_room was not correct. Expected 411, got 143
FAIL: Hand count after playing council_room was not correct. Expected 145, got 147
FAIL: Hand count after playing council_room was not correct. Expected 147, got 248
FAIL: Hand count after playing council_room was not correct. Expected 147, got 397
FAIL: Hand count after playing council_room was not correct. Expected 147, got 433
FAIL: Hand count after playing council_room was not correct. Expected 237, got 239
FAIL: Hand count after playing council_room was not correct. Expected 239, got 81
FAIL: Hand count after playing council_room was not correct. Expected 239, got 149
FAIL: Hand count after playing council_room was not correct. Expected 239, got 355
FAIL: Hand count after playing council_room was not correct. Expected 288, got 290
FAIL: Hand count after playing council_room was not correct. Expected 290, got 85
FAIL: Hand count after playing council_room was not correct. Expected 290, got 110
FAIL: Hand count after playing council_room was not correct. Expected 290, got 381
FAIL: Hand count after playing council_room was not correct. Expected 368, got 370
FAIL: Hand count after playing council_room was not correct. Expected 370, got 444
FAIL: Hand count after playing council_room was not correct. Expected 370, got 328
FAIL: Hand count after playing council_room was not correct. Expected 370, got 466
FAIL: Hand count after playing council_room was not correct. Expected 441, got 443
FAIL: Hand count after playing council_room was not correct. Expected 443, got 419
FAIL: Hand count after playing council_room was not correct. Expected 443, got 373
FAIL: Hand count after playing council_room was not correct. Expected 443, got 367
FAIL: Hand count after playing council_room was not correct. Expected 239, got 241
FAIL: Hand count after playing council_room was not correct. Expected 241, got 161
FAIL: Hand count after playing council_room was not correct. Expected 241, got 300
FAIL: Hand count after playing council_room was not correct. Expected 241, got 468
FAIL: Hand count after playing council_room was not correct. Expected 493, got 495
FAIL: Hand count after playing council_room was not correct. Expected 495, got 342
FAIL: Hand count after playing council_room was not correct. Expected 495, got 90
FAIL: Hand count after playing council_room was not correct. Expected 495, got 124
FAIL: Hand count after playing council_room was not correct. Expected 388, got 390
FAIL: Hand count after playing council_room was not correct. Expected 390, got 387
FAIL: Hand count after playing council_room was not correct. Expected 390, got 231
FAIL: Hand count after playing council_room was not correct. Expected 390, got 101
FAIL: Hand count after playing council_room was not correct. Expected 230, got 232
FAIL: Hand count after playing council_room was not correct. Expected 232, got 54
FAIL: Hand count after playing council_room was not correct. Expected 232, got 334
FAIL: Hand count after playing council_room was not correct. Expected 232, got 157
FAIL: Hand count after playing council_room was not correct. Expected 329, got 331
FAIL: Hand count after playing council_room was not correct. Expected 331, got 158
FAIL: Hand count after playing council_room was not correct. Expected 331, got 448
FAIL: Hand count after playing council_room was not correct. Expected 331, got 436
FAIL: Hand count after playing council_room was not correct. Expected 274, got 276
FAIL: Hand count after playing council_room was not correct. Expected 276, got 323
FAIL: Hand count after playing council_room was not correct. Expected 276, got 396
FAIL: Hand count after playing council_room was not correct. Expected 276, got 175
FAIL: Hand count after playing council_room was not correct. Expected 450, got 452
FAIL: Hand count after playing council_room was not correct. Expected 452, got 66
FAIL: Hand count after playing council_room was not correct. Expected 452, got 169
FAIL: Hand count after playing council_room was not correct. Expected 452, got 51
FAIL: Hand count after playing council_room was not correct. Expected 286, got 288
FAIL: Hand count after playing council_room was not correct. Expected 288, got 3
FAIL: Hand count after playing council_room was not correct. Expected 288, got 392
FAIL: Hand count after playing council_room was not correct. Expected 288, got 334
FAIL: Hand count after playing council_room was not correct. Expected 264, got 266
FAIL: Hand count after playing council_room was not correct. Expected 266, got 261
FAIL: Hand count after playing council_room was not correct. Expected 266, got 402
FAIL: Hand count after playing council_room was not correct. Expected 266, got 408
FAIL: Hand count after playing council_room was not correct. Expected 81, got 83
FAIL: Hand count after playing council_room was not correct. Expected 83, got 430
FAIL: Hand count after playing council_room was not correct. Expected 83, got 95
FAIL: Hand count after playing council_room was not correct. Expected 83, got 180
FAIL: Hand count after playing council_room was not correct. Expected 440, got 442
FAIL: Hand count after playing council_room was not correct. Expected 442, got 222
FAIL: Hand count after playing council_room was not correct. Expected 442, got 125
FAIL: Hand count after playing council_room was not correct. Expected 442, got 204
FAIL: Hand count after playing council_room was not correct. Expected 451, got 453
FAIL: Hand count after playing council_room was not correct. Expected 453, got 202
FAIL: Hand count after playing council_room was not correct. Expected 453, got 259
FAIL: Hand count after playing council_room was not correct. Expected 453, got 102
FAIL: Hand count after playing council_room was not correct. Expected 377, got 379
FAIL: Hand count after playing council_room was not correct. Expected 379, got 441
FAIL: Hand count after playing council_room was not correct. Expected 379, got 229
FAIL: Hand count after playing council_room was not correct. Expected 379, got 277
FAIL: Hand count after playing council_room was not correct. Expected 71, got 73
FAIL: Hand count after playing council_room was not correct. Expected 73, got 328
FAIL: Hand count after playing council_room was not correct. Expected 73, got 156
FAIL: Hand count after playing council_room was not correct. Expected 73, got 229
FAIL: Hand count after playing council_room was not correct. Expected 336, got 338
FAIL: Hand count after playing council_room was not correct. Expected 338, got 435
FAIL: Hand count after playing council_room was not correct. Expected 338, got 348
FAIL: Hand count after playing council_room was not correct. Expected 338, got 367
FAIL: Hand count after playing council_room was not correct. Expected 367, got 369
FAIL: Hand count after playing council_room was not correct. Expected 369, got 385
FAIL: Hand count after playing council_room was not correct. Expected 369, got 149
FAIL: Hand count after playing council_room was not correct. Expected 369, got 377
FAIL: Hand count after playing council_room was not correct. Expected 67, got 69
FAIL: Hand count after playing council_room was not correct. Expected 69, got 5
FAIL: Hand count after playing council_room was not correct. Expected 69, got 465
FAIL: Hand count after playing council_room was not correct. Expected 69, got 159
FAIL: Hand count after playing council_room was not correct. Expected 34, got 36
FAIL: Hand count after playing council_room was not correct. Expected 36, got 488
FAIL: Hand count after playing council_room was not correct. Expected 36, got 402
FAIL: Hand count after playing council_room was not correct. Expected 36, got 265
FAIL: Hand count after playing council_room was not correct. Expected 125, got 127
FAIL: Hand count after playing council_room was not correct. Expected 127, got 329
FAIL: Hand count after playing council_room was not correct. Expected 127, got 220
FAIL: Hand count after playing council_room was not correct. Expected 127, got 100
FAIL: Hand count after playing council_room was not correct. Expected 114, got 116
FAIL: Hand count after playing council_room was not correct. Expected 116, got 374
FAIL: Hand count after playing council_room was not correct. Expected 116, got 449
FAIL: Hand count after playing council_room was not correct. Expected 116, got 34
FAIL: Hand count after playing council_room was not correct. Expected 451, got 453
FAIL: Hand count after playing council_room was not correct. Expected 453, got 15
FAIL: Hand count after playing council_room was not correct. Expected 453, got 114
FAIL: Hand count after playing council_room was not correct. Expected 453, got 250
FAIL: Hand count after playing council_room was not correct. Expected 102, got 104
FAIL: Hand count after playing council_room was not correct. Expected 104, got 422
FAIL: Hand count after playing council_room was not correct. Expected 104, got 319
FAIL: Hand count after playing council_room was not correct. Expected 104, got 308
FAIL: Hand count after playing council_room was not correct. Expected 42, got 44
FAIL: Hand count after playing council_room was not correct. Expected 44, got 285
FAIL: Hand count after playing council_room was not correct. Expected 44, got 425
FAIL: Hand count after playing council_room was not correct. Expected 44, got 413
FAIL: Hand count after playing council_room was not correct. Expected 330, got 332
FAIL: Hand count after playing council_room was not correct. Expected 332, got 61
FAIL: Hand count after playing council_room was not correct. Expected 332, got 430
FAIL: Hand count after playing council_room was not correct. Expected 332, got 241
FAIL: Hand count after playing council_room was not correct. Expected 165, got 167
FAIL: Hand count after playing council_room was not correct. Expected 167, got 160
FAIL: Hand count after playing council_room was not correct. Expected 167, got 367
FAIL: Hand count after playing council_room was not correct. Expected 167, got 497
FAIL: Hand count after playing council_room was not correct. Expected 491, got 493
FAIL: Hand count after playing council_room was not correct. Expected 493, got 29
FAIL: Hand count after playing council_room was not correct. Expected 493, got 380
FAIL: Hand count after playing council_room was not correct. Expected 493, got 83
FAIL: Hand count after playing council_room was not correct. Expected 295, got 297
FAIL: Hand count after playing council_room was not correct. Expected 297, got 231
FAIL: Hand count after playing council_room was not correct. Expected 297, got 384
FAIL: Hand count after playing council_room was not correct. Expected 297, got 33
FAIL: Hand count after playing council_room was not correct. Expected 305, got 307
FAIL: Hand count after playing council_room was not correct. Expected 307, got 289
FAIL: Hand count after playing council_room was not correct. Expected 307, got 194
FAIL: Hand count after playing council_room was not correct. Expected 307, got 166
FAIL: Hand count after playing council_room was not correct. Expected 393, got 395
FAIL: Hand count after playing council_room was not correct. Expected 395, got 454
FAIL: Hand count after playing council_room was not correct. Expected 395, got 330
FAIL: Hand count after playing council_room was not correct. Expected 395, got 418
FAIL: Hand count after playing council_room was not correct. Expected 250, got 252
FAIL: Hand count after playing council_room was not correct. Expected 252, got 343
FAIL: Hand count after playing council_room was not correct. Expected 252, got 201
FAIL: Hand count after playing council_room was not correct. Expected 252, got 157
FAIL: Hand count after playing council_room was not correct. Expected 350, got 352
FAIL: Hand count after playing council_room was not correct. Expected 352, got 183
FAIL: Hand count after playing council_room was not correct. Expected 352, got 7
FAIL: Hand count after playing council_room was not correct. Expected 352, got 349
FAIL: Hand count after playing council_room was not correct. Expected 164, got 166
FAIL: Hand count after playing council_room was not correct. Expected 166, got 261
FAIL: Hand count after playing council_room was not correct. Expected 166, got 17
FAIL: Hand count after playing council_room was not correct. Expected 166, got 489
FAIL: Hand count after playing council_room was not correct. Expected 255, got 257
FAIL: Hand count after playing council_room was not correct. Expected 257, got 365
FAIL: Hand count after playing council_room was not correct. Expected 257, got 167
FAIL: Hand count after playing council_room was not correct. Expected 257, got 160
FAIL: Hand count after playing council_room was not correct. Expected 184, got 186
FAIL: Hand count after playing council_room was not correct. Expected 186, got 61
FAIL: Hand count after playing council_room was not correct. Expected 186, got 112
FAIL: Hand count after playing council_room was not correct. Expected 186, got 21
FAIL: Hand count after playing council_room was not correct. Expected 481, got 483
FAIL: Hand count after playing council_room was not correct. Expected 483, got 52
FAIL: Hand count after playing council_room was not correct. Expected 483, got 86
FAIL: Hand count after playing council_room was not correct. Expected 483, got 426
FAIL: Hand count after playing council_room was not correct. Expected 357, got 359
FAIL: Hand count after playing council_room was not correct. Expected 359, got 31
FAIL: Hand count after playing council_room was not correct. Expected 359, got 229
FAIL: Hand count after playing council_room was not correct. Expected 359, got 30
FAIL: Hand count after playing council_room was not correct. Expected 222, got 224
FAIL: Hand count after playing council_room was not correct. Expected 224, got 441
FAIL: Hand count after playing council_room was not correct. Expected 224, got 141
FAIL: Hand count after playing council_room was not correct. Expected 224, got 140
FAIL: Hand count after playing council_room was not correct. Expected 296, got 298
FAIL: Hand count after playing council_room was not correct. Expected 298, got 447
FAIL: Hand count after playing council_room was not correct. Expected 298, got 158
FAIL: Hand count after playing council_room was not correct. Expected 298, got 92
FAIL: Hand count after playing council_room was not correct. Expected 358, got 360
FAIL: Hand count after playing council_room was not correct. Expected 360, got 308
FAIL: Hand count after playing council_room was not correct. Expected 360, got 145
FAIL: Hand count after playing council_room was not correct. Expected 360, got 437
FAIL: Hand count after playing council_room was not correct. Expected 178, got 180
FAIL: Hand count after playing council_room was not correct. Expected 180, got 113
FAIL: Hand count after playing council_room was not correct. Expected 180, got 237
FAIL: Hand count after playing council_room was not correct. Expected 180, got 265
FAIL: Hand count after playing council_room was not correct. Expected 446, got 448
FAIL: Hand count after playing council_room was not correct. Expected 448, got 139
FAIL: Hand count after playing council_room was not correct. Expected 448, got 128
FAIL: Hand count after playing council_room was not correct. Expected 448, got 209
FAIL: Hand count after playing council_room was not correct. Expected 250, got 252
FAIL: Hand count after playing council_room was not correct. Expected 252, got 235
FAIL: Hand count after playing council_room was not correct. Expected 252, got 450
FAIL: Hand count after playing council_room was not correct. Expected 252, got 469
FAIL: Hand count after playing council_room was not correct. Expected 404, got 406
FAIL: Hand count after playing council_room was not correct. Expected 406, got 255
FAIL: Hand count after playing council_room was not correct. Expected 406, got 374
FAIL: Hand count after playing council_room was not correct. Expected 406, got 496
FAIL: Hand count after playing council_room was not correct. Expected 239, got 241
FAIL: Hand count after playing council_room was not correct. Expected 241, got 426
FAIL: Hand count after playing council_room was not correct. Expected 241, got 298
FAIL: Hand count after playing council_room was not correct. Expected 241, got 303
FAIL: Hand count after playing council_room was not correct. Expected 157, got 159
FAIL: Hand count after playing council_room was not correct. Expected 159, got 138
FAIL: Hand count after playing council_room was not correct. Expected 159, got 398
FAIL: Hand count after playing council_room was not correct. Expected 159, got 133
FAIL: Hand count after playing council_room was not correct. Expected 380, got 382
FAIL: Hand count after playing council_room was not correct. Expected 382, got 411
FAIL: Hand count after playing council_room was not correct. Expected 382, got 49
FAIL: Hand count after playing council_room was not correct. Expected 382, got 254
FAIL: Hand count after playing council_room was not correct. Expected 481, got 483
FAIL: Hand count after playing council_room was not correct. Expected 483, got 31
FAIL: Hand count after playing council_room was not correct. Expected 483, got 93
FAIL: Hand count after playing council_room was not correct. Expected 483, got 324
FAIL: Hand count after playing council_room was not correct. Expected 138, got 140
FAIL: Hand count after playing council_room was not correct. Expected 140, got 93
FAIL: Hand count after playing council_room was not correct. Expected 140, got 386
FAIL: Hand count after playing council_room was not correct. Expected 140, got 127
FAIL: Hand count after playing council_room was not correct. Expected 89, got 91
FAIL: Hand count after playing council_room was not correct. Expected 91, got 262
FAIL: Hand count after playing council_room was not correct. Expected 91, got 373
FAIL: Hand count after playing council_room was not correct. Expected 91, got 440
FAIL: Hand count after playing council_room was not correct. Expected 112, got 114
FAIL: Hand count after playing council_room was not correct. Expected 114, got 207
FAIL: Hand count after playing council_room was not correct. Expected 114, got 481
FAIL: Hand count after playing council_room was not correct. Expected 114, got 360
FAIL: Hand count after playing council_room was not correct. Expected 93, got 95
FAIL: Hand count after playing council_room was not correct. Expected 95, got 156
FAIL: Hand count after playing council_room was not correct. Expected 95, got 413
FAIL: Hand count after playing council_room was not correct. Expected 95, got 213
FAIL: Hand count after playing council_room was not correct. Expected 393, got 395
FAIL: Hand count after playing council_room was not correct. Expected 395, got 379
FAIL: Hand count after playing council_room was not correct. Expected 395, got 20
FAIL: Hand count after playing council_room was not correct. Expected 395, got 368
FAIL: Hand count after playing council_room was not correct. Expected 166, got 168
FAIL: Hand count after playing council_room was not correct. Expected 168, got 21
FAIL: Hand count after playing council_room was not correct. Expected 168, got 150
FAIL: Hand count after playing council_room was not correct. Expected 168, got 20
FAIL: Hand count after playing council_room was not correct. Expected 231, got 233
FAIL: Hand count after playing council_room was not correct. Expected 233, got 460
FAIL: Hand count after playing council_room was not correct. Expected 233, got 484
FAIL: Hand count after playing council_room was not correct. Expected 233, got 285
FAIL: Hand count after playing council_room was not correct. Expected 25, got 27
FAIL: Hand count after playing council_room was not correct. Expected 27, got 209
FAIL: Hand count after playing council_room was not correct. Expected 27, got 435
FAIL: Hand count after playing council_room was not correct. Expected 27, got 221
FAIL: Hand count after playing council_room was not correct. Expected 235, got 237
FAIL: Hand count after playing council_room was not correct. Expected 237, got 245
FAIL: Hand count after playing council_room was not correct. Expected 237, got 179
FAIL: Hand count after playing council_room was not correct. Expected 237, got 279
FAIL: Hand count after playing council_room was not correct. Expected 284, got 286
FAIL: Hand count after playing council_room was not correct. Expected 286, got 98
FAIL: Hand count after playing council_room was not correct. Expected 286, got 83
FAIL: Hand count after playing council_room was not correct. Expected 286, got 426
FAIL: Hand count after playing council_room was not correct. Expected 177, got 179
FAIL: Hand count after playing council_room was not correct. Expected 179, got 33
FAIL: Hand count after playing council_room was not correct. Expected 179, got 468
FAIL: Hand count after playing council_room was not correct. Expected 179, got 310
FAIL: Hand count after playing council_room was not correct. Expected 144, got 146
FAIL: Hand count after playing council_room was not correct. Expected 146, got 50
FAIL: Hand count after playing council_room was not correct. Expected 146, got 33
FAIL: Hand count after playing council_room was not correct. Expected 146, got 392
FAIL: Hand count after playing council_room was not correct. Expected 493, got 495
FAIL: Hand count after playing council_room was not correct. Expected 495, got 11
FAIL: Hand count after playing council_room was not correct. Expected 495, got 128
FAIL: Hand count after playing council_room was not correct. Expected 495, got 9
FAIL: Hand count after playing council_room was not correct. Expected 465, got 467
FAIL: Hand count after playing council_room was not correct. Expected 467, got 234
FAIL: Hand count after playing council_room was not correct. Expected 467, got 401
FAIL: Hand count after playing council_room was not correct. Expected 467, got 359
FAIL: Hand count after playing council_room was not correct. Expected 86, got 88
FAIL: Hand count after playing council_room was not correct. Expected 88, got 332
FAIL: Hand count after playing council_room was not correct. Expected 88, got 19
FAIL: Hand count after playing council_room was not correct. Expected 88, got 377
FAIL: Hand count after playing council_room was not correct. Expected 60, got 62
FAIL: Hand count after playing council_room was not correct. Expected 62, got 94
FAIL: Hand count after playing council_room was not correct. Expected 62, got 65
FAIL: Hand count after playing council_room was not correct. Expected 62, got 174
FAIL: Hand count after playing council_room was not correct. Expected 279, got 281
FAIL: Hand count after playing council_room was not correct. Expected 281, got 36
FAIL: Hand count after playing council_room was not correct. Expected 281, got 2
FAIL: Hand count after playing council_room was not correct. Expected 281, got 280
FAIL: Hand count after playing council_room was not correct. Expected 354, got 356
FAIL: Hand count after playing council_room was not correct. Expected 356, got 163
FAIL: Hand count after playing council_room was not correct. Expected 356, got 321
FAIL: Hand count after playing council_room was not correct. Expected 356, got 199
FAIL: Hand count after playing council_room was not correct. Expected 203, got 205
FAIL: Hand count after playing council_room was not correct. Expected 205, got 372
FAIL: Hand count after playing council_room was not correct. Expected 205, got 352
FAIL: Hand count after playing council_room was not correct. Expected 205, got 161
FAIL: Hand count after playing council_room was not correct. Expected 52, got 54
FAIL: Hand count after playing council_room was not correct. Expected 54, got 45
FAIL: Hand count after playing council_room was not correct. Expected 54, got 1
FAIL: Hand count after playing council_room was not correct. Expected 54, got 53
FAIL: Hand count after playing council_room was not correct. Expected 353, got 355
FAIL: Hand count after playing council_room was not correct. Expected 355, got 338
FAIL: Hand count after playing council_room was not correct. Expected 355, got 360
FAIL: Hand count after playing council_room was not correct. Expected 355, got 122
FAIL: Hand count after playing council_room was not correct. Expected 386, got 388
FAIL: Hand count after playing council_room was not correct. Expected 388, got 80
FAIL: Hand count after playing council_room was not correct. Expected 388, got 198
FAIL: Hand count after playing council_room was not correct. Expected 388, got 197
FAIL: Hand count after playing council_room was not correct. Expected 82, got 84
FAIL: Hand count after playing council_room was not correct. Expected 84, got 326
FAIL: Hand count after playing council_room was not correct. Expected 84, got 10
FAIL: Hand count after playing council_room was not correct. Expected 84, got 20
FAIL: Hand count after playing council_room was not correct. Expected 250, got 252
FAIL: Hand count after playing council_room was not correct. Expected 252, got 235
FAIL: Hand count after playing council_room was not correct. Expected 252, got 285
FAIL: Hand count after playing council_room was not correct. Expected 252, got 122
FAIL: Hand count after playing council_room was not correct. Expected 114, got 116
FAIL: Hand count after playing council_room was not correct. Expected 116, got 472
FAIL: Hand count after playing council_room was not correct. Expected 116, got 466
FAIL: Hand count after playing council_room was not correct. Expected 116, got 303
FAIL: Hand count after playing council_room was not correct. Expected 178, got 180
FAIL: Hand count after playing council_room was not correct. Expected 180, got 34
FAIL: Hand count after playing council_room was not correct. Expected 180, got 447
FAIL: Hand count after playing council_room was not correct. Expected 180, got 248
FAIL: Hand count after playing council_room was not correct. Expected 12, got 14
FAIL: Hand count after playing council_room was not correct. Expected 14, got 316
FAIL: Hand count after playing council_room was not correct. Expected 14, got 409
FAIL: Hand count after playing council_room was not correct. Expected 14, got 221
FAIL: Hand count after playing council_room was not correct. Expected 43, got 45
FAIL: Hand count after playing council_room was not correct. Expected 45, got 197
FAIL: Hand count after playing council_room was not correct. Expected 45, got 407
FAIL: Hand count after playing council_room was not correct. Expected 45, got 242
FAIL: Hand count after playing council_room was not correct. Expected 171, got 173
FAIL: Hand count after playing council_room was not correct. Expected 173, got 240
FAIL: Hand count after playing council_room was not correct. Expected 173, got 56
FAIL: Hand count after playing council_room was not correct. Expected 173, got 402
FAIL: Hand count after playing council_room was not correct. Expected 182, got 184
FAIL: Hand count after playing council_room was not correct. Expected 184, got 162
FAIL: Hand count after playing council_room was not correct. Expected 184, got 430
FAIL: Hand count after playing council_room was not correct. Expected 184, got 184
FAIL: Hand count after playing council_room was not correct. Expected 155, got 157
FAIL: Hand count after playing council_room was not correct. Expected 157, got 359
FAIL: Hand count after playing council_room was not correct. Expected 157, got 278
FAIL: Hand count after playing council_room was not correct. Expected 157, got 104
FAIL: Hand count after playing council_room was not correct. Expected 199, got 201
FAIL: Hand count after playing council_room was not correct. Expected 201, got 457
FAIL: Hand count after playing council_room was not correct. Expected 201, got 16
FAIL: Hand count after playing council_room was not correct. Expected 201, got 449
FAIL: Hand count after playing council_room was not correct. Expected 449, got 451
FAIL: Hand count after playing council_room was not correct. Expected 451, got 277
FAIL: Hand count after playing council_room was not correct. Expected 451, got 80
FAIL: Hand count after playing council_room was not correct. Expected 451, got 100
FAIL: Hand count after playing council_room was not correct. Expected 173, got 175
FAIL: Hand count after playing council_room was not correct. Expected 175, got 431
FAIL: Hand count after playing council_room was not correct. Expected 175, got 43
FAIL: Hand count after playing council_room was not correct. Expected 175, got 402
FAIL: Hand count after playing council_room was not correct. Expected 388, got 390
FAIL: Hand count after playing council_room was not correct. Expected 390, got 183
FAIL: Hand count after playing council_room was not correct. Expected 390, got 410
FAIL: Hand count after playing council_room was not correct. Expected 390, got 352
FAIL: Hand count after playing council_room was not correct. Expected 136, got 138
FAIL: Hand count after playing council_room was not correct. Expected 138, got 391
FAIL: Hand count after playing council_room was not correct. Expected 138, got 323
FAIL: Hand count after playing council_room was not correct. Expected 138, got 74
FAIL: Hand count after playing council_room was not correct. Expected 358, got 360
FAIL: Hand count after playing council_room was not correct. Expected 360, got 62
FAIL: Hand count after playing council_room was not correct. Expected 360, got 225
FAIL: Hand count after playing council_room was not correct. Expected 360, got 487
FAIL: Hand count after playing council_room was not correct. Expected 371, got 373
FAIL: Hand count after playing council_room was not correct. Expected 373, got 172
FAIL: Hand count after playing council_room was not correct. Expected 373, got 288
FAIL: Hand count after playing council_room was not correct. Expected 373, got 365
FAIL: Hand count after playing council_room was not correct. Expected 10, got 12
FAIL: Hand count after playing council_room was not correct. Expected 12, got 43
FAIL: Hand count after playing council_room was not correct. Expected 12, got 322
FAIL: Hand count after playing council_room was not correct. Expected 12, got 135
FAIL: Hand count after playing council_room was not correct. Expected 327, got 329
FAIL: Hand count after playing council_room was not correct. Expected 329, got 317
FAIL: Hand count after playing council_room was not correct. Expected 329, got 199
FAIL: Hand count after playing council_room was not correct. Expected 329, got 246
FAIL: Hand count after playing council_room was not correct. Expected 103, got 105
FAIL: Hand count after playing council_room was not correct. Expected 105, got 101
FAIL: Hand count after playing council_room was not correct. Expected 105, got 370
FAIL: Hand count after playing council_room was not correct. Expected 105, got 17
FAIL: Hand count after playing council_room was not correct. Expected 74, got 76
FAIL: Hand count after playing council_room was not correct. Expected 76, got 109
FAIL: Hand count after playing council_room was not correct. Expected 76, got 348
FAIL: Hand count after playing council_room was not correct. Expected 76, got 188
FAIL: Hand count after playing council_room was not correct. Expected 45, got 47
FAIL: Hand count after playing council_room was not correct. Expected 47, got 416
FAIL: Hand count after playing council_room was not correct. Expected 47, got 110
FAIL: Hand count after playing council_room was not correct. Expected 47, got 18
FAIL: Hand count after playing council_room was not correct. Expected 167, got 169
FAIL: Hand count after playing council_room was not correct. Expected 169, got 371
FAIL: Hand count after playing council_room was not correct. Expected 169, got 484
FAIL: Hand count after playing council_room was not correct. Expected 169, got 386
FAIL: Hand count after playing council_room was not correct. Expected 481, got 483
FAIL: Hand count after playing council_room was not correct. Expected 483, got 105
FAIL: Hand count after playing council_room was not correct. Expected 483, got 258
FAIL: Hand count after playing council_room was not correct. Expected 483, got 337
FAIL: Hand count after playing council_room was not correct. Expected 417, got 419
FAIL: Hand count after playing council_room was not correct. Expected 419, got 39
FAIL: Hand count after playing council_room was not correct. Expected 419, got 211
FAIL: Hand count after playing council_room was not correct. Expected 419, got 167
FAIL: Hand count after playing council_room was not correct. Expected 492, got 494
FAIL: Hand count after playing council_room was not correct. Expected 494, got 142
FAIL: Hand count after playing council_room was not correct. Expected 494, got 359
FAIL: Hand count after playing council_room was not correct. Expected 494, got 326
FAIL: Hand count after playing council_room was not correct. Expected 456, got 458
FAIL: Hand count after playing council_room was not correct. Expected 458, got 173
FAIL: Hand count after playing council_room was not correct. Expected 458, got 19
FAIL: Hand count after playing council_room was not correct. Expected 458, got 197
FAIL: Hand count after playing council_room was not correct. Expected 495, got 497
FAIL: Hand count after playing council_room was not correct. Expected 497, got 224
FAIL: Hand count after playing council_room was not correct. Expected 497, got 158
FAIL: Hand count after playing council_room was not correct. Expected 497, got 106
FAIL: Hand count after playing council_room was not correct. Expected 84, got 86
FAIL: Hand count after playing council_room was not correct. Expected 86, got 226
FAIL: Hand count after playing council_room was not correct. Expected 86, got 314
FAIL: Hand count after playing council_room was not correct. Expected 86, got 368
FAIL: Hand count after playing council_room was not correct. Expected 68, got 70
FAIL: Hand count after playing council_room was not correct. Expected 70, got 252
FAIL: Hand count after playing council_room was not correct. Expected 70, got 348
FAIL: Hand count after playing council_room was not correct. Expected 70, got 443
FAIL: Hand count after playing council_room was not correct. Expected 248, got 250
FAIL: Hand count after playing council_room was not correct. Expected 250, got 50
FAIL: Hand count after playing council_room was not correct. Expected 250, got 197
FAIL: Hand count after playing council_room was not correct. Expected 250, got 325
FAIL: Hand count after playing council_room was not correct. Expected 347, got 349
FAIL: Hand count after playing council_room was not correct. Expected 349, got 172
FAIL: Hand count after playing council_room was not correct. Expected 349, got 13
FAIL: Hand count after playing council_room was not correct. Expected 349, got 390
FAIL: Hand count after playing council_room was not correct. Expected 456, got 458
FAIL: Hand count after playing council_room was not correct. Expected 458, got 142
FAIL: Hand count after playing council_room was not correct. Expected 458, got 360
FAIL: Hand count after playing council_room was not correct. Expected 458, got 490
FAIL: Hand count after playing council_room was not correct. Expected 243, got 245
FAIL: Hand count after playing council_room was not correct. Expected 245, got 412
FAIL: Hand count after playing council_room was not correct. Expected 245, got 245
FAIL: Hand count after playing council_room was not correct. Expected 245, got 406
FAIL: Hand count after playing council_room was not correct. Expected 403, got 405
FAIL: Hand count after playing council_room was not correct. Expected 405, got 418
FAIL: Hand count after playing council_room was not correct. Expected 405, got 180
FAIL: Hand count after playing council_room was not correct. Expected 405, got 455
FAIL: Hand count after playing council_room was not correct. Expected 188, got 190
FAIL: Hand count after playing council_room was not correct. Expected 190, got 133
FAIL: Hand count after playing council_room was not correct. Expected 190, got 209
FAIL: Hand count after playing council_room was not correct. Expected 190, got 330
FAIL: Hand count after playing council_room was not correct. Expected 431, got 433
FAIL: Hand count after playing council_room was not correct. Expected 433, got 288
FAIL: Hand count after playing council_room was not correct. Expected 433, got 109
FAIL: Hand count after playing council_room was not correct. Expected 433, got 105
FAIL: Hand count after playing council_room was not correct. Expected 252, got 254
FAIL: Hand count after playing council_room was not correct. Expected 254, got 355
FAIL: Hand count after playing council_room was not correct. Expected 254, got 275
FAIL: Hand count after playing council_room was not correct. Expected 254, got 107
FAIL: Hand count after playing council_room was not correct. Expected 223, got 225
FAIL: Hand count after playing council_room was not correct. Expected 225, got 10
FAIL: Hand count after playing council_room was not correct. Expected 225, got 384
FAIL: Hand count after playing council_room was not correct. Expected 225, got 171
FAIL: Hand count after playing council_room was not correct. Expected 144, got 146
FAIL: Hand count after playing council_room was not correct. Expected 146, got 128
FAIL: Hand count after playing council_room was not correct. Expected 146, got 466
FAIL: Hand count after playing council_room was not correct. Expected 146, got 5
FAIL: Hand count after playing council_room was not correct. Expected 141, got 143
FAIL: Hand count after playing council_room was not correct. Expected 143, got 28
FAIL: Hand count after playing council_room was not correct. Expected 143, got 2
FAIL: Hand count after playing council_room was not correct. Expected 143, got 458
FAIL: Hand count after playing council_room was not correct. Expected 112, got 114
FAIL: Hand count after playing council_room was not correct. Expected 114, got 89
FAIL: Hand count after playing council_room was not correct. Expected 114, got 314
FAIL: Hand count after playing council_room was not correct. Expected 114, got 373
FAIL: Hand count after playing council_room was not correct. Expected 481, got 483
FAIL: Hand count after playing council_room was not correct. Expected 483, got 371
FAIL: Hand count after playing council_room was not correct. Expected 483, got 195
FAIL: Hand count after playing council_room was not correct. Expected 483, got 208
FAIL: Hand count after playing council_room was not correct. Expected 198, got 200
FAIL: Hand count after playing council_room was not correct. Expected 200, got 90
FAIL: Hand count after playing council_room was not correct. Expected 200, got 185
FAIL: Hand count after playing council_room was not correct. Expected 200, got 300
FAIL: Hand count after playing council_room was not correct. Expected 367, got 369
FAIL: Hand count after playing council_room was not correct. Expected 369, got 486
FAIL: Hand count after playing council_room was not correct. Expected 369, got 156
FAIL: Hand count after playing council_room was not correct. Expected 369, got 269
FAIL: Hand count after playing council_room was not correct. Expected 215, got 217
FAIL: Hand count after playing council_room was not correct. Expected 217, got 31
FAIL: Hand count after playing council_room was not correct. Expected 217, got 332
FAIL: Hand count after playing council_room was not correct. Expected 217, got 154
FAIL: Hand count after playing council_room was not correct. Expected 148, got 150
FAIL: Hand count after playing council_room was not correct. Expected 150, got 127
FAIL: Hand count after playing council_room was not correct. Expected 150, got 116
FAIL: Hand count after playing council_room was not correct. Expected 150, got 264
FAIL: Hand count after playing council_room was not correct. Expected 112, got 114
FAIL: Hand count after playing council_room was not correct. Expected 114, got 330
FAIL: Hand count after playing council_room was not correct. Expected 114, got 212
FAIL: Hand count after playing council_room was not correct. Expected 114, got 2
FAIL: Hand count after playing council_room was not correct. Expected 171, got 173
FAIL: Hand count after playing council_room was not correct. Expected 173, got 267
FAIL: Hand count after playing council_room was not correct. Expected 173, got 80
FAIL: Hand count after playing council_room was not correct. Expected 173, got 356
FAIL: Hand count after playing council_room was not correct. Expected 337, got 339
FAIL: Hand count after playing council_room was not correct. Expected 339, got 58
FAIL: Hand count after playing council_room was not correct. Expected 339, got 427
FAIL: Hand count after playing council_room was not correct. Expected 339, got 380
FAIL: Hand count after playing council_room was not correct. Expected 65, got 67
FAIL: Hand count after playing council_room was not correct. Expected 67, got 141
FAIL: Hand count after playing council_room was not correct. Expected 67, got 180
FAIL: Hand count after playing council_room was not correct. Expected 67, got 481
FAIL: Hand count after playing council_room was not correct. Expected 84, got 86
FAIL: Hand count after playing council_room was not correct. Expected 86, got 408
FAIL: Hand count after playing council_room was not correct. Expected 86, got 92
FAIL: Hand count after playing council_room was not correct. Expected 86, got 453
FAIL: Hand count after playing council_room was not correct. Expected 250, got 252
FAIL: Hand count after playing council_room was not correct. Expected 252, got 292
FAIL: Hand count after playing council_room was not correct. Expected 252, got 255
FAIL: Hand count after playing council_room was not correct. Expected 252, got 286
FAIL: Hand count after playing council_room was not correct. Expected 200, got 202
FAIL: Hand count after playing council_room was not correct. Expected 202, got 4
FAIL: Hand count after playing council_room was not correct. Expected 202, got 208
FAIL: Hand count after playing council_room was not correct. Expected 202, got 421
FAIL: Hand count after playing council_room was not correct. Expected 54, got 56
FAIL: Hand count after playing council_room was not correct. Expected 56, got 263
FAIL: Hand count after playing council_room was not correct. Expected 56, got 203
FAIL: Hand count after playing council_room was not correct. Expected 56, got 408
FAIL: Hand count after playing council_room was not correct. Expected 79, got 81
FAIL: Hand count after playing council_room was not correct. Expected 81, got 297
FAIL: Hand count after playing council_room was not correct. Expected 81, got 302
FAIL: Hand count after playing council_room was not correct. Expected 81, got 61
FAIL: Hand count after playing council_room was not correct. Expected 397, got 399
FAIL: Hand count after playing council_room was not correct. Expected 399, got 272
FAIL: Hand count after playing council_room was not correct. Expected 399, got 300
FAIL: Hand count after playing council_room was not correct. Expected 399, got 306
FAIL: Hand count after playing council_room was not correct. Expected 480, got 482
FAIL: Hand count after playing council_room was not correct. Expected 482, got 417
FAIL: Hand count after playing council_room was not correct. Expected 482, got 131
FAIL: Hand count after playing council_room was not correct. Expected 482, got 336
FAIL: Hand count after playing council_room was not correct. Expected 280, got 282
FAIL: Hand count after playing council_room was not correct. Expected 282, got 38
FAIL: Hand count after playing council_room was not correct. Expected 282, got 329
FAIL: Hand count after playing council_room was not correct. Expected 282, got 460
FAIL: Hand count after playing council_room was not correct. Expected 6, got 8
FAIL: Hand count after playing council_room was not correct. Expected 8, got 280
FAIL: Hand count after playing council_room was not correct. Expected 8, got 472
FAIL: Hand count after playing council_room was not correct. Expected 8, got 464
FAIL: Hand count after playing council_room was not correct. Expected 382, got 384
FAIL: Hand count after playing council_room was not correct. Expected 384, got 105
FAIL: Hand count after playing council_room was not correct. Expected 384, got 360
FAIL: Hand count after playing council_room was not correct. Expected 384, got 354
FAIL: Hand count after playing council_room was not correct. Expected 182, got 184
FAIL: Hand count after playing council_room was not correct. Expected 184, got 45
FAIL: Hand count after playing council_room was not correct. Expected 184, got 408
FAIL: Hand count after playing council_room was not correct. Expected 184, got 21
FAIL: Hand count after playing council_room was not correct. Expected 147, got 149
FAIL: Hand count after playing council_room was not correct. Expected 149, got 304
FAIL: Hand count after playing council_room was not correct. Expected 149, got 122
FAIL: Hand count after playing council_room was not correct. Expected 149, got 299
FAIL: Hand count after playing council_room was not correct. Expected 382, got 384
FAIL: Hand count after playing council_room was not correct. Expected 384, got 32
FAIL: Hand count after playing council_room was not correct. Expected 384, got 56
FAIL: Hand count after playing council_room was not correct. Expected 384, got 124
FAIL: Hand count after playing council_room was not correct. Expected 450, got 452
FAIL: Hand count after playing council_room was not correct. Expected 452, got 218
FAIL: Hand count after playing council_room was not correct. Expected 452, got 4
FAIL: Hand count after playing council_room was not correct. Expected 452, got 175
FAIL: Hand count after playing council_room was not correct. Expected 450, got 452
FAIL: Hand count after playing council_room was not correct. Expected 452, got 430
FAIL: Hand count after playing council_room was not correct. Expected 452, got 85
FAIL: Hand count after playing council_room was not correct. Expected 452, got 408
FAIL: Hand count after playing council_room was not correct. Expected 8, got 10
FAIL: Hand count after playing council_room was not correct. Expected 10, got 457
FAIL: Hand count after playing council_room was not correct. Expected 10, got 301
FAIL: Hand count after playing council_room was not correct. Expected 10, got 23
FAIL: Hand count after playing council_room was not correct. Expected 137, got 139
FAIL: Hand count after playing council_room was not correct. Expected 139, got 60
FAIL: Hand count after playing council_room was not correct. Expected 139, got 477
FAIL: Hand count after playing council_room was not correct. Expected 139, got 338
FAIL: Hand count after playing council_room was not correct. Expected 118, got 120
FAIL: Hand count after playing council_room was not correct. Expected 120, got 145
FAIL: Hand count after playing council_room was not correct. Expected 120, got 486
FAIL: Hand count after playing council_room was not correct. Expected 120, got 492
FAIL: Hand count after playing council_room was not correct. Expected 380, got 382
FAIL: Hand count after playing council_room was not correct. Expected 382, got 379
FAIL: Hand count after playing council_room was not correct. Expected 382, got 10
FAIL: Hand count after playing council_room was not correct. Expected 382, got 35
FAIL: Hand count after playing council_room was not correct. Expected 143, got 145
FAIL: Hand count after playing council_room was not correct. Expected 145, got 278
FAIL: Hand count after playing council_room was not correct. Expected 145, got 321
FAIL: Hand count after playing council_room was not correct. Expected 145, got 263
FAIL: Hand count after playing council_room was not correct. Expected 408, got 410
FAIL: Hand count after playing council_room was not correct. Expected 410, got 443
FAIL: Hand count after playing council_room was not correct. Expected 410, got 374
FAIL: Hand count after playing council_room was not correct. Expected 410, got 371
FAIL: Hand count after playing council_room was not correct. Expected 22, got 24
FAIL: Hand count after playing council_room was not correct. Expected 24, got 28
FAIL: Hand count after playing council_room was not correct. Expected 24, got 426
FAIL: Hand count after playing council_room was not correct. Expected 24, got 422
FAIL: Hand count after playing council_room was not correct. Expected 7, got 9
FAIL: Hand count after playing council_room was not correct. Expected 9, got 487
FAIL: Hand count after playing council_room was not correct. Expected 9, got 389
FAIL: Hand count after playing council_room was not correct. Expected 9, got 281
FAIL: Hand count after playing council_room was not correct. Expected 218, got 220
FAIL: Hand count after playing council_room was not correct. Expected 220, got 480
FAIL: Hand count after playing council_room was not correct. Expected 220, got 272
FAIL: Hand count after playing council_room was not correct. Expected 220, got 226
FAIL: Hand count after playing council_room was not correct. Expected 433, got 435
FAIL: Hand count after playing council_room was not correct. Expected 435, got 359
FAIL: Hand count after playing council_room was not correct. Expected 435, got 117
FAIL: Hand count after playing council_room was not correct. Expected 435, got 132
FAIL: Hand count after playing council_room was not correct. Expected 484, got 486
FAIL: Hand count after playing council_room was not correct. Expected 486, got 30
FAIL: Hand count after playing council_room was not correct. Expected 486, got 274
FAIL: Hand count after playing council_room was not correct. Expected 486, got 380
FAIL: Hand count after playing council_room was not correct. Expected 73, got 75
FAIL: Hand count after playing council_room was not correct. Expected 75, got 143
FAIL: Hand count after playing council_room was not correct. Expected 75, got 121
FAIL: Hand count after playing council_room was not correct. Expected 75, got 492
FAIL: Hand count after playing council_room was not correct. Expected 77, got 79
FAIL: Hand count after playing council_room was not correct. Expected 79, got 479
FAIL: Hand count after playing council_room was not correct. Expected 79, got 265
FAIL: Hand count after playing council_room was not correct. Expected 79, got 313
FAIL: Hand count after playing council_room was not correct. Expected 456, got 458
FAIL: Hand count after playing council_room was not correct. Expected 458, got 193
FAIL: Hand count after playing council_room was not correct. Expected 458, got 258
FAIL: Hand count after playing council_room was not correct. Expected 458, got 476
FAIL: Hand count after playing council_room was not correct. Expected 31, got 33
FAIL: Hand count after playing council_room was not correct. Expected 33, got 457
FAIL: Hand count after playing council_room was not correct. Expected 33, got 314
FAIL: Hand count after playing council_room was not correct. Expected 33, got 227
FAIL: Hand count after playing council_room was not correct. Expected 459, got 461
FAIL: Hand count after playing council_room was not correct. Expected 461, got 450
FAIL: Hand count after playing council_room was not correct. Expected 461, got 150
FAIL: Hand count after playing council_room was not correct. Expected 461, got 174
FAIL: Hand count after playing council_room was not correct. Expected 4, got 6
FAIL: Hand count after playing council_room was not correct. Expected 6, got 457
FAIL: Hand count after playing council_room was not correct. Expected 6, got 81
FAIL: Hand count after playing council_room was not correct. Expected 6, got 423
FAIL: Hand count after playing council_room was not correct. Expected 314, got 316
FAIL: Hand count after playing council_room was not correct. Expected 316, got 191
FAIL: Hand count after playing council_room was not correct. Expected 316, got 280
FAIL: Hand count after playing council_room was not correct. Expected 316, got 365
FAIL: Hand count after playing council_room was not correct. Expected 468, got 470
FAIL: Hand count after playing council_room was not correct. Expected 470, got 210
FAIL: Hand count after playing council_room was not correct. Expected 470, got 365
FAIL: Hand count after playing council_room was not correct. Expected 470, got 462
FAIL: Hand count after playing council_room was not correct. Expected 203, got 205
FAIL: Hand count after playing council_room was not correct. Expected 205, got 159
FAIL: Hand count after playing council_room was not correct. Expected 205, got 205
FAIL: Hand count after playing council_room was not correct. Expected 205, got 463
FAIL: Hand count after playing council_room was not correct. Expected 55, got 57
FAIL: Hand count after playing council_room was not correct. Expected 57, got 8
FAIL: Hand count after playing council_room was not correct. Expected 57, got 88
FAIL: Hand count after playing council_room was not correct. Expected 57, got 361
FAIL: Hand count after playing council_room was not correct. Expected 148, got 150
FAIL: Hand count after playing council_room was not correct. Expected 150, got 223
FAIL: Hand count after playing council_room was not correct. Expected 150, got 220
FAIL: Hand count after playing council_room was not correct. Expected 150, got 436
FAIL: Hand count after playing council_room was not correct. Expected 220, got 222
FAIL: Hand count after playing council_room was not correct. Expected 222, got 467
FAIL: Hand count after playing council_room was not correct. Expected 222, got 261
FAIL: Hand count after playing council_room was not correct. Expected 222, got 217
FAIL: Hand count after playing council_room was not correct. Expected 202, got 204
FAIL: Hand count after playing council_room was not correct. Expected 204, got 443
FAIL: Hand count after playing council_room was not correct. Expected 204, got 277
FAIL: Hand count after playing council_room was not correct. Expected 204, got 370
FAIL: Hand count after playing council_room was not correct. Expected 20, got 22
FAIL: Hand count after playing council_room was not correct. Expected 22, got 307
FAIL: Hand count after playing council_room was not correct. Expected 22, got 500
FAIL: Hand count after playing council_room was not correct. Expected 22, got 329
FAIL: Hand count after playing council_room was not correct. Expected 78, got 80
FAIL: Hand count after playing council_room was not correct. Expected 80, got 475
FAIL: Hand count after playing council_room was not correct. Expected 80, got 397
FAIL: Hand count after playing council_room was not correct. Expected 80, got 147
FAIL: Hand count after playing council_room was not correct. Expected 238, got 240
FAIL: Hand count after playing council_room was not correct. Expected 240, got 204
FAIL: Hand count after playing council_room was not correct. Expected 240, got 411
FAIL: Hand count after playing council_room was not correct. Expected 240, got 266
FAIL: Hand count after playing council_room was not correct. Expected 460, got 462
FAIL: Hand count after playing council_room was not correct. Expected 462, got 101
FAIL: Hand count after playing council_room was not correct. Expected 462, got 352
FAIL: Hand count after playing council_room was not correct. Expected 462, got 147
FAIL: Hand count after playing council_room was not correct. Expected 352, got 354
FAIL: Hand count after playing council_room was not correct. Expected 354, got 421
FAIL: Hand count after playing council_room was not correct. Expected 354, got 124
FAIL: Hand count after playing council_room was not correct. Expected 354, got 479
FAIL: Hand count after playing council_room was not correct. Expected 208, got 210
FAIL: Hand count after playing council_room was not correct. Expected 210, got 267
FAIL: Hand count after playing council_room was not correct. Expected 210, got 431
FAIL: Hand count after playing council_room was not correct. Expected 210, got 407
FAIL: Hand count after playing council_room was not correct. Expected 366, got 368
FAIL: Hand count after playing council_room was not correct. Expected 368, got 302
FAIL: Hand count after playing council_room was not correct. Expected 368, got 108
FAIL: Hand count after playing council_room was not correct. Expected 368, got 347
FAIL: Hand count after playing council_room was not correct. Expected 405, got 407
FAIL: Hand count after playing council_room was not correct. Expected 407, got 135
FAIL: Hand count after playing council_room was not correct. Expected 407, got 355
FAIL: Hand count after playing council_room was not correct. Expected 407, got 212
FAIL: Hand count after playing council_room was not correct. Expected 87, got 89
FAIL: Hand count after playing council_room was not correct. Expected 89, got 74
FAIL: Hand count after playing council_room was not correct. Expected 89, got 471
FAIL: Hand count after playing council_room was not correct. Expected 89, got 308
FAIL: Hand count after playing council_room was not correct. Expected 293, got 295
FAIL: Hand count after playing council_room was not correct. Expected 295, got 232
FAIL: Hand count after playing council_room was not correct. Expected 295, got 153
FAIL: Hand count after playing council_room was not correct. Expected 295, got 57
FAIL: Hand count after playing council_room was not correct. Expected 494, got 496
FAIL: Hand count after playing council_room was not correct. Expected 496, got 164
FAIL: Hand count after playing council_room was not correct. Expected 496, got 84
FAIL: Hand count after playing council_room was not correct. Expected 496, got 249
FAIL: Hand count after playing council_room was not correct. Expected 429, got 431
FAIL: Hand count after playing council_room was not correct. Expected 431, got 24
FAIL: Hand count after playing council_room was not correct. Expected 431, got 297
FAIL: Hand count after playing council_room was not correct. Expected 431, got 62
FAIL: Hand count after playing council_room was not correct. Expected 434, got 436
FAIL: Hand count after playing council_room was not correct. Expected 436, got 191
FAIL: Hand count after playing council_room was not correct. Expected 436, got 335
FAIL: Hand count after playing council_room was not correct. Expected 436, got 373
FAIL: Hand count after playing council_room was not correct. Expected 497, got 499
FAIL: Hand count after playing council_room was not correct. Expected 499, got 268
FAIL: Hand count after playing council_room was not correct. Expected 499, got 270
FAIL: Hand count after playing council_room was not correct. Expected 499, got 390
FAIL: Hand count after playing council_room was not correct. Expected 79, got 81
FAIL: Hand count after playing council_room was not correct. Expected 81, got 56
FAIL: Hand count after playing council_room was not correct. Expected 81, got 224
FAIL: Hand count after playing council_room was not correct. Expected 81, got 434
FAIL: Hand count after playing council_room was not correct. Expected 276, got 278
FAIL: Hand count after playing council_room was not correct. Expected 278, got 329
FAIL: Hand count after playing council_room was not correct. Expected 278, got 339
FAIL: Hand count after playing council_room was not correct. Expected 278, got 123
FAIL: Hand count after playing council_room was not correct. Expected 282, got 284
FAIL: Hand count after playing council_room was not correct. Expected 284, got 220
FAIL: Hand count after playing council_room was not correct. Expected 284, got 486
FAIL: Hand count after playing council_room was not correct. Expected 284, got 378
FAIL: Hand count after playing council_room was not correct. Expected 395, got 397
FAIL: Hand count after playing council_room was not correct. Expected 397, got 361
FAIL: Hand count after playing council_room was not correct. Expected 397, got 28
FAIL: Hand count after playing council_room was not correct. Expected 397, got 423
FAIL: Hand count after playing council_room was not correct. Expected 65, got 67
FAIL: Hand count after playing council_room was not correct. Expected 67, got 379
FAIL: Hand count after playing council_room was not correct. Expected 67, got 158
FAIL: Hand count after playing council_room was not correct. Expected 67, got 64
FAIL: Hand count after playing council_room was not correct. Expected 312, got 314
FAIL: Hand count after playing council_room was not correct. Expected 314, got 39
FAIL: Hand count after playing council_room was not correct. Expected 314, got 328
FAIL: Hand count after playing council_room was not correct. Expected 314, got 193
FAIL: Hand count after playing council_room was not correct. Expected 223, got 225
FAIL: Hand count after playing council_room was not correct. Expected 225, got 195
FAIL: Hand count after playing council_room was not correct. Expected 225, got 180
FAIL: Hand count after playing council_room was not correct. Expected 225, got 173
FAIL: Hand count after playing council_room was not correct. Expected 413, got 415
FAIL: Hand count after playing council_room was not correct. Expected 415, got 146
FAIL: Hand count after playing council_room was not correct. Expected 415, got 338
FAIL: Hand count after playing council_room was not correct. Expected 415, got 300
FAIL: Hand count after playing council_room was not correct. Expected 481, got 483
FAIL: Hand count after playing council_room was not correct. Expected 483, got 276
FAIL: Hand count after playing council_room was not correct. Expected 483, got 496
FAIL: Hand count after playing council_room was not correct. Expected 483, got 449
FAIL: Hand count after playing council_room was not correct. Expected 377, got 379
FAIL: Hand count after playing council_room was not correct. Expected 379, got 413
FAIL: Hand count after playing council_room was not correct. Expected 379, got 197
FAIL: Hand count after playing council_room was not correct. Expected 379, got 297
FAIL: Hand count after playing council_room was not correct. Expected 441, got 443
FAIL: Hand count after playing council_room was not correct. Expected 443, got 239
FAIL: Hand count after playing council_room was not correct. Expected 443, got 243
FAIL: Hand count after playing council_room was not correct. Expected 443, got 170
FAIL: Hand count after playing council_room was not correct. Expected 274, got 276
FAIL: Hand count after playing council_room was not correct. Expected 276, got 77
FAIL: Hand count after playing council_room was not correct. Expected 276, got 224
FAIL: Hand count after playing council_room was not correct. Expected 276, got 460
FAIL: Hand count after playing council_room was not correct. Expected 327, got 329
FAIL: Hand count after playing council_room was not correct. Expected 329, got 385
FAIL: Hand count after playing council_room was not correct. Expected 329, got 133
FAIL: Hand count after playing council_room was not correct. Expected 329, got 252
FAIL: Hand count after playing council_room was not correct. Expected 80, got 82
FAIL: Hand count after playing council_room was not correct. Expected 82, got 449
FAIL: Hand count after playing council_room was not correct. Expected 82, got 115
FAIL: Hand count after playing council_room was not correct. Expected 82, got 314
FAIL: Hand count after playing council_room was not correct. Expected 419, got 421
FAIL: Hand count after playing council_room was not correct. Expected 421, got 36
FAIL: Hand count after playing council_room was not correct. Expected 421, got 418
FAIL: Hand count after playing council_room was not correct. Expected 421, got 345
FAIL: Hand count after playing council_room was not correct. Expected 144, got 146
FAIL: Hand count after playing council_room was not correct. Expected 146, got 123
FAIL: Hand count after playing council_room was not correct. Expected 146, got 161
FAIL: Hand count after playing council_room was not correct. Expected 146, got 87
FAIL: Hand count after playing council_room was not correct. Expected 38, got 40
FAIL: Hand count after playing council_room was not correct. Expected 40, got 452
FAIL: Hand count after playing council_room was not correct. Expected 40, got 330
FAIL: Hand count after playing council_room was not correct. Expected 40, got 408
FAIL: Hand count after playing council_room was not correct. Expected 449, got 451
FAIL: Hand count after playing council_room was not correct. Expected 451, got 383
FAIL: Hand count after playing council_room was not correct. Expected 451, got 391
FAIL: Hand count after playing council_room was not correct. Expected 451, got 210
FAIL: Hand count after playing council_room was not correct. Expected 52, got 54
FAIL: Hand count after playing council_room was not correct. Expected 54, got 137
FAIL: Hand count after playing council_room was not correct. Expected 54, got 295
FAIL: Hand count after playing council_room was not correct. Expected 54, got 455
FAIL: Hand count after playing council_room was not correct. Expected 233, got 235
FAIL: Hand count after playing council_room was not correct. Expected 235, got 113
FAIL: Hand count after playing council_room was not correct. Expected 235, got 96
FAIL: Hand count after playing council_room was not correct. Expected 235, got 264
FAIL: Hand count after playing council_room was not correct. Expected 301, got 303
FAIL: Hand count after playing council_room was not correct. Expected 303, got 51
FAIL: Hand count after playing council_room was not correct. Expected 303, got 97
FAIL: Hand count after playing council_room was not correct. Expected 303, got 358
FAIL: Hand count after playing council_room was not correct. Expected 381, got 383
FAIL: Hand count after playing council_room was not correct. Expected 383, got 439
FAIL: Hand count after playing council_room was not correct. Expected 383, got 437
FAIL: Hand count after playing council_room was not correct. Expected 383, got 423
FAIL: Hand count after playing council_room was not correct. Expected 87, got 89
FAIL: Hand count after playing council_room was not correct. Expected 89, got 5
FAIL: Hand count after playing council_room was not correct. Expected 89, got 463
FAIL: Hand count after playing council_room was not correct. Expected 89, got 211
FAIL: Hand count after playing council_room was not correct. Expected 464, got 466
FAIL: Hand count after playing council_room was not correct. Expected 466, got 381
FAIL: Hand count after playing council_room was not correct. Expected 466, got 206
FAIL: Hand count after playing council_room was not correct. Expected 466, got 467
FAIL: Hand count after playing council_room was not correct. Expected 323, got 325
FAIL: Hand count after playing council_room was not correct. Expected 325, got 331
FAIL: Hand count after playing council_room was not correct. Expected 325, got 229
FAIL: Hand count after playing council_room was not correct. Expected 325, got 329
FAIL: Hand count after playing council_room was not correct. Expected 216, got 218
FAIL: Hand count after playing council_room was not correct. Expected 218, got 191
FAIL: Hand count after playing council_room was not correct. Expected 218, got 166
FAIL: Hand count after playing council_room was not correct. Expected 218, got 313
FAIL: Hand count after playing council_room was not correct. Expected 279, got 281
FAIL: Hand count after playing council_room was not correct. Expected 281, got 11
FAIL: Hand count after playing council_room was not correct. Expected 281, got 198
FAIL: Hand count after playing council_room was not correct. Expected 281, got 490
FAIL: Hand count after playing council_room was not correct. Expected 477, got 479
FAIL: Hand count after playing council_room was not correct. Expected 479, got 124
FAIL: Hand count after playing council_room was not correct. Expected 479, got 417
FAIL: Hand count after playing council_room was not correct. Expected 479, got 266
FAIL: Hand count after playing council_room was not correct. Expected 175, got 177
FAIL: Hand count after playing council_room was not correct. Expected 177, got 42
FAIL: Hand count after playing council_room was not correct. Expected 177, got 407
FAIL: Hand count after playing council_room was not correct. Expected 177, got 35
FAIL: Hand count after playing council_room was not correct. Expected 282, got 284
FAIL: Hand count after playing council_room was not correct. Expected 284, got 3
FAIL: Hand count after playing council_room was not correct. Expected 284, got 188
FAIL: Hand count after playing council_room was not correct. Expected 284, got 397
FAIL: Hand count after playing council_room was not correct. Expected 349, got 351
FAIL: Hand count after playing council_room was not correct. Expected 351, got 226
FAIL: Hand count after playing council_room was not correct. Expected 351, got 460
FAIL: Hand count after playing council_room was not correct. Expected 351, got 396
FAIL: Hand count after playing council_room was not correct. Expected 202, got 204
FAIL: Hand count after playing council_room was not correct. Expected 204, got 418
FAIL: Hand count after playing council_room was not correct. Expected 204, got 15
FAIL: Hand count after playing council_room was not correct. Expected 204, got 177
FAIL: Hand count after playing council_room was not correct. Expected 193, got 195
FAIL: Hand count after playing council_room was not correct. Expected 195, got 311
FAIL: Hand count after playing council_room was not correct. Expected 195, got 334
FAIL: Hand count after playing council_room was not correct. Expected 195, got 5
FAIL: Hand count after playing council_room was not correct. Expected 221, got 223
FAIL: Hand count after playing council_room was not correct. Expected 223, got 206
FAIL: Hand count after playing council_room was not correct. Expected 223, got 387
FAIL: Hand count after playing council_room was not correct. Expected 223, got 119
FAIL: Hand count after playing council_room was not correct. Expected 27, got 29
FAIL: Hand count after playing council_room was not correct. Expected 29, got 442
FAIL: Hand count after playing council_room was not correct. Expected 29, got 69
FAIL: Hand count after playing council_room was not correct. Expected 29, got 447
FAIL: Hand count after playing council_room was not correct. Expected 218, got 220
FAIL: Hand count after playing council_room was not correct. Expected 220, got 275
FAIL: Hand count after playing council_room was not correct. Expected 220, got 159
FAIL: Hand count after playing council_room was not correct. Expected 220, got 465
FAIL: Hand count after playing council_room was not correct. Expected 219, got 221
FAIL: Hand count after playing council_room was not correct. Expected 221, got 220
FAIL: Hand count after playing council_room was not correct. Expected 221, got 498
FAIL: Hand count after playing council_room was not correct. Expected 221, got 92
FAIL: Hand count after playing council_room was not correct. Expected 338, got 340
FAIL: Hand count after playing council_room was not correct. Expected 340, got 185
FAIL: Hand count after playing council_room was not correct. Expected 340, got 304
FAIL: Hand count after playing council_room was not correct. Expected 340, got 400
FAIL: Hand count after playing council_room was not correct. Expected 428, got 430
FAIL: Hand count after playing council_room was not correct. Expected 430, got 46
FAIL: Hand count after playing council_room was not correct. Expected 430, got 390
FAIL: Hand count after playing council_room was not correct. Expected 430, got 22
FAIL: Hand count after playing council_room was not correct. Expected 87, got 89
FAIL: Hand count after playing council_room was not correct. Expected 89, got 266
FAIL: Hand count after playing council_room was not correct. Expected 89, got 283
FAIL: Hand count after playing council_room was not correct. Expected 89, got 22
FAIL: Hand count after playing council_room was not correct. Expected 285, got 287
FAIL: Hand count after playing council_room was not correct. Expected 287, got 417
FAIL: Hand count after playing council_room was not correct. Expected 287, got 6
FAIL: Hand count after playing council_room was not correct. Expected 287, got 490
FAIL: Hand count after playing council_room was not correct. Expected 270, got 272
FAIL: Hand count after playing council_room was not correct. Expected 272, got 462
FAIL: Hand count after playing council_room was not correct. Expected 272, got 418
FAIL: Hand count after playing council_room was not correct. Expected 272, got 174
FAIL: Hand count after playing council_room was not correct. Expected 448, got 450
FAIL: Hand count after playing council_room was not correct. Expected 450, got 188
FAIL: Hand count after playing council_room was not correct. Expected 450, got 301
FAIL: Hand count after playing council_room was not correct. Expected 450, got 51
FAIL: Hand count after playing council_room was not correct. Expected 362, got 364
FAIL: Hand count after playing council_room was not correct. Expected 364, got 321
FAIL: Hand count after playing council_room was not correct. Expected 364, got 431
FAIL: Hand count after playing council_room was not correct. Expected 364, got 438
FAIL: Hand count after playing council_room was not correct. Expected 398, got 400
FAIL: Hand count after playing council_room was not correct. Expected 400, got 107
FAIL: Hand count after playing council_room was not correct. Expected 400, got 31
FAIL: Hand count after playing council_room was not correct. Expected 400, got 105
FAIL: Hand count after playing council_room was not correct. Expected 358, got 360
FAIL: Hand count after playing council_room was not correct. Expected 360, got 480
FAIL: Hand count after playing council_room was not correct. Expected 360, got 53
FAIL: Hand count after playing council_room was not correct. Expected 360, got 132
FAIL: Hand count after playing council_room was not correct. Expected 483, got 485
FAIL: Hand count after playing council_room was not correct. Expected 485, got 348
FAIL: Hand count after playing council_room was not correct. Expected 485, got 158
FAIL: Hand count after playing council_room was not correct. Expected 485, got 5
FAIL: Hand count after playing council_room was not correct. Expected 239, got 241
FAIL: Hand count after playing council_room was not correct. Expected 241, got 176
FAIL: Hand count after playing council_room was not correct. Expected 241, got 271
FAIL: Hand count after playing council_room was not correct. Expected 241, got 497
FAIL: Hand count after playing council_room was not correct. Expected 119, got 121
FAIL: Hand count after playing council_room was not correct. Expected 121, got 135
FAIL: Hand count after playing council_room was not correct. Expected 121, got 298
FAIL: Hand count after playing council_room was not correct. Expected 121, got 227
FAIL: Hand count after playing council_room was not correct. Expected 345, got 347
FAIL: Hand count after playing council_room was not correct. Expected 347, got 176
FAIL: Hand count after playing council_room was not correct. Expected 347, got 211
FAIL: Hand count after playing council_room was not correct. Expected 347, got 77
FAIL: Hand count after playing council_room was not correct. Expected 6, got 8
FAIL: Hand count after playing council_room was not correct. Expected 8, got 471
FAIL: Hand count after playing council_room was not correct. Expected 8, got 315
FAIL: Hand count after playing council_room was not correct. Expected 8, got 197
FAIL: Hand count after playing council_room was not correct. Expected 88, got 90
FAIL: Hand count after playing council_room was not correct. Expected 90, got 329
FAIL: Hand count after playing council_room was not correct. Expected 90, got 167
FAIL: Hand count after playing council_room was not correct. Expected 90, got 189
FAIL: Hand count after playing council_room was not correct. Expected 162, got 164
FAIL: Hand count after playing council_room was not correct. Expected 164, got 63
FAIL: Hand count after playing council_room was not correct. Expected 164, got 272
FAIL: Hand count after playing council_room was not correct. Expected 164, got 19
FAIL: Hand count after playing council_room was not correct. Expected 168, got 170
FAIL: Hand count after playing council_room was not correct. Expected 170, got 470
FAIL: Hand count after playing council_room was not correct. Expected 170, got 268
FAIL: Hand count after playing council_room was not correct. Expected 170, got 204
FAIL: Hand count after playing council_room was not correct. Expected 144, got 146
FAIL: Hand count after playing council_room was not correct. Expected 146, got 464
FAIL: Hand count after playing council_room was not correct. Expected 146, got 435
FAIL: Hand count after playing council_room was not correct. Expected 146, got 168
FAIL: Hand count after playing council_room was not correct. Expected 418, got 420
FAIL: Hand count after playing council_room was not correct. Expected 420, got 376
FAIL: Hand count after playing council_room was not correct. Expected 420, got 64
FAIL: Hand count after playing council_room was not correct. Expected 420, got 212
FAIL: Hand count after playing council_room was not correct. Expected 433, got 435
FAIL: Hand count after playing council_room was not correct. Expected 435, got 372
FAIL: Hand count after playing council_room was not correct. Expected 435, got 98
FAIL: Hand count after playing council_room was not correct. Expected 435, got 472
FAIL: Hand count after playing council_room was not correct. Expected 214, got 216
FAIL: Hand count after playing council_room was not correct. Expected 216, got 448
FAIL: Hand count after playing council_room was not correct. Expected 216, got 14
FAIL: Hand count after playing council_room was not correct. Expected 216, got 156
FAIL: Hand count after playing council_room was not correct. Expected 230, got 232
FAIL: Hand count after playing council_room was not correct. Expected 232, got 403
FAIL: Hand count after playing council_room was not correct. Expected 232, got 472
FAIL: Hand count after playing council_room was not correct. Expected 232, got 185
FAIL: Hand count after playing council_room was not correct. Expected 423, got 425
FAIL: Hand count after playing council_room was not correct. Expected 425, got 167
FAIL: Hand count after playing council_room was not correct. Expected 425, got 362
FAIL: Hand count after playing council_room was not correct. Expected 425, got 262
FAIL: Hand count after playing council_room was not correct. Expected 4, got 6
FAIL: Hand count after playing council_room was not correct. Expected 6, got 397
FAIL: Hand count after playing council_room was not correct. Expected 6, got 137
FAIL: Hand count after playing council_room was not correct. Expected 6, got 436
FAIL: Hand count after playing council_room was not correct. Expected 180, got 182
FAIL: Hand count after playing council_room was not correct. Expected 182, got 57
FAIL: Hand count after playing council_room was not correct. Expected 182, got 339
FAIL: Hand count after playing council_room was not correct. Expected 182, got 83
FAIL: Hand count after playing council_room was not correct. Expected 148, got 150
FAIL: Hand count after playing council_room was not correct. Expected 150, got 138
FAIL: Hand count after playing council_room was not correct. Expected 150, got 398
FAIL: Hand count after playing council_room was not correct. Expected 150, got 384
FAIL: Hand count after playing council_room was not correct. Expected 484, got 486
FAIL: Hand count after playing council_room was not correct. Expected 486, got 146
FAIL: Hand count after playing council_room was not correct. Expected 486, got 217
FAIL: Hand count after playing council_room was not correct. Expected 486, got 325
FAIL: Hand count after playing council_room was not correct. Expected 238, got 240
FAIL: Hand count after playing council_room was not correct. Expected 240, got 139
FAIL: Hand count after playing council_room was not correct. Expected 240, got 37
FAIL: Hand count after playing council_room was not correct. Expected 240, got 310
FAIL: Hand count after playing council_room was not correct. Expected 190, got 192
FAIL: Hand count after playing council_room was not correct. Expected 192, got 7
FAIL: Hand count after playing council_room was not correct. Expected 192, got 331
FAIL: Hand count after playing council_room was not correct. Expected 192, got 213
FAIL: Hand count after playing council_room was not correct. Expected 136, got 138
FAIL: Hand count after playing council_room was not correct. Expected 138, got 204
FAIL: Hand count after playing council_room was not correct. Expected 138, got 334
FAIL: Hand count after playing council_room was not correct. Expected 138, got 109
FAIL: Hand count after playing council_room was not correct. Expected 231, got 233
FAIL: Hand count after playing council_room was not correct. Expected 233, got 467
FAIL: Hand count after playing council_room was not correct. Expected 233, got 318
FAIL: Hand count after playing council_room was not correct. Expected 233, got 411
FAIL: Hand count after playing council_room was not correct. Expected 433, got 435
FAIL: Hand count after playing council_room was not correct. Expected 435, got 104
FAIL: Hand count after playing council_room was not correct. Expected 435, got 280
FAIL: Hand count after playing council_room was not correct. Expected 435, got 500
FAIL: Hand count after playing council_room was not correct. Expected 225, got 227
FAIL: Hand count after playing council_room was not correct. Expected 227, got 260
FAIL: Hand count after playing council_room was not correct. Expected 227, got 261
FAIL: Hand count after playing council_room was not correct. Expected 227, got 177
FAIL: Hand count after playing council_room was not correct. Expected 17, got 19
FAIL: Hand count after playing council_room was not correct. Expected 19, got 395
FAIL: Hand count after playing council_room was not correct. Expected 19, got 167
FAIL: Hand count after playing council_room was not correct. Expected 19, got 62
FAIL: Hand count after playing council_room was not correct. Expected 333, got 335
FAIL: Hand count after playing council_room was not correct. Expected 335, got 324
FAIL: Hand count after playing council_room was not correct. Expected 335, got 492
FAIL: Hand count after playing council_room was not correct. Expected 335, got 286
FAIL: Hand count after playing council_room was not correct. Expected 68, got 70
FAIL: Hand count after playing council_room was not correct. Expected 70, got 100
FAIL: Hand count after playing council_room was not correct. Expected 70, got 38
FAIL: Hand count after playing council_room was not correct. Expected 70, got 460
FAIL: Hand count after playing council_room was not correct. Expected 329, got 331
FAIL: Hand count after playing council_room was not correct. Expected 331, got 372
FAIL: Hand count after playing council_room was not correct. Expected 331, got 143
FAIL: Hand count after playing council_room was not correct. Expected 331, got 461
FAIL: Hand count after playing council_room was not correct. Expected 224, got 226
FAIL: Hand count after playing council_room was not correct. Expected 226, got 237
FAIL: Hand count after playing council_room was not correct. Expected 226, got 119
FAIL: Hand count after playing council_room was not correct. Expected 226, got 72
FAIL: Hand count after playing council_room was not correct. Expected 277, got 279
FAIL: Hand count after playing council_room was not correct. Expected 279, got 377
FAIL: Hand count after playing council_room was not correct. Expected 279, got 136
FAIL: Hand count after playing council_room was not correct. Expected 279, got 283
FAIL: Hand count after playing council_room was not correct. Expected 229, got 231
FAIL: Hand count after playing council_room was not correct. Expected 231, got 283
FAIL: Hand count after playing council_room was not correct. Expected 231, got 15
FAIL: Hand count after playing council_room was not correct. Expected 231, got 291
FAIL: Hand count after playing council_room was not correct. Expected 318, got 320
FAIL: Hand count after playing council_room was not correct. Expected 320, got 128
FAIL: Hand count after playing council_room was not correct. Expected 320, got 132
FAIL: Hand count after playing council_room was not correct. Expected 320, got 374
FAIL: Hand count after playing council_room was not correct. Expected 451, got 453
FAIL: Hand count after playing council_room was not correct. Expected 453, got 10
FAIL: Hand count after playing council_room was not correct. Expected 453, got 63
FAIL: Hand count after playing council_room was not correct. Expected 453, got 38
FAIL: Hand count after playing council_room was not correct. Expected 373, got 375
FAIL: Hand count after playing council_room was not correct. Expected 375, got 57
FAIL: Hand count after playing council_room was not correct. Expected 375, got 370
FAIL: Hand count after playing council_room was not correct. Expected 375, got 208
FAIL: Hand count after playing council_room was not correct. Expected 488, got 490
FAIL: Hand count after playing council_room was not correct. Expected 490, got 36
FAIL: Hand count after playing council_room was not correct. Expected 490, got 338
FAIL: Hand count after playing council_room was not correct. Expected 490, got 35
FAIL: Hand count after playing council_room was not correct. Expected 162, got 164
FAIL: Hand count after playing council_room was not correct. Expected 164, got 322
FAIL: Hand count after playing council_room was not correct. Expected 164, got 37
FAIL: Hand count after playing council_room was not correct. Expected 164, got 311
FAIL: Hand count after playing council_room was not correct. Expected 53, got 55
FAIL: Hand count after playing council_room was not correct. Expected 55, got 323
FAIL: Hand count after playing council_room was not correct. Expected 55, got 315
FAIL: Hand count after playing council_room was not correct. Expected 55, got 356
FAIL: Hand count after playing council_room was not correct. Expected 324, got 326
FAIL: Hand count after playing council_room was not correct. Expected 326, got 301
FAIL: Hand count after playing council_room was not correct. Expected 326, got 459
FAIL: Hand count after playing council_room was not correct. Expected 326, got 36
FAIL: Hand count after playing council_room was not correct. Expected 134, got 136
FAIL: Hand count after playing council_room was not correct. Expected 136, got 167
FAIL: Hand count after playing council_room was not correct. Expected 136, got 148
FAIL: Hand count after playing council_room was not correct. Expected 136, got 286
FAIL: Hand count after playing council_room was not correct. Expected 447, got 449
FAIL: Hand count after playing council_room was not correct. Expected 449, got 40
FAIL: Hand count after playing council_room was not correct. Expected 449, got 369
FAIL: Hand count after playing council_room was not correct. Expected 449, got 374
FAIL: Hand count after playing council_room was not correct. Expected 301, got 303
FAIL: Hand count after playing council_room was not correct. Expected 303, got 36
FAIL: Hand count after playing council_room was not correct. Expected 303, got 340
FAIL: Hand count after playing council_room was not correct. Expected 303, got 377
FAIL: Hand count after playing council_room was not correct. Expected 250, got 252
FAIL: Hand count after playing council_room was not correct. Expected 252, got 229
FAIL: Hand count after playing council_room was not correct. Expected 252, got 62
FAIL: Hand count after playing council_room was not correct. Expected 252, got 358
FAIL: Hand count after playing council_room was not correct. Expected 321, got 323
FAIL: Hand count after playing council_room was not correct. Expected 323, got 163
FAIL: Hand count after playing council_room was not correct. Expected 323, got 53
FAIL: Hand count after playing council_room was not correct. Expected 323, got 12
FAIL: Hand count after playing council_room was not correct. Expected 171, got 173
FAIL: Hand count after playing council_room was not correct. Expected 173, got 59
FAIL: Hand count after playing council_room was not correct. Expected 173, got 434
FAIL: Hand count after playing council_room was not correct. Expected 173, got 204
FAIL: Hand count after playing council_room was not correct. Expected 217, got 219
FAIL: Hand count after playing council_room was not correct. Expected 219, got 339
FAIL: Hand count after playing council_room was not correct. Expected 219, got 20
FAIL: Hand count after playing council_room was not correct. Expected 219, got 164
FAIL: Hand count after playing council_room was not correct. Expected 263, got 265
FAIL: Hand count after playing council_room was not correct. Expected 265, got 183
FAIL: Hand count after playing council_room was not correct. Expected 265, got 384
FAIL: Hand count after playing council_room was not correct. Expected 265, got 90
FAIL: Hand count after playing council_room was not correct. Expected 99, got 101
FAIL: Hand count after playing council_room was not correct. Expected 101, got 364
FAIL: Hand count after playing council_room was not correct. Expected 101, got 228
FAIL: Hand count after playing council_room was not correct. Expected 101, got 324
FAIL: Hand count after playing council_room was not correct. Expected 409, got 411
FAIL: Hand count after playing council_room was not correct. Expected 411, got 50
FAIL: Hand count after playing council_room was not correct. Expected 411, got 302
FAIL: Hand count after playing council_room was not correct. Expected 411, got 155
FAIL: Hand count after playing council_room was not correct. Expected 471, got 473
FAIL: Hand count after playing council_room was not correct. Expected 473, got 97
FAIL: Hand count after playing council_room was not correct. Expected 473, got 430
FAIL: Hand count after playing council_room was not correct. Expected 473, got 213
FAIL: Hand count after playing council_room was not correct. Expected 470, got 472
FAIL: Hand count after playing council_room was not correct. Expected 472, got 489
FAIL: Hand count after playing council_room was not correct. Expected 472, got 439
FAIL: Hand count after playing council_room was not correct. Expected 472, got 453
FAIL: Hand count after playing council_room was not correct. Expected 175, got 177
FAIL: Hand count after playing council_room was not correct. Expected 177, got 271
FAIL: Hand count after playing council_room was not correct. Expected 177, got 377
FAIL: Hand count after playing council_room was not correct. Expected 177, got 284
FAIL: Hand count after playing council_room was not correct. Expected 454, got 456
FAIL: Hand count after playing council_room was not correct. Expected 456, got 270
FAIL: Hand count after playing council_room was not correct. Expected 456, got 253
FAIL: Hand count after playing council_room was not correct. Expected 456, got 218
FAIL: Hand count after playing council_room was not correct. Expected 440, got 442
FAIL: Hand count after playing council_room was not correct. Expected 442, got 293
FAIL: Hand count after playing council_room was not correct. Expected 442, got 54
FAIL: Hand count after playing council_room was not correct. Expected 442, got 64
FAIL: Hand count after playing council_room was not correct. Expected 164, got 166
FAIL: Hand count after playing council_room was not correct. Expected 166, got 127
FAIL: Hand count after playing council_room was not correct. Expected 166, got 202
FAIL: Hand count after playing council_room was not correct. Expected 166, got 352
FAIL: Hand count after playing council_room was not correct. Expected 149, got 151
FAIL: Hand count after playing council_room was not correct. Expected 151, got 264
FAIL: Hand count after playing council_room was not correct. Expected 151, got 291
FAIL: Hand count after playing council_room was not correct. Expected 151, got 177
FAIL: Hand count after playing council_room was not correct. Expected 216, got 218
FAIL: Hand count after playing council_room was not correct. Expected 218, got 56
FAIL: Hand count after playing council_room was not correct. Expected 218, got 411
FAIL: Hand count after playing council_room was not correct. Expected 218, got 193
FAIL: Hand count after playing council_room was not correct. Expected 452, got 454
FAIL: Hand count after playing council_room was not correct. Expected 454, got 140
FAIL: Hand count after playing council_room was not correct. Expected 454, got 348
FAIL: Hand count after playing council_room was not correct. Expected 454, got 90
FAIL: Hand count after playing council_room was not correct. Expected 155, got 157
FAIL: Hand count after playing council_room was not correct. Expected 157, got 88
FAIL: Hand count after playing council_room was not correct. Expected 157, got 209
FAIL: Hand count after playing council_room was not correct. Expected 157, got 298
FAIL: Hand count after playing council_room was not correct. Expected 327, got 329
FAIL: Hand count after playing council_room was not correct. Expected 329, got 88
FAIL: Hand count after playing council_room was not correct. Expected 329, got 437
FAIL: Hand count after playing council_room was not correct. Expected 329, got 370
FAIL: Hand count after playing council_room was not correct. Expected 308, got 310
FAIL: Hand count after playing council_room was not correct. Expected 310, got 108
FAIL: Hand count after playing council_room was not correct. Expected 310, got 42
FAIL: Hand count after playing council_room was not correct. Expected 310, got 426
FAIL: Hand count after playing council_room was not correct. Expected 300, got 302
FAIL: Hand count after playing council_room was not correct. Expected 302, got 332
FAIL: Hand count after playing council_room was not correct. Expected 302, got 292
FAIL: Hand count after playing council_room was not correct. Expected 302, got 75
FAIL: Hand count after playing council_room was not correct. Expected 495, got 497
FAIL: Hand count after playing council_room was not correct. Expected 497, got 197
FAIL: Hand count after playing council_room was not correct. Expected 497, got 222
FAIL: Hand count after playing council_room was not correct. Expected 497, got 458
FAIL: Hand count after playing council_room was not correct. Expected 59, got 61
FAIL: Hand count after playing council_room was not correct. Expected 61, got 478
FAIL: Hand count after playing council_room was not correct. Expected 61, got 312
FAIL: Hand count after playing council_room was not correct. Expected 61, got 153
FAIL: Hand count after playing council_room was not correct. Expected 30, got 32
FAIL: Hand count after playing council_room was not correct. Expected 32, got 386
FAIL: Hand count after playing council_room was not correct. Expected 32, got 80
FAIL: Hand count after playing council_room was not correct. Expected 32, got 413
FAIL: Hand count after playing council_room was not correct. Expected 157, got 159
FAIL: Hand count after playing council_room was not correct. Expected 159, got 160
FAIL: Hand count after playing council_room was not correct. Expected 159, got 310
FAIL: Hand count after playing council_room was not correct. Expected 159, got 218
FAIL: Hand count after playing council_room was not correct. Expected 33, got 35
FAIL: Hand count after playing council_room was not correct. Expected 35, got 24
FAIL: Hand count after playing council_room was not correct. Expected 35, got 412
FAIL: Hand count after playing council_room was not correct. Expected 35, got 475
FAIL: Hand count after playing council_room was not correct. Expected 54, got 56
FAIL: Hand count after playing council_room was not correct. Expected 56, got 250
FAIL: Hand count after playing council_room was not correct. Expected 56, got 248
FAIL: Hand count after playing council_room was not correct. Expected 56, got 69
FAIL: Hand count after playing council_room was not correct. Expected 247, got 249
FAIL: Hand count after playing council_room was not correct. Expected 249, got 410
FAIL: Hand count after playing council_room was not correct. Expected 249, got 435
FAIL: Hand count after playing council_room was not correct. Expected 249, got 482
FAIL: Hand count after playing council_room was not correct. Expected 137, got 139
FAIL: Hand count after playing council_room was not correct. Expected 139, got 146
FAIL: Hand count after playing council_room was not correct. Expected 139, got 319
FAIL: Hand count after playing council_room was not correct. Expected 139, got 455
FAIL: Hand count after playing council_room was not correct. Expected 27, got 29
FAIL: Hand count after playing council_room was not correct. Expected 29, got 455
FAIL: Hand count after playing council_room was not correct. Expected 29, got 257
FAIL: Hand count after playing council_room was not correct. Expected 29, got 16
FAIL: Hand count after playing council_room was not correct. Expected 314, got 316
FAIL: Hand count after playing council_room was not correct. Expected 316, got 107
FAIL: Hand count after playing council_room was not correct. Expected 316, got 28
FAIL: Hand count after playing council_room was not correct. Expected 316, got 233
FAIL: Hand count after playing council_room was not correct. Expected 133, got 135
FAIL: Hand count after playing council_room was not correct. Expected 135, got 168
FAIL: Hand count after playing council_room was not correct. Expected 135, got 67
FAIL: Hand count after playing council_room was not correct. Expected 135, got 138
FAIL: Hand count after playing council_room was not correct. Expected 271, got 273
FAIL: Hand count after playing council_room was not correct. Expected 273, got 465
FAIL: Hand count after playing council_room was not correct. Expected 273, got 289
FAIL: Hand count after playing council_room was not correct. Expected 273, got 481
FAIL: Hand count after playing council_room was not correct. Expected 43, got 45
FAIL: Hand count after playing council_room was not correct. Expected 45, got 85
FAIL: Hand count after playing council_room was not correct. Expected 45, got 458
FAIL: Hand count after playing council_room was not correct. Expected 45, got 391
FAIL: Hand count after playing council_room was not correct. Expected 492, got 494
FAIL: Hand count after playing council_room was not correct. Expected 494, got 309
FAIL: Hand count after playing council_room was not correct. Expected 494, got 37
FAIL: Hand count after playing council_room was not correct. Expected 494, got 460
FAIL: Hand count after playing council_room was not correct. Expected 426, got 428
FAIL: Hand count after playing council_room was not correct. Expected 428, got 61
FAIL: Hand count after playing council_room was not correct. Expected 428, got 346
FAIL: Hand count after playing council_room was not correct. Expected 428, got 294
FAIL: Hand count after playing council_room was not correct. Expected 452, got 454
FAIL: Hand count after playing council_room was not correct. Expected 454, got 188
FAIL: Hand count after playing council_room was not correct. Expected 454, got 465
FAIL: Hand count after playing council_room was not correct. Expected 454, got 286
FAIL: Hand count after playing council_room was not correct. Expected 146, got 148
FAIL: Hand count after playing council_room was not correct. Expected 148, got 3
FAIL: Hand count after playing council_room was not correct. Expected 148, got 196
FAIL: Hand count after playing council_room was not correct. Expected 148, got 305
FAIL: Hand count after playing council_room was not correct. Expected 187, got 189
FAIL: Hand count after playing council_room was not correct. Expected 189, got 416
FAIL: Hand count after playing council_room was not correct. Expected 189, got 387
FAIL: Hand count after playing council_room was not correct. Expected 189, got 313
FAIL: Hand count after playing council_room was not correct. Expected 433, got 435
FAIL: Hand count after playing council_room was not correct. Expected 435, got 182
FAIL: Hand count after playing council_room was not correct. Expected 435, got 33
FAIL: Hand count after playing council_room was not correct. Expected 435, got 336
FAIL: Hand count after playing council_room was not correct. Expected 323, got 325
FAIL: Hand count after playing council_room was not correct. Expected 325, got 480
FAIL: Hand count after playing council_room was not correct. Expected 325, got 370
FAIL: Hand count after playing council_room was not correct. Expected 325, got 492
FAIL: Hand count after playing council_room was not correct. Expected 430, got 432
FAIL: Hand count after playing council_room was not correct. Expected 432, got 307
FAIL: Hand count after playing council_room was not correct. Expected 432, got 170
FAIL: Hand count after playing council_room was not correct. Expected 432, got 44
FAIL: Hand count after playing council_room was not correct. Expected 178, got 180
FAIL: Hand count after playing council_room was not correct. Expected 180, got 347
FAIL: Hand count after playing council_room was not correct. Expected 180, got 100
FAIL: Hand count after playing council_room was not correct. Expected 180, got 198
FAIL: Hand count after playing council_room was not correct. Expected 218, got 220
FAIL: Hand count after playing council_room was not correct. Expected 220, got 45
FAIL: Hand count after playing council_room was not correct. Expected 220, got 295
FAIL: Hand count after playing council_room was not correct. Expected 220, got 463
FAIL: Hand count after playing council_room was not correct. Expected 333, got 335
FAIL: Hand count after playing council_room was not correct. Expected 335, got 385
FAIL: Hand count after playing council_room was not correct. Expected 335, got 324
FAIL: Hand count after playing council_room was not correct. Expected 335, got 281
FAIL: Hand count after playing council_room was not correct. Expected 167, got 169
FAIL: Hand count after playing council_room was not correct. Expected 169, got 271
FAIL: Hand count after playing council_room was not correct. Expected 169, got 285
FAIL: Hand count after playing council_room was not correct. Expected 169, got 436
FAIL: Hand count after playing council_room was not correct. Expected 435, got 437
FAIL: Hand count after playing council_room was not correct. Expected 437, got 286
FAIL: Hand count after playing council_room was not correct. Expected 437, got 4
FAIL: Hand count after playing council_room was not correct. Expected 437, got 54
FAIL: Hand count after playing council_room was not correct. Expected 24, got 26
FAIL: Hand count after playing council_room was not correct. Expected 26, got 207
FAIL: Hand count after playing council_room was not correct. Expected 26, got 12
FAIL: Hand count after playing council_room was not correct. Expected 26, got 16
FAIL: Hand count after playing council_room was not correct. Expected 492, got 494
FAIL: Hand count after playing council_room was not correct. Expected 494, got 439
FAIL: Hand count after playing council_room was not correct. Expected 494, got 253
FAIL: Hand count after playing council_room was not correct. Expected 494, got 247
FAIL: Hand count after playing council_room was not correct. Expected 99, got 101
FAIL: Hand count after playing council_room was not correct. Expected 101, got 38
FAIL: Hand count after playing council_room was not correct. Expected 101, got 297
FAIL: Hand count after playing council_room was not correct. Expected 101, got 248
FAIL: Hand count after playing council_room was not correct. Expected 11, got 13
FAIL: Hand count after playing council_room was not correct. Expected 13, got 444
FAIL: Hand count after playing council_room was not correct. Expected 13, got 228
FAIL: Hand count after playing council_room was not correct. Expected 13, got 318
FAIL: Hand count after playing council_room was not correct. Expected 353, got 355
FAIL: Hand count after playing council_room was not correct. Expected 355, got 357
FAIL: Hand count after playing council_room was not correct. Expected 355, got 351
FAIL: Hand count after playing council_room was not correct. Expected 355, got 95
FAIL: Hand count after playing council_room was not correct. Expected 205, got 207
FAIL: Hand count after playing council_room was not correct. Expected 207, got 350
FAIL: Hand count after playing council_room was not correct. Expected 207, got 437
FAIL: Hand count after playing council_room was not correct. Expected 207, got 104
FAIL: Hand count after playing council_room was not correct. Expected 296, got 298
FAIL: Hand count after playing council_room was not correct. Expected 298, got 285
FAIL: Hand count after playing council_room was not correct. Expected 298, got 398
FAIL: Hand count after playing council_room was not correct. Expected 298, got 186
FAIL: Hand count after playing council_room was not correct. Expected 245, got 247
FAIL: Hand count after playing council_room was not correct. Expected 247, got 407
FAIL: Hand count after playing council_room was not correct. Expected 247, got 292
FAIL: Hand count after playing council_room was not correct. Expected 247, got 250
FAIL: Hand count after playing council_room was not correct. Expected 153, got 155
FAIL: Hand count after playing council_room was not correct. Expected 155, got 492
FAIL: Hand count after playing council_room was not correct. Expected 155, got 226
FAIL: Hand count after playing council_room was not correct. Expected 155, got 356
FAIL: Hand count after playing council_room was not correct. Expected 92, got 94
FAIL: Hand count after playing council_room was not correct. Expected 94, got 375
FAIL: Hand count after playing council_room was not correct. Expected 94, got 258
FAIL: Hand count after playing council_room was not correct. Expected 94, got 83
FAIL: Hand count after playing council_room was not correct. Expected 61, got 63
FAIL: Hand count after playing council_room was not correct. Expected 63, got 147
FAIL: Hand count after playing council_room was not correct. Expected 63, got 297
FAIL: Hand count after playing council_room was not correct. Expected 63, got 292
FAIL: Hand count after playing council_room was not correct. Expected 284, got 286
FAIL: Hand count after playing council_room was not correct. Expected 286, got 38
FAIL: Hand count after playing council_room was not correct. Expected 286, got 123
FAIL: Hand count after playing council_room was not correct. Expected 286, got 347
FAIL: Hand count after playing council_room was not correct. Expected 219, got 221
FAIL: Hand count after playing council_room was not correct. Expected 221, got 235
FAIL: Hand count after playing council_room was not correct. Expected 221, got 190
FAIL: Hand count after playing council_room was not correct. Expected 221, got 267
FAIL: Hand count after playing council_room was not correct. Expected 42, got 44
FAIL: Hand count after playing council_room was not correct. Expected 44, got 391
FAIL: Hand count after playing council_room was not correct. Expected 44, got 194
FAIL: Hand count after playing council_room was not correct. Expected 44, got 66
FAIL: Hand count after playing council_room was not correct. Expected 44, got 46
FAIL: Hand count after playing council_room was not correct. Expected 46, got 439
FAIL: Hand count after playing council_room was not correct. Expected 46, got 161
FAIL: Hand count after playing council_room was not correct. Expected 46, got 347
FAIL: Hand count after playing council_room was not correct. Expected 207, got 209
FAIL: Hand count after playing council_room was not correct. Expected 209, got 366
FAIL: Hand count after playing council_room was not correct. Expected 209, got 478
FAIL: Hand count after playing council_room was not correct. Expected 209, got 472
FAIL: Hand count after playing council_room was not correct. Expected 152, got 154
FAIL: Hand count after playing council_room was not correct. Expected 154, got 304
FAIL: Hand count after playing council_room was not correct. Expected 154, got 237
FAIL: Hand count after playing council_room was not correct. Expected 154, got 134
FAIL: Hand count after playing council_room was not correct. Expected 220, got 222
FAIL: Hand count after playing council_room was not correct. Expected 222, got 76
FAIL: Hand count after playing council_room was not correct. Expected 222, got 206
FAIL: Hand count after playing council_room was not correct. Expected 222, got 237
FAIL: Hand count after playing council_room was not correct. Expected 23, got 25
FAIL: Hand count after playing council_room was not correct. Expected 25, got 367
FAIL: Hand count after playing council_room was not correct. Expected 25, got 498
FAIL: Hand count after playing council_room was not correct. Expected 25, got 35
FAIL: Hand count after playing council_room was not correct. Expected 63, got 65
FAIL: Hand count after playing council_room was not correct. Expected 65, got 407
FAIL: Hand count after playing council_room was not correct. Expected 65, got 9
FAIL: Hand count after playing council_room was not correct. Expected 65, got 95
FAIL: Hand count after playing council_room was not correct. Expected 428, got 430
FAIL: Hand count after playing council_room was not correct. Expected 430, got 184
FAIL: Hand count after playing council_room was not correct. Expected 430, got 444
FAIL: Hand count after playing council_room was not correct. Expected 430, got 286
FAIL: Hand count after playing council_room was not correct. Expected 77, got 79
FAIL: Hand count after playing council_room was not correct. Expected 79, got 403
FAIL: Hand count after playing council_room was not correct. Expected 79, got 220
FAIL: Hand count after playing council_room was not correct. Expected 79, got 2
FAIL: Hand count after playing council_room was not correct. Expected 354, got 356
FAIL: Hand count after playing council_room was not correct. Expected 356, got 236
FAIL: Hand count after playing council_room was not correct. Expected 356, got 476
FAIL: Hand count after playing council_room was not correct. Expected 356, got 103
FAIL: Hand count after playing council_room was not correct. Expected 54, got 56
FAIL: Hand count after playing council_room was not correct. Expected 56, got 335
FAIL: Hand count after playing council_room was not correct. Expected 56, got 94
FAIL: Hand count after playing council_room was not correct. Expected 56, got 89
FAIL: Hand count after playing council_room was not correct. Expected 94, got 96
FAIL: Hand count after playing council_room was not correct. Expected 96, got 7
FAIL: Hand count after playing council_room was not correct. Expected 96, got 499
FAIL: Hand count after playing council_room was not correct. Expected 96, got 412
FAIL: Hand count after playing council_room was not correct. Expected 468, got 470
FAIL: Hand count after playing council_room was not correct. Expected 470, got 460
FAIL: Hand count after playing council_room was not correct. Expected 470, got 365
FAIL: Hand count after playing council_room was not correct. Expected 470, got 316
FAIL: Hand count after playing council_room was not correct. Expected 83, got 85
FAIL: Hand count after playing council_room was not correct. Expected 85, got 189
FAIL: Hand count after playing council_room was not correct. Expected 85, got 114
FAIL: Hand count after playing council_room was not correct. Expected 85, got 4
FAIL: Hand count after playing council_room was not correct. Expected 111, got 113
FAIL: Hand count after playing council_room was not correct. Expected 113, got 58
FAIL: Hand count after playing council_room was not correct. Expected 113, got 395
FAIL: Hand count after playing council_room was not correct. Expected 113, got 47
FAIL: Hand count after playing council_room was not correct. Expected 341, got 343
FAIL: Hand count after playing council_room was not correct. Expected 343, got 346
FAIL: Hand count after playing council_room was not correct. Expected 343, got 211
FAIL: Hand count after playing council_room was not correct. Expected 343, got 224
FAIL: Hand count after playing council_room was not correct. Expected 173, got 175
FAIL: Hand count after playing council_room was not correct. Expected 175, got 213
FAIL: Hand count after playing council_room was not correct. Expected 175, got 24
FAIL: Hand count after playing council_room was not correct. Expected 175, got 109
FAIL: Hand count after playing council_room was not correct. Expected 63, got 65
FAIL: Hand count after playing council_room was not correct. Expected 65, got 262
FAIL: Hand count after playing council_room was not correct. Expected 65, got 408
FAIL: Hand count after playing council_room was not correct. Expected 65, got 122
FAIL: Hand count after playing council_room was not correct. Expected 308, got 310
FAIL: Hand count after playing council_room was not correct. Expected 310, got 395
FAIL: Hand count after playing council_room was not correct. Expected 310, got 267
FAIL: Hand count after playing council_room was not correct. Expected 310, got 467
FAIL: Hand count after playing council_room was not correct. Expected 197, got 199
FAIL: Hand count after playing council_room was not correct. Expected 199, got 472
FAIL: Hand count after playing council_room was not correct. Expected 199, got 184
FAIL: Hand count after playing council_room was not correct. Expected 199, got 97
FAIL: Hand count after playing council_room was not correct. Expected 447, got 449
FAIL: Hand count after playing council_room was not correct. Expected 449, got 109
FAIL: Hand count after playing council_room was not correct. Expected 449, got 67
FAIL: Hand count after playing council_room was not correct. Expected 449, got 306
FAIL: Hand count after playing council_room was not correct. Expected 55, got 57
FAIL: Hand count after playing council_room was not correct. Expected 57, got 317
FAIL: Hand count after playing council_room was not correct. Expected 57, got 357
FAIL: Hand count after playing council_room was not correct. Expected 57, got 1
FAIL: Hand count after playing council_room was not correct. Expected 425, got 427
FAIL: Hand count after playing council_room was not correct. Expected 427, got 362
FAIL: Hand count after playing council_room was not correct. Expected 427, got 349
FAIL: Hand count after playing council_room was not correct. Expected 427, got 57
FAIL: Hand count after playing council_room was not correct. Expected 412, got 414
FAIL: Hand count after playing council_room was not correct. Expected 414, got 398
FAIL: Hand count after playing council_room was not correct. Expected 414, got 22
FAIL: Hand count after playing council_room was not correct. Expected 414, got 285
FAIL: Hand count after playing council_room was not correct. Expected 418, got 420
FAIL: Hand count after playing council_room was not correct. Expected 420, got 273
FAIL: Hand count after playing council_room was not correct. Expected 420, got 357
FAIL: Hand count after playing council_room was not correct. Expected 420, got 36
FAIL: Hand count after playing council_room was not correct. Expected 448, got 450
FAIL: Hand count after playing council_room was not correct. Expected 450, got 155
FAIL: Hand count after playing council_room was not correct. Expected 450, got 220
FAIL: Hand count after playing council_room was not correct. Expected 450, got 36
FAIL: Hand count after playing council_room was not correct. Expected 143, got 145
FAIL: Hand count after playing council_room was not correct. Expected 145, got 72
FAIL: Hand count after playing council_room was not correct. Expected 145, got 149
FAIL: Hand count after playing council_room was not correct. Expected 145, got 104
FAIL: Hand count after playing council_room was not correct. Expected 183, got 185
FAIL: Hand count after playing council_room was not correct. Expected 185, got 254
FAIL: Hand count after playing council_room was not correct. Expected 185, got 410
FAIL: Hand count after playing council_room was not correct. Expected 185, got 51
FAIL: Hand count after playing council_room was not correct. Expected 443, got 445
FAIL: Hand count after playing council_room was not correct. Expected 445, got 80
FAIL: Hand count after playing council_room was not correct. Expected 445, got 115
FAIL: Hand count after playing council_room was not correct. Expected 445, got 205
FAIL: Hand count after playing council_room was not correct. Expected 481, got 483
FAIL: Hand count after playing council_room was not correct. Expected 483, got 145
FAIL: Hand count after playing council_room was not correct. Expected 483, got 228
FAIL: Hand count after playing council_room was not correct. Expected 483, got 427
FAIL: Hand count after playing council_room was not correct. Expected 116, got 118
FAIL: Hand count after playing council_room was not correct. Expected 118, got 310
FAIL: Hand count after playing council_room was not correct. Expected 118, got 308
FAIL: Hand count after playing council_room was not correct. Expected 118, got 162
FAIL: Hand count after playing council_room was not correct. Expected 31, got 33
FAIL: Hand count after playing council_room was not correct. Expected 33, got 89
FAIL: Hand count after playing council_room was not correct. Expected 33, got 437
FAIL: Hand count after playing council_room was not correct. Expected 33, got 296
FAIL: Hand count after playing council_room was not correct. Expected 217, got 219
FAIL: Hand count after playing council_room was not correct. Expected 219, got 307
FAIL: Hand count after playing council_room was not correct. Expected 219, got 486
FAIL: Hand count after playing council_room was not correct. Expected 219, got 267
FAIL: Hand count after playing council_room was not correct. Expected 226, got 228
FAIL: Hand count after playing council_room was not correct. Expected 228, got 98
FAIL: Hand count after playing council_room was not correct. Expected 228, got 160
FAIL: Hand count after playing council_room was not correct. Expected 228, got 102
FAIL: Hand count after playing council_room was not correct. Expected 37, got 39
FAIL: Hand count after playing council_room was not correct. Expected 39, got 327
FAIL: Hand count after playing council_room was not correct. Expected 39, got 230
FAIL: Hand count after playing council_room was not correct. Expected 39, got 105
FAIL: Hand count after playing council_room was not correct. Expected 493, got 495
FAIL: Hand count after playing council_room was not correct. Expected 495, got 459
FAIL: Hand count after playing council_room was not correct. Expected 495, got 70
FAIL: Hand count after playing council_room was not correct. Expected 495, got 480
FAIL: Hand count after playing council_room was not correct. Expected 305, got 307
FAIL: Hand count after playing council_room was not correct. Expected 307, got 369
FAIL: Hand count after playing council_room was not correct. Expected 307, got 293
FAIL: Hand count after playing council_room was not correct. Expected 307, got 308
FAIL: Hand count after playing council_room was not correct. Expected 106, got 108
FAIL: Hand count after playing council_room was not correct. Expected 108, got 90
FAIL: Hand count after playing council_room was not correct. Expected 108, got 349
FAIL: Hand count after playing council_room was not correct. Expected 108, got 433
FAIL: Hand count after playing council_room was not correct. Expected 451, got 453
FAIL: Hand count after playing council_room was not correct. Expected 453, got 134
FAIL: Hand count after playing council_room was not correct. Expected 453, got 472
FAIL: Hand count after playing council_room was not correct. Expected 453, got 335
FAIL: Hand count after playing council_room was not correct. Expected 60, got 62
FAIL: Hand count after playing council_room was not correct. Expected 62, got 95
FAIL: Hand count after playing council_room was not correct. Expected 62, got 100
FAIL: Hand count after playing council_room was not correct. Expected 62, got 472
FAIL: Hand count after playing council_room was not correct. Expected 406, got 408
FAIL: Hand count after playing council_room was not correct. Expected 408, got 281
FAIL: Hand count after playing council_room was not correct. Expected 408, got 93
FAIL: Hand count after playing council_room was not correct. Expected 408, got 372
FAIL: Hand count after playing council_room was not correct. Expected 40, got 42
FAIL: Hand count after playing council_room was not correct. Expected 42, got 169
FAIL: Hand count after playing council_room was not correct. Expected 42, got 255
FAIL: Hand count after playing council_room was not correct. Expected 42, got 78
FAIL: Hand count after playing council_room was not correct. Expected 56, got 58
FAIL: Hand count after playing council_room was not correct. Expected 58, got 396
FAIL: Hand count after playing council_room was not correct. Expected 58, got 115
FAIL: Hand count after playing council_room was not correct. Expected 58, got 388
FAIL: Hand count after playing council_room was not correct. Expected 387, got 389
FAIL: Hand count after playing council_room was not correct. Expected 389, got 425
FAIL: Hand count after playing council_room was not correct. Expected 389, got 195
FAIL: Hand count after playing council_room was not correct. Expected 389, got 264
FAIL: Hand count after playing council_room was not correct. Expected 200, got 202
FAIL: Hand count after playing council_room was not correct. Expected 202, got 224
FAIL: Hand count after playing council_room was not correct. Expected 202, got 58
FAIL: Hand count after playing council_room was not correct. Expected 202, got 124
FAIL: Hand count after playing council_room was not correct. Expected 188, got 190
FAIL: Hand count after playing council_room was not correct. Expected 190, got 123
FAIL: Hand count after playing council_room was not correct. Expected 190, got 421
FAIL: Hand count after playing council_room was not correct. Expected 190, got 102
FAIL: Hand count after playing council_room was not correct. Expected 356, got 358
FAIL: Hand count after playing council_room was not correct. Expected 358, got 175
FAIL: Hand count after playing council_room was not correct. Expected 358, got 248
FAIL: Hand count after playing council_room was not correct. Expected 358, got 140
FAIL: Hand count after playing council_room was not correct. Expected 127, got 129
FAIL: Hand count after playing council_room was not correct. Expected 129, got 49
FAIL: Hand count after playing council_room was not correct. Expected 129, got 212
FAIL: Hand count after playing council_room was not correct. Expected 129, got 184
FAIL: Hand count after playing council_room was not correct. Expected 434, got 436
FAIL: Hand count after playing council_room was not correct. Expected 436, got 401
FAIL: Hand count after playing council_room was not correct. Expected 436, got 353
FAIL: Hand count after playing council_room was not correct. Expected 436, got 110
FAIL: Hand count after playing council_room was not correct. Expected 243, got 245
FAIL: Hand count after playing council_room was not correct. Expected 245, got 60
FAIL: Hand count after playing council_room was not correct. Expected 245, got 368
FAIL: Hand count after playing council_room was not correct. Expected 245, got 143
FAIL: Hand count after playing council_room was not correct. Expected 84, got 86
FAIL: Hand count after playing council_room was not correct. Expected 86, got 219
FAIL: Hand count after playing council_room was not correct. Expected 86, got 168
FAIL: Hand count after playing council_room was not correct. Expected 86, got 485
FAIL: Hand count after playing council_room was not correct. Expected 190, got 192
FAIL: Hand count after playing council_room was not correct. Expected 192, got 225
FAIL: Hand count after playing council_room was not correct. Expected 192, got 109
FAIL: Hand count after playing council_room was not correct. Expected 192, got 116
FAIL: Hand count after playing council_room was not correct. Expected 125, got 127
FAIL: Hand count after playing council_room was not correct. Expected 127, got 481
FAIL: Hand count after playing council_room was not correct. Expected 127, got 489
FAIL: Hand count after playing council_room was not correct. Expected 127, got 248
FAIL: Hand count after playing council_room was not correct. Expected 495, got 497
FAIL: Hand count after playing council_room was not correct. Expected 497, got 59
FAIL: Hand count after playing council_room was not correct. Expected 497, got 190
FAIL: Hand count after playing council_room was not correct. Expected 497, got 127
FAIL: Hand count after playing council_room was not correct. Expected 443, got 445
FAIL: Hand count after playing council_room was not correct. Expected 445, got 378
FAIL: Hand count after playing council_room was not correct. Expected 445, got 371
FAIL: Hand count after playing council_room was not correct. Expected 445, got 263
FAIL: Hand count after playing council_room was not correct. Expected 90, got 92
FAIL: Hand count after playing council_room was not correct. Expected 92, got 489
FAIL: Hand count after playing council_room was not correct. Expected 92, got 114
FAIL: Hand count after playing council_room was not correct. Expected 92, got 282
FAIL: Hand count after playing council_room was not correct. Expected 483, got 485
FAIL: Hand count after playing council_room was not correct. Expected 485, got 376
FAIL: Hand count after playing council_room was not correct. Expected 485, got 467
FAIL: Hand count after playing council_room was not correct. Expected 485, got 82
FAIL: Hand count after playing council_room was not correct. Expected 434, got 436
FAIL: Hand count after playing council_room was not correct. Expected 436, got 261
FAIL: Hand count after playing council_room was not correct. Expected 436, got 104
FAIL: Hand count after playing council_room was not correct. Expected 436, got 464
FAIL: Hand count after playing council_room was not correct. Expected 300, got 302
FAIL: Hand count after playing council_room was not correct. Expected 302, got 383
FAIL: Hand count after playing council_room was not correct. Expected 302, got 430
FAIL: Hand count after playing council_room was not correct. Expected 302, got 226
FAIL: Hand count after playing council_room was not correct. Expected 377, got 379
FAIL: Hand count after playing council_room was not correct. Expected 379, got 297
FAIL: Hand count after playing council_room was not correct. Expected 379, got 362
FAIL: Hand count after playing council_room was not correct. Expected 379, got 112
FAIL: Hand count after playing council_room was not correct. Expected 37, got 39
FAIL: Hand count after playing council_room was not correct. Expected 39, got 225
FAIL: Hand count after playing council_room was not correct. Expected 39, got 274
FAIL: Hand count after playing council_room was not correct. Expected 39, got 101
FAIL: Hand count after playing council_room was not correct. Expected 174, got 176
FAIL: Hand count after playing council_room was not correct. Expected 176, got 157
FAIL: Hand count after playing council_room was not correct. Expected 176, got 95
FAIL: Hand count after playing council_room was not correct. Expected 176, got 362
FAIL: Hand count after playing council_room was not correct. Expected 22, got 24
FAIL: Hand count after playing council_room was not correct. Expected 24, got 64
FAIL: Hand count after playing council_room was not correct. Expected 24, got 380
FAIL: Hand count after playing council_room was not correct. Expected 24, got 494
FAIL: Hand count after playing council_room was not correct. Expected 215, got 217
FAIL: Hand count after playing council_room was not correct. Expected 217, got 41
FAIL: Hand count after playing council_room was not correct. Expected 217, got 249
FAIL: Hand count after playing council_room was not correct. Expected 217, got 374
FAIL: Hand count after playing council_room was not correct. Expected 102, got 104
FAIL: Hand count after playing council_room was not correct. Expected 104, got 219
FAIL: Hand count after playing council_room was not correct. Expected 104, got 131
FAIL: Hand count after playing council_room was not correct. Expected 104, got 19
FAIL: Hand count after playing council_room was not correct. Expected 260, got 262
FAIL: Hand count after playing council_room was not correct. Expected 262, got 408
FAIL: Hand count after playing council_room was not correct. Expected 262, got 57
FAIL: Hand count after playing council_room was not correct. Expected 262, got 83
FAIL: Hand count after playing council_room was not correct. Expected 257, got 259
FAIL: Hand count after playing council_room was not correct. Expected 259, got 18
FAIL: Hand count after playing council_room was not correct. Expected 259, got 50
FAIL: Hand count after playing council_room was not correct. Expected 259, got 381
FAIL: Hand count after playing council_room was not correct. Expected 21, got 23
FAIL: Hand count after playing council_room was not correct. Expected 23, got 151
FAIL: Hand count after playing council_room was not correct. Expected 23, got 267
FAIL: Hand count after playing council_room was not correct. Expected 23, got 459
FAIL: Hand count after playing council_room was not correct. Expected 259, got 261
FAIL: Hand count after playing council_room was not correct. Expected 261, got 412
FAIL: Hand count after playing council_room was not correct. Expected 261, got 486
FAIL: Hand count after playing council_room was not correct. Expected 261, got 80
FAIL: Hand count after playing council_room was not correct. Expected 74, got 76
FAIL: Hand count after playing council_room was not correct. Expected 76, got 429
FAIL: Hand count after playing council_room was not correct. Expected 76, got 499
FAIL: Hand count after playing council_room was not correct. Expected 76, got 77
FAIL: Hand count after playing council_room was not correct. Expected 479, got 481
FAIL: Hand count after playing council_room was not correct. Expected 481, got 333
FAIL: Hand count after playing council_room was not correct. Expected 481, got 300
FAIL: Hand count after playing council_room was not correct. Expected 481, got 493
FAIL: Hand count after playing council_room was not correct. Expected 76, got 78
FAIL: Hand count after playing council_room was not correct. Expected 78, got 400
FAIL: Hand count after playing council_room was not correct. Expected 78, got 139
FAIL: Hand count after playing council_room was not correct. Expected 78, got 32
FAIL: Hand count after playing council_room was not correct. Expected 356, got 358
FAIL: Hand count after playing council_room was not correct. Expected 358, got 401
FAIL: Hand count after playing council_room was not correct. Expected 358, got 467
FAIL: Hand count after playing council_room was not correct. Expected 358, got 295
FAIL: Hand count after playing council_room was not correct. Expected 451, got 453
FAIL: Hand count after playing council_room was not correct. Expected 453, got 397
FAIL: Hand count after playing council_room was not correct. Expected 453, got 338
FAIL: Hand count after playing council_room was not correct. Expected 453, got 272
FAIL: Hand count after playing council_room was not correct. Expected 274, got 276
FAIL: Hand count after playing council_room was not correct. Expected 276, got 166
FAIL: Hand count after playing council_room was not correct. Expected 276, got 430
FAIL: Hand count after playing council_room was not correct. Expected 276, got 499
FAIL: Hand count after playing council_room was not correct. Expected 378, got 380
FAIL: Hand count after playing council_room was not correct. Expected 380, got 265
FAIL: Hand count after playing council_room was not correct. Expected 380, got 312
FAIL: Hand count after playing council_room was not correct. Expected 380, got 200
FAIL: Hand count after playing council_room was not correct. Expected 15, got 17
FAIL: Hand count after playing council_room was not correct. Expected 17, got 410
FAIL: Hand count after playing council_room was not correct. Expected 17, got 437
FAIL: Hand count after playing council_room was not correct. Expected 17, got 318
FAIL: Hand count after playing council_room was not correct. Expected 206, got 208
FAIL: Hand count after playing council_room was not correct. Expected 208, got 93
FAIL: Hand count after playing council_room was not correct. Expected 208, got 223
FAIL: Hand count after playing council_room was not correct. Expected 208, got 29
FAIL: Hand count after playing council_room was not correct. Expected 289, got 291
FAIL: Hand count after playing council_room was not correct. Expected 291, got 269
FAIL: Hand count after playing council_room was not correct. Expected 291, got 264
FAIL: Hand count after playing council_room was not correct. Expected 291, got 159
FAIL: Hand count after playing council_room was not correct. Expected 42, got 44
FAIL: Hand count after playing council_room was not correct. Expected 44, got 10
FAIL: Hand count after playing council_room was not correct. Expected 44, got 145
FAIL: Hand count after playing council_room was not correct. Expected 44, got 382
FAIL: Hand count after playing council_room was not correct. Expected 163, got 165
FAIL: Hand count after playing council_room was not correct. Expected 165, got 37
FAIL: Hand count after playing council_room was not correct. Expected 165, got 122
FAIL: Hand count after playing council_room was not correct. Expected 165, got 448
FAIL: Hand count after playing council_room was not correct. Expected 471, got 473
FAIL: Hand count after playing council_room was not correct. Expected 473, got 357
FAIL: Hand count after playing council_room was not correct. Expected 473, got 160
FAIL: Hand count after playing council_room was not correct. Expected 473, got 17
FAIL: Hand count after playing council_room was not correct. Expected 390, got 392
FAIL: Hand count after playing council_room was not correct. Expected 392, got 197
FAIL: Hand count after playing council_room was not correct. Expected 392, got 75
FAIL: Hand count after playing council_room was not correct. Expected 392, got 11
FAIL: Hand count after playing council_room was not correct. Expected 111, got 113
FAIL: Hand count after playing council_room was not correct. Expected 113, got 302
FAIL: Hand count after playing council_room was not correct. Expected 113, got 313
FAIL: Hand count after playing council_room was not correct. Expected 113, got 311
FAIL: Hand count after playing council_room was not correct. Expected 173, got 175
FAIL: Hand count after playing council_room was not correct. Expected 175, got 340
FAIL: Hand count after playing council_room was not correct. Expected 175, got 197
FAIL: Hand count after playing council_room was not correct. Expected 175, got 370
FAIL: Hand count after playing council_room was not correct. Expected 370, got 372
FAIL: Hand count after playing council_room was not correct. Expected 372, got 415
FAIL: Hand count after playing council_room was not correct. Expected 372, got 2
FAIL: Hand count after playing council_room was not correct. Expected 372, got 17
FAIL: Hand count after playing council_room was not correct. Expected 202, got 204
FAIL: Hand count after playing council_room was not correct. Expected 204, got 121
FAIL: Hand count after playing council_room was not correct. Expected 204, got 400
FAIL: Hand count after playing council_room was not correct. Expected 204, got 335
FAIL: Hand count after playing council_room was not correct. Expected 342, got 344
FAIL: Hand count after playing council_room was not correct. Expected 344, got 360
FAIL: Hand count after playing council_room was not correct. Expected 344, got 275
FAIL: Hand count after playing council_room was not correct. Expected 344, got 114
FAIL: Hand count after playing council_room was not correct. Expected 89, got 91
FAIL: Hand count after playing council_room was not correct. Expected 91, got 480
FAIL: Hand count after playing council_room was not correct. Expected 91, got 427
FAIL: Hand count after playing council_room was not correct. Expected 91, got 211
FAIL: Hand count after playing council_room was not correct. Expected 406, got 408
FAIL: Hand count after playing council_room was not correct. Expected 408, got 160
FAIL: Hand count after playing council_room was not correct. Expected 408, got 382
FAIL: Hand count after playing council_room was not correct. Expected 408, got 269
FAIL: Hand count after playing council_room was not correct. Expected 33, got 35
FAIL: Hand count after playing council_room was not correct. Expected 35, got 478
FAIL: Hand count after playing council_room was not correct. Expected 35, got 5
FAIL: Hand count after playing council_room was not correct. Expected 35, got 200
FAIL: Hand count after playing council_room was not correct. Expected 413, got 415
FAIL: Hand count after playing council_room was not correct. Expected 415, got 135
FAIL: Hand count after playing council_room was not correct. Expected 415, got 494
FAIL: Hand count after playing council_room was not correct. Expected 415, got 227
FAIL: Hand count after playing council_room was not correct. Expected 262, got 264
FAIL: Hand count after playing council_room was not correct. Expected 264, got 419
FAIL: Hand count after playing council_room was not correct. Expected 264, got 314
FAIL: Hand count after playing council_room was not correct. Expected 264, got 64
FAIL: Hand count after playing council_room was not correct. Expected 295, got 297
FAIL: Hand count after playing council_room was not correct. Expected 297, got 441
FAIL: Hand count after playing council_room was not correct. Expected 297, got 86
FAIL: Hand count after playing council_room was not correct. Expected 297, got 221
FAIL: Hand count after playing council_room was not correct. Expected 490, got 492
FAIL: Hand count after playing council_room was not correct. Expected 492, got 292
FAIL: Hand count after playing council_room was not correct. Expected 492, got 99
FAIL: Hand count after playing council_room was not correct. Expected 492, got 270
FAIL: Hand count after playing council_room was not correct. Expected 473, got 475
FAIL: Hand count after playing council_room was not correct. Expected 475, got 165
FAIL: Hand count after playing council_room was not correct. Expected 475, got 200
FAIL: Hand count after playing council_room was not correct. Expected 475, got 138
FAIL: Hand count after playing council_room was not correct. Expected 302, got 304
FAIL: Hand count after playing council_room was not correct. Expected 304, got 30
FAIL: Hand count after playing council_room was not correct. Expected 304, got 233
FAIL: Hand count after playing council_room was not correct. Expected 304, got 458
FAIL: Hand count after playing council_room was not correct. Expected 45, got 47
FAIL: Hand count after playing council_room was not correct. Expected 47, got 43
FAIL: Hand count after playing council_room was not correct. Expected 47, got 389
FAIL: Hand count after playing council_room was not correct. Expected 47, got 435
FAIL: Hand count after playing council_room was not correct. Expected 324, got 326
FAIL: Hand count after playing council_room was not correct. Expected 326, got 337
FAIL: Hand count after playing council_room was not correct. Expected 326, got 104
FAIL: Hand count after playing council_room was not correct. Expected 326, got 319
FAIL: Hand count after playing council_room was not correct. Expected 54, got 56
FAIL: Hand count after playing council_room was not correct. Expected 56, got 494
FAIL: Hand count after playing council_room was not correct. Expected 56, got 205
FAIL: Hand count after playing council_room was not correct. Expected 56, got 379
FAIL: Hand count after playing council_room was not correct. Expected 53, got 55
FAIL: Hand count after playing council_room was not correct. Expected 55, got 402
FAIL: Hand count after playing council_room was not correct. Expected 55, got 41
FAIL: Hand count after playing council_room was not correct. Expected 55, got 94
FAIL: Hand count after playing council_room was not correct. Expected 401, got 403
FAIL: Hand count after playing council_room was not correct. Expected 403, got 37
FAIL: Hand count after playing council_room was not correct. Expected 403, got 255
FAIL: Hand count after playing council_room was not correct. Expected 403, got 121
FAIL: Hand count after playing council_room was not correct. Expected 172, got 174
FAIL: Hand count after playing council_room was not correct. Expected 174, got 279
FAIL: Hand count after playing council_room was not correct. Expected 174, got 370
FAIL: Hand count after playing council_room was not correct. Expected 174, got 377
FAIL: Hand count after playing council_room was not correct. Expected 133, got 135
FAIL: Hand count after playing council_room was not correct. Expected 135, got 443
FAIL: Hand count after playing council_room was not correct. Expected 135, got 120
FAIL: Hand count after playing council_room was not correct. Expected 135, got 486
FAIL: Hand count after playing council_room was not correct. Expected 491, got 493
FAIL: Hand count after playing council_room was not correct. Expected 493, got 472
FAIL: Hand count after playing council_room was not correct. Expected 493, got 450
FAIL: Hand count after playing council_room was not correct. Expected 493, got 189
FAIL: Hand count after playing council_room was not correct. Expected 403, got 405
FAIL: Hand count after playing council_room was not correct. Expected 405, got 238
FAIL: Hand count after playing council_room was not correct. Expected 405, got 413
FAIL: Hand count after playing council_room was not correct. Expected 405, got 378
FAIL: Hand count after playing council_room was not correct. Expected 119, got 121
FAIL: Hand count after playing council_room was not correct. Expected 121, got 70
FAIL: Hand count after playing council_room was not correct. Expected 121, got 305
FAIL: Hand count after playing council_room was not correct. Expected 121, got 60
FAIL: Hand count after playing council_room was not correct. Expected 267, got 269
FAIL: Hand count after playing council_room was not correct. Expected 269, got 429
FAIL: Hand count after playing council_room was not correct. Expected 269, got 106
FAIL: Hand count after playing council_room was not correct. Expected 269, got 375
FAIL: Hand count after playing council_room was not correct. Expected 115, got 117
FAIL: Hand count after playing council_room was not correct. Expected 117, got 282
FAIL: Hand count after playing council_room was not correct. Expected 117, got 153
FAIL: Hand count after playing council_room was not correct. Expected 117, got 439
FAIL: Hand count after playing council_room was not correct. Expected 373, got 375
FAIL: Hand count after playing council_room was not correct. Expected 375, got 322
FAIL: Hand count after playing council_room was not correct. Expected 375, got 149
FAIL: Hand count after playing council_room was not correct. Expected 375, got 449
FAIL: Hand count after playing council_room was not correct. Expected 468, got 470
FAIL: Hand count after playing council_room was not correct. Expected 470, got 255
FAIL: Hand count after playing council_room was not correct. Expected 470, got 132
FAIL: Hand count after playing council_room was not correct. Expected 470, got 163
FAIL: Hand count after playing council_room was not correct. Expected 470, got 472
FAIL: Hand count after playing council_room was not correct. Expected 472, got 57
FAIL: Hand count after playing council_room was not correct. Expected 472, got 324
FAIL: Hand count after playing council_room was not correct. Expected 472, got 321
FAIL: Hand count after playing council_room was not correct. Expected 119, got 121
FAIL: Hand count after playing council_room was not correct. Expected 121, got 483
FAIL: Hand count after playing council_room was not correct. Expected 121, got 438
FAIL: Hand count after playing council_room was not correct. Expected 121, got 17
FAIL: Hand count after playing council_room was not correct. Expected 140, got 142
FAIL: Hand count after playing council_room was not correct. Expected 142, got 454
FAIL: Hand count after playing council_room was not correct. Expected 142, got 344
FAIL: Hand count after playing council_room was not correct. Expected 142, got 21
FAIL: Hand count after playing council_room was not correct. Expected 241, got 243
FAIL: Hand count after playing council_room was not correct. Expected 243, got 426
FAIL: Hand count after playing council_room was not correct. Expected 243, got 467
FAIL: Hand count after playing council_room was not correct. Expected 243, got 287
FAIL: Hand count after playing council_room was not correct. Expected 433, got 435
FAIL: Hand count after playing council_room was not correct. Expected 435, got 299
FAIL: Hand count after playing council_room was not correct. Expected 435, got 377
FAIL: Hand count after playing council_room was not correct. Expected 435, got 350
FAIL: Hand count after playing council_room was not correct. Expected 352, got 354
FAIL: Hand count after playing council_room was not correct. Expected 354, got 225
FAIL: Hand count after playing council_room was not correct. Expected 354, got 476
FAIL: Hand count after playing council_room was not correct. Expected 354, got 194
FAIL: Hand count after playing council_room was not correct. Expected 160, got 162
FAIL: Hand count after playing council_room was not correct. Expected 162, got 499
FAIL: Hand count after playing council_room was not correct. Expected 162, got 304
FAIL: Hand count after playing council_room was not correct. Expected 162, got 203
FAIL: Hand count after playing council_room was not correct. Expected 283, got 285
FAIL: Hand count after playing council_room was not correct. Expected 285, got 46
FAIL: Hand count after playing council_room was not correct. Expected 285, got 470
FAIL: Hand count after playing council_room was not correct. Expected 285, got 34
FAIL: Hand count after playing council_room was not correct. Expected 209, got 211
FAIL: Hand count after playing council_room was not correct. Expected 211, got 395
FAIL: Hand count after playing council_room was not correct. Expected 211, got 248
FAIL: Hand count after playing council_room was not correct. Expected 211, got 443
FAIL: Hand count after playing council_room was not correct. Expected 424, got 426
FAIL: Hand count after playing council_room was not correct. Expected 426, got 231
FAIL: Hand count after playing council_room was not correct. Expected 426, got 194
FAIL: Hand count after playing council_room was not correct. Expected 426, got 9
FAIL: Hand count after playing council_room was not correct. Expected 76, got 78
FAIL: Hand count after playing council_room was not correct. Expected 78, got 438
FAIL: Hand count after playing council_room was not correct. Expected 78, got 16
FAIL: Hand count after playing council_room was not correct. Expected 78, got 5
FAIL: Hand count after playing council_room was not correct. Expected 382, got 384
FAIL: Hand count after playing council_room was not correct. Expected 384, got 214
FAIL: Hand count after playing council_room was not correct. Expected 384, got 163
FAIL: Hand count after playing council_room was not correct. Expected 384, got 471
FAIL: Hand count after playing council_room was not correct. Expected 286, got 288
FAIL: Hand count after playing council_room was not correct. Expected 288, got 150
FAIL: Hand count after playing council_room was not correct. Expected 288, got 221
FAIL: Hand count after playing council_room was not correct. Expected 288, got 261
FAIL: Hand count after playing council_room was not correct. Expected 456, got 458
FAIL: Hand count after playing council_room was not correct. Expected 458, got 417
FAIL: Hand count after playing council_room was not correct. Expected 458, got 273
FAIL: Hand count after playing council_room was not correct. Expected 458, got 34
FAIL: Hand count after playing council_room was not correct. Expected 400, got 402
FAIL: Hand count after playing council_room was not correct. Expected 402, got 191
FAIL: Hand count after playing council_room was not correct. Expected 402, got 345
FAIL: Hand count after playing council_room was not correct. Expected 402, got 286
FAIL: Hand count after playing council_room was not correct. Expected 283, got 285
FAIL: Hand count after playing council_room was not correct. Expected 285, got 234
FAIL: Hand count after playing council_room was not correct. Expected 285, got 448
FAIL: Hand count after playing council_room was not correct. Expected 285, got 30
FAIL: Hand count after playing council_room was not correct. Expected 250, got 252
FAIL: Hand count after playing council_room was not correct. Expected 252, got 293
FAIL: Hand count after playing council_room was not correct. Expected 252, got 433
FAIL: Hand count after playing council_room was not correct. Expected 252, got 110
FAIL: Hand count after playing council_room was not correct. Expected 57, got 59
FAIL: Hand count after playing council_room was not correct. Expected 59, got 187
FAIL: Hand count after playing council_room was not correct. Expected 59, got 463
FAIL: Hand count after playing council_room was not correct. Expected 59, got 429
FAIL: Hand count after playing council_room was not correct. Expected 428, got 430
FAIL: Hand count after playing council_room was not correct. Expected 430, got 165
FAIL: Hand count after playing council_room was not correct. Expected 430, got 205
FAIL: Hand count after playing council_room was not correct. Expected 430, got 35
FAIL: Hand count after playing council_room was not correct. Expected 286, got 288
FAIL: Hand count after playing council_room was not correct. Expected 288, got 241
FAIL: Hand count after playing council_room was not correct. Expected 288, got 49
FAIL: Hand count after playing council_room was not correct. Expected 288, got 21
FAIL: Hand count after playing council_room was not correct. Expected 152, got 154
FAIL: Hand count after playing council_room was not correct. Expected 154, got 13
FAIL: Hand count after playing council_room was not correct. Expected 154, got 425
FAIL: Hand count after playing council_room was not correct. Expected 154, got 397
FAIL: Hand count after playing council_room was not correct. Expected 76, got 78
FAIL: Hand count after playing council_room was not correct. Expected 78, got 224
FAIL: Hand count after playing council_room was not correct. Expected 78, got 432
FAIL: Hand count after playing council_room was not correct. Expected 78, got 123
FAIL: Hand count after playing council_room was not correct. Expected 237, got 239
FAIL: Hand count after playing council_room was not correct. Expected 239, got 371
FAIL: Hand count after playing council_room was not correct. Expected 239, got 356
FAIL: Hand count after playing council_room was not correct. Expected 239, got 95
FAIL: Hand count after playing council_room was not correct. Expected 284, got 286
FAIL: Hand count after playing council_room was not correct. Expected 286, got 329
FAIL: Hand count after playing council_room was not correct. Expected 286, got 69
FAIL: Hand count after playing council_room was not correct. Expected 286, got 166
FAIL: Hand count after playing council_room was not correct. Expected 176, got 178
FAIL: Hand count after playing council_room was not correct. Expected 178, got 396
FAIL: Hand count after playing council_room was not correct. Expected 178, got 444
FAIL: Hand count after playing council_room was not correct. Expected 178, got 281
FAIL: Hand count after playing council_room was not correct. Expected 347, got 349
FAIL: Hand count after playing council_room was not correct. Expected 349, got 392
FAIL: Hand count after playing council_room was not correct. Expected 349, got 436
FAIL: Hand count after playing council_room was not correct. Expected 349, got 346
FAIL: Hand count after playing council_room was not correct. Expected 362, got 364
FAIL: Hand count after playing council_room was not correct. Expected 364, got 481
FAIL: Hand count after playing council_room was not correct. Expected 364, got 317
FAIL: Hand count after playing council_room was not correct. Expected 364, got 476
FAIL: Hand count after playing council_room was not correct. Expected 90, got 92
FAIL: Hand count after playing council_room was not correct. Expected 92, got 431
FAIL: Hand count after playing council_room was not correct. Expected 92, got 463
FAIL: Hand count after playing council_room was not correct. Expected 92, got 429
FAIL: Hand count after playing council_room was not correct. Expected 430, got 432
FAIL: Hand count after playing council_room was not correct. Expected 432, got 379
FAIL: Hand count after playing council_room was not correct. Expected 432, got 264
FAIL: Hand count after playing council_room was not correct. Expected 432, got 122
FAIL: Hand count after playing council_room was not correct. Expected 319, got 321
FAIL: Hand count after playing council_room was not correct. Expected 321, got 137
FAIL: Hand count after playing council_room was not correct. Expected 321, got 231
FAIL: Hand count after playing council_room was not correct. Expected 321, got 224
FAIL: Hand count after playing council_room was not correct. Expected 143, got 145
FAIL: Hand count after playing council_room was not correct. Expected 145, got 388
FAIL: Hand count after playing council_room was not correct. Expected 145, got 381
FAIL: Hand count after playing council_room was not correct. Expected 145, got 382
FAIL: Hand count after playing council_room was not correct. Expected 127, got 129
FAIL: Hand count after playing council_room was not correct. Expected 129, got 26
FAIL: Hand count after playing council_room was not correct. Expected 129, got 209
FAIL: Hand count after playing council_room was not correct. Expected 129, got 493
FAIL: Hand count after playing council_room was not correct. Expected 287, got 289
FAIL: Hand count after playing council_room was not correct. Expected 289, got 230
FAIL: Hand count after playing council_room was not correct. Expected 289, got 251
FAIL: Hand count after playing council_room was not correct. Expected 289, got 81
FAIL: Hand count after playing council_room was not correct. Expected 460, got 462
FAIL: Hand count after playing council_room was not correct. Expected 462, got 458
FAIL: Hand count after playing council_room was not correct. Expected 462, got 154
FAIL: Hand count after playing council_room was not correct. Expected 462, got 112
FAIL: Hand count after playing council_room was not correct. Expected 399, got 401
FAIL: Hand count after playing council_room was not correct. Expected 401, got 336
FAIL: Hand count after playing council_room was not correct. Expected 401, got 231
FAIL: Hand count after playing council_room was not correct. Expected 401, got 85
FAIL: Hand count after playing council_room was not correct. Expected 234, got 236
FAIL: Hand count after playing council_room was not correct. Expected 236, got 356
FAIL: Hand count after playing council_room was not correct. Expected 236, got 387
FAIL: Hand count after playing council_room was not correct. Expected 236, got 250
FAIL: Hand count after playing council_room was not correct. Expected 242, got 244
FAIL: Hand count after playing council_room was not correct. Expected 244, got 462
FAIL: Hand count after playing council_room was not correct. Expected 244, got 432
FAIL: Hand count after playing council_room was not correct. Expected 244, got 368
FAIL: Hand count after playing council_room was not correct. Expected 268, got 270
FAIL: Hand count after playing council_room was not correct. Expected 270, got 418
FAIL: Hand count after playing council_room was not correct. Expected 270, got 496
FAIL: Hand count after playing council_room was not correct. Expected 270, got 19
FAIL: Hand count after playing council_room was not correct. Expected 221, got 223
FAIL: Hand count after playing council_room was not correct. Expected 223, got 468
FAIL: Hand count after playing council_room was not correct. Expected 223, got 252
FAIL: Hand count after playing council_room was not correct. Expected 223, got 376
FAIL: Hand count after playing council_room was not correct. Expected 476, got 478
FAIL: Hand count after playing council_room was not correct. Expected 478, got 415
FAIL: Hand count after playing council_room was not correct. Expected 478, got 340
FAIL: Hand count after playing council_room was not correct. Expected 478, got 400
FAIL: Hand count after playing council_room was not correct. Expected 475, got 477
FAIL: Hand count after playing council_room was not correct. Expected 477, got 202
FAIL: Hand count after playing council_room was not correct. Expected 477, got 114
FAIL: Hand count after playing council_room was not correct. Expected 477, got 274
FAIL: Hand count after playing council_room was not correct. Expected 407, got 409
FAIL: Hand count after playing council_room was not correct. Expected 409, got 482
FAIL: Hand count after playing council_room was not correct. Expected 409, got 94
FAIL: Hand count after playing council_room was not correct. Expected 409, got 396
FAIL: Hand count after playing council_room was not correct. Expected 248, got 250
FAIL: Hand count after playing council_room was not correct. Expected 250, got 4
FAIL: Hand count after playing council_room was not correct. Expected 250, got 240
FAIL: Hand count after playing council_room was not correct. Expected 250, got 415
FAIL: Hand count after playing council_room was not correct. Expected 192, got 194
FAIL: Hand count after playing council_room was not correct. Expected 194, got 289
FAIL: Hand count after playing council_room was not correct. Expected 194, got 359
FAIL: Hand count after playing council_room was not correct. Expected 194, got 168
FAIL: Hand count after playing council_room was not correct. Expected 267, got 269
FAIL: Hand count after playing council_room was not correct. Expected 269, got 359
FAIL: Hand count after playing council_room was not correct. Expected 269, got 362
FAIL: Hand count after playing council_room was not correct. Expected 269, got 317
FAIL: Hand count after playing council_room was not correct. Expected 114, got 116
FAIL: Hand count after playing council_room was not correct. Expected 116, got 492
FAIL: Hand count after playing council_room was not correct. Expected 116, got 307
FAIL: Hand count after playing council_room was not correct. Expected 116, got 264
FAIL: Hand count after playing council_room was not correct. Expected 135, got 137
FAIL: Hand count after playing council_room was not correct. Expected 137, got 461
FAIL: Hand count after playing council_room was not correct. Expected 137, got 340
FAIL: Hand count after playing council_room was not correct. Expected 137, got 272
FAIL: Hand count after playing council_room was not correct. Expected 453, got 455
FAIL: Hand count after playing council_room was not correct. Expected 455, got 444
FAIL: Hand count after playing council_room was not correct. Expected 455, got 436
FAIL: Hand count after playing council_room was not correct. Expected 455, got 273
FAIL: Hand count after playing council_room was not correct. Expected 5, got 7
FAIL: Hand count after playing council_room was not correct. Expected 7, got 418
FAIL: Hand count after playing council_room was not correct. Expected 7, got 5
FAIL: Hand count after playing council_room was not correct. Expected 7, got 60
FAIL: Hand count after playing council_room was not correct. Expected 130, got 132
FAIL: Hand count after playing council_room was not correct. Expected 132, got 255
FAIL: Hand count after playing council_room was not correct. Expected 132, got 273
FAIL: Hand count after playing council_room was not correct. Expected 132, got 140
FAIL: Hand count after playing council_room was not correct. Expected 203, got 205
FAIL: Hand count after playing council_room was not correct. Expected 205, got 255
FAIL: Hand count after playing council_room was not correct. Expected 205, got 235
FAIL: Hand count after playing council_room was not correct. Expected 205, got 445
FAIL: Hand count after playing council_room was not correct. Expected 75, got 77
FAIL: Hand count after playing council_room was not correct. Expected 77, got 340
FAIL: Hand count after playing council_room was not correct. Expected 77, got 320
FAIL: Hand count after playing council_room was not correct. Expected 77, got 204
FAIL: Hand count after playing council_room was not correct. Expected 338, got 340
FAIL: Hand count after playing council_room was not correct. Expected 340, got 171
FAIL: Hand count after playing council_room was not correct. Expected 340, got 100
FAIL: Hand count after playing council_room was not correct. Expected 340, got 478
FAIL: Hand count after playing council_room was not correct. Expected 37, got 39
FAIL: Hand count after playing council_room was not correct. Expected 39, got 43
FAIL: Hand count after playing council_room was not correct. Expected 39, got 337
FAIL: Hand count after playing council_room was not correct. Expected 39, got 68
FAIL: Hand count after playing council_room was not correct. Expected 30, got 32
FAIL: Hand count after playing council_room was not correct. Expected 32, got 32
FAIL: Hand count after playing council_room was not correct. Expected 32, got 292
FAIL: Hand count after playing council_room was not correct. Expected 32, got 203
FAIL: Hand count after playing council_room was not correct. Expected 45, got 47
FAIL: Hand count after playing council_room was not correct. Expected 47, got 150
FAIL: Hand count after playing council_room was not correct. Expected 47, got 217
FAIL: Hand count after playing council_room was not correct. Expected 47, got 321
FAIL: Hand count after playing council_room was not correct. Expected 484, got 486
FAIL: Hand count after playing council_room was not correct. Expected 486, got 462
FAIL: Hand count after playing council_room was not correct. Expected 486, got 398
FAIL: Hand count after playing council_room was not correct. Expected 486, got 346
FAIL: Hand count after playing council_room was not correct. Expected 172, got 174
FAIL: Hand count after playing council_room was not correct. Expected 174, got 282
FAIL: Hand count after playing council_room was not correct. Expected 174, got 279
FAIL: Hand count after playing council_room was not correct. Expected 174, got 261
FAIL: Hand count after playing council_room was not correct. Expected 182, got 184
FAIL: Hand count after playing council_room was not correct. Expected 184, got 215
FAIL: Hand count after playing council_room was not correct. Expected 184, got 365
FAIL: Hand count after playing council_room was not correct. Expected 184, got 182
FAIL: Hand count after playing council_room was not correct. Expected 107, got 109
FAIL: Hand count after playing council_room was not correct. Expected 109, got 69
FAIL: Hand count after playing council_room was not correct. Expected 109, got 149
FAIL: Hand count after playing council_room was not correct. Expected 109, got 5
File 'dominion.c'
Lines executed:34.05% of 561
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:7
        -:    0:Programs:7
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
       30:    8:int compare(const void* a, const void* b) {
       30:    9:  if (*(int*)a > *(int*)b)
    #####:   10:    return 1;
       30:   11:  if (*(int*)a < *(int*)b)
        8:   12:    return -1;
       22:   13:  return 0;
        -:   14:}
        -:   15:
    #####:   16:struct gameState* newGame() {
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
        -:   19:}
        -:   20:
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
        -:   35:}
        -:   36:
        1:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;
        -:   43:  //set up random number generator
        1:   44:  SelectStream(1);
        1:   45:  PutSeed((long)randomSeed);
        -:   46:
        -:   47:  //check number of players
        1:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
        1:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
       11:   57:  for (i = 0; i < 10; i++)
        -:   58:    {
      110:   59:      for (j = 0; j < 10; j++)
        -:   60:        {
      100:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
        1:   73:  if (numPlayers == 2)
        -:   74:    {
        1:   75:      state->supplyCount[curse] = 10;
        -:   76:    }
    #####:   77:  else if (numPlayers == 3)
        -:   78:    {
    #####:   79:      state->supplyCount[curse] = 20;
        -:   80:    }
        -:   81:  else
        -:   82:    {
    #####:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
        1:   87:  if (numPlayers == 2)
        -:   88:    {
        1:   89:      state->supplyCount[estate] = 8;
        1:   90:      state->supplyCount[duchy] = 8;
        1:   91:      state->supplyCount[province] = 8;
        -:   92:    }
        -:   93:  else
        -:   94:    {
    #####:   95:      state->supplyCount[estate] = 12;
    #####:   96:      state->supplyCount[duchy] = 12;
    #####:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
        1:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
        1:  102:  state->supplyCount[silver] = 40;
        1:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
       21:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
        -:  107:    {
      165:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
        -:  109:	{
      155:  110:	  if (kingdomCards[j] == i)
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
       10:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
        -:  114:		{
    #####:  115:		  if (numPlayers == 2){
    #####:  116:		    state->supplyCount[i] = 8;
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
        -:  119:		}
        -:  120:	      else
        -:  121:		{
       10:  122:		  state->supplyCount[i] = 10;
        -:  123:		}
       10:  124:	      break;
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
      145:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
        3:  138:  for (i = 0; i < numPlayers; i++)
        -:  139:    {
        2:  140:      state->deckCount[i] = 0;
        8:  141:      for (j = 0; j < 3; j++)
        -:  142:	{
        6:  143:	  state->deck[i][j] = estate;
        6:  144:	  state->deckCount[i]++;
        -:  145:	}
       16:  146:      for (j = 3; j < 10; j++)
        -:  147:	{
       14:  148:	  state->deck[i][j] = copper;
       14:  149:	  state->deckCount[i]++;
        -:  150:	}
        -:  151:    }
        -:  152:
        -:  153:  //shuffle player decks
        3:  154:  for (i = 0; i < numPlayers; i++)
        -:  155:    {
        2:  156:      if ( shuffle(i, state) < 0 )
        -:  157:	{
    #####:  158:	  return -1;
        -:  159:	}
        -:  160:    }
        -:  161:
        -:  162:  //draw player hands
        3:  163:  for (i = 0; i < numPlayers; i++)
        -:  164:    {
        -:  165:      //initialize hand size to zero
        2:  166:      state->handCount[i] = 0;
        2:  167:      state->discardCount[i] = 0;
        -:  168:      //draw 5 cards
        -:  169:      // for (j = 0; j < 5; j++)
        -:  170:      //	{
        -:  171:      //	  drawCard(i, state);
        -:  172:      //	}
        -:  173:    }
        -:  174:
        -:  175:  //set embargo tokens to 0 for all supply piles
       28:  176:  for (i = 0; i <= treasure_map; i++)
        -:  177:    {
       27:  178:      state->embargoTokens[i] = 0;
        -:  179:    }
        -:  180:
        -:  181:  //initialize first player's turn
        1:  182:  state->outpostPlayed = 0;
        1:  183:  state->phase = 0;
        1:  184:  state->numActions = 1;
        1:  185:  state->numBuys = 1;
        1:  186:  state->playedCardCount = 0;
        1:  187:  state->whoseTurn = 0;
        1:  188:  state->handCount[state->whoseTurn] = 0;
        -:  189:  //int it; move to top
        -:  190:
        -:  191:  //Moved draw cards to here, only drawing at the start of a turn
        6:  192:  for (it = 0; it < 5; it++){
        5:  193:    drawCard(state->whoseTurn, state);
        -:  194:  }
        -:  195:
        1:  196:  updateCoins(state->whoseTurn, state, 0);
        -:  197:
        1:  198:  return 0;
        -:  199:}
        -:  200:
        2:  201:int shuffle(int player, struct gameState *state) {
        -:  202:
        -:  203:
        -:  204:  int newDeck[MAX_DECK];
        2:  205:  int newDeckPos = 0;
        -:  206:  int card;
        -:  207:  int i;
        -:  208:
        2:  209:  if (state->deckCount[player] < 1)
    #####:  210:    return -1;
        2:  211:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare);
        -:  212:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  213:
       24:  214:  while (state->deckCount[player] > 0) {
       20:  215:    card = floor(Random() * state->deckCount[player]);
       20:  216:    newDeck[newDeckPos] = state->deck[player][card];
       20:  217:    newDeckPos++;
       72:  218:    for (i = card; i < state->deckCount[player]-1; i++) {
       52:  219:      state->deck[player][i] = state->deck[player][i+1];
        -:  220:    }
       20:  221:    state->deckCount[player]--;
        -:  222:  }
       22:  223:  for (i = 0; i < newDeckPos; i++) {
       20:  224:    state->deck[player][i] = newDeck[i];
       20:  225:    state->deckCount[player]++;
        -:  226:  }
        -:  227:
        2:  228:  return 0;
        -:  229:}
        -:  230:
    #####:  231:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state)
        -:  232:{
        -:  233:  int card;
    #####:  234:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  235:
        -:  236:  //check if it is the right phase
    #####:  237:  if (state->phase != 0)
        -:  238:    {
    #####:  239:      return -1;
        -:  240:    }
        -:  241:
        -:  242:  //check if player has enough actions
    #####:  243:  if ( state->numActions < 1 )
        -:  244:    {
    #####:  245:      return -1;
        -:  246:    }
        -:  247:
        -:  248:  //get card played
    #####:  249:  card = handCard(handPos, state);
        -:  250:
        -:  251:  //check if selected card is an action
    #####:  252:  if ( card < adventurer || card > treasure_map )
        -:  253:    {
    #####:  254:      return -1;
        -:  255:    }
        -:  256:
        -:  257:  //play card
    #####:  258:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
        -:  259:    {
    #####:  260:      return -1;
        -:  261:    }
        -:  262:
        -:  263:  //reduce number of actions
    #####:  264:  state->numActions--;
        -:  265:
        -:  266:  //update coins (Treasure cards may be added with card draws)
    #####:  267:  updateCoins(state->whoseTurn, state, coin_bonus);
        -:  268:
    #####:  269:  return 0;
        -:  270:}
        -:  271:
    #####:  272:int buyCard(int supplyPos, struct gameState *state) {
        -:  273:  int who;
        -:  274:  if (DEBUG){
        -:  275:    printf("Entering buyCard...\n");
        -:  276:  }
        -:  277:
        -:  278:  // I don't know what to do about the phase thing.
        -:  279:
    #####:  280:  who = state->whoseTurn;
        -:  281:
    #####:  282:  if (state->numBuys < 1){
        -:  283:    if (DEBUG)
        -:  284:      printf("You do not have any buys left\n");
    #####:  285:    return -1;
    #####:  286:  } else if (supplyCount(supplyPos, state) <1){
        -:  287:    if (DEBUG)
        -:  288:      printf("There are not any of that type of card left\n");
    #####:  289:    return -1;
    #####:  290:  } else if (state->coins < getCost(supplyPos)){
        -:  291:    if (DEBUG)
        -:  292:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  293:    return -1;
        -:  294:  } else {
    #####:  295:    state->phase=1;
        -:  296:    //state->supplyCount[supplyPos]--;
    #####:  297:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  298:
    #####:  299:    state->coins = (state->coins) - (getCost(supplyPos));
    #####:  300:    state->numBuys--;
        -:  301:    if (DEBUG)
        -:  302:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  303:  }
        -:  304:
        -:  305:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  306:  //state->discardCount[who]++;
        -:  307:
    #####:  308:  return 0;
        -:  309:}
        -:  310:
       12:  311:int numHandCards(struct gameState *state) {
       12:  312:  return state->handCount[ whoseTurn(state) ];
        -:  313:}
        -:  314:
    #####:  315:int handCard(int handPos, struct gameState *state) {
    #####:  316:  int currentPlayer = whoseTurn(state);
    #####:  317:  return state->hand[currentPlayer][handPos];
        -:  318:}
        -:  319:
    #####:  320:int supplyCount(int card, struct gameState *state) {
    #####:  321:  return state->supplyCount[card];
        -:  322:}
        -:  323:
    #####:  324:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  325:  int i;
    #####:  326:  int count = 0;
        -:  327:
    #####:  328:  for (i = 0; i < state->deckCount[player]; i++)
        -:  329:    {
    #####:  330:      if (state->deck[player][i] == card) count++;
        -:  331:    }
        -:  332:
    #####:  333:  for (i = 0; i < state->handCount[player]; i++)
        -:  334:    {
    #####:  335:      if (state->hand[player][i] == card) count++;
        -:  336:    }
        -:  337:
    #####:  338:  for (i = 0; i < state->discardCount[player]; i++)
        -:  339:    {
    #####:  340:      if (state->discard[player][i] == card) count++;
        -:  341:    }
        -:  342:
    #####:  343:  return count;
        -:  344:}
        -:  345:
     6013:  346:int whoseTurn(struct gameState *state) {
     6013:  347:  return state->whoseTurn;
        -:  348:}
        -:  349:
    #####:  350:int endTurn(struct gameState *state) {
        -:  351:  int k;
        -:  352:  int i;
    #####:  353:  int currentPlayer = whoseTurn(state);
        -:  354:
        -:  355:  //Discard hand
    #####:  356:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    #####:  357:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  358:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  359:  }
    #####:  360:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  361:
        -:  362:  //Code for determining the player
    #####:  363:  if (currentPlayer < (state->numPlayers - 1)){
    #####:  364:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  365:  }
        -:  366:  else{
    #####:  367:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  368:  }
        -:  369:
    #####:  370:  state->outpostPlayed = 0;
    #####:  371:  state->phase = 0;
    #####:  372:  state->numActions = 1;
    #####:  373:  state->coins = 0;
    #####:  374:  state->numBuys = 1;
    #####:  375:  state->playedCardCount = 0;
    #####:  376:  state->handCount[state->whoseTurn] = 0;
        -:  377:
        -:  378:  //int k; move to top
        -:  379:  //Next player draws hand
    #####:  380:  for (k = 0; k < 5; k++){
    #####:  381:    drawCard(state->whoseTurn, state);//Draw a card
        -:  382:  }
        -:  383:
        -:  384:  //Update money
    #####:  385:  updateCoins(state->whoseTurn, state , 0);
        -:  386:
    #####:  387:  return 0;
        -:  388:}
        -:  389:
     1002:  390:int isGameOver(struct gameState *state) {
        -:  391:  int i;
        -:  392:  int j;
        -:  393:
        -:  394:  //if stack of Province cards is empty, the game ends
     1002:  395:  if (state->supplyCount[province] == 0)
        -:  396:    {
      124:  397:      return 1;
        -:  398:    }
        -:  399:
        -:  400:  //if three supply pile are at 0, the game ends
      878:  401:  j = 0;
    22828:  402:  for (i = 0; i < 25; i++)
        -:  403:    {
    21950:  404:      if (state->supplyCount[i] == 0)
        -:  405:	{
     2631:  406:	  j++;
        -:  407:	}
        -:  408:    }
      878:  409:  if ( j >= 3)
        -:  410:    {
      877:  411:      return 1;
        -:  412:    }
        -:  413:
        1:  414:  return 0;
        -:  415:}
        -:  416:
        4:  417:int scoreFor (int player, struct gameState *state) {
        -:  418:
        -:  419:  int i;
        4:  420:  int score = 0;
        -:  421:  //score from hand
       16:  422:  for (i = 0; i < state->handCount[player]; i++)
        -:  423:    {
       12:  424:      if (state->hand[player][i] == curse) { score = score - 1; };
       12:  425:      if (state->hand[player][i] == estate) { score = score + 1; };
       12:  426:      if (state->hand[player][i] == duchy) { score = score + 3; };
       12:  427:      if (state->hand[player][i] == province) { score = score + 6; };
       12:  428:      if (state->hand[player][i] == great_hall) { score = score + 1; };
       12:  429:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  430:    }
        -:  431:
        -:  432:  //score from discard
        4:  433:  for (i = 0; i < state->discardCount[player]; i++)
        -:  434:    {
    #####:  435:      if (state->discard[player][i] == curse) { score = score - 1; };
    #####:  436:      if (state->discard[player][i] == estate) { score = score + 1; };
    #####:  437:      if (state->discard[player][i] == duchy) { score = score + 3; };
    #####:  438:      if (state->discard[player][i] == province) { score = score + 6; };
    #####:  439:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    #####:  440:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  441:    }
        -:  442:
        -:  443:  //score from deck
        4:  444:  for (i = 0; i < state->discardCount[player]; i++)
        -:  445:    {
    #####:  446:      if (state->deck[player][i] == curse) { score = score - 1; };
    #####:  447:      if (state->deck[player][i] == estate) { score = score + 1; };
    #####:  448:      if (state->deck[player][i] == duchy) { score = score + 3; };
    #####:  449:      if (state->deck[player][i] == province) { score = score + 6; };
    #####:  450:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    #####:  451:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  452:    }
        -:  453:
        4:  454:  return score;
        -:  455:}
        -:  456:
    #####:  457:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  458:  int i;
        -:  459:  int j;
        -:  460:  int highScore;
        -:  461:  int currentPlayer;
        -:  462:
        -:  463:  //get score for each player
    #####:  464:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  465:    {
        -:  466:      //set unused player scores to -9999
    #####:  467:      if (i >= state->numPlayers)
        -:  468:	{
    #####:  469:	  players[i] = -9999;
        -:  470:	}
        -:  471:      else
        -:  472:	{
    #####:  473:	  players[i] = scoreFor (i, state);
        -:  474:	}
        -:  475:    }
        -:  476:
        -:  477:  //find highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  480:    {
    #####:  481:      if (players[i] > players[j])
        -:  482:	{
    #####:  483:	  j = i;
        -:  484:	}
        -:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //add 1 to players who had less turns
    #####:  489:  currentPlayer = whoseTurn(state);
    #####:  490:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  491:    {
    #####:  492:      if ( players[i] == highScore && i > currentPlayer )
        -:  493:	{
    #####:  494:	  players[i]++;
        -:  495:	}
        -:  496:    }
        -:  497:
        -:  498:  //find new highest score
    #####:  499:  j = 0;
    #####:  500:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  501:    {
    #####:  502:      if ( players[i] > players[j] )
        -:  503:	{
    #####:  504:	  j = i;
        -:  505:	}
        -:  506:    }
    #####:  507:  highScore = players[j];
        -:  508:
        -:  509:  //set winners in array to 1 and rest to 0
    #####:  510:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  511:    {
    #####:  512:      if ( players[i] == highScore )
        -:  513:	{
    #####:  514:	  players[i] = 1;
        -:  515:	}
        -:  516:      else
        -:  517:	{
    #####:  518:	  players[i] = 0;
        -:  519:	}
        -:  520:    }
        -:  521:
    #####:  522:  return 0;
        -:  523:}
        -:  524:
    22007:  525:int drawCard(int player, struct gameState *state)
        -:  526:{	int count;
        -:  527:  int deckCounter;
    22007:  528:  if (state->deckCount[player] <= 0){//Deck is empty
        -:  529:
        -:  530:    //Step 1 Shuffle the discard pile back into a deck
        -:  531:    int i;
        -:  532:    //Move discard to deck
    #####:  533:    for (i = 0; i < state->discardCount[player];i++){
    #####:  534:      state->deck[player][i] = state->discard[player][i];
    #####:  535:      state->discard[player][i] = -1;
        -:  536:    }
        -:  537:
    #####:  538:    state->deckCount[player] = state->discardCount[player];
    #####:  539:    state->discardCount[player] = 0;//Reset discard
        -:  540:
        -:  541:    //Shufffle the deck
    #####:  542:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
        -:  543:
        -:  544:    if (DEBUG){//Debug statements
        -:  545:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  546:    }
        -:  547:
    #####:  548:    state->discardCount[player] = 0;
        -:  549:
        -:  550:    //Step 2 Draw Card
    #####:  551:    count = state->handCount[player];//Get current player's hand count
        -:  552:
        -:  553:    if (DEBUG){//Debug statements
        -:  554:      printf("Current hand count: %d\n", count);
        -:  555:    }
        -:  556:
    #####:  557:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  558:
    #####:  559:    if (deckCounter == 0)
    #####:  560:      return -1;
        -:  561:
    #####:  562:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    #####:  563:    state->deckCount[player]--;
    #####:  564:    state->handCount[player]++;//Increment hand count
        -:  565:  }
        -:  566:
        -:  567:  else{
    22007:  568:    int count = state->handCount[player];//Get current hand count for player
        -:  569:    int deckCounter;
        -:  570:    if (DEBUG){//Debug statements
        -:  571:      printf("Current hand count: %d\n", count);
        -:  572:    }
        -:  573:
    22007:  574:    deckCounter = state->deckCount[player];//Create holder for the deck count
    22007:  575:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
    22007:  576:    state->deckCount[player]--;
    22007:  577:    state->handCount[player]++;//Increment hand count
        -:  578:  }
        -:  579:
    22007:  580:  return 0;
        -:  581:}
        -:  582:
       35:  583:int getCost(int cardNumber)
        -:  584:{
       35:  585:  switch( cardNumber )
        -:  586:    {
        -:  587:    case curse:
        1:  588:      return 0;
        -:  589:    case estate:
        1:  590:      return 2;
        -:  591:    case duchy:
        1:  592:      return 5;
        -:  593:    case province:
        1:  594:      return 8;
        -:  595:    case copper:
        1:  596:      return 0;
        -:  597:    case silver:
        1:  598:      return 3;
        -:  599:    case gold:
        1:  600:      return 6;
        -:  601:    case adventurer:
        1:  602:      return 6;
        -:  603:    case council_room:
        1:  604:      return 5;
        -:  605:    case feast:
        1:  606:      return 4;
        -:  607:    case gardens:
        1:  608:      return 4;
        -:  609:    case mine:
        1:  610:      return 5;
        -:  611:    case remodel:
        1:  612:      return 4;
        -:  613:    case smithy:
        1:  614:      return 4;
        -:  615:    case village:
        1:  616:      return 3;
        -:  617:    case baron:
        1:  618:      return 4;
        -:  619:    case great_hall:
        1:  620:      return 3;
        -:  621:    case minion:
        1:  622:      return 5;
        -:  623:    case steward:
        1:  624:      return 3;
        -:  625:    case tribute:
        1:  626:      return 5;
        -:  627:    case ambassador:
        1:  628:      return 3;
        -:  629:    case cutpurse:
        1:  630:      return 4;
        -:  631:    case embargo:
        1:  632:      return 2;
        -:  633:    case outpost:
        1:  634:      return 5;
        -:  635:    case salvager:
        1:  636:      return 4;
        -:  637:    case sea_hag:
        1:  638:      return 4;
        -:  639:    case treasure_map:
        1:  640:      return 4;
        -:  641:    }
        -:  642:
        8:  643:  return -1;
        -:  644:}
        -:  645:
        1:  646:void adventurer_action (int drawntreasure, struct gameState *state, int currentPlayer, int cardDrawn, int temphand[MAX_HAND], int z) {
        4:  647:    while(drawntreasure<2){
        2:  648:        if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
    #####:  649:            shuffle(currentPlayer, state);
        -:  650:        }
        2:  651:        drawCard(currentPlayer, state);
        2:  652:        cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
        2:  653:        if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
        2:  654:          drawntreasure++;
        -:  655:        else{
    #####:  656:          temphand[z]=cardDrawn;
    #####:  657:          state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
        -:  658:        }
        -:  659:  }
        2:  660:  while(z-1>=0){
    #####:  661:      state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    #####:  662:      z=z-1;
        -:  663:  }
        1:  664:}
        -:  665:
     4000:  666:void smithy_action (int currentPlayer, struct gameState *state, int i, int handPos) {
        -:  667:  //+3 Cards
    16000:  668:  for (i = 0; i < 3; i++) {
    12000:  669:    drawCard(currentPlayer, state);
        -:  670:  }
        -:  671:
        -:  672:  //discard card from hand
     4000:  673:  discardCard(handPos, currentPlayer, state, 0);
     4000:  674:}
        -:  675:
    #####:  676:void village_action (int currentPlayer, struct gameState *state, int handPos) {
        -:  677:  //+1 Card
    #####:  678:  drawCard(currentPlayer, state);
        -:  679:
        -:  680:  //+2 Actions
    #####:  681:  state->numActions = state->numActions + 2;
        -:  682:
        -:  683:  //discard played card from hand
    #####:  684:  discardCard(handPos, currentPlayer, state, 0);
    #####:  685:}
        -:  686:
     2000:  687:void council_room_action (int i, int currentPlayer, struct gameState *state) {
        -:  688:  //+4 Cards
    10000:  689:  for (i = 0; i < 4; i++) {
     8000:  690:      drawCard(currentPlayer, state);
        -:  691:  }
        -:  692:
        -:  693:  //+1 Buy
     2000:  694:  state->numBuys++;
        -:  695:
        -:  696:  //Each other player draws a card
    10000:  697:  for (i = 0; i < state->numPlayers; i++) {
     8000:  698:      if ( i == currentPlayer ) {
     2000:  699:          drawCard(i, state);
        -:  700:      }
        -:  701:  }
     2000:  702:}
        -:  703:
    #####:  704:int mine_action (int j, struct gameState *state, int currentPlayer, int choice1, int choice2, int handPos, int i) {
    #####:  705:  j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  706:
    #####:  707:  if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold) {
    #####:  708:      return -1;
        -:  709:  }
        -:  710:
    #####:  711:  if (choice2 > treasure_map || choice2 < curse) {
    #####:  712:      return -1;
        -:  713:  }
        -:  714:
    #####:  715:  if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) ) {
    #####:  716:      return -1;
        -:  717:  }
        -:  718:
    #####:  719:  gainCard(choice2, state, 2, currentPlayer);
        -:  720:
        -:  721:  //discard card from hand
    #####:  722:  discardCard(handPos, currentPlayer, state, 0);
        -:  723:
        -:  724:  //discard trashed card
    #####:  725:  for (i = 0; i < state->handCount[currentPlayer]; i++) {
    #####:  726:      if (state->hand[currentPlayer][i] == j) {
    #####:  727:        discardCard(i, currentPlayer, state, 0);
    #####:  728:        break;
        -:  729:      }
        -:  730:  }
        -:  731:
    #####:  732:  return -1;
        -:  733:}
        -:  734:
     6001:  735:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  736:{
        -:  737:  int i;
        -:  738:  int j;
        -:  739:  int k;
        -:  740:  int x;
        -:  741:  int m;
        -:  742:  int index;
     6001:  743:  int currentPlayer = whoseTurn(state);
     6001:  744:  int nextPlayer = currentPlayer + 1;
        -:  745:
     6001:  746:  int tributeRevealedCards[2] = {-1, -1};
        -:  747:  int temphand[MAX_HAND];// moved above the if statement
     6001:  748:  int drawntreasure=0;
        -:  749:  int cardDrawn;
     6001:  750:  int z = 0;// this is the counter for the temp hand
     6001:  751:  if (nextPlayer > (state->numPlayers - 1)){
     4500:  752:    nextPlayer = 0;
        -:  753:  }
        -:  754:
        -:  755:
        -:  756:  //uses switch to select card and perform actions
     6001:  757:  switch( card )
        -:  758:    {
        -:  759:    case adventurer:
        1:  760:      adventurer_action (drawntreasure, state, currentPlayer, cardDrawn, temphand, z);
        1:  761:      return 0;
        -:  762:
        -:  763:    case council_room:
     2000:  764:      council_room_action (i, currentPlayer, state);
     2000:  765:      return 0;
        -:  766:
        -:  767:    case feast:
        -:  768:      //gain card with cost up to 5
        -:  769:      //Backup hand
    #####:  770:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  771:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  772:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  773:      }
        -:  774:      //Backup hand
        -:  775:
        -:  776:      //Update Coins for Buy
    #####:  777:      updateCoins(currentPlayer, state, 5);
    #####:  778:      x = 1;//Condition to loop on
    #####:  779:      while( x == 1) {//Buy one card
    #####:  780:	if (supplyCount(choice1, state) <= 0){
        -:  781:	  if (DEBUG)
        -:  782:	    printf("None of that card left, sorry!\n");
        -:  783:
        -:  784:	  if (DEBUG){
        -:  785:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  786:	  }
        -:  787:	}
    #####:  788:	else if (state->coins < getCost(choice1)){
    #####:  789:	  printf("That card is too expensive!\n");
        -:  790:
        -:  791:	  if (DEBUG){
        -:  792:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  793:	  }
        -:  794:	}
        -:  795:	else{
        -:  796:
        -:  797:	  if (DEBUG){
        -:  798:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  799:	  }
        -:  800:
    #####:  801:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    #####:  802:	  x = 0;//No more buying cards
        -:  803:
        -:  804:	  if (DEBUG){
        -:  805:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  806:	  }
        -:  807:
        -:  808:	}
        -:  809:      }
        -:  810:
        -:  811:      //Reset Hand
    #####:  812:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  813:	state->hand[currentPlayer][i] = temphand[i];
    #####:  814:	temphand[i] = -1;
        -:  815:      }
        -:  816:      //Reset Hand
        -:  817:
    #####:  818:      return 0;
        -:  819:
        -:  820:    case gardens:
    #####:  821:      return -1;
        -:  822:
        -:  823:    case mine:
    #####:  824:      m = mine_action (j, state, currentPlayer, choice1, choice2, handPos, i);
    #####:  825:      return m;
        -:  826:
        -:  827:    case remodel:
    #####:  828:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  829:
    #####:  830:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
        -:  831:	{
    #####:  832:	  return -1;
        -:  833:	}
        -:  834:
    #####:  835:      gainCard(choice2, state, 0, currentPlayer);
        -:  836:
        -:  837:      //discard card from hand
    #####:  838:      discardCard(handPos, currentPlayer, state, 0);
        -:  839:
        -:  840:      //discard trashed card
    #####:  841:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  842:	{
    #####:  843:	  if (state->hand[currentPlayer][i] == j)
        -:  844:	    {
    #####:  845:	      discardCard(i, currentPlayer, state, 0);
    #####:  846:	      break;
        -:  847:	    }
        -:  848:	}
        -:  849:
        -:  850:
    #####:  851:      return 0;
        -:  852:
        -:  853:    case smithy:
     4000:  854:      smithy_action (currentPlayer, state, i, handPos);
     4000:  855:      return 0;
        -:  856:
        -:  857:    case village:
    #####:  858:      village_action (currentPlayer, state, handPos);
    #####:  859:      return 0;
        -:  860:
        -:  861:    case baron:
    #####:  862:      state->numBuys++;//Increase buys by 1!
    #####:  863:      if (choice1 > 0){//Boolean true or going to discard an estate
    #####:  864:	int p = 0;//Iterator for hand!
    #####:  865:	int card_not_discarded = 1;//Flag for discard set!
    #####:  866:	while(card_not_discarded){
    #####:  867:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    #####:  868:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  869:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  870:	    state->discardCount[currentPlayer]++;
    #####:  871:	    for (;p < state->handCount[currentPlayer]; p++){
    #####:  872:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  873:	    }
    #####:  874:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  875:	    state->handCount[currentPlayer]--;
    #####:  876:	    card_not_discarded = 0;//Exit the loop
        -:  877:	  }
    #####:  878:	  else if (p > state->handCount[currentPlayer]){
        -:  879:	    if(DEBUG) {
        -:  880:	      printf("No estate cards in your hand, invalid choice\n");
        -:  881:	      printf("Must gain an estate if there are any\n");
        -:  882:	    }
    #####:  883:	    if (supplyCount(estate, state) > 0){
    #####:  884:	      gainCard(estate, state, 0, currentPlayer);
    #####:  885:	      state->supplyCount[estate]--;//Decrement estates
    #####:  886:	      if (supplyCount(estate, state) == 0){
    #####:  887:		isGameOver(state);
        -:  888:	      }
        -:  889:	    }
    #####:  890:	    card_not_discarded = 0;//Exit the loop
        -:  891:	  }
        -:  892:
        -:  893:	  else{
    #####:  894:	    p++;//Next card
        -:  895:	  }
        -:  896:	}
        -:  897:      }
        -:  898:
        -:  899:      else{
    #####:  900:	if (supplyCount(estate, state) > 0){
    #####:  901:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
    #####:  902:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  903:	  if (supplyCount(estate, state) == 0){
    #####:  904:	    isGameOver(state);
        -:  905:	  }
        -:  906:	}
        -:  907:      }
        -:  908:
        -:  909:
    #####:  910:      return 0;
        -:  911:
        -:  912:    case great_hall:
        -:  913:      //+1 Card
    #####:  914:      drawCard(currentPlayer, state);
        -:  915:
        -:  916:      //+1 Actions
    #####:  917:      state->numActions++;
        -:  918:
        -:  919:      //discard card from hand
    #####:  920:      discardCard(handPos, currentPlayer, state, 0);
    #####:  921:      return 0;
        -:  922:
        -:  923:    case minion:
        -:  924:      //+1 action
    #####:  925:      state->numActions++;
        -:  926:
        -:  927:      //discard card from hand
    #####:  928:      discardCard(handPos, currentPlayer, state, 0);
        -:  929:
    #####:  930:      if (choice1)		//+2 coins
        -:  931:	{
    #####:  932:	  state->coins = state->coins + 2;
        -:  933:	}
        -:  934:
    #####:  935:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
        -:  936:	{
        -:  937:	  //discard hand
    #####:  938:	  while(numHandCards(state) > 0)
        -:  939:	    {
    #####:  940:	      discardCard(handPos, currentPlayer, state, 0);
        -:  941:	    }
        -:  942:
        -:  943:	  //draw 4
    #####:  944:	  for (i = 0; i < 4; i++)
        -:  945:	    {
    #####:  946:	      drawCard(currentPlayer, state);
        -:  947:	    }
        -:  948:
        -:  949:	  //other players discard hand and redraw if hand size > 4
    #####:  950:	  for (i = 0; i < state->numPlayers; i++)
        -:  951:	    {
    #####:  952:	      if (i != currentPlayer)
        -:  953:		{
    #####:  954:		  if ( state->handCount[i] > 4 )
        -:  955:		    {
        -:  956:		      //discard hand
    #####:  957:		      while( state->handCount[i] > 0 )
        -:  958:			{
    #####:  959:			  discardCard(handPos, i, state, 0);
        -:  960:			}
        -:  961:
        -:  962:		      //draw 4
    #####:  963:		      for (j = 0; j < 4; j++)
        -:  964:			{
    #####:  965:			  drawCard(i, state);
        -:  966:			}
        -:  967:		    }
        -:  968:		}
        -:  969:	    }
        -:  970:
        -:  971:	}
    #####:  972:      return 0;
        -:  973:
        -:  974:    case steward:
    #####:  975:      if (choice1 == 1)
        -:  976:	{
        -:  977:	  //+2 cards
    #####:  978:	  drawCard(currentPlayer, state);
    #####:  979:	  drawCard(currentPlayer, state);
        -:  980:	}
    #####:  981:      else if (choice1 == 2)
        -:  982:	{
        -:  983:	  //+2 coins
    #####:  984:	  state->coins = state->coins + 2;
        -:  985:	}
        -:  986:      else
        -:  987:	{
        -:  988:	  //trash 2 cards in hand
    #####:  989:	  discardCard(choice2, currentPlayer, state, 1);
    #####:  990:	  discardCard(choice3, currentPlayer, state, 1);
        -:  991:	}
        -:  992:
        -:  993:      //discard card from hand
    #####:  994:      discardCard(handPos, currentPlayer, state, 0);
    #####:  995:      return 0;
        -:  996:
        -:  997:    case tribute:
    #####:  998:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    #####:  999:	if (state->deckCount[nextPlayer] > 0){
    #####: 1000:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1001:	  state->deckCount[nextPlayer]--;
        -: 1002:	}
    #####: 1003:	else if (state->discardCount[nextPlayer] > 0){
    #####: 1004:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1005:	  state->discardCount[nextPlayer]--;
        -: 1006:	}
        -: 1007:	else{
        -: 1008:	  //No Card to Reveal
        -: 1009:	  if (DEBUG){
        -: 1010:	    printf("No cards to reveal\n");
        -: 1011:	  }
        -: 1012:	}
        -: 1013:      }
        -: 1014:
        -: 1015:      else{
    #####: 1016:	if (state->deckCount[nextPlayer] == 0){
    #####: 1017:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    #####: 1018:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1019:	    state->deckCount[nextPlayer]++;
    #####: 1020:	    state->discard[nextPlayer][i] = -1;
    #####: 1021:	    state->discardCount[nextPlayer]--;
        -: 1022:	  }
        -: 1023:
    #####: 1024:	  shuffle(nextPlayer,state);//Shuffle the deck
        -: 1025:	}
    #####: 1026:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1027:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1028:	state->deckCount[nextPlayer]--;
    #####: 1029:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1030:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1031:	state->deckCount[nextPlayer]--;
        -: 1032:      }
        -: 1033:
    #####: 1034:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one
    #####: 1035:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1036:	state->playedCardCount++;
    #####: 1037:	tributeRevealedCards[1] = -1;
        -: 1038:      }
        -: 1039:
    #####: 1040:      for (i = 0; i <= 2; i ++){
    #####: 1041:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    #####: 1042:	  state->coins += 2;
        -: 1043:	}
        -: 1044:
    #####: 1045:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    #####: 1046:	  drawCard(currentPlayer, state);
    #####: 1047:	  drawCard(currentPlayer, state);
        -: 1048:	}
        -: 1049:	else{//Action Card
    #####: 1050:	  state->numActions = state->numActions + 2;
        -: 1051:	}
        -: 1052:      }
        -: 1053:
    #####: 1054:      return 0;
        -: 1055:
        -: 1056:    case ambassador:
    #####: 1057:      j = 0;		//used to check if player has enough cards to discard
        -: 1058:
    #####: 1059:      if (choice2 > 2 || choice2 < 0)
        -: 1060:	{
    #####: 1061:	  return -1;
        -: 1062:	}
        -: 1063:
    #####: 1064:      if (choice1 == handPos)
        -: 1065:	{
    #####: 1066:	  return -1;
        -: 1067:	}
        -: 1068:
    #####: 1069:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1070:	{
    #####: 1071:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
        -: 1072:	    {
    #####: 1073:	      j++;
        -: 1074:	    }
        -: 1075:	}
    #####: 1076:      if (j < choice2)
        -: 1077:	{
    #####: 1078:	  return -1;
        -: 1079:	}
        -: 1080:
        -: 1081:      if (DEBUG)
        -: 1082:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1083:
        -: 1084:      //increase supply count for choosen card by amount being discarded
    #####: 1085:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1086:
        -: 1087:      //each other player gains a copy of revealed card
    #####: 1088:      for (i = 0; i < state->numPlayers; i++)
        -: 1089:	{
    #####: 1090:	  if (i != currentPlayer)
        -: 1091:	    {
    #####: 1092:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
        -: 1093:	    }
        -: 1094:	}
        -: 1095:
        -: 1096:      //discard played card from hand
    #####: 1097:      discardCard(handPos, currentPlayer, state, 0);
        -: 1098:
        -: 1099:      //trash copies of cards returned to supply
    #####: 1100:      for (j = 0; j < choice2; j++)
        -: 1101:	{
    #####: 1102:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1103:	    {
    #####: 1104:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
        -: 1105:		{
    #####: 1106:		  discardCard(i, currentPlayer, state, 1);
    #####: 1107:		  break;
        -: 1108:		}
        -: 1109:	    }
        -: 1110:	}
        -: 1111:
    #####: 1112:      return 0;
        -: 1113:
        -: 1114:    case cutpurse:
        -: 1115:
    #####: 1116:      updateCoins(currentPlayer, state, 2);
    #####: 1117:      for (i = 0; i < state->numPlayers; i++)
        -: 1118:	{
    #####: 1119:	  if (i != currentPlayer)
        -: 1120:	    {
    #####: 1121:	      for (j = 0; j < state->handCount[i]; j++)
        -: 1122:		{
    #####: 1123:		  if (state->hand[i][j] == copper)
        -: 1124:		    {
    #####: 1125:		      discardCard(j, i, state, 0);
    #####: 1126:		      break;
        -: 1127:		    }
    #####: 1128:		  if (j == state->handCount[i])
        -: 1129:		    {
    #####: 1130:		      for (k = 0; k < state->handCount[i]; k++)
        -: 1131:			{
        -: 1132:			  if (DEBUG)
        -: 1133:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1134:			}
    #####: 1135:		      break;
        -: 1136:		    }
        -: 1137:		}
        -: 1138:
        -: 1139:	    }
        -: 1140:
        -: 1141:	}
        -: 1142:
        -: 1143:      //discard played card from hand
    #####: 1144:      discardCard(handPos, currentPlayer, state, 0);
        -: 1145:
    #####: 1146:      return 0;
        -: 1147:
        -: 1148:
        -: 1149:    case embargo:
        -: 1150:      //+2 Coins
    #####: 1151:      state->coins = state->coins + 2;
        -: 1152:
        -: 1153:      //see if selected pile is in play
    #####: 1154:      if ( state->supplyCount[choice1] == -1 )
        -: 1155:	{
    #####: 1156:	  return -1;
        -: 1157:	}
        -: 1158:
        -: 1159:      //add embargo token to selected supply pile
    #####: 1160:      state->embargoTokens[choice1]++;
        -: 1161:
        -: 1162:      //trash card
    #####: 1163:      discardCard(handPos, currentPlayer, state, 1);
    #####: 1164:      return 0;
        -: 1165:
        -: 1166:    case outpost:
        -: 1167:      //set outpost flag
    #####: 1168:      state->outpostPlayed++;
        -: 1169:
        -: 1170:      //discard card
    #####: 1171:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1172:      return 0;
        -: 1173:
        -: 1174:    case salvager:
        -: 1175:      //+1 buy
    #####: 1176:      state->numBuys++;
        -: 1177:
    #####: 1178:      if (choice1)
        -: 1179:	{
        -: 1180:	  //gain coins equal to trashed card
    #####: 1181:	  state->coins = state->coins + getCost( handCard(choice1, state) );
        -: 1182:	  //trash card
    #####: 1183:	  discardCard(choice1, currentPlayer, state, 1);
        -: 1184:	}
        -: 1185:
        -: 1186:      //discard card
    #####: 1187:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1188:      return 0;
        -: 1189:
        -: 1190:    case sea_hag:
    #####: 1191:      for (i = 0; i < state->numPlayers; i++){
    #####: 1192:	if (i != currentPlayer){
    #####: 1193:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1194:	  state->discardCount[i]++;
    #####: 1195:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1196:	}
        -: 1197:      }
    #####: 1198:      return 0;
        -: 1199:
        -: 1200:    case treasure_map:
        -: 1201:      //search hand for another treasure_map
    #####: 1202:      index = -1;
    #####: 1203:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1204:	{
    #####: 1205:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
        -: 1206:	    {
    #####: 1207:	      index = i;
    #####: 1208:	      break;
        -: 1209:	    }
        -: 1210:	}
    #####: 1211:      if (index > -1)
        -: 1212:	{
        -: 1213:	  //trash both treasure cards
    #####: 1214:	  discardCard(handPos, currentPlayer, state, 1);
    #####: 1215:	  discardCard(index, currentPlayer, state, 1);
        -: 1216:
        -: 1217:	  //gain 4 Gold cards
    #####: 1218:	  for (i = 0; i < 4; i++)
        -: 1219:	    {
    #####: 1220:	      gainCard(gold, state, 1, currentPlayer);
        -: 1221:	    }
        -: 1222:
        -: 1223:	  //return success
    #####: 1224:	  return 1;
        -: 1225:	}
        -: 1226:
        -: 1227:      //no second treasure_map found in hand
    #####: 1228:      return -1;
        -: 1229:    }
        -: 1230:
    #####: 1231:  return -1;
        -: 1232:}
        -: 1233:
     4000: 1234:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1235:{
        -: 1236:
        -: 1237:  //if card is not trashed, added to Played pile
     4000: 1238:  if (trashFlag < 1)
        -: 1239:    {
        -: 1240:      //add card to played pile
     4000: 1241:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos];
     4000: 1242:      state->playedCardCount++;
        -: 1243:    }
        -: 1244:
        -: 1245:  //set played card to -1
     4000: 1246:  state->hand[currentPlayer][handPos] = -1;
        -: 1247:
        -: 1248:  //remove card from player's hand
     4000: 1249:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
        -: 1250:    {
        -: 1251:      //reduce number of cards in hand
    #####: 1252:      state->handCount[currentPlayer]--;
        -: 1253:    }
     4000: 1254:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
        -: 1255:    {
        -: 1256:      //reduce number of cards in hand
    #####: 1257:      state->handCount[currentPlayer]--;
        -: 1258:    }
        -: 1259:  else
        -: 1260:    {
        -: 1261:      //replace discarded card with last card in hand
     4000: 1262:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1263:      //set last card to -1
     4000: 1264:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1265:      //reduce number of cards in hand
     4000: 1266:      state->handCount[currentPlayer]--;
        -: 1267:    }
        -: 1268:
     4000: 1269:  return 0;
        -: 1270:}
        -: 1271:
    #####: 1272:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1273:{
        -: 1274:  //Note: supplyPos is enum of choosen card
        -: 1275:
        -: 1276:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1277:  if ( supplyCount(supplyPos, state) < 1 )
        -: 1278:    {
    #####: 1279:      return -1;
        -: 1280:    }
        -: 1281:
        -: 1282:  //added card for [whoseTurn] current player:
        -: 1283:  // toFlag = 0 : add to discard
        -: 1284:  // toFlag = 1 : add to deck
        -: 1285:  // toFlag = 2 : add to hand
        -: 1286:
    #####: 1287:  if (toFlag == 1)
        -: 1288:    {
    #####: 1289:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1290:      state->deckCount[player]++;
        -: 1291:    }
    #####: 1292:  else if (toFlag == 2)
        -: 1293:    {
    #####: 1294:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1295:      state->handCount[player]++;
        -: 1296:    }
        -: 1297:  else
        -: 1298:    {
    #####: 1299:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1300:      state->discardCount[player]++;
        -: 1301:    }
        -: 1302:
        -: 1303:  //decrease number in supply pile
    #####: 1304:  state->supplyCount[supplyPos]--;
        -: 1305:
    #####: 1306:  return 0;
        -: 1307:}
        -: 1308:
        9: 1309:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1310:{
        -: 1311:  int i;
        -: 1312:
        -: 1313:  //reset coin count
        9: 1314:  state->coins = 0;
        -: 1315:
        -: 1316:  //add coins for each Treasure card in player's hand
       14: 1317:  for (i = 0; i < state->handCount[player]; i++)
        -: 1318:    {
        5: 1319:      if (state->hand[player][i] == copper)
        -: 1320:	{
        4: 1321:	  state->coins += 1;
        -: 1322:	}
        1: 1323:      else if (state->hand[player][i] == silver)
        -: 1324:	{
    #####: 1325:	  state->coins += 2;
        -: 1326:	}
        1: 1327:      else if (state->hand[player][i] == gold)
        -: 1328:	{
    #####: 1329:	  state->coins += 3;
        -: 1330:	}
        -: 1331:    }
        -: 1332:
        -: 1333:  //add bonus
        9: 1334:  state->coins += bonus;
        -: 1335:
        9: 1336:  return 0;
        -: 1337:}
        -: 1338:
        -: 1339:
        -: 1340://end of dominion.c
cardtest4.c:
All tests passed! Returned fine and a new card was added and old was removed. Number of actions also right.
File 'dominion.c'
Lines executed:34.94% of 561
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:8
        -:    0:Programs:8
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
       30:    8:int compare(const void* a, const void* b) {
       30:    9:  if (*(int*)a > *(int*)b)
    #####:   10:    return 1;
       30:   11:  if (*(int*)a < *(int*)b)
        8:   12:    return -1;
       22:   13:  return 0;
        -:   14:}
        -:   15:
    #####:   16:struct gameState* newGame() {
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
        -:   19:}
        -:   20:
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
        -:   35:}
        -:   36:
        1:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;
        -:   43:  //set up random number generator
        1:   44:  SelectStream(1);
        1:   45:  PutSeed((long)randomSeed);
        -:   46:
        -:   47:  //check number of players
        1:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
        1:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
       11:   57:  for (i = 0; i < 10; i++)
        -:   58:    {
      110:   59:      for (j = 0; j < 10; j++)
        -:   60:        {
      100:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
        1:   73:  if (numPlayers == 2)
        -:   74:    {
        1:   75:      state->supplyCount[curse] = 10;
        -:   76:    }
    #####:   77:  else if (numPlayers == 3)
        -:   78:    {
    #####:   79:      state->supplyCount[curse] = 20;
        -:   80:    }
        -:   81:  else
        -:   82:    {
    #####:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
        1:   87:  if (numPlayers == 2)
        -:   88:    {
        1:   89:      state->supplyCount[estate] = 8;
        1:   90:      state->supplyCount[duchy] = 8;
        1:   91:      state->supplyCount[province] = 8;
        -:   92:    }
        -:   93:  else
        -:   94:    {
    #####:   95:      state->supplyCount[estate] = 12;
    #####:   96:      state->supplyCount[duchy] = 12;
    #####:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
        1:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
        1:  102:  state->supplyCount[silver] = 40;
        1:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
       21:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
        -:  107:    {
      165:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
        -:  109:	{
      155:  110:	  if (kingdomCards[j] == i)
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
       10:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
        -:  114:		{
    #####:  115:		  if (numPlayers == 2){
    #####:  116:		    state->supplyCount[i] = 8;
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
        -:  119:		}
        -:  120:	      else
        -:  121:		{
       10:  122:		  state->supplyCount[i] = 10;
        -:  123:		}
       10:  124:	      break;
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
      145:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
        3:  138:  for (i = 0; i < numPlayers; i++)
        -:  139:    {
        2:  140:      state->deckCount[i] = 0;
        8:  141:      for (j = 0; j < 3; j++)
        -:  142:	{
        6:  143:	  state->deck[i][j] = estate;
        6:  144:	  state->deckCount[i]++;
        -:  145:	}
       16:  146:      for (j = 3; j < 10; j++)
        -:  147:	{
       14:  148:	  state->deck[i][j] = copper;
       14:  149:	  state->deckCount[i]++;
        -:  150:	}
        -:  151:    }
        -:  152:
        -:  153:  //shuffle player decks
        3:  154:  for (i = 0; i < numPlayers; i++)
        -:  155:    {
        2:  156:      if ( shuffle(i, state) < 0 )
        -:  157:	{
    #####:  158:	  return -1;
        -:  159:	}
        -:  160:    }
        -:  161:
        -:  162:  //draw player hands
        3:  163:  for (i = 0; i < numPlayers; i++)
        -:  164:    {
        -:  165:      //initialize hand size to zero
        2:  166:      state->handCount[i] = 0;
        2:  167:      state->discardCount[i] = 0;
        -:  168:      //draw 5 cards
        -:  169:      // for (j = 0; j < 5; j++)
        -:  170:      //	{
        -:  171:      //	  drawCard(i, state);
        -:  172:      //	}
        -:  173:    }
        -:  174:
        -:  175:  //set embargo tokens to 0 for all supply piles
       28:  176:  for (i = 0; i <= treasure_map; i++)
        -:  177:    {
       27:  178:      state->embargoTokens[i] = 0;
        -:  179:    }
        -:  180:
        -:  181:  //initialize first player's turn
        1:  182:  state->outpostPlayed = 0;
        1:  183:  state->phase = 0;
        1:  184:  state->numActions = 1;
        1:  185:  state->numBuys = 1;
        1:  186:  state->playedCardCount = 0;
        1:  187:  state->whoseTurn = 0;
        1:  188:  state->handCount[state->whoseTurn] = 0;
        -:  189:  //int it; move to top
        -:  190:
        -:  191:  //Moved draw cards to here, only drawing at the start of a turn
        6:  192:  for (it = 0; it < 5; it++){
        5:  193:    drawCard(state->whoseTurn, state);
        -:  194:  }
        -:  195:
        1:  196:  updateCoins(state->whoseTurn, state, 0);
        -:  197:
        1:  198:  return 0;
        -:  199:}
        -:  200:
        2:  201:int shuffle(int player, struct gameState *state) {
        -:  202:
        -:  203:
        -:  204:  int newDeck[MAX_DECK];
        2:  205:  int newDeckPos = 0;
        -:  206:  int card;
        -:  207:  int i;
        -:  208:
        2:  209:  if (state->deckCount[player] < 1)
    #####:  210:    return -1;
        2:  211:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare);
        -:  212:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  213:
       24:  214:  while (state->deckCount[player] > 0) {
       20:  215:    card = floor(Random() * state->deckCount[player]);
       20:  216:    newDeck[newDeckPos] = state->deck[player][card];
       20:  217:    newDeckPos++;
       72:  218:    for (i = card; i < state->deckCount[player]-1; i++) {
       52:  219:      state->deck[player][i] = state->deck[player][i+1];
        -:  220:    }
       20:  221:    state->deckCount[player]--;
        -:  222:  }
       22:  223:  for (i = 0; i < newDeckPos; i++) {
       20:  224:    state->deck[player][i] = newDeck[i];
       20:  225:    state->deckCount[player]++;
        -:  226:  }
        -:  227:
        2:  228:  return 0;
        -:  229:}
        -:  230:
    #####:  231:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state)
        -:  232:{
        -:  233:  int card;
    #####:  234:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  235:
        -:  236:  //check if it is the right phase
    #####:  237:  if (state->phase != 0)
        -:  238:    {
    #####:  239:      return -1;
        -:  240:    }
        -:  241:
        -:  242:  //check if player has enough actions
    #####:  243:  if ( state->numActions < 1 )
        -:  244:    {
    #####:  245:      return -1;
        -:  246:    }
        -:  247:
        -:  248:  //get card played
    #####:  249:  card = handCard(handPos, state);
        -:  250:
        -:  251:  //check if selected card is an action
    #####:  252:  if ( card < adventurer || card > treasure_map )
        -:  253:    {
    #####:  254:      return -1;
        -:  255:    }
        -:  256:
        -:  257:  //play card
    #####:  258:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
        -:  259:    {
    #####:  260:      return -1;
        -:  261:    }
        -:  262:
        -:  263:  //reduce number of actions
    #####:  264:  state->numActions--;
        -:  265:
        -:  266:  //update coins (Treasure cards may be added with card draws)
    #####:  267:  updateCoins(state->whoseTurn, state, coin_bonus);
        -:  268:
    #####:  269:  return 0;
        -:  270:}
        -:  271:
    #####:  272:int buyCard(int supplyPos, struct gameState *state) {
        -:  273:  int who;
        -:  274:  if (DEBUG){
        -:  275:    printf("Entering buyCard...\n");
        -:  276:  }
        -:  277:
        -:  278:  // I don't know what to do about the phase thing.
        -:  279:
    #####:  280:  who = state->whoseTurn;
        -:  281:
    #####:  282:  if (state->numBuys < 1){
        -:  283:    if (DEBUG)
        -:  284:      printf("You do not have any buys left\n");
    #####:  285:    return -1;
    #####:  286:  } else if (supplyCount(supplyPos, state) <1){
        -:  287:    if (DEBUG)
        -:  288:      printf("There are not any of that type of card left\n");
    #####:  289:    return -1;
    #####:  290:  } else if (state->coins < getCost(supplyPos)){
        -:  291:    if (DEBUG)
        -:  292:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  293:    return -1;
        -:  294:  } else {
    #####:  295:    state->phase=1;
        -:  296:    //state->supplyCount[supplyPos]--;
    #####:  297:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  298:
    #####:  299:    state->coins = (state->coins) - (getCost(supplyPos));
    #####:  300:    state->numBuys--;
        -:  301:    if (DEBUG)
        -:  302:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  303:  }
        -:  304:
        -:  305:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  306:  //state->discardCount[who]++;
        -:  307:
    #####:  308:  return 0;
        -:  309:}
        -:  310:
       12:  311:int numHandCards(struct gameState *state) {
       12:  312:  return state->handCount[ whoseTurn(state) ];
        -:  313:}
        -:  314:
    #####:  315:int handCard(int handPos, struct gameState *state) {
    #####:  316:  int currentPlayer = whoseTurn(state);
    #####:  317:  return state->hand[currentPlayer][handPos];
        -:  318:}
        -:  319:
    #####:  320:int supplyCount(int card, struct gameState *state) {
    #####:  321:  return state->supplyCount[card];
        -:  322:}
        -:  323:
    #####:  324:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  325:  int i;
    #####:  326:  int count = 0;
        -:  327:
    #####:  328:  for (i = 0; i < state->deckCount[player]; i++)
        -:  329:    {
    #####:  330:      if (state->deck[player][i] == card) count++;
        -:  331:    }
        -:  332:
    #####:  333:  for (i = 0; i < state->handCount[player]; i++)
        -:  334:    {
    #####:  335:      if (state->hand[player][i] == card) count++;
        -:  336:    }
        -:  337:
    #####:  338:  for (i = 0; i < state->discardCount[player]; i++)
        -:  339:    {
    #####:  340:      if (state->discard[player][i] == card) count++;
        -:  341:    }
        -:  342:
    #####:  343:  return count;
        -:  344:}
        -:  345:
     8013:  346:int whoseTurn(struct gameState *state) {
     8013:  347:  return state->whoseTurn;
        -:  348:}
        -:  349:
    #####:  350:int endTurn(struct gameState *state) {
        -:  351:  int k;
        -:  352:  int i;
    #####:  353:  int currentPlayer = whoseTurn(state);
        -:  354:
        -:  355:  //Discard hand
    #####:  356:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    #####:  357:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  358:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  359:  }
    #####:  360:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  361:
        -:  362:  //Code for determining the player
    #####:  363:  if (currentPlayer < (state->numPlayers - 1)){
    #####:  364:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  365:  }
        -:  366:  else{
    #####:  367:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  368:  }
        -:  369:
    #####:  370:  state->outpostPlayed = 0;
    #####:  371:  state->phase = 0;
    #####:  372:  state->numActions = 1;
    #####:  373:  state->coins = 0;
    #####:  374:  state->numBuys = 1;
    #####:  375:  state->playedCardCount = 0;
    #####:  376:  state->handCount[state->whoseTurn] = 0;
        -:  377:
        -:  378:  //int k; move to top
        -:  379:  //Next player draws hand
    #####:  380:  for (k = 0; k < 5; k++){
    #####:  381:    drawCard(state->whoseTurn, state);//Draw a card
        -:  382:  }
        -:  383:
        -:  384:  //Update money
    #####:  385:  updateCoins(state->whoseTurn, state , 0);
        -:  386:
    #####:  387:  return 0;
        -:  388:}
        -:  389:
     1002:  390:int isGameOver(struct gameState *state) {
        -:  391:  int i;
        -:  392:  int j;
        -:  393:
        -:  394:  //if stack of Province cards is empty, the game ends
     1002:  395:  if (state->supplyCount[province] == 0)
        -:  396:    {
      124:  397:      return 1;
        -:  398:    }
        -:  399:
        -:  400:  //if three supply pile are at 0, the game ends
      878:  401:  j = 0;
    22828:  402:  for (i = 0; i < 25; i++)
        -:  403:    {
    21950:  404:      if (state->supplyCount[i] == 0)
        -:  405:	{
     2631:  406:	  j++;
        -:  407:	}
        -:  408:    }
      878:  409:  if ( j >= 3)
        -:  410:    {
      877:  411:      return 1;
        -:  412:    }
        -:  413:
        1:  414:  return 0;
        -:  415:}
        -:  416:
        4:  417:int scoreFor (int player, struct gameState *state) {
        -:  418:
        -:  419:  int i;
        4:  420:  int score = 0;
        -:  421:  //score from hand
       16:  422:  for (i = 0; i < state->handCount[player]; i++)
        -:  423:    {
       12:  424:      if (state->hand[player][i] == curse) { score = score - 1; };
       12:  425:      if (state->hand[player][i] == estate) { score = score + 1; };
       12:  426:      if (state->hand[player][i] == duchy) { score = score + 3; };
       12:  427:      if (state->hand[player][i] == province) { score = score + 6; };
       12:  428:      if (state->hand[player][i] == great_hall) { score = score + 1; };
       12:  429:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  430:    }
        -:  431:
        -:  432:  //score from discard
        4:  433:  for (i = 0; i < state->discardCount[player]; i++)
        -:  434:    {
    #####:  435:      if (state->discard[player][i] == curse) { score = score - 1; };
    #####:  436:      if (state->discard[player][i] == estate) { score = score + 1; };
    #####:  437:      if (state->discard[player][i] == duchy) { score = score + 3; };
    #####:  438:      if (state->discard[player][i] == province) { score = score + 6; };
    #####:  439:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    #####:  440:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  441:    }
        -:  442:
        -:  443:  //score from deck
        4:  444:  for (i = 0; i < state->discardCount[player]; i++)
        -:  445:    {
    #####:  446:      if (state->deck[player][i] == curse) { score = score - 1; };
    #####:  447:      if (state->deck[player][i] == estate) { score = score + 1; };
    #####:  448:      if (state->deck[player][i] == duchy) { score = score + 3; };
    #####:  449:      if (state->deck[player][i] == province) { score = score + 6; };
    #####:  450:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    #####:  451:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  452:    }
        -:  453:
        4:  454:  return score;
        -:  455:}
        -:  456:
    #####:  457:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  458:  int i;
        -:  459:  int j;
        -:  460:  int highScore;
        -:  461:  int currentPlayer;
        -:  462:
        -:  463:  //get score for each player
    #####:  464:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  465:    {
        -:  466:      //set unused player scores to -9999
    #####:  467:      if (i >= state->numPlayers)
        -:  468:	{
    #####:  469:	  players[i] = -9999;
        -:  470:	}
        -:  471:      else
        -:  472:	{
    #####:  473:	  players[i] = scoreFor (i, state);
        -:  474:	}
        -:  475:    }
        -:  476:
        -:  477:  //find highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  480:    {
    #####:  481:      if (players[i] > players[j])
        -:  482:	{
    #####:  483:	  j = i;
        -:  484:	}
        -:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //add 1 to players who had less turns
    #####:  489:  currentPlayer = whoseTurn(state);
    #####:  490:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  491:    {
    #####:  492:      if ( players[i] == highScore && i > currentPlayer )
        -:  493:	{
    #####:  494:	  players[i]++;
        -:  495:	}
        -:  496:    }
        -:  497:
        -:  498:  //find new highest score
    #####:  499:  j = 0;
    #####:  500:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  501:    {
    #####:  502:      if ( players[i] > players[j] )
        -:  503:	{
    #####:  504:	  j = i;
        -:  505:	}
        -:  506:    }
    #####:  507:  highScore = players[j];
        -:  508:
        -:  509:  //set winners in array to 1 and rest to 0
    #####:  510:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  511:    {
    #####:  512:      if ( players[i] == highScore )
        -:  513:	{
    #####:  514:	  players[i] = 1;
        -:  515:	}
        -:  516:      else
        -:  517:	{
    #####:  518:	  players[i] = 0;
        -:  519:	}
        -:  520:    }
        -:  521:
    #####:  522:  return 0;
        -:  523:}
        -:  524:
    24007:  525:int drawCard(int player, struct gameState *state)
        -:  526:{	int count;
        -:  527:  int deckCounter;
    24007:  528:  if (state->deckCount[player] <= 0){//Deck is empty
        -:  529:
        -:  530:    //Step 1 Shuffle the discard pile back into a deck
        -:  531:    int i;
        -:  532:    //Move discard to deck
    #####:  533:    for (i = 0; i < state->discardCount[player];i++){
    #####:  534:      state->deck[player][i] = state->discard[player][i];
    #####:  535:      state->discard[player][i] = -1;
        -:  536:    }
        -:  537:
    #####:  538:    state->deckCount[player] = state->discardCount[player];
    #####:  539:    state->discardCount[player] = 0;//Reset discard
        -:  540:
        -:  541:    //Shufffle the deck
    #####:  542:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
        -:  543:
        -:  544:    if (DEBUG){//Debug statements
        -:  545:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  546:    }
        -:  547:
    #####:  548:    state->discardCount[player] = 0;
        -:  549:
        -:  550:    //Step 2 Draw Card
    #####:  551:    count = state->handCount[player];//Get current player's hand count
        -:  552:
        -:  553:    if (DEBUG){//Debug statements
        -:  554:      printf("Current hand count: %d\n", count);
        -:  555:    }
        -:  556:
    #####:  557:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  558:
    #####:  559:    if (deckCounter == 0)
    #####:  560:      return -1;
        -:  561:
    #####:  562:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    #####:  563:    state->deckCount[player]--;
    #####:  564:    state->handCount[player]++;//Increment hand count
        -:  565:  }
        -:  566:
        -:  567:  else{
    24007:  568:    int count = state->handCount[player];//Get current hand count for player
        -:  569:    int deckCounter;
        -:  570:    if (DEBUG){//Debug statements
        -:  571:      printf("Current hand count: %d\n", count);
        -:  572:    }
        -:  573:
    24007:  574:    deckCounter = state->deckCount[player];//Create holder for the deck count
    24007:  575:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
    24007:  576:    state->deckCount[player]--;
    24007:  577:    state->handCount[player]++;//Increment hand count
        -:  578:  }
        -:  579:
    24007:  580:  return 0;
        -:  581:}
        -:  582:
       35:  583:int getCost(int cardNumber)
        -:  584:{
       35:  585:  switch( cardNumber )
        -:  586:    {
        -:  587:    case curse:
        1:  588:      return 0;
        -:  589:    case estate:
        1:  590:      return 2;
        -:  591:    case duchy:
        1:  592:      return 5;
        -:  593:    case province:
        1:  594:      return 8;
        -:  595:    case copper:
        1:  596:      return 0;
        -:  597:    case silver:
        1:  598:      return 3;
        -:  599:    case gold:
        1:  600:      return 6;
        -:  601:    case adventurer:
        1:  602:      return 6;
        -:  603:    case council_room:
        1:  604:      return 5;
        -:  605:    case feast:
        1:  606:      return 4;
        -:  607:    case gardens:
        1:  608:      return 4;
        -:  609:    case mine:
        1:  610:      return 5;
        -:  611:    case remodel:
        1:  612:      return 4;
        -:  613:    case smithy:
        1:  614:      return 4;
        -:  615:    case village:
        1:  616:      return 3;
        -:  617:    case baron:
        1:  618:      return 4;
        -:  619:    case great_hall:
        1:  620:      return 3;
        -:  621:    case minion:
        1:  622:      return 5;
        -:  623:    case steward:
        1:  624:      return 3;
        -:  625:    case tribute:
        1:  626:      return 5;
        -:  627:    case ambassador:
        1:  628:      return 3;
        -:  629:    case cutpurse:
        1:  630:      return 4;
        -:  631:    case embargo:
        1:  632:      return 2;
        -:  633:    case outpost:
        1:  634:      return 5;
        -:  635:    case salvager:
        1:  636:      return 4;
        -:  637:    case sea_hag:
        1:  638:      return 4;
        -:  639:    case treasure_map:
        1:  640:      return 4;
        -:  641:    }
        -:  642:
        8:  643:  return -1;
        -:  644:}
        -:  645:
        1:  646:void adventurer_action (int drawntreasure, struct gameState *state, int currentPlayer, int cardDrawn, int temphand[MAX_HAND], int z) {
        4:  647:    while(drawntreasure<2){
        2:  648:        if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
    #####:  649:            shuffle(currentPlayer, state);
        -:  650:        }
        2:  651:        drawCard(currentPlayer, state);
        2:  652:        cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
        2:  653:        if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
        2:  654:          drawntreasure++;
        -:  655:        else{
    #####:  656:          temphand[z]=cardDrawn;
    #####:  657:          state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
        -:  658:        }
        -:  659:  }
        2:  660:  while(z-1>=0){
    #####:  661:      state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    #####:  662:      z=z-1;
        -:  663:  }
        1:  664:}
        -:  665:
     4000:  666:void smithy_action (int currentPlayer, struct gameState *state, int i, int handPos) {
        -:  667:  //+3 Cards
    16000:  668:  for (i = 0; i < 3; i++) {
    12000:  669:    drawCard(currentPlayer, state);
        -:  670:  }
        -:  671:
        -:  672:  //discard card from hand
     4000:  673:  discardCard(handPos, currentPlayer, state, 0);
     4000:  674:}
        -:  675:
    #####:  676:void village_action (int currentPlayer, struct gameState *state, int handPos) {
        -:  677:  //+1 Card
    #####:  678:  drawCard(currentPlayer, state);
        -:  679:
        -:  680:  //+2 Actions
    #####:  681:  state->numActions = state->numActions + 2;
        -:  682:
        -:  683:  //discard played card from hand
    #####:  684:  discardCard(handPos, currentPlayer, state, 0);
    #####:  685:}
        -:  686:
     2000:  687:void council_room_action (int i, int currentPlayer, struct gameState *state) {
        -:  688:  //+4 Cards
    10000:  689:  for (i = 0; i < 4; i++) {
     8000:  690:      drawCard(currentPlayer, state);
        -:  691:  }
        -:  692:
        -:  693:  //+1 Buy
     2000:  694:  state->numBuys++;
        -:  695:
        -:  696:  //Each other player draws a card
    10000:  697:  for (i = 0; i < state->numPlayers; i++) {
     8000:  698:      if ( i == currentPlayer ) {
     2000:  699:          drawCard(i, state);
        -:  700:      }
        -:  701:  }
     2000:  702:}
        -:  703:
    #####:  704:int mine_action (int j, struct gameState *state, int currentPlayer, int choice1, int choice2, int handPos, int i) {
    #####:  705:  j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  706:
    #####:  707:  if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold) {
    #####:  708:      return -1;
        -:  709:  }
        -:  710:
    #####:  711:  if (choice2 > treasure_map || choice2 < curse) {
    #####:  712:      return -1;
        -:  713:  }
        -:  714:
    #####:  715:  if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) ) {
    #####:  716:      return -1;
        -:  717:  }
        -:  718:
    #####:  719:  gainCard(choice2, state, 2, currentPlayer);
        -:  720:
        -:  721:  //discard card from hand
    #####:  722:  discardCard(handPos, currentPlayer, state, 0);
        -:  723:
        -:  724:  //discard trashed card
    #####:  725:  for (i = 0; i < state->handCount[currentPlayer]; i++) {
    #####:  726:      if (state->hand[currentPlayer][i] == j) {
    #####:  727:        discardCard(i, currentPlayer, state, 0);
    #####:  728:        break;
        -:  729:      }
        -:  730:  }
        -:  731:
    #####:  732:  return -1;
        -:  733:}
        -:  734:
     8001:  735:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  736:{
        -:  737:  int i;
        -:  738:  int j;
        -:  739:  int k;
        -:  740:  int x;
        -:  741:  int m;
        -:  742:  int index;
     8001:  743:  int currentPlayer = whoseTurn(state);
     8001:  744:  int nextPlayer = currentPlayer + 1;
        -:  745:
     8001:  746:  int tributeRevealedCards[2] = {-1, -1};
        -:  747:  int temphand[MAX_HAND];// moved above the if statement
     8001:  748:  int drawntreasure=0;
        -:  749:  int cardDrawn;
     8001:  750:  int z = 0;// this is the counter for the temp hand
     8001:  751:  if (nextPlayer > (state->numPlayers - 1)){
     4500:  752:    nextPlayer = 0;
        -:  753:  }
        -:  754:
        -:  755:
        -:  756:  //uses switch to select card and perform actions
     8001:  757:  switch( card )
        -:  758:    {
        -:  759:    case adventurer:
        1:  760:      adventurer_action (drawntreasure, state, currentPlayer, cardDrawn, temphand, z);
        1:  761:      return 0;
        -:  762:
        -:  763:    case council_room:
     2000:  764:      council_room_action (i, currentPlayer, state);
     2000:  765:      return 0;
        -:  766:
        -:  767:    case feast:
        -:  768:      //gain card with cost up to 5
        -:  769:      //Backup hand
    #####:  770:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  771:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  772:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  773:      }
        -:  774:      //Backup hand
        -:  775:
        -:  776:      //Update Coins for Buy
    #####:  777:      updateCoins(currentPlayer, state, 5);
    #####:  778:      x = 1;//Condition to loop on
    #####:  779:      while( x == 1) {//Buy one card
    #####:  780:	if (supplyCount(choice1, state) <= 0){
        -:  781:	  if (DEBUG)
        -:  782:	    printf("None of that card left, sorry!\n");
        -:  783:
        -:  784:	  if (DEBUG){
        -:  785:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  786:	  }
        -:  787:	}
    #####:  788:	else if (state->coins < getCost(choice1)){
    #####:  789:	  printf("That card is too expensive!\n");
        -:  790:
        -:  791:	  if (DEBUG){
        -:  792:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  793:	  }
        -:  794:	}
        -:  795:	else{
        -:  796:
        -:  797:	  if (DEBUG){
        -:  798:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  799:	  }
        -:  800:
    #####:  801:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    #####:  802:	  x = 0;//No more buying cards
        -:  803:
        -:  804:	  if (DEBUG){
        -:  805:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  806:	  }
        -:  807:
        -:  808:	}
        -:  809:      }
        -:  810:
        -:  811:      //Reset Hand
    #####:  812:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  813:	state->hand[currentPlayer][i] = temphand[i];
    #####:  814:	temphand[i] = -1;
        -:  815:      }
        -:  816:      //Reset Hand
        -:  817:
    #####:  818:      return 0;
        -:  819:
        -:  820:    case gardens:
    #####:  821:      return -1;
        -:  822:
        -:  823:    case mine:
    #####:  824:      m = mine_action (j, state, currentPlayer, choice1, choice2, handPos, i);
    #####:  825:      return m;
        -:  826:
        -:  827:    case remodel:
    #####:  828:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  829:
    #####:  830:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
        -:  831:	{
    #####:  832:	  return -1;
        -:  833:	}
        -:  834:
    #####:  835:      gainCard(choice2, state, 0, currentPlayer);
        -:  836:
        -:  837:      //discard card from hand
    #####:  838:      discardCard(handPos, currentPlayer, state, 0);
        -:  839:
        -:  840:      //discard trashed card
    #####:  841:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  842:	{
    #####:  843:	  if (state->hand[currentPlayer][i] == j)
        -:  844:	    {
    #####:  845:	      discardCard(i, currentPlayer, state, 0);
    #####:  846:	      break;
        -:  847:	    }
        -:  848:	}
        -:  849:
        -:  850:
    #####:  851:      return 0;
        -:  852:
        -:  853:    case smithy:
     4000:  854:      smithy_action (currentPlayer, state, i, handPos);
     4000:  855:      return 0;
        -:  856:
        -:  857:    case village:
    #####:  858:      village_action (currentPlayer, state, handPos);
    #####:  859:      return 0;
        -:  860:
        -:  861:    case baron:
    #####:  862:      state->numBuys++;//Increase buys by 1!
    #####:  863:      if (choice1 > 0){//Boolean true or going to discard an estate
    #####:  864:	int p = 0;//Iterator for hand!
    #####:  865:	int card_not_discarded = 1;//Flag for discard set!
    #####:  866:	while(card_not_discarded){
    #####:  867:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    #####:  868:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  869:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  870:	    state->discardCount[currentPlayer]++;
    #####:  871:	    for (;p < state->handCount[currentPlayer]; p++){
    #####:  872:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  873:	    }
    #####:  874:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  875:	    state->handCount[currentPlayer]--;
    #####:  876:	    card_not_discarded = 0;//Exit the loop
        -:  877:	  }
    #####:  878:	  else if (p > state->handCount[currentPlayer]){
        -:  879:	    if(DEBUG) {
        -:  880:	      printf("No estate cards in your hand, invalid choice\n");
        -:  881:	      printf("Must gain an estate if there are any\n");
        -:  882:	    }
    #####:  883:	    if (supplyCount(estate, state) > 0){
    #####:  884:	      gainCard(estate, state, 0, currentPlayer);
    #####:  885:	      state->supplyCount[estate]--;//Decrement estates
    #####:  886:	      if (supplyCount(estate, state) == 0){
    #####:  887:		isGameOver(state);
        -:  888:	      }
        -:  889:	    }
    #####:  890:	    card_not_discarded = 0;//Exit the loop
        -:  891:	  }
        -:  892:
        -:  893:	  else{
    #####:  894:	    p++;//Next card
        -:  895:	  }
        -:  896:	}
        -:  897:      }
        -:  898:
        -:  899:      else{
    #####:  900:	if (supplyCount(estate, state) > 0){
    #####:  901:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
    #####:  902:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  903:	  if (supplyCount(estate, state) == 0){
    #####:  904:	    isGameOver(state);
        -:  905:	  }
        -:  906:	}
        -:  907:      }
        -:  908:
        -:  909:
    #####:  910:      return 0;
        -:  911:
        -:  912:    case great_hall:
        -:  913:      //+1 Card
     2000:  914:      drawCard(currentPlayer, state);
        -:  915:
        -:  916:      //+1 Actions
     2000:  917:      state->numActions++;
        -:  918:
        -:  919:      //discard card from hand
     2000:  920:      discardCard(handPos, currentPlayer, state, 0);
     2000:  921:      return 0;
        -:  922:
        -:  923:    case minion:
        -:  924:      //+1 action
    #####:  925:      state->numActions++;
        -:  926:
        -:  927:      //discard card from hand
    #####:  928:      discardCard(handPos, currentPlayer, state, 0);
        -:  929:
    #####:  930:      if (choice1)		//+2 coins
        -:  931:	{
    #####:  932:	  state->coins = state->coins + 2;
        -:  933:	}
        -:  934:
    #####:  935:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
        -:  936:	{
        -:  937:	  //discard hand
    #####:  938:	  while(numHandCards(state) > 0)
        -:  939:	    {
    #####:  940:	      discardCard(handPos, currentPlayer, state, 0);
        -:  941:	    }
        -:  942:
        -:  943:	  //draw 4
    #####:  944:	  for (i = 0; i < 4; i++)
        -:  945:	    {
    #####:  946:	      drawCard(currentPlayer, state);
        -:  947:	    }
        -:  948:
        -:  949:	  //other players discard hand and redraw if hand size > 4
    #####:  950:	  for (i = 0; i < state->numPlayers; i++)
        -:  951:	    {
    #####:  952:	      if (i != currentPlayer)
        -:  953:		{
    #####:  954:		  if ( state->handCount[i] > 4 )
        -:  955:		    {
        -:  956:		      //discard hand
    #####:  957:		      while( state->handCount[i] > 0 )
        -:  958:			{
    #####:  959:			  discardCard(handPos, i, state, 0);
        -:  960:			}
        -:  961:
        -:  962:		      //draw 4
    #####:  963:		      for (j = 0; j < 4; j++)
        -:  964:			{
    #####:  965:			  drawCard(i, state);
        -:  966:			}
        -:  967:		    }
        -:  968:		}
        -:  969:	    }
        -:  970:
        -:  971:	}
    #####:  972:      return 0;
        -:  973:
        -:  974:    case steward:
    #####:  975:      if (choice1 == 1)
        -:  976:	{
        -:  977:	  //+2 cards
    #####:  978:	  drawCard(currentPlayer, state);
    #####:  979:	  drawCard(currentPlayer, state);
        -:  980:	}
    #####:  981:      else if (choice1 == 2)
        -:  982:	{
        -:  983:	  //+2 coins
    #####:  984:	  state->coins = state->coins + 2;
        -:  985:	}
        -:  986:      else
        -:  987:	{
        -:  988:	  //trash 2 cards in hand
    #####:  989:	  discardCard(choice2, currentPlayer, state, 1);
    #####:  990:	  discardCard(choice3, currentPlayer, state, 1);
        -:  991:	}
        -:  992:
        -:  993:      //discard card from hand
    #####:  994:      discardCard(handPos, currentPlayer, state, 0);
    #####:  995:      return 0;
        -:  996:
        -:  997:    case tribute:
    #####:  998:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    #####:  999:	if (state->deckCount[nextPlayer] > 0){
    #####: 1000:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1001:	  state->deckCount[nextPlayer]--;
        -: 1002:	}
    #####: 1003:	else if (state->discardCount[nextPlayer] > 0){
    #####: 1004:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1005:	  state->discardCount[nextPlayer]--;
        -: 1006:	}
        -: 1007:	else{
        -: 1008:	  //No Card to Reveal
        -: 1009:	  if (DEBUG){
        -: 1010:	    printf("No cards to reveal\n");
        -: 1011:	  }
        -: 1012:	}
        -: 1013:      }
        -: 1014:
        -: 1015:      else{
    #####: 1016:	if (state->deckCount[nextPlayer] == 0){
    #####: 1017:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    #####: 1018:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1019:	    state->deckCount[nextPlayer]++;
    #####: 1020:	    state->discard[nextPlayer][i] = -1;
    #####: 1021:	    state->discardCount[nextPlayer]--;
        -: 1022:	  }
        -: 1023:
    #####: 1024:	  shuffle(nextPlayer,state);//Shuffle the deck
        -: 1025:	}
    #####: 1026:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1027:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1028:	state->deckCount[nextPlayer]--;
    #####: 1029:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1030:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1031:	state->deckCount[nextPlayer]--;
        -: 1032:      }
        -: 1033:
    #####: 1034:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one
    #####: 1035:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1036:	state->playedCardCount++;
    #####: 1037:	tributeRevealedCards[1] = -1;
        -: 1038:      }
        -: 1039:
    #####: 1040:      for (i = 0; i <= 2; i ++){
    #####: 1041:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    #####: 1042:	  state->coins += 2;
        -: 1043:	}
        -: 1044:
    #####: 1045:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    #####: 1046:	  drawCard(currentPlayer, state);
    #####: 1047:	  drawCard(currentPlayer, state);
        -: 1048:	}
        -: 1049:	else{//Action Card
    #####: 1050:	  state->numActions = state->numActions + 2;
        -: 1051:	}
        -: 1052:      }
        -: 1053:
    #####: 1054:      return 0;
        -: 1055:
        -: 1056:    case ambassador:
    #####: 1057:      j = 0;		//used to check if player has enough cards to discard
        -: 1058:
    #####: 1059:      if (choice2 > 2 || choice2 < 0)
        -: 1060:	{
    #####: 1061:	  return -1;
        -: 1062:	}
        -: 1063:
    #####: 1064:      if (choice1 == handPos)
        -: 1065:	{
    #####: 1066:	  return -1;
        -: 1067:	}
        -: 1068:
    #####: 1069:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1070:	{
    #####: 1071:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
        -: 1072:	    {
    #####: 1073:	      j++;
        -: 1074:	    }
        -: 1075:	}
    #####: 1076:      if (j < choice2)
        -: 1077:	{
    #####: 1078:	  return -1;
        -: 1079:	}
        -: 1080:
        -: 1081:      if (DEBUG)
        -: 1082:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1083:
        -: 1084:      //increase supply count for choosen card by amount being discarded
    #####: 1085:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1086:
        -: 1087:      //each other player gains a copy of revealed card
    #####: 1088:      for (i = 0; i < state->numPlayers; i++)
        -: 1089:	{
    #####: 1090:	  if (i != currentPlayer)
        -: 1091:	    {
    #####: 1092:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
        -: 1093:	    }
        -: 1094:	}
        -: 1095:
        -: 1096:      //discard played card from hand
    #####: 1097:      discardCard(handPos, currentPlayer, state, 0);
        -: 1098:
        -: 1099:      //trash copies of cards returned to supply
    #####: 1100:      for (j = 0; j < choice2; j++)
        -: 1101:	{
    #####: 1102:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1103:	    {
    #####: 1104:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
        -: 1105:		{
    #####: 1106:		  discardCard(i, currentPlayer, state, 1);
    #####: 1107:		  break;
        -: 1108:		}
        -: 1109:	    }
        -: 1110:	}
        -: 1111:
    #####: 1112:      return 0;
        -: 1113:
        -: 1114:    case cutpurse:
        -: 1115:
    #####: 1116:      updateCoins(currentPlayer, state, 2);
    #####: 1117:      for (i = 0; i < state->numPlayers; i++)
        -: 1118:	{
    #####: 1119:	  if (i != currentPlayer)
        -: 1120:	    {
    #####: 1121:	      for (j = 0; j < state->handCount[i]; j++)
        -: 1122:		{
    #####: 1123:		  if (state->hand[i][j] == copper)
        -: 1124:		    {
    #####: 1125:		      discardCard(j, i, state, 0);
    #####: 1126:		      break;
        -: 1127:		    }
    #####: 1128:		  if (j == state->handCount[i])
        -: 1129:		    {
    #####: 1130:		      for (k = 0; k < state->handCount[i]; k++)
        -: 1131:			{
        -: 1132:			  if (DEBUG)
        -: 1133:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1134:			}
    #####: 1135:		      break;
        -: 1136:		    }
        -: 1137:		}
        -: 1138:
        -: 1139:	    }
        -: 1140:
        -: 1141:	}
        -: 1142:
        -: 1143:      //discard played card from hand
    #####: 1144:      discardCard(handPos, currentPlayer, state, 0);
        -: 1145:
    #####: 1146:      return 0;
        -: 1147:
        -: 1148:
        -: 1149:    case embargo:
        -: 1150:      //+2 Coins
    #####: 1151:      state->coins = state->coins + 2;
        -: 1152:
        -: 1153:      //see if selected pile is in play
    #####: 1154:      if ( state->supplyCount[choice1] == -1 )
        -: 1155:	{
    #####: 1156:	  return -1;
        -: 1157:	}
        -: 1158:
        -: 1159:      //add embargo token to selected supply pile
    #####: 1160:      state->embargoTokens[choice1]++;
        -: 1161:
        -: 1162:      //trash card
    #####: 1163:      discardCard(handPos, currentPlayer, state, 1);
    #####: 1164:      return 0;
        -: 1165:
        -: 1166:    case outpost:
        -: 1167:      //set outpost flag
    #####: 1168:      state->outpostPlayed++;
        -: 1169:
        -: 1170:      //discard card
    #####: 1171:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1172:      return 0;
        -: 1173:
        -: 1174:    case salvager:
        -: 1175:      //+1 buy
    #####: 1176:      state->numBuys++;
        -: 1177:
    #####: 1178:      if (choice1)
        -: 1179:	{
        -: 1180:	  //gain coins equal to trashed card
    #####: 1181:	  state->coins = state->coins + getCost( handCard(choice1, state) );
        -: 1182:	  //trash card
    #####: 1183:	  discardCard(choice1, currentPlayer, state, 1);
        -: 1184:	}
        -: 1185:
        -: 1186:      //discard card
    #####: 1187:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1188:      return 0;
        -: 1189:
        -: 1190:    case sea_hag:
    #####: 1191:      for (i = 0; i < state->numPlayers; i++){
    #####: 1192:	if (i != currentPlayer){
    #####: 1193:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1194:	  state->discardCount[i]++;
    #####: 1195:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1196:	}
        -: 1197:      }
    #####: 1198:      return 0;
        -: 1199:
        -: 1200:    case treasure_map:
        -: 1201:      //search hand for another treasure_map
    #####: 1202:      index = -1;
    #####: 1203:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1204:	{
    #####: 1205:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
        -: 1206:	    {
    #####: 1207:	      index = i;
    #####: 1208:	      break;
        -: 1209:	    }
        -: 1210:	}
    #####: 1211:      if (index > -1)
        -: 1212:	{
        -: 1213:	  //trash both treasure cards
    #####: 1214:	  discardCard(handPos, currentPlayer, state, 1);
    #####: 1215:	  discardCard(index, currentPlayer, state, 1);
        -: 1216:
        -: 1217:	  //gain 4 Gold cards
    #####: 1218:	  for (i = 0; i < 4; i++)
        -: 1219:	    {
    #####: 1220:	      gainCard(gold, state, 1, currentPlayer);
        -: 1221:	    }
        -: 1222:
        -: 1223:	  //return success
    #####: 1224:	  return 1;
        -: 1225:	}
        -: 1226:
        -: 1227:      //no second treasure_map found in hand
    #####: 1228:      return -1;
        -: 1229:    }
        -: 1230:
    #####: 1231:  return -1;
        -: 1232:}
        -: 1233:
     6000: 1234:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1235:{
        -: 1236:
        -: 1237:  //if card is not trashed, added to Played pile
     6000: 1238:  if (trashFlag < 1)
        -: 1239:    {
        -: 1240:      //add card to played pile
     6000: 1241:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos];
     6000: 1242:      state->playedCardCount++;
        -: 1243:    }
        -: 1244:
        -: 1245:  //set played card to -1
     6000: 1246:  state->hand[currentPlayer][handPos] = -1;
        -: 1247:
        -: 1248:  //remove card from player's hand
     6000: 1249:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
        -: 1250:    {
        -: 1251:      //reduce number of cards in hand
        1: 1252:      state->handCount[currentPlayer]--;
        -: 1253:    }
     5999: 1254:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
        -: 1255:    {
        -: 1256:      //reduce number of cards in hand
    #####: 1257:      state->handCount[currentPlayer]--;
        -: 1258:    }
        -: 1259:  else
        -: 1260:    {
        -: 1261:      //replace discarded card with last card in hand
     5999: 1262:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1263:      //set last card to -1
     5999: 1264:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1265:      //reduce number of cards in hand
     5999: 1266:      state->handCount[currentPlayer]--;
        -: 1267:    }
        -: 1268:
     6000: 1269:  return 0;
        -: 1270:}
        -: 1271:
    #####: 1272:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1273:{
        -: 1274:  //Note: supplyPos is enum of choosen card
        -: 1275:
        -: 1276:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1277:  if ( supplyCount(supplyPos, state) < 1 )
        -: 1278:    {
    #####: 1279:      return -1;
        -: 1280:    }
        -: 1281:
        -: 1282:  //added card for [whoseTurn] current player:
        -: 1283:  // toFlag = 0 : add to discard
        -: 1284:  // toFlag = 1 : add to deck
        -: 1285:  // toFlag = 2 : add to hand
        -: 1286:
    #####: 1287:  if (toFlag == 1)
        -: 1288:    {
    #####: 1289:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1290:      state->deckCount[player]++;
        -: 1291:    }
    #####: 1292:  else if (toFlag == 2)
        -: 1293:    {
    #####: 1294:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1295:      state->handCount[player]++;
        -: 1296:    }
        -: 1297:  else
        -: 1298:    {
    #####: 1299:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1300:      state->discardCount[player]++;
        -: 1301:    }
        -: 1302:
        -: 1303:  //decrease number in supply pile
    #####: 1304:  state->supplyCount[supplyPos]--;
        -: 1305:
    #####: 1306:  return 0;
        -: 1307:}
        -: 1308:
        9: 1309:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1310:{
        -: 1311:  int i;
        -: 1312:
        -: 1313:  //reset coin count
        9: 1314:  state->coins = 0;
        -: 1315:
        -: 1316:  //add coins for each Treasure card in player's hand
       14: 1317:  for (i = 0; i < state->handCount[player]; i++)
        -: 1318:    {
        5: 1319:      if (state->hand[player][i] == copper)
        -: 1320:	{
        4: 1321:	  state->coins += 1;
        -: 1322:	}
        1: 1323:      else if (state->hand[player][i] == silver)
        -: 1324:	{
    #####: 1325:	  state->coins += 2;
        -: 1326:	}
        1: 1327:      else if (state->hand[player][i] == gold)
        -: 1328:	{
    #####: 1329:	  state->coins += 3;
        -: 1330:	}
        -: 1331:    }
        -: 1332:
        -: 1333:  //add bonus
        9: 1334:  state->coins += bonus;
        -: 1335:
        9: 1336:  return 0;
        -: 1337:}
        -: 1338:
        -: 1339:
        -: 1340://end of dominion.c

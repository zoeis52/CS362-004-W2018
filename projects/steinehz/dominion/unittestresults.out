unittest1.c:
All tests passed!
File 'dominion.c'
Lines executed:5.35% of 561
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
    #####:    8:int compare(const void* a, const void* b) {
    #####:    9:  if (*(int*)a > *(int*)b)
    #####:   10:    return 1;
    #####:   11:  if (*(int*)a < *(int*)b)
    #####:   12:    return -1;
    #####:   13:  return 0;
        -:   14:}
        -:   15:
    #####:   16:struct gameState* newGame() {
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
        -:   19:}
        -:   20:
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
        -:   35:}
        -:   36:
    #####:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;
        -:   43:  //set up random number generator
    #####:   44:  SelectStream(1);
    #####:   45:  PutSeed((long)randomSeed);
        -:   46:
        -:   47:  //check number of players
    #####:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
    #####:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
    #####:   57:  for (i = 0; i < 10; i++)
        -:   58:    {
    #####:   59:      for (j = 0; j < 10; j++)
        -:   60:        {
    #####:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
    #####:   73:  if (numPlayers == 2)
        -:   74:    {
    #####:   75:      state->supplyCount[curse] = 10;
        -:   76:    }
    #####:   77:  else if (numPlayers == 3)
        -:   78:    {
    #####:   79:      state->supplyCount[curse] = 20;
        -:   80:    }
        -:   81:  else
        -:   82:    {
    #####:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
    #####:   87:  if (numPlayers == 2)
        -:   88:    {
    #####:   89:      state->supplyCount[estate] = 8;
    #####:   90:      state->supplyCount[duchy] = 8;
    #####:   91:      state->supplyCount[province] = 8;
        -:   92:    }
        -:   93:  else
        -:   94:    {
    #####:   95:      state->supplyCount[estate] = 12;
    #####:   96:      state->supplyCount[duchy] = 12;
    #####:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
    #####:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
    #####:  102:  state->supplyCount[silver] = 40;
    #####:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
    #####:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
        -:  107:    {
    #####:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
        -:  109:	{
    #####:  110:	  if (kingdomCards[j] == i)
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
    #####:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
        -:  114:		{
    #####:  115:		  if (numPlayers == 2){
    #####:  116:		    state->supplyCount[i] = 8;
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
        -:  119:		}
        -:  120:	      else
        -:  121:		{
    #####:  122:		  state->supplyCount[i] = 10;
        -:  123:		}
    #####:  124:	      break;
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
    #####:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
    #####:  138:  for (i = 0; i < numPlayers; i++)
        -:  139:    {
    #####:  140:      state->deckCount[i] = 0;
    #####:  141:      for (j = 0; j < 3; j++)
        -:  142:	{
    #####:  143:	  state->deck[i][j] = estate;
    #####:  144:	  state->deckCount[i]++;
        -:  145:	}
    #####:  146:      for (j = 3; j < 10; j++)
        -:  147:	{
    #####:  148:	  state->deck[i][j] = copper;
    #####:  149:	  state->deckCount[i]++;
        -:  150:	}
        -:  151:    }
        -:  152:
        -:  153:  //shuffle player decks
    #####:  154:  for (i = 0; i < numPlayers; i++)
        -:  155:    {
    #####:  156:      if ( shuffle(i, state) < 0 )
        -:  157:	{
    #####:  158:	  return -1;
        -:  159:	}
        -:  160:    }
        -:  161:
        -:  162:  //draw player hands
    #####:  163:  for (i = 0; i < numPlayers; i++)
        -:  164:    {
        -:  165:      //initialize hand size to zero
    #####:  166:      state->handCount[i] = 0;
    #####:  167:      state->discardCount[i] = 0;
        -:  168:      //draw 5 cards
        -:  169:      // for (j = 0; j < 5; j++)
        -:  170:      //	{
        -:  171:      //	  drawCard(i, state);
        -:  172:      //	}
        -:  173:    }
        -:  174:
        -:  175:  //set embargo tokens to 0 for all supply piles
    #####:  176:  for (i = 0; i <= treasure_map; i++)
        -:  177:    {
    #####:  178:      state->embargoTokens[i] = 0;
        -:  179:    }
        -:  180:
        -:  181:  //initialize first player's turn
    #####:  182:  state->outpostPlayed = 0;
    #####:  183:  state->phase = 0;
    #####:  184:  state->numActions = 1;
    #####:  185:  state->numBuys = 1;
    #####:  186:  state->playedCardCount = 0;
    #####:  187:  state->whoseTurn = 0;
    #####:  188:  state->handCount[state->whoseTurn] = 0;
        -:  189:  //int it; move to top
        -:  190:
        -:  191:  //Moved draw cards to here, only drawing at the start of a turn
    #####:  192:  for (it = 0; it < 5; it++){
    #####:  193:    drawCard(state->whoseTurn, state);
        -:  194:  }
        -:  195:
    #####:  196:  updateCoins(state->whoseTurn, state, 0);
        -:  197:
    #####:  198:  return 0;
        -:  199:}
        -:  200:
    #####:  201:int shuffle(int player, struct gameState *state) {
        -:  202:
        -:  203:
        -:  204:  int newDeck[MAX_DECK];
    #####:  205:  int newDeckPos = 0;
        -:  206:  int card;
        -:  207:  int i;
        -:  208:
    #####:  209:  if (state->deckCount[player] < 1)
    #####:  210:    return -1;
    #####:  211:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare);
        -:  212:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  213:
    #####:  214:  while (state->deckCount[player] > 0) {
    #####:  215:    card = floor(Random() * state->deckCount[player]);
    #####:  216:    newDeck[newDeckPos] = state->deck[player][card];
    #####:  217:    newDeckPos++;
    #####:  218:    for (i = card; i < state->deckCount[player]-1; i++) {
    #####:  219:      state->deck[player][i] = state->deck[player][i+1];
        -:  220:    }
    #####:  221:    state->deckCount[player]--;
        -:  222:  }
    #####:  223:  for (i = 0; i < newDeckPos; i++) {
    #####:  224:    state->deck[player][i] = newDeck[i];
    #####:  225:    state->deckCount[player]++;
        -:  226:  }
        -:  227:
    #####:  228:  return 0;
        -:  229:}
        -:  230:
    #####:  231:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state)
        -:  232:{
        -:  233:  int card;
    #####:  234:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  235:
        -:  236:  //check if it is the right phase
    #####:  237:  if (state->phase != 0)
        -:  238:    {
    #####:  239:      return -1;
        -:  240:    }
        -:  241:
        -:  242:  //check if player has enough actions
    #####:  243:  if ( state->numActions < 1 )
        -:  244:    {
    #####:  245:      return -1;
        -:  246:    }
        -:  247:
        -:  248:  //get card played
    #####:  249:  card = handCard(handPos, state);
        -:  250:
        -:  251:  //check if selected card is an action
    #####:  252:  if ( card < adventurer || card > treasure_map )
        -:  253:    {
    #####:  254:      return -1;
        -:  255:    }
        -:  256:
        -:  257:  //play card
    #####:  258:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
        -:  259:    {
    #####:  260:      return -1;
        -:  261:    }
        -:  262:
        -:  263:  //reduce number of actions
    #####:  264:  state->numActions--;
        -:  265:
        -:  266:  //update coins (Treasure cards may be added with card draws)
    #####:  267:  updateCoins(state->whoseTurn, state, coin_bonus);
        -:  268:
    #####:  269:  return 0;
        -:  270:}
        -:  271:
    #####:  272:int buyCard(int supplyPos, struct gameState *state) {
        -:  273:  int who;
        -:  274:  if (DEBUG){
        -:  275:    printf("Entering buyCard...\n");
        -:  276:  }
        -:  277:
        -:  278:  // I don't know what to do about the phase thing.
        -:  279:
    #####:  280:  who = state->whoseTurn;
        -:  281:
    #####:  282:  if (state->numBuys < 1){
        -:  283:    if (DEBUG)
        -:  284:      printf("You do not have any buys left\n");
    #####:  285:    return -1;
    #####:  286:  } else if (supplyCount(supplyPos, state) <1){
        -:  287:    if (DEBUG)
        -:  288:      printf("There are not any of that type of card left\n");
    #####:  289:    return -1;
    #####:  290:  } else if (state->coins < getCost(supplyPos)){
        -:  291:    if (DEBUG)
        -:  292:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  293:    return -1;
        -:  294:  } else {
    #####:  295:    state->phase=1;
        -:  296:    //state->supplyCount[supplyPos]--;
    #####:  297:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  298:
    #####:  299:    state->coins = (state->coins) - (getCost(supplyPos));
    #####:  300:    state->numBuys--;
        -:  301:    if (DEBUG)
        -:  302:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  303:  }
        -:  304:
        -:  305:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  306:  //state->discardCount[who]++;
        -:  307:
    #####:  308:  return 0;
        -:  309:}
        -:  310:
    #####:  311:int numHandCards(struct gameState *state) {
    #####:  312:  return state->handCount[ whoseTurn(state) ];
        -:  313:}
        -:  314:
    #####:  315:int handCard(int handPos, struct gameState *state) {
    #####:  316:  int currentPlayer = whoseTurn(state);
    #####:  317:  return state->hand[currentPlayer][handPos];
        -:  318:}
        -:  319:
    #####:  320:int supplyCount(int card, struct gameState *state) {
    #####:  321:  return state->supplyCount[card];
        -:  322:}
        -:  323:
    #####:  324:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  325:  int i;
    #####:  326:  int count = 0;
        -:  327:
    #####:  328:  for (i = 0; i < state->deckCount[player]; i++)
        -:  329:    {
    #####:  330:      if (state->deck[player][i] == card) count++;
        -:  331:    }
        -:  332:
    #####:  333:  for (i = 0; i < state->handCount[player]; i++)
        -:  334:    {
    #####:  335:      if (state->hand[player][i] == card) count++;
        -:  336:    }
        -:  337:
    #####:  338:  for (i = 0; i < state->discardCount[player]; i++)
        -:  339:    {
    #####:  340:      if (state->discard[player][i] == card) count++;
        -:  341:    }
        -:  342:
    #####:  343:  return count;
        -:  344:}
        -:  345:
    #####:  346:int whoseTurn(struct gameState *state) {
    #####:  347:  return state->whoseTurn;
        -:  348:}
        -:  349:
    #####:  350:int endTurn(struct gameState *state) {
        -:  351:  int k;
        -:  352:  int i;
    #####:  353:  int currentPlayer = whoseTurn(state);
        -:  354:
        -:  355:  //Discard hand
    #####:  356:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    #####:  357:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  358:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  359:  }
    #####:  360:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  361:
        -:  362:  //Code for determining the player
    #####:  363:  if (currentPlayer < (state->numPlayers - 1)){
    #####:  364:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  365:  }
        -:  366:  else{
    #####:  367:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  368:  }
        -:  369:
    #####:  370:  state->outpostPlayed = 0;
    #####:  371:  state->phase = 0;
    #####:  372:  state->numActions = 1;
    #####:  373:  state->coins = 0;
    #####:  374:  state->numBuys = 1;
    #####:  375:  state->playedCardCount = 0;
    #####:  376:  state->handCount[state->whoseTurn] = 0;
        -:  377:
        -:  378:  //int k; move to top
        -:  379:  //Next player draws hand
    #####:  380:  for (k = 0; k < 5; k++){
    #####:  381:    drawCard(state->whoseTurn, state);//Draw a card
        -:  382:  }
        -:  383:
        -:  384:  //Update money
    #####:  385:  updateCoins(state->whoseTurn, state , 0);
        -:  386:
    #####:  387:  return 0;
        -:  388:}
        -:  389:
    #####:  390:int isGameOver(struct gameState *state) {
        -:  391:  int i;
        -:  392:  int j;
        -:  393:
        -:  394:  //if stack of Province cards is empty, the game ends
    #####:  395:  if (state->supplyCount[province] == 0)
        -:  396:    {
    #####:  397:      return 1;
        -:  398:    }
        -:  399:
        -:  400:  //if three supply pile are at 0, the game ends
    #####:  401:  j = 0;
    #####:  402:  for (i = 0; i < 25; i++)
        -:  403:    {
    #####:  404:      if (state->supplyCount[i] == 0)
        -:  405:	{
    #####:  406:	  j++;
        -:  407:	}
        -:  408:    }
    #####:  409:  if ( j >= 3)
        -:  410:    {
    #####:  411:      return 1;
        -:  412:    }
        -:  413:
    #####:  414:  return 0;
        -:  415:}
        -:  416:
    #####:  417:int scoreFor (int player, struct gameState *state) {
        -:  418:
        -:  419:  int i;
    #####:  420:  int score = 0;
        -:  421:  //score from hand
    #####:  422:  for (i = 0; i < state->handCount[player]; i++)
        -:  423:    {
    #####:  424:      if (state->hand[player][i] == curse) { score = score - 1; };
    #####:  425:      if (state->hand[player][i] == estate) { score = score + 1; };
    #####:  426:      if (state->hand[player][i] == duchy) { score = score + 3; };
    #####:  427:      if (state->hand[player][i] == province) { score = score + 6; };
    #####:  428:      if (state->hand[player][i] == great_hall) { score = score + 1; };
    #####:  429:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  430:    }
        -:  431:
        -:  432:  //score from discard
    #####:  433:  for (i = 0; i < state->discardCount[player]; i++)
        -:  434:    {
    #####:  435:      if (state->discard[player][i] == curse) { score = score - 1; };
    #####:  436:      if (state->discard[player][i] == estate) { score = score + 1; };
    #####:  437:      if (state->discard[player][i] == duchy) { score = score + 3; };
    #####:  438:      if (state->discard[player][i] == province) { score = score + 6; };
    #####:  439:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    #####:  440:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  441:    }
        -:  442:
        -:  443:  //score from deck
    #####:  444:  for (i = 0; i < state->discardCount[player]; i++)
        -:  445:    {
    #####:  446:      if (state->deck[player][i] == curse) { score = score - 1; };
    #####:  447:      if (state->deck[player][i] == estate) { score = score + 1; };
    #####:  448:      if (state->deck[player][i] == duchy) { score = score + 3; };
    #####:  449:      if (state->deck[player][i] == province) { score = score + 6; };
    #####:  450:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    #####:  451:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  452:    }
        -:  453:
    #####:  454:  return score;
        -:  455:}
        -:  456:
    #####:  457:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  458:  int i;
        -:  459:  int j;
        -:  460:  int highScore;
        -:  461:  int currentPlayer;
        -:  462:
        -:  463:  //get score for each player
    #####:  464:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  465:    {
        -:  466:      //set unused player scores to -9999
    #####:  467:      if (i >= state->numPlayers)
        -:  468:	{
    #####:  469:	  players[i] = -9999;
        -:  470:	}
        -:  471:      else
        -:  472:	{
    #####:  473:	  players[i] = scoreFor (i, state);
        -:  474:	}
        -:  475:    }
        -:  476:
        -:  477:  //find highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  480:    {
    #####:  481:      if (players[i] > players[j])
        -:  482:	{
    #####:  483:	  j = i;
        -:  484:	}
        -:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //add 1 to players who had less turns
    #####:  489:  currentPlayer = whoseTurn(state);
    #####:  490:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  491:    {
    #####:  492:      if ( players[i] == highScore && i > currentPlayer )
        -:  493:	{
    #####:  494:	  players[i]++;
        -:  495:	}
        -:  496:    }
        -:  497:
        -:  498:  //find new highest score
    #####:  499:  j = 0;
    #####:  500:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  501:    {
    #####:  502:      if ( players[i] > players[j] )
        -:  503:	{
    #####:  504:	  j = i;
        -:  505:	}
        -:  506:    }
    #####:  507:  highScore = players[j];
        -:  508:
        -:  509:  //set winners in array to 1 and rest to 0
    #####:  510:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  511:    {
    #####:  512:      if ( players[i] == highScore )
        -:  513:	{
    #####:  514:	  players[i] = 1;
        -:  515:	}
        -:  516:      else
        -:  517:	{
    #####:  518:	  players[i] = 0;
        -:  519:	}
        -:  520:    }
        -:  521:
    #####:  522:  return 0;
        -:  523:}
        -:  524:
    #####:  525:int drawCard(int player, struct gameState *state)
        -:  526:{	int count;
        -:  527:  int deckCounter;
    #####:  528:  if (state->deckCount[player] <= 0){//Deck is empty
        -:  529:
        -:  530:    //Step 1 Shuffle the discard pile back into a deck
        -:  531:    int i;
        -:  532:    //Move discard to deck
    #####:  533:    for (i = 0; i < state->discardCount[player];i++){
    #####:  534:      state->deck[player][i] = state->discard[player][i];
    #####:  535:      state->discard[player][i] = -1;
        -:  536:    }
        -:  537:
    #####:  538:    state->deckCount[player] = state->discardCount[player];
    #####:  539:    state->discardCount[player] = 0;//Reset discard
        -:  540:
        -:  541:    //Shufffle the deck
    #####:  542:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
        -:  543:
        -:  544:    if (DEBUG){//Debug statements
        -:  545:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  546:    }
        -:  547:
    #####:  548:    state->discardCount[player] = 0;
        -:  549:
        -:  550:    //Step 2 Draw Card
    #####:  551:    count = state->handCount[player];//Get current player's hand count
        -:  552:
        -:  553:    if (DEBUG){//Debug statements
        -:  554:      printf("Current hand count: %d\n", count);
        -:  555:    }
        -:  556:
    #####:  557:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  558:
    #####:  559:    if (deckCounter == 0)
    #####:  560:      return -1;
        -:  561:
    #####:  562:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    #####:  563:    state->deckCount[player]--;
    #####:  564:    state->handCount[player]++;//Increment hand count
        -:  565:  }
        -:  566:
        -:  567:  else{
    #####:  568:    int count = state->handCount[player];//Get current hand count for player
        -:  569:    int deckCounter;
        -:  570:    if (DEBUG){//Debug statements
        -:  571:      printf("Current hand count: %d\n", count);
        -:  572:    }
        -:  573:
    #####:  574:    deckCounter = state->deckCount[player];//Create holder for the deck count
    #####:  575:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
    #####:  576:    state->deckCount[player]--;
    #####:  577:    state->handCount[player]++;//Increment hand count
        -:  578:  }
        -:  579:
    #####:  580:  return 0;
        -:  581:}
        -:  582:
       35:  583:int getCost(int cardNumber)
        -:  584:{
       35:  585:  switch( cardNumber )
        -:  586:    {
        -:  587:    case curse:
        1:  588:      return 0;
        -:  589:    case estate:
        1:  590:      return 2;
        -:  591:    case duchy:
        1:  592:      return 5;
        -:  593:    case province:
        1:  594:      return 8;
        -:  595:    case copper:
        1:  596:      return 0;
        -:  597:    case silver:
        1:  598:      return 3;
        -:  599:    case gold:
        1:  600:      return 6;
        -:  601:    case adventurer:
        1:  602:      return 6;
        -:  603:    case council_room:
        1:  604:      return 5;
        -:  605:    case feast:
        1:  606:      return 4;
        -:  607:    case gardens:
        1:  608:      return 4;
        -:  609:    case mine:
        1:  610:      return 5;
        -:  611:    case remodel:
        1:  612:      return 4;
        -:  613:    case smithy:
        1:  614:      return 4;
        -:  615:    case village:
        1:  616:      return 3;
        -:  617:    case baron:
        1:  618:      return 4;
        -:  619:    case great_hall:
        1:  620:      return 3;
        -:  621:    case minion:
        1:  622:      return 5;
        -:  623:    case steward:
        1:  624:      return 3;
        -:  625:    case tribute:
        1:  626:      return 5;
        -:  627:    case ambassador:
        1:  628:      return 3;
        -:  629:    case cutpurse:
        1:  630:      return 4;
        -:  631:    case embargo:
        1:  632:      return 2;
        -:  633:    case outpost:
        1:  634:      return 5;
        -:  635:    case salvager:
        1:  636:      return 4;
        -:  637:    case sea_hag:
        1:  638:      return 4;
        -:  639:    case treasure_map:
        1:  640:      return 4;
        -:  641:    }
        -:  642:
        8:  643:  return -1;
        -:  644:}
        -:  645:
    #####:  646:void adventurer_action (int drawntreasure, struct gameState *state, int currentPlayer, int cardDrawn, int temphand[MAX_HAND], int z) {
    #####:  647:    while(drawntreasure<2){
    #####:  648:        if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
    #####:  649:            shuffle(currentPlayer, state);
        -:  650:        }
    #####:  651:        drawCard(currentPlayer, state);
    #####:  652:        cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
    #####:  653:        if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
    #####:  654:          drawntreasure++;
        -:  655:        else{
    #####:  656:          temphand[z]=cardDrawn;
    #####:  657:          state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
        -:  658:        }
        -:  659:  }
    #####:  660:  while(z-1>=0){
    #####:  661:      state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    #####:  662:      z=z-1;
        -:  663:  }
    #####:  664:}
        -:  665:
    #####:  666:void smithy_action (int currentPlayer, struct gameState *state, int i, int handPos) {
        -:  667:  //+3 Cards
    #####:  668:  for (i = 0; i < 3; i++) {
    #####:  669:    drawCard(currentPlayer, state);
        -:  670:  }
        -:  671:
        -:  672:  //discard card from hand
    #####:  673:  discardCard(handPos, currentPlayer, state, 0);
    #####:  674:}
        -:  675:
    #####:  676:void village_action (int currentPlayer, struct gameState *state, int handPos) {
        -:  677:  //+1 Card
    #####:  678:  drawCard(currentPlayer, state);
        -:  679:
        -:  680:  //+2 Actions
    #####:  681:  state->numActions = state->numActions + 2;
        -:  682:
        -:  683:  //discard played card from hand
    #####:  684:  discardCard(handPos, currentPlayer, state, 0);
    #####:  685:}
        -:  686:
    #####:  687:void council_room_action (int i, int currentPlayer, struct gameState *state) {
        -:  688:  //+4 Cards
    #####:  689:  for (i = 0; i < 4; i++) {
    #####:  690:      drawCard(currentPlayer, state);
        -:  691:  }
        -:  692:
        -:  693:  //+1 Buy
    #####:  694:  state->numBuys++;
        -:  695:
        -:  696:  //Each other player draws a card
    #####:  697:  for (i = 0; i < state->numPlayers; i++) {
    #####:  698:      if ( i == currentPlayer ) {
    #####:  699:          drawCard(i, state);
        -:  700:      }
        -:  701:  }
    #####:  702:}
        -:  703:
    #####:  704:int mine_action (int j, struct gameState *state, int currentPlayer, int choice1, int choice2, int handPos, int i) {
    #####:  705:  j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  706:
    #####:  707:  if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold) {
    #####:  708:      return -1;
        -:  709:  }
        -:  710:
    #####:  711:  if (choice2 > treasure_map || choice2 < curse) {
    #####:  712:      return -1;
        -:  713:  }
        -:  714:
    #####:  715:  if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) ) {
    #####:  716:      return -1;
        -:  717:  }
        -:  718:
    #####:  719:  gainCard(choice2, state, 2, currentPlayer);
        -:  720:
        -:  721:  //discard card from hand
    #####:  722:  discardCard(handPos, currentPlayer, state, 0);
        -:  723:
        -:  724:  //discard trashed card
    #####:  725:  for (i = 0; i < state->handCount[currentPlayer]; i++) {
    #####:  726:      if (state->hand[currentPlayer][i] == j) {
    #####:  727:        discardCard(i, currentPlayer, state, 0);
    #####:  728:        break;
        -:  729:      }
        -:  730:  }
        -:  731:
    #####:  732:  return -1;
        -:  733:}
        -:  734:
    #####:  735:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  736:{
        -:  737:  int i;
        -:  738:  int j;
        -:  739:  int k;
        -:  740:  int x;
        -:  741:  int m;
        -:  742:  int index;
    #####:  743:  int currentPlayer = whoseTurn(state);
    #####:  744:  int nextPlayer = currentPlayer + 1;
        -:  745:
    #####:  746:  int tributeRevealedCards[2] = {-1, -1};
        -:  747:  int temphand[MAX_HAND];// moved above the if statement
    #####:  748:  int drawntreasure=0;
        -:  749:  int cardDrawn;
    #####:  750:  int z = 0;// this is the counter for the temp hand
    #####:  751:  if (nextPlayer > (state->numPlayers - 1)){
    #####:  752:    nextPlayer = 0;
        -:  753:  }
        -:  754:
        -:  755:
        -:  756:  //uses switch to select card and perform actions
    #####:  757:  switch( card )
        -:  758:    {
        -:  759:    case adventurer:
    #####:  760:      adventurer_action (drawntreasure, state, currentPlayer, cardDrawn, temphand, z);
    #####:  761:      return 0;
        -:  762:
        -:  763:    case council_room:
    #####:  764:      council_room_action (i, currentPlayer, state);
    #####:  765:      return 0;
        -:  766:
        -:  767:    case feast:
        -:  768:      //gain card with cost up to 5
        -:  769:      //Backup hand
    #####:  770:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  771:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  772:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  773:      }
        -:  774:      //Backup hand
        -:  775:
        -:  776:      //Update Coins for Buy
    #####:  777:      updateCoins(currentPlayer, state, 5);
    #####:  778:      x = 1;//Condition to loop on
    #####:  779:      while( x == 1) {//Buy one card
    #####:  780:	if (supplyCount(choice1, state) <= 0){
        -:  781:	  if (DEBUG)
        -:  782:	    printf("None of that card left, sorry!\n");
        -:  783:
        -:  784:	  if (DEBUG){
        -:  785:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  786:	  }
        -:  787:	}
    #####:  788:	else if (state->coins < getCost(choice1)){
    #####:  789:	  printf("That card is too expensive!\n");
        -:  790:
        -:  791:	  if (DEBUG){
        -:  792:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  793:	  }
        -:  794:	}
        -:  795:	else{
        -:  796:
        -:  797:	  if (DEBUG){
        -:  798:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  799:	  }
        -:  800:
    #####:  801:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    #####:  802:	  x = 0;//No more buying cards
        -:  803:
        -:  804:	  if (DEBUG){
        -:  805:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  806:	  }
        -:  807:
        -:  808:	}
        -:  809:      }
        -:  810:
        -:  811:      //Reset Hand
    #####:  812:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  813:	state->hand[currentPlayer][i] = temphand[i];
    #####:  814:	temphand[i] = -1;
        -:  815:      }
        -:  816:      //Reset Hand
        -:  817:
    #####:  818:      return 0;
        -:  819:
        -:  820:    case gardens:
    #####:  821:      return -1;
        -:  822:
        -:  823:    case mine:
    #####:  824:      m = mine_action (j, state, currentPlayer, choice1, choice2, handPos, i);
    #####:  825:      return m;
        -:  826:
        -:  827:    case remodel:
    #####:  828:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  829:
    #####:  830:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
        -:  831:	{
    #####:  832:	  return -1;
        -:  833:	}
        -:  834:
    #####:  835:      gainCard(choice2, state, 0, currentPlayer);
        -:  836:
        -:  837:      //discard card from hand
    #####:  838:      discardCard(handPos, currentPlayer, state, 0);
        -:  839:
        -:  840:      //discard trashed card
    #####:  841:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  842:	{
    #####:  843:	  if (state->hand[currentPlayer][i] == j)
        -:  844:	    {
    #####:  845:	      discardCard(i, currentPlayer, state, 0);
    #####:  846:	      break;
        -:  847:	    }
        -:  848:	}
        -:  849:
        -:  850:
    #####:  851:      return 0;
        -:  852:
        -:  853:    case smithy:
    #####:  854:      smithy_action (currentPlayer, state, i, handPos);
    #####:  855:      return 0;
        -:  856:
        -:  857:    case village:
    #####:  858:      village_action (currentPlayer, state, handPos);
    #####:  859:      return 0;
        -:  860:
        -:  861:    case baron:
    #####:  862:      state->numBuys++;//Increase buys by 1!
    #####:  863:      if (choice1 > 0){//Boolean true or going to discard an estate
    #####:  864:	int p = 0;//Iterator for hand!
    #####:  865:	int card_not_discarded = 1;//Flag for discard set!
    #####:  866:	while(card_not_discarded){
    #####:  867:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    #####:  868:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  869:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  870:	    state->discardCount[currentPlayer]++;
    #####:  871:	    for (;p < state->handCount[currentPlayer]; p++){
    #####:  872:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  873:	    }
    #####:  874:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  875:	    state->handCount[currentPlayer]--;
    #####:  876:	    card_not_discarded = 0;//Exit the loop
        -:  877:	  }
    #####:  878:	  else if (p > state->handCount[currentPlayer]){
        -:  879:	    if(DEBUG) {
        -:  880:	      printf("No estate cards in your hand, invalid choice\n");
        -:  881:	      printf("Must gain an estate if there are any\n");
        -:  882:	    }
    #####:  883:	    if (supplyCount(estate, state) > 0){
    #####:  884:	      gainCard(estate, state, 0, currentPlayer);
    #####:  885:	      state->supplyCount[estate]--;//Decrement estates
    #####:  886:	      if (supplyCount(estate, state) == 0){
    #####:  887:		isGameOver(state);
        -:  888:	      }
        -:  889:	    }
    #####:  890:	    card_not_discarded = 0;//Exit the loop
        -:  891:	  }
        -:  892:
        -:  893:	  else{
    #####:  894:	    p++;//Next card
        -:  895:	  }
        -:  896:	}
        -:  897:      }
        -:  898:
        -:  899:      else{
    #####:  900:	if (supplyCount(estate, state) > 0){
    #####:  901:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
    #####:  902:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  903:	  if (supplyCount(estate, state) == 0){
    #####:  904:	    isGameOver(state);
        -:  905:	  }
        -:  906:	}
        -:  907:      }
        -:  908:
        -:  909:
    #####:  910:      return 0;
        -:  911:
        -:  912:    case great_hall:
        -:  913:      //+1 Card
    #####:  914:      drawCard(currentPlayer, state);
        -:  915:
        -:  916:      //+1 Actions
    #####:  917:      state->numActions++;
        -:  918:
        -:  919:      //discard card from hand
    #####:  920:      discardCard(handPos, currentPlayer, state, 0);
    #####:  921:      return 0;
        -:  922:
        -:  923:    case minion:
        -:  924:      //+1 action
    #####:  925:      state->numActions++;
        -:  926:
        -:  927:      //discard card from hand
    #####:  928:      discardCard(handPos, currentPlayer, state, 0);
        -:  929:
    #####:  930:      if (choice1)		//+2 coins
        -:  931:	{
    #####:  932:	  state->coins = state->coins + 2;
        -:  933:	}
        -:  934:
    #####:  935:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
        -:  936:	{
        -:  937:	  //discard hand
    #####:  938:	  while(numHandCards(state) > 0)
        -:  939:	    {
    #####:  940:	      discardCard(handPos, currentPlayer, state, 0);
        -:  941:	    }
        -:  942:
        -:  943:	  //draw 4
    #####:  944:	  for (i = 0; i < 4; i++)
        -:  945:	    {
    #####:  946:	      drawCard(currentPlayer, state);
        -:  947:	    }
        -:  948:
        -:  949:	  //other players discard hand and redraw if hand size > 4
    #####:  950:	  for (i = 0; i < state->numPlayers; i++)
        -:  951:	    {
    #####:  952:	      if (i != currentPlayer)
        -:  953:		{
    #####:  954:		  if ( state->handCount[i] > 4 )
        -:  955:		    {
        -:  956:		      //discard hand
    #####:  957:		      while( state->handCount[i] > 0 )
        -:  958:			{
    #####:  959:			  discardCard(handPos, i, state, 0);
        -:  960:			}
        -:  961:
        -:  962:		      //draw 4
    #####:  963:		      for (j = 0; j < 4; j++)
        -:  964:			{
    #####:  965:			  drawCard(i, state);
        -:  966:			}
        -:  967:		    }
        -:  968:		}
        -:  969:	    }
        -:  970:
        -:  971:	}
    #####:  972:      return 0;
        -:  973:
        -:  974:    case steward:
    #####:  975:      if (choice1 == 1)
        -:  976:	{
        -:  977:	  //+2 cards
    #####:  978:	  drawCard(currentPlayer, state);
    #####:  979:	  drawCard(currentPlayer, state);
        -:  980:	}
    #####:  981:      else if (choice1 == 2)
        -:  982:	{
        -:  983:	  //+2 coins
    #####:  984:	  state->coins = state->coins + 2;
        -:  985:	}
        -:  986:      else
        -:  987:	{
        -:  988:	  //trash 2 cards in hand
    #####:  989:	  discardCard(choice2, currentPlayer, state, 1);
    #####:  990:	  discardCard(choice3, currentPlayer, state, 1);
        -:  991:	}
        -:  992:
        -:  993:      //discard card from hand
    #####:  994:      discardCard(handPos, currentPlayer, state, 0);
    #####:  995:      return 0;
        -:  996:
        -:  997:    case tribute:
    #####:  998:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    #####:  999:	if (state->deckCount[nextPlayer] > 0){
    #####: 1000:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1001:	  state->deckCount[nextPlayer]--;
        -: 1002:	}
    #####: 1003:	else if (state->discardCount[nextPlayer] > 0){
    #####: 1004:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1005:	  state->discardCount[nextPlayer]--;
        -: 1006:	}
        -: 1007:	else{
        -: 1008:	  //No Card to Reveal
        -: 1009:	  if (DEBUG){
        -: 1010:	    printf("No cards to reveal\n");
        -: 1011:	  }
        -: 1012:	}
        -: 1013:      }
        -: 1014:
        -: 1015:      else{
    #####: 1016:	if (state->deckCount[nextPlayer] == 0){
    #####: 1017:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    #####: 1018:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1019:	    state->deckCount[nextPlayer]++;
    #####: 1020:	    state->discard[nextPlayer][i] = -1;
    #####: 1021:	    state->discardCount[nextPlayer]--;
        -: 1022:	  }
        -: 1023:
    #####: 1024:	  shuffle(nextPlayer,state);//Shuffle the deck
        -: 1025:	}
    #####: 1026:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1027:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1028:	state->deckCount[nextPlayer]--;
    #####: 1029:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1030:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1031:	state->deckCount[nextPlayer]--;
        -: 1032:      }
        -: 1033:
    #####: 1034:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one
    #####: 1035:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1036:	state->playedCardCount++;
    #####: 1037:	tributeRevealedCards[1] = -1;
        -: 1038:      }
        -: 1039:
    #####: 1040:      for (i = 0; i <= 2; i ++){
    #####: 1041:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    #####: 1042:	  state->coins += 2;
        -: 1043:	}
        -: 1044:
    #####: 1045:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    #####: 1046:	  drawCard(currentPlayer, state);
    #####: 1047:	  drawCard(currentPlayer, state);
        -: 1048:	}
        -: 1049:	else{//Action Card
    #####: 1050:	  state->numActions = state->numActions + 2;
        -: 1051:	}
        -: 1052:      }
        -: 1053:
    #####: 1054:      return 0;
        -: 1055:
        -: 1056:    case ambassador:
    #####: 1057:      j = 0;		//used to check if player has enough cards to discard
        -: 1058:
    #####: 1059:      if (choice2 > 2 || choice2 < 0)
        -: 1060:	{
    #####: 1061:	  return -1;
        -: 1062:	}
        -: 1063:
    #####: 1064:      if (choice1 == handPos)
        -: 1065:	{
    #####: 1066:	  return -1;
        -: 1067:	}
        -: 1068:
    #####: 1069:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1070:	{
    #####: 1071:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
        -: 1072:	    {
    #####: 1073:	      j++;
        -: 1074:	    }
        -: 1075:	}
    #####: 1076:      if (j < choice2)
        -: 1077:	{
    #####: 1078:	  return -1;
        -: 1079:	}
        -: 1080:
        -: 1081:      if (DEBUG)
        -: 1082:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1083:
        -: 1084:      //increase supply count for choosen card by amount being discarded
    #####: 1085:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1086:
        -: 1087:      //each other player gains a copy of revealed card
    #####: 1088:      for (i = 0; i < state->numPlayers; i++)
        -: 1089:	{
    #####: 1090:	  if (i != currentPlayer)
        -: 1091:	    {
    #####: 1092:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
        -: 1093:	    }
        -: 1094:	}
        -: 1095:
        -: 1096:      //discard played card from hand
    #####: 1097:      discardCard(handPos, currentPlayer, state, 0);
        -: 1098:
        -: 1099:      //trash copies of cards returned to supply
    #####: 1100:      for (j = 0; j < choice2; j++)
        -: 1101:	{
    #####: 1102:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1103:	    {
    #####: 1104:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
        -: 1105:		{
    #####: 1106:		  discardCard(i, currentPlayer, state, 1);
    #####: 1107:		  break;
        -: 1108:		}
        -: 1109:	    }
        -: 1110:	}
        -: 1111:
    #####: 1112:      return 0;
        -: 1113:
        -: 1114:    case cutpurse:
        -: 1115:
    #####: 1116:      updateCoins(currentPlayer, state, 2);
    #####: 1117:      for (i = 0; i < state->numPlayers; i++)
        -: 1118:	{
    #####: 1119:	  if (i != currentPlayer)
        -: 1120:	    {
    #####: 1121:	      for (j = 0; j < state->handCount[i]; j++)
        -: 1122:		{
    #####: 1123:		  if (state->hand[i][j] == copper)
        -: 1124:		    {
    #####: 1125:		      discardCard(j, i, state, 0);
    #####: 1126:		      break;
        -: 1127:		    }
    #####: 1128:		  if (j == state->handCount[i])
        -: 1129:		    {
    #####: 1130:		      for (k = 0; k < state->handCount[i]; k++)
        -: 1131:			{
        -: 1132:			  if (DEBUG)
        -: 1133:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1134:			}
    #####: 1135:		      break;
        -: 1136:		    }
        -: 1137:		}
        -: 1138:
        -: 1139:	    }
        -: 1140:
        -: 1141:	}
        -: 1142:
        -: 1143:      //discard played card from hand
    #####: 1144:      discardCard(handPos, currentPlayer, state, 0);
        -: 1145:
    #####: 1146:      return 0;
        -: 1147:
        -: 1148:
        -: 1149:    case embargo:
        -: 1150:      //+2 Coins
    #####: 1151:      state->coins = state->coins + 2;
        -: 1152:
        -: 1153:      //see if selected pile is in play
    #####: 1154:      if ( state->supplyCount[choice1] == -1 )
        -: 1155:	{
    #####: 1156:	  return -1;
        -: 1157:	}
        -: 1158:
        -: 1159:      //add embargo token to selected supply pile
    #####: 1160:      state->embargoTokens[choice1]++;
        -: 1161:
        -: 1162:      //trash card
    #####: 1163:      discardCard(handPos, currentPlayer, state, 1);
    #####: 1164:      return 0;
        -: 1165:
        -: 1166:    case outpost:
        -: 1167:      //set outpost flag
    #####: 1168:      state->outpostPlayed++;
        -: 1169:
        -: 1170:      //discard card
    #####: 1171:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1172:      return 0;
        -: 1173:
        -: 1174:    case salvager:
        -: 1175:      //+1 buy
    #####: 1176:      state->numBuys++;
        -: 1177:
    #####: 1178:      if (choice1)
        -: 1179:	{
        -: 1180:	  //gain coins equal to trashed card
    #####: 1181:	  state->coins = state->coins + getCost( handCard(choice1, state) );
        -: 1182:	  //trash card
    #####: 1183:	  discardCard(choice1, currentPlayer, state, 1);
        -: 1184:	}
        -: 1185:
        -: 1186:      //discard card
    #####: 1187:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1188:      return 0;
        -: 1189:
        -: 1190:    case sea_hag:
    #####: 1191:      for (i = 0; i < state->numPlayers; i++){
    #####: 1192:	if (i != currentPlayer){
    #####: 1193:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1194:	  state->discardCount[i]++;
    #####: 1195:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1196:	}
        -: 1197:      }
    #####: 1198:      return 0;
        -: 1199:
        -: 1200:    case treasure_map:
        -: 1201:      //search hand for another treasure_map
    #####: 1202:      index = -1;
    #####: 1203:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1204:	{
    #####: 1205:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
        -: 1206:	    {
    #####: 1207:	      index = i;
    #####: 1208:	      break;
        -: 1209:	    }
        -: 1210:	}
    #####: 1211:      if (index > -1)
        -: 1212:	{
        -: 1213:	  //trash both treasure cards
    #####: 1214:	  discardCard(handPos, currentPlayer, state, 1);
    #####: 1215:	  discardCard(index, currentPlayer, state, 1);
        -: 1216:
        -: 1217:	  //gain 4 Gold cards
    #####: 1218:	  for (i = 0; i < 4; i++)
        -: 1219:	    {
    #####: 1220:	      gainCard(gold, state, 1, currentPlayer);
        -: 1221:	    }
        -: 1222:
        -: 1223:	  //return success
    #####: 1224:	  return 1;
        -: 1225:	}
        -: 1226:
        -: 1227:      //no second treasure_map found in hand
    #####: 1228:      return -1;
        -: 1229:    }
        -: 1230:
    #####: 1231:  return -1;
        -: 1232:}
        -: 1233:
    #####: 1234:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1235:{
        -: 1236:
        -: 1237:  //if card is not trashed, added to Played pile
    #####: 1238:  if (trashFlag < 1)
        -: 1239:    {
        -: 1240:      //add card to played pile
    #####: 1241:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos];
    #####: 1242:      state->playedCardCount++;
        -: 1243:    }
        -: 1244:
        -: 1245:  //set played card to -1
    #####: 1246:  state->hand[currentPlayer][handPos] = -1;
        -: 1247:
        -: 1248:  //remove card from player's hand
    #####: 1249:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
        -: 1250:    {
        -: 1251:      //reduce number of cards in hand
    #####: 1252:      state->handCount[currentPlayer]--;
        -: 1253:    }
    #####: 1254:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
        -: 1255:    {
        -: 1256:      //reduce number of cards in hand
    #####: 1257:      state->handCount[currentPlayer]--;
        -: 1258:    }
        -: 1259:  else
        -: 1260:    {
        -: 1261:      //replace discarded card with last card in hand
    #####: 1262:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1263:      //set last card to -1
    #####: 1264:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1265:      //reduce number of cards in hand
    #####: 1266:      state->handCount[currentPlayer]--;
        -: 1267:    }
        -: 1268:
    #####: 1269:  return 0;
        -: 1270:}
        -: 1271:
    #####: 1272:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1273:{
        -: 1274:  //Note: supplyPos is enum of choosen card
        -: 1275:
        -: 1276:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1277:  if ( supplyCount(supplyPos, state) < 1 )
        -: 1278:    {
    #####: 1279:      return -1;
        -: 1280:    }
        -: 1281:
        -: 1282:  //added card for [whoseTurn] current player:
        -: 1283:  // toFlag = 0 : add to discard
        -: 1284:  // toFlag = 1 : add to deck
        -: 1285:  // toFlag = 2 : add to hand
        -: 1286:
    #####: 1287:  if (toFlag == 1)
        -: 1288:    {
    #####: 1289:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1290:      state->deckCount[player]++;
        -: 1291:    }
    #####: 1292:  else if (toFlag == 2)
        -: 1293:    {
    #####: 1294:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1295:      state->handCount[player]++;
        -: 1296:    }
        -: 1297:  else
        -: 1298:    {
    #####: 1299:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1300:      state->discardCount[player]++;
        -: 1301:    }
        -: 1302:
        -: 1303:  //decrease number in supply pile
    #####: 1304:  state->supplyCount[supplyPos]--;
        -: 1305:
    #####: 1306:  return 0;
        -: 1307:}
        -: 1308:
    #####: 1309:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1310:{
        -: 1311:  int i;
        -: 1312:
        -: 1313:  //reset coin count
    #####: 1314:  state->coins = 0;
        -: 1315:
        -: 1316:  //add coins for each Treasure card in player's hand
    #####: 1317:  for (i = 0; i < state->handCount[player]; i++)
        -: 1318:    {
    #####: 1319:      if (state->hand[player][i] == copper)
        -: 1320:	{
    #####: 1321:	  state->coins += 1;
        -: 1322:	}
    #####: 1323:      else if (state->hand[player][i] == silver)
        -: 1324:	{
    #####: 1325:	  state->coins += 2;
        -: 1326:	}
    #####: 1327:      else if (state->hand[player][i] == gold)
        -: 1328:	{
    #####: 1329:	  state->coins += 3;
        -: 1330:	}
        -: 1331:    }
        -: 1332:
        -: 1333:  //add bonus
    #####: 1334:  state->coins += bonus;
        -: 1335:
    #####: 1336:  return 0;
        -: 1337:}
        -: 1338:
        -: 1339:
        -: 1340://end of dominion.c
unittest2.c:
Test passed! The return value of isGameOver was 1 when the province count was set to zero
Test passed! The return value of isGameOver was 0 when all the supply counts were greater than 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
Test passed! The return value of isGameOver was 1 when 3 random supply counts were 0
File 'dominion.c'
Lines executed:7.13% of 561
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:2
        -:    0:Programs:2
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
    #####:    8:int compare(const void* a, const void* b) {
    #####:    9:  if (*(int*)a > *(int*)b)
    #####:   10:    return 1;
    #####:   11:  if (*(int*)a < *(int*)b)
    #####:   12:    return -1;
    #####:   13:  return 0;
        -:   14:}
        -:   15:
    #####:   16:struct gameState* newGame() {
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
        -:   19:}
        -:   20:
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
        -:   35:}
        -:   36:
    #####:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;
        -:   43:  //set up random number generator
    #####:   44:  SelectStream(1);
    #####:   45:  PutSeed((long)randomSeed);
        -:   46:
        -:   47:  //check number of players
    #####:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
    #####:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
    #####:   57:  for (i = 0; i < 10; i++)
        -:   58:    {
    #####:   59:      for (j = 0; j < 10; j++)
        -:   60:        {
    #####:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
    #####:   73:  if (numPlayers == 2)
        -:   74:    {
    #####:   75:      state->supplyCount[curse] = 10;
        -:   76:    }
    #####:   77:  else if (numPlayers == 3)
        -:   78:    {
    #####:   79:      state->supplyCount[curse] = 20;
        -:   80:    }
        -:   81:  else
        -:   82:    {
    #####:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
    #####:   87:  if (numPlayers == 2)
        -:   88:    {
    #####:   89:      state->supplyCount[estate] = 8;
    #####:   90:      state->supplyCount[duchy] = 8;
    #####:   91:      state->supplyCount[province] = 8;
        -:   92:    }
        -:   93:  else
        -:   94:    {
    #####:   95:      state->supplyCount[estate] = 12;
    #####:   96:      state->supplyCount[duchy] = 12;
    #####:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
    #####:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
    #####:  102:  state->supplyCount[silver] = 40;
    #####:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
    #####:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
        -:  107:    {
    #####:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
        -:  109:	{
    #####:  110:	  if (kingdomCards[j] == i)
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
    #####:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
        -:  114:		{
    #####:  115:		  if (numPlayers == 2){
    #####:  116:		    state->supplyCount[i] = 8;
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
        -:  119:		}
        -:  120:	      else
        -:  121:		{
    #####:  122:		  state->supplyCount[i] = 10;
        -:  123:		}
    #####:  124:	      break;
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
    #####:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
    #####:  138:  for (i = 0; i < numPlayers; i++)
        -:  139:    {
    #####:  140:      state->deckCount[i] = 0;
    #####:  141:      for (j = 0; j < 3; j++)
        -:  142:	{
    #####:  143:	  state->deck[i][j] = estate;
    #####:  144:	  state->deckCount[i]++;
        -:  145:	}
    #####:  146:      for (j = 3; j < 10; j++)
        -:  147:	{
    #####:  148:	  state->deck[i][j] = copper;
    #####:  149:	  state->deckCount[i]++;
        -:  150:	}
        -:  151:    }
        -:  152:
        -:  153:  //shuffle player decks
    #####:  154:  for (i = 0; i < numPlayers; i++)
        -:  155:    {
    #####:  156:      if ( shuffle(i, state) < 0 )
        -:  157:	{
    #####:  158:	  return -1;
        -:  159:	}
        -:  160:    }
        -:  161:
        -:  162:  //draw player hands
    #####:  163:  for (i = 0; i < numPlayers; i++)
        -:  164:    {
        -:  165:      //initialize hand size to zero
    #####:  166:      state->handCount[i] = 0;
    #####:  167:      state->discardCount[i] = 0;
        -:  168:      //draw 5 cards
        -:  169:      // for (j = 0; j < 5; j++)
        -:  170:      //	{
        -:  171:      //	  drawCard(i, state);
        -:  172:      //	}
        -:  173:    }
        -:  174:
        -:  175:  //set embargo tokens to 0 for all supply piles
    #####:  176:  for (i = 0; i <= treasure_map; i++)
        -:  177:    {
    #####:  178:      state->embargoTokens[i] = 0;
        -:  179:    }
        -:  180:
        -:  181:  //initialize first player's turn
    #####:  182:  state->outpostPlayed = 0;
    #####:  183:  state->phase = 0;
    #####:  184:  state->numActions = 1;
    #####:  185:  state->numBuys = 1;
    #####:  186:  state->playedCardCount = 0;
    #####:  187:  state->whoseTurn = 0;
    #####:  188:  state->handCount[state->whoseTurn] = 0;
        -:  189:  //int it; move to top
        -:  190:
        -:  191:  //Moved draw cards to here, only drawing at the start of a turn
    #####:  192:  for (it = 0; it < 5; it++){
    #####:  193:    drawCard(state->whoseTurn, state);
        -:  194:  }
        -:  195:
    #####:  196:  updateCoins(state->whoseTurn, state, 0);
        -:  197:
    #####:  198:  return 0;
        -:  199:}
        -:  200:
    #####:  201:int shuffle(int player, struct gameState *state) {
        -:  202:
        -:  203:
        -:  204:  int newDeck[MAX_DECK];
    #####:  205:  int newDeckPos = 0;
        -:  206:  int card;
        -:  207:  int i;
        -:  208:
    #####:  209:  if (state->deckCount[player] < 1)
    #####:  210:    return -1;
    #####:  211:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare);
        -:  212:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  213:
    #####:  214:  while (state->deckCount[player] > 0) {
    #####:  215:    card = floor(Random() * state->deckCount[player]);
    #####:  216:    newDeck[newDeckPos] = state->deck[player][card];
    #####:  217:    newDeckPos++;
    #####:  218:    for (i = card; i < state->deckCount[player]-1; i++) {
    #####:  219:      state->deck[player][i] = state->deck[player][i+1];
        -:  220:    }
    #####:  221:    state->deckCount[player]--;
        -:  222:  }
    #####:  223:  for (i = 0; i < newDeckPos; i++) {
    #####:  224:    state->deck[player][i] = newDeck[i];
    #####:  225:    state->deckCount[player]++;
        -:  226:  }
        -:  227:
    #####:  228:  return 0;
        -:  229:}
        -:  230:
    #####:  231:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state)
        -:  232:{
        -:  233:  int card;
    #####:  234:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  235:
        -:  236:  //check if it is the right phase
    #####:  237:  if (state->phase != 0)
        -:  238:    {
    #####:  239:      return -1;
        -:  240:    }
        -:  241:
        -:  242:  //check if player has enough actions
    #####:  243:  if ( state->numActions < 1 )
        -:  244:    {
    #####:  245:      return -1;
        -:  246:    }
        -:  247:
        -:  248:  //get card played
    #####:  249:  card = handCard(handPos, state);
        -:  250:
        -:  251:  //check if selected card is an action
    #####:  252:  if ( card < adventurer || card > treasure_map )
        -:  253:    {
    #####:  254:      return -1;
        -:  255:    }
        -:  256:
        -:  257:  //play card
    #####:  258:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
        -:  259:    {
    #####:  260:      return -1;
        -:  261:    }
        -:  262:
        -:  263:  //reduce number of actions
    #####:  264:  state->numActions--;
        -:  265:
        -:  266:  //update coins (Treasure cards may be added with card draws)
    #####:  267:  updateCoins(state->whoseTurn, state, coin_bonus);
        -:  268:
    #####:  269:  return 0;
        -:  270:}
        -:  271:
    #####:  272:int buyCard(int supplyPos, struct gameState *state) {
        -:  273:  int who;
        -:  274:  if (DEBUG){
        -:  275:    printf("Entering buyCard...\n");
        -:  276:  }
        -:  277:
        -:  278:  // I don't know what to do about the phase thing.
        -:  279:
    #####:  280:  who = state->whoseTurn;
        -:  281:
    #####:  282:  if (state->numBuys < 1){
        -:  283:    if (DEBUG)
        -:  284:      printf("You do not have any buys left\n");
    #####:  285:    return -1;
    #####:  286:  } else if (supplyCount(supplyPos, state) <1){
        -:  287:    if (DEBUG)
        -:  288:      printf("There are not any of that type of card left\n");
    #####:  289:    return -1;
    #####:  290:  } else if (state->coins < getCost(supplyPos)){
        -:  291:    if (DEBUG)
        -:  292:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  293:    return -1;
        -:  294:  } else {
    #####:  295:    state->phase=1;
        -:  296:    //state->supplyCount[supplyPos]--;
    #####:  297:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  298:
    #####:  299:    state->coins = (state->coins) - (getCost(supplyPos));
    #####:  300:    state->numBuys--;
        -:  301:    if (DEBUG)
        -:  302:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  303:  }
        -:  304:
        -:  305:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  306:  //state->discardCount[who]++;
        -:  307:
    #####:  308:  return 0;
        -:  309:}
        -:  310:
    #####:  311:int numHandCards(struct gameState *state) {
    #####:  312:  return state->handCount[ whoseTurn(state) ];
        -:  313:}
        -:  314:
    #####:  315:int handCard(int handPos, struct gameState *state) {
    #####:  316:  int currentPlayer = whoseTurn(state);
    #####:  317:  return state->hand[currentPlayer][handPos];
        -:  318:}
        -:  319:
    #####:  320:int supplyCount(int card, struct gameState *state) {
    #####:  321:  return state->supplyCount[card];
        -:  322:}
        -:  323:
    #####:  324:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  325:  int i;
    #####:  326:  int count = 0;
        -:  327:
    #####:  328:  for (i = 0; i < state->deckCount[player]; i++)
        -:  329:    {
    #####:  330:      if (state->deck[player][i] == card) count++;
        -:  331:    }
        -:  332:
    #####:  333:  for (i = 0; i < state->handCount[player]; i++)
        -:  334:    {
    #####:  335:      if (state->hand[player][i] == card) count++;
        -:  336:    }
        -:  337:
    #####:  338:  for (i = 0; i < state->discardCount[player]; i++)
        -:  339:    {
    #####:  340:      if (state->discard[player][i] == card) count++;
        -:  341:    }
        -:  342:
    #####:  343:  return count;
        -:  344:}
        -:  345:
    #####:  346:int whoseTurn(struct gameState *state) {
    #####:  347:  return state->whoseTurn;
        -:  348:}
        -:  349:
    #####:  350:int endTurn(struct gameState *state) {
        -:  351:  int k;
        -:  352:  int i;
    #####:  353:  int currentPlayer = whoseTurn(state);
        -:  354:
        -:  355:  //Discard hand
    #####:  356:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    #####:  357:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  358:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  359:  }
    #####:  360:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  361:
        -:  362:  //Code for determining the player
    #####:  363:  if (currentPlayer < (state->numPlayers - 1)){
    #####:  364:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  365:  }
        -:  366:  else{
    #####:  367:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  368:  }
        -:  369:
    #####:  370:  state->outpostPlayed = 0;
    #####:  371:  state->phase = 0;
    #####:  372:  state->numActions = 1;
    #####:  373:  state->coins = 0;
    #####:  374:  state->numBuys = 1;
    #####:  375:  state->playedCardCount = 0;
    #####:  376:  state->handCount[state->whoseTurn] = 0;
        -:  377:
        -:  378:  //int k; move to top
        -:  379:  //Next player draws hand
    #####:  380:  for (k = 0; k < 5; k++){
    #####:  381:    drawCard(state->whoseTurn, state);//Draw a card
        -:  382:  }
        -:  383:
        -:  384:  //Update money
    #####:  385:  updateCoins(state->whoseTurn, state , 0);
        -:  386:
    #####:  387:  return 0;
        -:  388:}
        -:  389:
     1002:  390:int isGameOver(struct gameState *state) {
        -:  391:  int i;
        -:  392:  int j;
        -:  393:
        -:  394:  //if stack of Province cards is empty, the game ends
     1002:  395:  if (state->supplyCount[province] == 0)
        -:  396:    {
      109:  397:      return 1;
        -:  398:    }
        -:  399:
        -:  400:  //if three supply pile are at 0, the game ends
      893:  401:  j = 0;
    23218:  402:  for (i = 0; i < 25; i++)
        -:  403:    {
    22325:  404:      if (state->supplyCount[i] == 0)
        -:  405:	{
     2676:  406:	  j++;
        -:  407:	}
        -:  408:    }
      893:  409:  if ( j >= 3)
        -:  410:    {
      892:  411:      return 1;
        -:  412:    }
        -:  413:
        1:  414:  return 0;
        -:  415:}
        -:  416:
    #####:  417:int scoreFor (int player, struct gameState *state) {
        -:  418:
        -:  419:  int i;
    #####:  420:  int score = 0;
        -:  421:  //score from hand
    #####:  422:  for (i = 0; i < state->handCount[player]; i++)
        -:  423:    {
    #####:  424:      if (state->hand[player][i] == curse) { score = score - 1; };
    #####:  425:      if (state->hand[player][i] == estate) { score = score + 1; };
    #####:  426:      if (state->hand[player][i] == duchy) { score = score + 3; };
    #####:  427:      if (state->hand[player][i] == province) { score = score + 6; };
    #####:  428:      if (state->hand[player][i] == great_hall) { score = score + 1; };
    #####:  429:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  430:    }
        -:  431:
        -:  432:  //score from discard
    #####:  433:  for (i = 0; i < state->discardCount[player]; i++)
        -:  434:    {
    #####:  435:      if (state->discard[player][i] == curse) { score = score - 1; };
    #####:  436:      if (state->discard[player][i] == estate) { score = score + 1; };
    #####:  437:      if (state->discard[player][i] == duchy) { score = score + 3; };
    #####:  438:      if (state->discard[player][i] == province) { score = score + 6; };
    #####:  439:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    #####:  440:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  441:    }
        -:  442:
        -:  443:  //score from deck
    #####:  444:  for (i = 0; i < state->discardCount[player]; i++)
        -:  445:    {
    #####:  446:      if (state->deck[player][i] == curse) { score = score - 1; };
    #####:  447:      if (state->deck[player][i] == estate) { score = score + 1; };
    #####:  448:      if (state->deck[player][i] == duchy) { score = score + 3; };
    #####:  449:      if (state->deck[player][i] == province) { score = score + 6; };
    #####:  450:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    #####:  451:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  452:    }
        -:  453:
    #####:  454:  return score;
        -:  455:}
        -:  456:
    #####:  457:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  458:  int i;
        -:  459:  int j;
        -:  460:  int highScore;
        -:  461:  int currentPlayer;
        -:  462:
        -:  463:  //get score for each player
    #####:  464:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  465:    {
        -:  466:      //set unused player scores to -9999
    #####:  467:      if (i >= state->numPlayers)
        -:  468:	{
    #####:  469:	  players[i] = -9999;
        -:  470:	}
        -:  471:      else
        -:  472:	{
    #####:  473:	  players[i] = scoreFor (i, state);
        -:  474:	}
        -:  475:    }
        -:  476:
        -:  477:  //find highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  480:    {
    #####:  481:      if (players[i] > players[j])
        -:  482:	{
    #####:  483:	  j = i;
        -:  484:	}
        -:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //add 1 to players who had less turns
    #####:  489:  currentPlayer = whoseTurn(state);
    #####:  490:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  491:    {
    #####:  492:      if ( players[i] == highScore && i > currentPlayer )
        -:  493:	{
    #####:  494:	  players[i]++;
        -:  495:	}
        -:  496:    }
        -:  497:
        -:  498:  //find new highest score
    #####:  499:  j = 0;
    #####:  500:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  501:    {
    #####:  502:      if ( players[i] > players[j] )
        -:  503:	{
    #####:  504:	  j = i;
        -:  505:	}
        -:  506:    }
    #####:  507:  highScore = players[j];
        -:  508:
        -:  509:  //set winners in array to 1 and rest to 0
    #####:  510:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  511:    {
    #####:  512:      if ( players[i] == highScore )
        -:  513:	{
    #####:  514:	  players[i] = 1;
        -:  515:	}
        -:  516:      else
        -:  517:	{
    #####:  518:	  players[i] = 0;
        -:  519:	}
        -:  520:    }
        -:  521:
    #####:  522:  return 0;
        -:  523:}
        -:  524:
    #####:  525:int drawCard(int player, struct gameState *state)
        -:  526:{	int count;
        -:  527:  int deckCounter;
    #####:  528:  if (state->deckCount[player] <= 0){//Deck is empty
        -:  529:
        -:  530:    //Step 1 Shuffle the discard pile back into a deck
        -:  531:    int i;
        -:  532:    //Move discard to deck
    #####:  533:    for (i = 0; i < state->discardCount[player];i++){
    #####:  534:      state->deck[player][i] = state->discard[player][i];
    #####:  535:      state->discard[player][i] = -1;
        -:  536:    }
        -:  537:
    #####:  538:    state->deckCount[player] = state->discardCount[player];
    #####:  539:    state->discardCount[player] = 0;//Reset discard
        -:  540:
        -:  541:    //Shufffle the deck
    #####:  542:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
        -:  543:
        -:  544:    if (DEBUG){//Debug statements
        -:  545:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  546:    }
        -:  547:
    #####:  548:    state->discardCount[player] = 0;
        -:  549:
        -:  550:    //Step 2 Draw Card
    #####:  551:    count = state->handCount[player];//Get current player's hand count
        -:  552:
        -:  553:    if (DEBUG){//Debug statements
        -:  554:      printf("Current hand count: %d\n", count);
        -:  555:    }
        -:  556:
    #####:  557:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  558:
    #####:  559:    if (deckCounter == 0)
    #####:  560:      return -1;
        -:  561:
    #####:  562:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    #####:  563:    state->deckCount[player]--;
    #####:  564:    state->handCount[player]++;//Increment hand count
        -:  565:  }
        -:  566:
        -:  567:  else{
    #####:  568:    int count = state->handCount[player];//Get current hand count for player
        -:  569:    int deckCounter;
        -:  570:    if (DEBUG){//Debug statements
        -:  571:      printf("Current hand count: %d\n", count);
        -:  572:    }
        -:  573:
    #####:  574:    deckCounter = state->deckCount[player];//Create holder for the deck count
    #####:  575:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
    #####:  576:    state->deckCount[player]--;
    #####:  577:    state->handCount[player]++;//Increment hand count
        -:  578:  }
        -:  579:
    #####:  580:  return 0;
        -:  581:}
        -:  582:
       35:  583:int getCost(int cardNumber)
        -:  584:{
       35:  585:  switch( cardNumber )
        -:  586:    {
        -:  587:    case curse:
        1:  588:      return 0;
        -:  589:    case estate:
        1:  590:      return 2;
        -:  591:    case duchy:
        1:  592:      return 5;
        -:  593:    case province:
        1:  594:      return 8;
        -:  595:    case copper:
        1:  596:      return 0;
        -:  597:    case silver:
        1:  598:      return 3;
        -:  599:    case gold:
        1:  600:      return 6;
        -:  601:    case adventurer:
        1:  602:      return 6;
        -:  603:    case council_room:
        1:  604:      return 5;
        -:  605:    case feast:
        1:  606:      return 4;
        -:  607:    case gardens:
        1:  608:      return 4;
        -:  609:    case mine:
        1:  610:      return 5;
        -:  611:    case remodel:
        1:  612:      return 4;
        -:  613:    case smithy:
        1:  614:      return 4;
        -:  615:    case village:
        1:  616:      return 3;
        -:  617:    case baron:
        1:  618:      return 4;
        -:  619:    case great_hall:
        1:  620:      return 3;
        -:  621:    case minion:
        1:  622:      return 5;
        -:  623:    case steward:
        1:  624:      return 3;
        -:  625:    case tribute:
        1:  626:      return 5;
        -:  627:    case ambassador:
        1:  628:      return 3;
        -:  629:    case cutpurse:
        1:  630:      return 4;
        -:  631:    case embargo:
        1:  632:      return 2;
        -:  633:    case outpost:
        1:  634:      return 5;
        -:  635:    case salvager:
        1:  636:      return 4;
        -:  637:    case sea_hag:
        1:  638:      return 4;
        -:  639:    case treasure_map:
        1:  640:      return 4;
        -:  641:    }
        -:  642:
        8:  643:  return -1;
        -:  644:}
        -:  645:
    #####:  646:void adventurer_action (int drawntreasure, struct gameState *state, int currentPlayer, int cardDrawn, int temphand[MAX_HAND], int z) {
    #####:  647:    while(drawntreasure<2){
    #####:  648:        if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
    #####:  649:            shuffle(currentPlayer, state);
        -:  650:        }
    #####:  651:        drawCard(currentPlayer, state);
    #####:  652:        cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
    #####:  653:        if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
    #####:  654:          drawntreasure++;
        -:  655:        else{
    #####:  656:          temphand[z]=cardDrawn;
    #####:  657:          state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
        -:  658:        }
        -:  659:  }
    #####:  660:  while(z-1>=0){
    #####:  661:      state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    #####:  662:      z=z-1;
        -:  663:  }
    #####:  664:}
        -:  665:
    #####:  666:void smithy_action (int currentPlayer, struct gameState *state, int i, int handPos) {
        -:  667:  //+3 Cards
    #####:  668:  for (i = 0; i < 3; i++) {
    #####:  669:    drawCard(currentPlayer, state);
        -:  670:  }
        -:  671:
        -:  672:  //discard card from hand
    #####:  673:  discardCard(handPos, currentPlayer, state, 0);
    #####:  674:}
        -:  675:
    #####:  676:void village_action (int currentPlayer, struct gameState *state, int handPos) {
        -:  677:  //+1 Card
    #####:  678:  drawCard(currentPlayer, state);
        -:  679:
        -:  680:  //+2 Actions
    #####:  681:  state->numActions = state->numActions + 2;
        -:  682:
        -:  683:  //discard played card from hand
    #####:  684:  discardCard(handPos, currentPlayer, state, 0);
    #####:  685:}
        -:  686:
    #####:  687:void council_room_action (int i, int currentPlayer, struct gameState *state) {
        -:  688:  //+4 Cards
    #####:  689:  for (i = 0; i < 4; i++) {
    #####:  690:      drawCard(currentPlayer, state);
        -:  691:  }
        -:  692:
        -:  693:  //+1 Buy
    #####:  694:  state->numBuys++;
        -:  695:
        -:  696:  //Each other player draws a card
    #####:  697:  for (i = 0; i < state->numPlayers; i++) {
    #####:  698:      if ( i == currentPlayer ) {
    #####:  699:          drawCard(i, state);
        -:  700:      }
        -:  701:  }
    #####:  702:}
        -:  703:
    #####:  704:int mine_action (int j, struct gameState *state, int currentPlayer, int choice1, int choice2, int handPos, int i) {
    #####:  705:  j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  706:
    #####:  707:  if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold) {
    #####:  708:      return -1;
        -:  709:  }
        -:  710:
    #####:  711:  if (choice2 > treasure_map || choice2 < curse) {
    #####:  712:      return -1;
        -:  713:  }
        -:  714:
    #####:  715:  if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) ) {
    #####:  716:      return -1;
        -:  717:  }
        -:  718:
    #####:  719:  gainCard(choice2, state, 2, currentPlayer);
        -:  720:
        -:  721:  //discard card from hand
    #####:  722:  discardCard(handPos, currentPlayer, state, 0);
        -:  723:
        -:  724:  //discard trashed card
    #####:  725:  for (i = 0; i < state->handCount[currentPlayer]; i++) {
    #####:  726:      if (state->hand[currentPlayer][i] == j) {
    #####:  727:        discardCard(i, currentPlayer, state, 0);
    #####:  728:        break;
        -:  729:      }
        -:  730:  }
        -:  731:
    #####:  732:  return -1;
        -:  733:}
        -:  734:
    #####:  735:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  736:{
        -:  737:  int i;
        -:  738:  int j;
        -:  739:  int k;
        -:  740:  int x;
        -:  741:  int m;
        -:  742:  int index;
    #####:  743:  int currentPlayer = whoseTurn(state);
    #####:  744:  int nextPlayer = currentPlayer + 1;
        -:  745:
    #####:  746:  int tributeRevealedCards[2] = {-1, -1};
        -:  747:  int temphand[MAX_HAND];// moved above the if statement
    #####:  748:  int drawntreasure=0;
        -:  749:  int cardDrawn;
    #####:  750:  int z = 0;// this is the counter for the temp hand
    #####:  751:  if (nextPlayer > (state->numPlayers - 1)){
    #####:  752:    nextPlayer = 0;
        -:  753:  }
        -:  754:
        -:  755:
        -:  756:  //uses switch to select card and perform actions
    #####:  757:  switch( card )
        -:  758:    {
        -:  759:    case adventurer:
    #####:  760:      adventurer_action (drawntreasure, state, currentPlayer, cardDrawn, temphand, z);
    #####:  761:      return 0;
        -:  762:
        -:  763:    case council_room:
    #####:  764:      council_room_action (i, currentPlayer, state);
    #####:  765:      return 0;
        -:  766:
        -:  767:    case feast:
        -:  768:      //gain card with cost up to 5
        -:  769:      //Backup hand
    #####:  770:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  771:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  772:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  773:      }
        -:  774:      //Backup hand
        -:  775:
        -:  776:      //Update Coins for Buy
    #####:  777:      updateCoins(currentPlayer, state, 5);
    #####:  778:      x = 1;//Condition to loop on
    #####:  779:      while( x == 1) {//Buy one card
    #####:  780:	if (supplyCount(choice1, state) <= 0){
        -:  781:	  if (DEBUG)
        -:  782:	    printf("None of that card left, sorry!\n");
        -:  783:
        -:  784:	  if (DEBUG){
        -:  785:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  786:	  }
        -:  787:	}
    #####:  788:	else if (state->coins < getCost(choice1)){
    #####:  789:	  printf("That card is too expensive!\n");
        -:  790:
        -:  791:	  if (DEBUG){
        -:  792:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  793:	  }
        -:  794:	}
        -:  795:	else{
        -:  796:
        -:  797:	  if (DEBUG){
        -:  798:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  799:	  }
        -:  800:
    #####:  801:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    #####:  802:	  x = 0;//No more buying cards
        -:  803:
        -:  804:	  if (DEBUG){
        -:  805:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  806:	  }
        -:  807:
        -:  808:	}
        -:  809:      }
        -:  810:
        -:  811:      //Reset Hand
    #####:  812:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  813:	state->hand[currentPlayer][i] = temphand[i];
    #####:  814:	temphand[i] = -1;
        -:  815:      }
        -:  816:      //Reset Hand
        -:  817:
    #####:  818:      return 0;
        -:  819:
        -:  820:    case gardens:
    #####:  821:      return -1;
        -:  822:
        -:  823:    case mine:
    #####:  824:      m = mine_action (j, state, currentPlayer, choice1, choice2, handPos, i);
    #####:  825:      return m;
        -:  826:
        -:  827:    case remodel:
    #####:  828:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  829:
    #####:  830:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
        -:  831:	{
    #####:  832:	  return -1;
        -:  833:	}
        -:  834:
    #####:  835:      gainCard(choice2, state, 0, currentPlayer);
        -:  836:
        -:  837:      //discard card from hand
    #####:  838:      discardCard(handPos, currentPlayer, state, 0);
        -:  839:
        -:  840:      //discard trashed card
    #####:  841:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  842:	{
    #####:  843:	  if (state->hand[currentPlayer][i] == j)
        -:  844:	    {
    #####:  845:	      discardCard(i, currentPlayer, state, 0);
    #####:  846:	      break;
        -:  847:	    }
        -:  848:	}
        -:  849:
        -:  850:
    #####:  851:      return 0;
        -:  852:
        -:  853:    case smithy:
    #####:  854:      smithy_action (currentPlayer, state, i, handPos);
    #####:  855:      return 0;
        -:  856:
        -:  857:    case village:
    #####:  858:      village_action (currentPlayer, state, handPos);
    #####:  859:      return 0;
        -:  860:
        -:  861:    case baron:
    #####:  862:      state->numBuys++;//Increase buys by 1!
    #####:  863:      if (choice1 > 0){//Boolean true or going to discard an estate
    #####:  864:	int p = 0;//Iterator for hand!
    #####:  865:	int card_not_discarded = 1;//Flag for discard set!
    #####:  866:	while(card_not_discarded){
    #####:  867:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    #####:  868:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  869:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  870:	    state->discardCount[currentPlayer]++;
    #####:  871:	    for (;p < state->handCount[currentPlayer]; p++){
    #####:  872:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  873:	    }
    #####:  874:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  875:	    state->handCount[currentPlayer]--;
    #####:  876:	    card_not_discarded = 0;//Exit the loop
        -:  877:	  }
    #####:  878:	  else if (p > state->handCount[currentPlayer]){
        -:  879:	    if(DEBUG) {
        -:  880:	      printf("No estate cards in your hand, invalid choice\n");
        -:  881:	      printf("Must gain an estate if there are any\n");
        -:  882:	    }
    #####:  883:	    if (supplyCount(estate, state) > 0){
    #####:  884:	      gainCard(estate, state, 0, currentPlayer);
    #####:  885:	      state->supplyCount[estate]--;//Decrement estates
    #####:  886:	      if (supplyCount(estate, state) == 0){
    #####:  887:		isGameOver(state);
        -:  888:	      }
        -:  889:	    }
    #####:  890:	    card_not_discarded = 0;//Exit the loop
        -:  891:	  }
        -:  892:
        -:  893:	  else{
    #####:  894:	    p++;//Next card
        -:  895:	  }
        -:  896:	}
        -:  897:      }
        -:  898:
        -:  899:      else{
    #####:  900:	if (supplyCount(estate, state) > 0){
    #####:  901:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
    #####:  902:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  903:	  if (supplyCount(estate, state) == 0){
    #####:  904:	    isGameOver(state);
        -:  905:	  }
        -:  906:	}
        -:  907:      }
        -:  908:
        -:  909:
    #####:  910:      return 0;
        -:  911:
        -:  912:    case great_hall:
        -:  913:      //+1 Card
    #####:  914:      drawCard(currentPlayer, state);
        -:  915:
        -:  916:      //+1 Actions
    #####:  917:      state->numActions++;
        -:  918:
        -:  919:      //discard card from hand
    #####:  920:      discardCard(handPos, currentPlayer, state, 0);
    #####:  921:      return 0;
        -:  922:
        -:  923:    case minion:
        -:  924:      //+1 action
    #####:  925:      state->numActions++;
        -:  926:
        -:  927:      //discard card from hand
    #####:  928:      discardCard(handPos, currentPlayer, state, 0);
        -:  929:
    #####:  930:      if (choice1)		//+2 coins
        -:  931:	{
    #####:  932:	  state->coins = state->coins + 2;
        -:  933:	}
        -:  934:
    #####:  935:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
        -:  936:	{
        -:  937:	  //discard hand
    #####:  938:	  while(numHandCards(state) > 0)
        -:  939:	    {
    #####:  940:	      discardCard(handPos, currentPlayer, state, 0);
        -:  941:	    }
        -:  942:
        -:  943:	  //draw 4
    #####:  944:	  for (i = 0; i < 4; i++)
        -:  945:	    {
    #####:  946:	      drawCard(currentPlayer, state);
        -:  947:	    }
        -:  948:
        -:  949:	  //other players discard hand and redraw if hand size > 4
    #####:  950:	  for (i = 0; i < state->numPlayers; i++)
        -:  951:	    {
    #####:  952:	      if (i != currentPlayer)
        -:  953:		{
    #####:  954:		  if ( state->handCount[i] > 4 )
        -:  955:		    {
        -:  956:		      //discard hand
    #####:  957:		      while( state->handCount[i] > 0 )
        -:  958:			{
    #####:  959:			  discardCard(handPos, i, state, 0);
        -:  960:			}
        -:  961:
        -:  962:		      //draw 4
    #####:  963:		      for (j = 0; j < 4; j++)
        -:  964:			{
    #####:  965:			  drawCard(i, state);
        -:  966:			}
        -:  967:		    }
        -:  968:		}
        -:  969:	    }
        -:  970:
        -:  971:	}
    #####:  972:      return 0;
        -:  973:
        -:  974:    case steward:
    #####:  975:      if (choice1 == 1)
        -:  976:	{
        -:  977:	  //+2 cards
    #####:  978:	  drawCard(currentPlayer, state);
    #####:  979:	  drawCard(currentPlayer, state);
        -:  980:	}
    #####:  981:      else if (choice1 == 2)
        -:  982:	{
        -:  983:	  //+2 coins
    #####:  984:	  state->coins = state->coins + 2;
        -:  985:	}
        -:  986:      else
        -:  987:	{
        -:  988:	  //trash 2 cards in hand
    #####:  989:	  discardCard(choice2, currentPlayer, state, 1);
    #####:  990:	  discardCard(choice3, currentPlayer, state, 1);
        -:  991:	}
        -:  992:
        -:  993:      //discard card from hand
    #####:  994:      discardCard(handPos, currentPlayer, state, 0);
    #####:  995:      return 0;
        -:  996:
        -:  997:    case tribute:
    #####:  998:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    #####:  999:	if (state->deckCount[nextPlayer] > 0){
    #####: 1000:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1001:	  state->deckCount[nextPlayer]--;
        -: 1002:	}
    #####: 1003:	else if (state->discardCount[nextPlayer] > 0){
    #####: 1004:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1005:	  state->discardCount[nextPlayer]--;
        -: 1006:	}
        -: 1007:	else{
        -: 1008:	  //No Card to Reveal
        -: 1009:	  if (DEBUG){
        -: 1010:	    printf("No cards to reveal\n");
        -: 1011:	  }
        -: 1012:	}
        -: 1013:      }
        -: 1014:
        -: 1015:      else{
    #####: 1016:	if (state->deckCount[nextPlayer] == 0){
    #####: 1017:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    #####: 1018:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1019:	    state->deckCount[nextPlayer]++;
    #####: 1020:	    state->discard[nextPlayer][i] = -1;
    #####: 1021:	    state->discardCount[nextPlayer]--;
        -: 1022:	  }
        -: 1023:
    #####: 1024:	  shuffle(nextPlayer,state);//Shuffle the deck
        -: 1025:	}
    #####: 1026:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1027:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1028:	state->deckCount[nextPlayer]--;
    #####: 1029:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1030:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1031:	state->deckCount[nextPlayer]--;
        -: 1032:      }
        -: 1033:
    #####: 1034:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one
    #####: 1035:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1036:	state->playedCardCount++;
    #####: 1037:	tributeRevealedCards[1] = -1;
        -: 1038:      }
        -: 1039:
    #####: 1040:      for (i = 0; i <= 2; i ++){
    #####: 1041:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    #####: 1042:	  state->coins += 2;
        -: 1043:	}
        -: 1044:
    #####: 1045:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    #####: 1046:	  drawCard(currentPlayer, state);
    #####: 1047:	  drawCard(currentPlayer, state);
        -: 1048:	}
        -: 1049:	else{//Action Card
    #####: 1050:	  state->numActions = state->numActions + 2;
        -: 1051:	}
        -: 1052:      }
        -: 1053:
    #####: 1054:      return 0;
        -: 1055:
        -: 1056:    case ambassador:
    #####: 1057:      j = 0;		//used to check if player has enough cards to discard
        -: 1058:
    #####: 1059:      if (choice2 > 2 || choice2 < 0)
        -: 1060:	{
    #####: 1061:	  return -1;
        -: 1062:	}
        -: 1063:
    #####: 1064:      if (choice1 == handPos)
        -: 1065:	{
    #####: 1066:	  return -1;
        -: 1067:	}
        -: 1068:
    #####: 1069:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1070:	{
    #####: 1071:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
        -: 1072:	    {
    #####: 1073:	      j++;
        -: 1074:	    }
        -: 1075:	}
    #####: 1076:      if (j < choice2)
        -: 1077:	{
    #####: 1078:	  return -1;
        -: 1079:	}
        -: 1080:
        -: 1081:      if (DEBUG)
        -: 1082:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1083:
        -: 1084:      //increase supply count for choosen card by amount being discarded
    #####: 1085:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1086:
        -: 1087:      //each other player gains a copy of revealed card
    #####: 1088:      for (i = 0; i < state->numPlayers; i++)
        -: 1089:	{
    #####: 1090:	  if (i != currentPlayer)
        -: 1091:	    {
    #####: 1092:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
        -: 1093:	    }
        -: 1094:	}
        -: 1095:
        -: 1096:      //discard played card from hand
    #####: 1097:      discardCard(handPos, currentPlayer, state, 0);
        -: 1098:
        -: 1099:      //trash copies of cards returned to supply
    #####: 1100:      for (j = 0; j < choice2; j++)
        -: 1101:	{
    #####: 1102:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1103:	    {
    #####: 1104:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
        -: 1105:		{
    #####: 1106:		  discardCard(i, currentPlayer, state, 1);
    #####: 1107:		  break;
        -: 1108:		}
        -: 1109:	    }
        -: 1110:	}
        -: 1111:
    #####: 1112:      return 0;
        -: 1113:
        -: 1114:    case cutpurse:
        -: 1115:
    #####: 1116:      updateCoins(currentPlayer, state, 2);
    #####: 1117:      for (i = 0; i < state->numPlayers; i++)
        -: 1118:	{
    #####: 1119:	  if (i != currentPlayer)
        -: 1120:	    {
    #####: 1121:	      for (j = 0; j < state->handCount[i]; j++)
        -: 1122:		{
    #####: 1123:		  if (state->hand[i][j] == copper)
        -: 1124:		    {
    #####: 1125:		      discardCard(j, i, state, 0);
    #####: 1126:		      break;
        -: 1127:		    }
    #####: 1128:		  if (j == state->handCount[i])
        -: 1129:		    {
    #####: 1130:		      for (k = 0; k < state->handCount[i]; k++)
        -: 1131:			{
        -: 1132:			  if (DEBUG)
        -: 1133:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1134:			}
    #####: 1135:		      break;
        -: 1136:		    }
        -: 1137:		}
        -: 1138:
        -: 1139:	    }
        -: 1140:
        -: 1141:	}
        -: 1142:
        -: 1143:      //discard played card from hand
    #####: 1144:      discardCard(handPos, currentPlayer, state, 0);
        -: 1145:
    #####: 1146:      return 0;
        -: 1147:
        -: 1148:
        -: 1149:    case embargo:
        -: 1150:      //+2 Coins
    #####: 1151:      state->coins = state->coins + 2;
        -: 1152:
        -: 1153:      //see if selected pile is in play
    #####: 1154:      if ( state->supplyCount[choice1] == -1 )
        -: 1155:	{
    #####: 1156:	  return -1;
        -: 1157:	}
        -: 1158:
        -: 1159:      //add embargo token to selected supply pile
    #####: 1160:      state->embargoTokens[choice1]++;
        -: 1161:
        -: 1162:      //trash card
    #####: 1163:      discardCard(handPos, currentPlayer, state, 1);
    #####: 1164:      return 0;
        -: 1165:
        -: 1166:    case outpost:
        -: 1167:      //set outpost flag
    #####: 1168:      state->outpostPlayed++;
        -: 1169:
        -: 1170:      //discard card
    #####: 1171:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1172:      return 0;
        -: 1173:
        -: 1174:    case salvager:
        -: 1175:      //+1 buy
    #####: 1176:      state->numBuys++;
        -: 1177:
    #####: 1178:      if (choice1)
        -: 1179:	{
        -: 1180:	  //gain coins equal to trashed card
    #####: 1181:	  state->coins = state->coins + getCost( handCard(choice1, state) );
        -: 1182:	  //trash card
    #####: 1183:	  discardCard(choice1, currentPlayer, state, 1);
        -: 1184:	}
        -: 1185:
        -: 1186:      //discard card
    #####: 1187:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1188:      return 0;
        -: 1189:
        -: 1190:    case sea_hag:
    #####: 1191:      for (i = 0; i < state->numPlayers; i++){
    #####: 1192:	if (i != currentPlayer){
    #####: 1193:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1194:	  state->discardCount[i]++;
    #####: 1195:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1196:	}
        -: 1197:      }
    #####: 1198:      return 0;
        -: 1199:
        -: 1200:    case treasure_map:
        -: 1201:      //search hand for another treasure_map
    #####: 1202:      index = -1;
    #####: 1203:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1204:	{
    #####: 1205:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
        -: 1206:	    {
    #####: 1207:	      index = i;
    #####: 1208:	      break;
        -: 1209:	    }
        -: 1210:	}
    #####: 1211:      if (index > -1)
        -: 1212:	{
        -: 1213:	  //trash both treasure cards
    #####: 1214:	  discardCard(handPos, currentPlayer, state, 1);
    #####: 1215:	  discardCard(index, currentPlayer, state, 1);
        -: 1216:
        -: 1217:	  //gain 4 Gold cards
    #####: 1218:	  for (i = 0; i < 4; i++)
        -: 1219:	    {
    #####: 1220:	      gainCard(gold, state, 1, currentPlayer);
        -: 1221:	    }
        -: 1222:
        -: 1223:	  //return success
    #####: 1224:	  return 1;
        -: 1225:	}
        -: 1226:
        -: 1227:      //no second treasure_map found in hand
    #####: 1228:      return -1;
        -: 1229:    }
        -: 1230:
    #####: 1231:  return -1;
        -: 1232:}
        -: 1233:
    #####: 1234:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1235:{
        -: 1236:
        -: 1237:  //if card is not trashed, added to Played pile
    #####: 1238:  if (trashFlag < 1)
        -: 1239:    {
        -: 1240:      //add card to played pile
    #####: 1241:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos];
    #####: 1242:      state->playedCardCount++;
        -: 1243:    }
        -: 1244:
        -: 1245:  //set played card to -1
    #####: 1246:  state->hand[currentPlayer][handPos] = -1;
        -: 1247:
        -: 1248:  //remove card from player's hand
    #####: 1249:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
        -: 1250:    {
        -: 1251:      //reduce number of cards in hand
    #####: 1252:      state->handCount[currentPlayer]--;
        -: 1253:    }
    #####: 1254:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
        -: 1255:    {
        -: 1256:      //reduce number of cards in hand
    #####: 1257:      state->handCount[currentPlayer]--;
        -: 1258:    }
        -: 1259:  else
        -: 1260:    {
        -: 1261:      //replace discarded card with last card in hand
    #####: 1262:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1263:      //set last card to -1
    #####: 1264:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1265:      //reduce number of cards in hand
    #####: 1266:      state->handCount[currentPlayer]--;
        -: 1267:    }
        -: 1268:
    #####: 1269:  return 0;
        -: 1270:}
        -: 1271:
    #####: 1272:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1273:{
        -: 1274:  //Note: supplyPos is enum of choosen card
        -: 1275:
        -: 1276:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1277:  if ( supplyCount(supplyPos, state) < 1 )
        -: 1278:    {
    #####: 1279:      return -1;
        -: 1280:    }
        -: 1281:
        -: 1282:  //added card for [whoseTurn] current player:
        -: 1283:  // toFlag = 0 : add to discard
        -: 1284:  // toFlag = 1 : add to deck
        -: 1285:  // toFlag = 2 : add to hand
        -: 1286:
    #####: 1287:  if (toFlag == 1)
        -: 1288:    {
    #####: 1289:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1290:      state->deckCount[player]++;
        -: 1291:    }
    #####: 1292:  else if (toFlag == 2)
        -: 1293:    {
    #####: 1294:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1295:      state->handCount[player]++;
        -: 1296:    }
        -: 1297:  else
        -: 1298:    {
    #####: 1299:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1300:      state->discardCount[player]++;
        -: 1301:    }
        -: 1302:
        -: 1303:  //decrease number in supply pile
    #####: 1304:  state->supplyCount[supplyPos]--;
        -: 1305:
    #####: 1306:  return 0;
        -: 1307:}
        -: 1308:
    #####: 1309:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1310:{
        -: 1311:  int i;
        -: 1312:
        -: 1313:  //reset coin count
    #####: 1314:  state->coins = 0;
        -: 1315:
        -: 1316:  //add coins for each Treasure card in player's hand
    #####: 1317:  for (i = 0; i < state->handCount[player]; i++)
        -: 1318:    {
    #####: 1319:      if (state->hand[player][i] == copper)
        -: 1320:	{
    #####: 1321:	  state->coins += 1;
        -: 1322:	}
    #####: 1323:      else if (state->hand[player][i] == silver)
        -: 1324:	{
    #####: 1325:	  state->coins += 2;
        -: 1326:	}
    #####: 1327:      else if (state->hand[player][i] == gold)
        -: 1328:	{
    #####: 1329:	  state->coins += 3;
        -: 1330:	}
        -: 1331:    }
        -: 1332:
        -: 1333:  //add bonus
    #####: 1334:  state->coins += bonus;
        -: 1335:
    #####: 1336:  return 0;
        -: 1337:}
        -: 1338:
        -: 1339:
        -: 1340://end of dominion.c
unittest3.c:
Expected coin count: 0. Actual coin count: 0 
Expected coin count: 1. Actual coin count: 1 
Expected coin count: 0. Actual coin count: 0 
Expected coin count: 1. Actual coin count: 1 
Expected coin count: 0. Actual coin count: 0 
Expected coin count: 1. Actual coin count: 1 
Expected coin count: 0. Actual coin count: 0 
Expected coin count: 1. Actual coin count: 1 
File 'dominion.c'
Lines executed:8.02% of 561
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:3
        -:    0:Programs:3
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
    #####:    8:int compare(const void* a, const void* b) {
    #####:    9:  if (*(int*)a > *(int*)b)
    #####:   10:    return 1;
    #####:   11:  if (*(int*)a < *(int*)b)
    #####:   12:    return -1;
    #####:   13:  return 0;
        -:   14:}
        -:   15:
    #####:   16:struct gameState* newGame() {
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
        -:   19:}
        -:   20:
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
        -:   35:}
        -:   36:
    #####:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;
        -:   43:  //set up random number generator
    #####:   44:  SelectStream(1);
    #####:   45:  PutSeed((long)randomSeed);
        -:   46:
        -:   47:  //check number of players
    #####:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
    #####:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
    #####:   57:  for (i = 0; i < 10; i++)
        -:   58:    {
    #####:   59:      for (j = 0; j < 10; j++)
        -:   60:        {
    #####:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
    #####:   73:  if (numPlayers == 2)
        -:   74:    {
    #####:   75:      state->supplyCount[curse] = 10;
        -:   76:    }
    #####:   77:  else if (numPlayers == 3)
        -:   78:    {
    #####:   79:      state->supplyCount[curse] = 20;
        -:   80:    }
        -:   81:  else
        -:   82:    {
    #####:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
    #####:   87:  if (numPlayers == 2)
        -:   88:    {
    #####:   89:      state->supplyCount[estate] = 8;
    #####:   90:      state->supplyCount[duchy] = 8;
    #####:   91:      state->supplyCount[province] = 8;
        -:   92:    }
        -:   93:  else
        -:   94:    {
    #####:   95:      state->supplyCount[estate] = 12;
    #####:   96:      state->supplyCount[duchy] = 12;
    #####:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
    #####:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
    #####:  102:  state->supplyCount[silver] = 40;
    #####:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
    #####:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
        -:  107:    {
    #####:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
        -:  109:	{
    #####:  110:	  if (kingdomCards[j] == i)
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
    #####:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
        -:  114:		{
    #####:  115:		  if (numPlayers == 2){
    #####:  116:		    state->supplyCount[i] = 8;
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
        -:  119:		}
        -:  120:	      else
        -:  121:		{
    #####:  122:		  state->supplyCount[i] = 10;
        -:  123:		}
    #####:  124:	      break;
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
    #####:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
    #####:  138:  for (i = 0; i < numPlayers; i++)
        -:  139:    {
    #####:  140:      state->deckCount[i] = 0;
    #####:  141:      for (j = 0; j < 3; j++)
        -:  142:	{
    #####:  143:	  state->deck[i][j] = estate;
    #####:  144:	  state->deckCount[i]++;
        -:  145:	}
    #####:  146:      for (j = 3; j < 10; j++)
        -:  147:	{
    #####:  148:	  state->deck[i][j] = copper;
    #####:  149:	  state->deckCount[i]++;
        -:  150:	}
        -:  151:    }
        -:  152:
        -:  153:  //shuffle player decks
    #####:  154:  for (i = 0; i < numPlayers; i++)
        -:  155:    {
    #####:  156:      if ( shuffle(i, state) < 0 )
        -:  157:	{
    #####:  158:	  return -1;
        -:  159:	}
        -:  160:    }
        -:  161:
        -:  162:  //draw player hands
    #####:  163:  for (i = 0; i < numPlayers; i++)
        -:  164:    {
        -:  165:      //initialize hand size to zero
    #####:  166:      state->handCount[i] = 0;
    #####:  167:      state->discardCount[i] = 0;
        -:  168:      //draw 5 cards
        -:  169:      // for (j = 0; j < 5; j++)
        -:  170:      //	{
        -:  171:      //	  drawCard(i, state);
        -:  172:      //	}
        -:  173:    }
        -:  174:
        -:  175:  //set embargo tokens to 0 for all supply piles
    #####:  176:  for (i = 0; i <= treasure_map; i++)
        -:  177:    {
    #####:  178:      state->embargoTokens[i] = 0;
        -:  179:    }
        -:  180:
        -:  181:  //initialize first player's turn
    #####:  182:  state->outpostPlayed = 0;
    #####:  183:  state->phase = 0;
    #####:  184:  state->numActions = 1;
    #####:  185:  state->numBuys = 1;
    #####:  186:  state->playedCardCount = 0;
    #####:  187:  state->whoseTurn = 0;
    #####:  188:  state->handCount[state->whoseTurn] = 0;
        -:  189:  //int it; move to top
        -:  190:
        -:  191:  //Moved draw cards to here, only drawing at the start of a turn
    #####:  192:  for (it = 0; it < 5; it++){
    #####:  193:    drawCard(state->whoseTurn, state);
        -:  194:  }
        -:  195:
    #####:  196:  updateCoins(state->whoseTurn, state, 0);
        -:  197:
    #####:  198:  return 0;
        -:  199:}
        -:  200:
    #####:  201:int shuffle(int player, struct gameState *state) {
        -:  202:
        -:  203:
        -:  204:  int newDeck[MAX_DECK];
    #####:  205:  int newDeckPos = 0;
        -:  206:  int card;
        -:  207:  int i;
        -:  208:
    #####:  209:  if (state->deckCount[player] < 1)
    #####:  210:    return -1;
    #####:  211:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare);
        -:  212:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  213:
    #####:  214:  while (state->deckCount[player] > 0) {
    #####:  215:    card = floor(Random() * state->deckCount[player]);
    #####:  216:    newDeck[newDeckPos] = state->deck[player][card];
    #####:  217:    newDeckPos++;
    #####:  218:    for (i = card; i < state->deckCount[player]-1; i++) {
    #####:  219:      state->deck[player][i] = state->deck[player][i+1];
        -:  220:    }
    #####:  221:    state->deckCount[player]--;
        -:  222:  }
    #####:  223:  for (i = 0; i < newDeckPos; i++) {
    #####:  224:    state->deck[player][i] = newDeck[i];
    #####:  225:    state->deckCount[player]++;
        -:  226:  }
        -:  227:
    #####:  228:  return 0;
        -:  229:}
        -:  230:
    #####:  231:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state)
        -:  232:{
        -:  233:  int card;
    #####:  234:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  235:
        -:  236:  //check if it is the right phase
    #####:  237:  if (state->phase != 0)
        -:  238:    {
    #####:  239:      return -1;
        -:  240:    }
        -:  241:
        -:  242:  //check if player has enough actions
    #####:  243:  if ( state->numActions < 1 )
        -:  244:    {
    #####:  245:      return -1;
        -:  246:    }
        -:  247:
        -:  248:  //get card played
    #####:  249:  card = handCard(handPos, state);
        -:  250:
        -:  251:  //check if selected card is an action
    #####:  252:  if ( card < adventurer || card > treasure_map )
        -:  253:    {
    #####:  254:      return -1;
        -:  255:    }
        -:  256:
        -:  257:  //play card
    #####:  258:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
        -:  259:    {
    #####:  260:      return -1;
        -:  261:    }
        -:  262:
        -:  263:  //reduce number of actions
    #####:  264:  state->numActions--;
        -:  265:
        -:  266:  //update coins (Treasure cards may be added with card draws)
    #####:  267:  updateCoins(state->whoseTurn, state, coin_bonus);
        -:  268:
    #####:  269:  return 0;
        -:  270:}
        -:  271:
    #####:  272:int buyCard(int supplyPos, struct gameState *state) {
        -:  273:  int who;
        -:  274:  if (DEBUG){
        -:  275:    printf("Entering buyCard...\n");
        -:  276:  }
        -:  277:
        -:  278:  // I don't know what to do about the phase thing.
        -:  279:
    #####:  280:  who = state->whoseTurn;
        -:  281:
    #####:  282:  if (state->numBuys < 1){
        -:  283:    if (DEBUG)
        -:  284:      printf("You do not have any buys left\n");
    #####:  285:    return -1;
    #####:  286:  } else if (supplyCount(supplyPos, state) <1){
        -:  287:    if (DEBUG)
        -:  288:      printf("There are not any of that type of card left\n");
    #####:  289:    return -1;
    #####:  290:  } else if (state->coins < getCost(supplyPos)){
        -:  291:    if (DEBUG)
        -:  292:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  293:    return -1;
        -:  294:  } else {
    #####:  295:    state->phase=1;
        -:  296:    //state->supplyCount[supplyPos]--;
    #####:  297:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  298:
    #####:  299:    state->coins = (state->coins) - (getCost(supplyPos));
    #####:  300:    state->numBuys--;
        -:  301:    if (DEBUG)
        -:  302:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  303:  }
        -:  304:
        -:  305:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  306:  //state->discardCount[who]++;
        -:  307:
    #####:  308:  return 0;
        -:  309:}
        -:  310:
    #####:  311:int numHandCards(struct gameState *state) {
    #####:  312:  return state->handCount[ whoseTurn(state) ];
        -:  313:}
        -:  314:
    #####:  315:int handCard(int handPos, struct gameState *state) {
    #####:  316:  int currentPlayer = whoseTurn(state);
    #####:  317:  return state->hand[currentPlayer][handPos];
        -:  318:}
        -:  319:
    #####:  320:int supplyCount(int card, struct gameState *state) {
    #####:  321:  return state->supplyCount[card];
        -:  322:}
        -:  323:
    #####:  324:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  325:  int i;
    #####:  326:  int count = 0;
        -:  327:
    #####:  328:  for (i = 0; i < state->deckCount[player]; i++)
        -:  329:    {
    #####:  330:      if (state->deck[player][i] == card) count++;
        -:  331:    }
        -:  332:
    #####:  333:  for (i = 0; i < state->handCount[player]; i++)
        -:  334:    {
    #####:  335:      if (state->hand[player][i] == card) count++;
        -:  336:    }
        -:  337:
    #####:  338:  for (i = 0; i < state->discardCount[player]; i++)
        -:  339:    {
    #####:  340:      if (state->discard[player][i] == card) count++;
        -:  341:    }
        -:  342:
    #####:  343:  return count;
        -:  344:}
        -:  345:
    #####:  346:int whoseTurn(struct gameState *state) {
    #####:  347:  return state->whoseTurn;
        -:  348:}
        -:  349:
    #####:  350:int endTurn(struct gameState *state) {
        -:  351:  int k;
        -:  352:  int i;
    #####:  353:  int currentPlayer = whoseTurn(state);
        -:  354:
        -:  355:  //Discard hand
    #####:  356:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    #####:  357:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  358:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  359:  }
    #####:  360:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  361:
        -:  362:  //Code for determining the player
    #####:  363:  if (currentPlayer < (state->numPlayers - 1)){
    #####:  364:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  365:  }
        -:  366:  else{
    #####:  367:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  368:  }
        -:  369:
    #####:  370:  state->outpostPlayed = 0;
    #####:  371:  state->phase = 0;
    #####:  372:  state->numActions = 1;
    #####:  373:  state->coins = 0;
    #####:  374:  state->numBuys = 1;
    #####:  375:  state->playedCardCount = 0;
    #####:  376:  state->handCount[state->whoseTurn] = 0;
        -:  377:
        -:  378:  //int k; move to top
        -:  379:  //Next player draws hand
    #####:  380:  for (k = 0; k < 5; k++){
    #####:  381:    drawCard(state->whoseTurn, state);//Draw a card
        -:  382:  }
        -:  383:
        -:  384:  //Update money
    #####:  385:  updateCoins(state->whoseTurn, state , 0);
        -:  386:
    #####:  387:  return 0;
        -:  388:}
        -:  389:
     1002:  390:int isGameOver(struct gameState *state) {
        -:  391:  int i;
        -:  392:  int j;
        -:  393:
        -:  394:  //if stack of Province cards is empty, the game ends
     1002:  395:  if (state->supplyCount[province] == 0)
        -:  396:    {
      109:  397:      return 1;
        -:  398:    }
        -:  399:
        -:  400:  //if three supply pile are at 0, the game ends
      893:  401:  j = 0;
    23218:  402:  for (i = 0; i < 25; i++)
        -:  403:    {
    22325:  404:      if (state->supplyCount[i] == 0)
        -:  405:	{
     2676:  406:	  j++;
        -:  407:	}
        -:  408:    }
      893:  409:  if ( j >= 3)
        -:  410:    {
      892:  411:      return 1;
        -:  412:    }
        -:  413:
        1:  414:  return 0;
        -:  415:}
        -:  416:
    #####:  417:int scoreFor (int player, struct gameState *state) {
        -:  418:
        -:  419:  int i;
    #####:  420:  int score = 0;
        -:  421:  //score from hand
    #####:  422:  for (i = 0; i < state->handCount[player]; i++)
        -:  423:    {
    #####:  424:      if (state->hand[player][i] == curse) { score = score - 1; };
    #####:  425:      if (state->hand[player][i] == estate) { score = score + 1; };
    #####:  426:      if (state->hand[player][i] == duchy) { score = score + 3; };
    #####:  427:      if (state->hand[player][i] == province) { score = score + 6; };
    #####:  428:      if (state->hand[player][i] == great_hall) { score = score + 1; };
    #####:  429:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  430:    }
        -:  431:
        -:  432:  //score from discard
    #####:  433:  for (i = 0; i < state->discardCount[player]; i++)
        -:  434:    {
    #####:  435:      if (state->discard[player][i] == curse) { score = score - 1; };
    #####:  436:      if (state->discard[player][i] == estate) { score = score + 1; };
    #####:  437:      if (state->discard[player][i] == duchy) { score = score + 3; };
    #####:  438:      if (state->discard[player][i] == province) { score = score + 6; };
    #####:  439:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    #####:  440:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  441:    }
        -:  442:
        -:  443:  //score from deck
    #####:  444:  for (i = 0; i < state->discardCount[player]; i++)
        -:  445:    {
    #####:  446:      if (state->deck[player][i] == curse) { score = score - 1; };
    #####:  447:      if (state->deck[player][i] == estate) { score = score + 1; };
    #####:  448:      if (state->deck[player][i] == duchy) { score = score + 3; };
    #####:  449:      if (state->deck[player][i] == province) { score = score + 6; };
    #####:  450:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    #####:  451:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  452:    }
        -:  453:
    #####:  454:  return score;
        -:  455:}
        -:  456:
    #####:  457:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  458:  int i;
        -:  459:  int j;
        -:  460:  int highScore;
        -:  461:  int currentPlayer;
        -:  462:
        -:  463:  //get score for each player
    #####:  464:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  465:    {
        -:  466:      //set unused player scores to -9999
    #####:  467:      if (i >= state->numPlayers)
        -:  468:	{
    #####:  469:	  players[i] = -9999;
        -:  470:	}
        -:  471:      else
        -:  472:	{
    #####:  473:	  players[i] = scoreFor (i, state);
        -:  474:	}
        -:  475:    }
        -:  476:
        -:  477:  //find highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  480:    {
    #####:  481:      if (players[i] > players[j])
        -:  482:	{
    #####:  483:	  j = i;
        -:  484:	}
        -:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //add 1 to players who had less turns
    #####:  489:  currentPlayer = whoseTurn(state);
    #####:  490:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  491:    {
    #####:  492:      if ( players[i] == highScore && i > currentPlayer )
        -:  493:	{
    #####:  494:	  players[i]++;
        -:  495:	}
        -:  496:    }
        -:  497:
        -:  498:  //find new highest score
    #####:  499:  j = 0;
    #####:  500:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  501:    {
    #####:  502:      if ( players[i] > players[j] )
        -:  503:	{
    #####:  504:	  j = i;
        -:  505:	}
        -:  506:    }
    #####:  507:  highScore = players[j];
        -:  508:
        -:  509:  //set winners in array to 1 and rest to 0
    #####:  510:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  511:    {
    #####:  512:      if ( players[i] == highScore )
        -:  513:	{
    #####:  514:	  players[i] = 1;
        -:  515:	}
        -:  516:      else
        -:  517:	{
    #####:  518:	  players[i] = 0;
        -:  519:	}
        -:  520:    }
        -:  521:
    #####:  522:  return 0;
        -:  523:}
        -:  524:
    #####:  525:int drawCard(int player, struct gameState *state)
        -:  526:{	int count;
        -:  527:  int deckCounter;
    #####:  528:  if (state->deckCount[player] <= 0){//Deck is empty
        -:  529:
        -:  530:    //Step 1 Shuffle the discard pile back into a deck
        -:  531:    int i;
        -:  532:    //Move discard to deck
    #####:  533:    for (i = 0; i < state->discardCount[player];i++){
    #####:  534:      state->deck[player][i] = state->discard[player][i];
    #####:  535:      state->discard[player][i] = -1;
        -:  536:    }
        -:  537:
    #####:  538:    state->deckCount[player] = state->discardCount[player];
    #####:  539:    state->discardCount[player] = 0;//Reset discard
        -:  540:
        -:  541:    //Shufffle the deck
    #####:  542:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
        -:  543:
        -:  544:    if (DEBUG){//Debug statements
        -:  545:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  546:    }
        -:  547:
    #####:  548:    state->discardCount[player] = 0;
        -:  549:
        -:  550:    //Step 2 Draw Card
    #####:  551:    count = state->handCount[player];//Get current player's hand count
        -:  552:
        -:  553:    if (DEBUG){//Debug statements
        -:  554:      printf("Current hand count: %d\n", count);
        -:  555:    }
        -:  556:
    #####:  557:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  558:
    #####:  559:    if (deckCounter == 0)
    #####:  560:      return -1;
        -:  561:
    #####:  562:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    #####:  563:    state->deckCount[player]--;
    #####:  564:    state->handCount[player]++;//Increment hand count
        -:  565:  }
        -:  566:
        -:  567:  else{
    #####:  568:    int count = state->handCount[player];//Get current hand count for player
        -:  569:    int deckCounter;
        -:  570:    if (DEBUG){//Debug statements
        -:  571:      printf("Current hand count: %d\n", count);
        -:  572:    }
        -:  573:
    #####:  574:    deckCounter = state->deckCount[player];//Create holder for the deck count
    #####:  575:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
    #####:  576:    state->deckCount[player]--;
    #####:  577:    state->handCount[player]++;//Increment hand count
        -:  578:  }
        -:  579:
    #####:  580:  return 0;
        -:  581:}
        -:  582:
       35:  583:int getCost(int cardNumber)
        -:  584:{
       35:  585:  switch( cardNumber )
        -:  586:    {
        -:  587:    case curse:
        1:  588:      return 0;
        -:  589:    case estate:
        1:  590:      return 2;
        -:  591:    case duchy:
        1:  592:      return 5;
        -:  593:    case province:
        1:  594:      return 8;
        -:  595:    case copper:
        1:  596:      return 0;
        -:  597:    case silver:
        1:  598:      return 3;
        -:  599:    case gold:
        1:  600:      return 6;
        -:  601:    case adventurer:
        1:  602:      return 6;
        -:  603:    case council_room:
        1:  604:      return 5;
        -:  605:    case feast:
        1:  606:      return 4;
        -:  607:    case gardens:
        1:  608:      return 4;
        -:  609:    case mine:
        1:  610:      return 5;
        -:  611:    case remodel:
        1:  612:      return 4;
        -:  613:    case smithy:
        1:  614:      return 4;
        -:  615:    case village:
        1:  616:      return 3;
        -:  617:    case baron:
        1:  618:      return 4;
        -:  619:    case great_hall:
        1:  620:      return 3;
        -:  621:    case minion:
        1:  622:      return 5;
        -:  623:    case steward:
        1:  624:      return 3;
        -:  625:    case tribute:
        1:  626:      return 5;
        -:  627:    case ambassador:
        1:  628:      return 3;
        -:  629:    case cutpurse:
        1:  630:      return 4;
        -:  631:    case embargo:
        1:  632:      return 2;
        -:  633:    case outpost:
        1:  634:      return 5;
        -:  635:    case salvager:
        1:  636:      return 4;
        -:  637:    case sea_hag:
        1:  638:      return 4;
        -:  639:    case treasure_map:
        1:  640:      return 4;
        -:  641:    }
        -:  642:
        8:  643:  return -1;
        -:  644:}
        -:  645:
    #####:  646:void adventurer_action (int drawntreasure, struct gameState *state, int currentPlayer, int cardDrawn, int temphand[MAX_HAND], int z) {
    #####:  647:    while(drawntreasure<2){
    #####:  648:        if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
    #####:  649:            shuffle(currentPlayer, state);
        -:  650:        }
    #####:  651:        drawCard(currentPlayer, state);
    #####:  652:        cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
    #####:  653:        if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
    #####:  654:          drawntreasure++;
        -:  655:        else{
    #####:  656:          temphand[z]=cardDrawn;
    #####:  657:          state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
        -:  658:        }
        -:  659:  }
    #####:  660:  while(z-1>=0){
    #####:  661:      state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    #####:  662:      z=z-1;
        -:  663:  }
    #####:  664:}
        -:  665:
    #####:  666:void smithy_action (int currentPlayer, struct gameState *state, int i, int handPos) {
        -:  667:  //+3 Cards
    #####:  668:  for (i = 0; i < 3; i++) {
    #####:  669:    drawCard(currentPlayer, state);
        -:  670:  }
        -:  671:
        -:  672:  //discard card from hand
    #####:  673:  discardCard(handPos, currentPlayer, state, 0);
    #####:  674:}
        -:  675:
    #####:  676:void village_action (int currentPlayer, struct gameState *state, int handPos) {
        -:  677:  //+1 Card
    #####:  678:  drawCard(currentPlayer, state);
        -:  679:
        -:  680:  //+2 Actions
    #####:  681:  state->numActions = state->numActions + 2;
        -:  682:
        -:  683:  //discard played card from hand
    #####:  684:  discardCard(handPos, currentPlayer, state, 0);
    #####:  685:}
        -:  686:
    #####:  687:void council_room_action (int i, int currentPlayer, struct gameState *state) {
        -:  688:  //+4 Cards
    #####:  689:  for (i = 0; i < 4; i++) {
    #####:  690:      drawCard(currentPlayer, state);
        -:  691:  }
        -:  692:
        -:  693:  //+1 Buy
    #####:  694:  state->numBuys++;
        -:  695:
        -:  696:  //Each other player draws a card
    #####:  697:  for (i = 0; i < state->numPlayers; i++) {
    #####:  698:      if ( i == currentPlayer ) {
    #####:  699:          drawCard(i, state);
        -:  700:      }
        -:  701:  }
    #####:  702:}
        -:  703:
    #####:  704:int mine_action (int j, struct gameState *state, int currentPlayer, int choice1, int choice2, int handPos, int i) {
    #####:  705:  j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  706:
    #####:  707:  if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold) {
    #####:  708:      return -1;
        -:  709:  }
        -:  710:
    #####:  711:  if (choice2 > treasure_map || choice2 < curse) {
    #####:  712:      return -1;
        -:  713:  }
        -:  714:
    #####:  715:  if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) ) {
    #####:  716:      return -1;
        -:  717:  }
        -:  718:
    #####:  719:  gainCard(choice2, state, 2, currentPlayer);
        -:  720:
        -:  721:  //discard card from hand
    #####:  722:  discardCard(handPos, currentPlayer, state, 0);
        -:  723:
        -:  724:  //discard trashed card
    #####:  725:  for (i = 0; i < state->handCount[currentPlayer]; i++) {
    #####:  726:      if (state->hand[currentPlayer][i] == j) {
    #####:  727:        discardCard(i, currentPlayer, state, 0);
    #####:  728:        break;
        -:  729:      }
        -:  730:  }
        -:  731:
    #####:  732:  return -1;
        -:  733:}
        -:  734:
    #####:  735:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  736:{
        -:  737:  int i;
        -:  738:  int j;
        -:  739:  int k;
        -:  740:  int x;
        -:  741:  int m;
        -:  742:  int index;
    #####:  743:  int currentPlayer = whoseTurn(state);
    #####:  744:  int nextPlayer = currentPlayer + 1;
        -:  745:
    #####:  746:  int tributeRevealedCards[2] = {-1, -1};
        -:  747:  int temphand[MAX_HAND];// moved above the if statement
    #####:  748:  int drawntreasure=0;
        -:  749:  int cardDrawn;
    #####:  750:  int z = 0;// this is the counter for the temp hand
    #####:  751:  if (nextPlayer > (state->numPlayers - 1)){
    #####:  752:    nextPlayer = 0;
        -:  753:  }
        -:  754:
        -:  755:
        -:  756:  //uses switch to select card and perform actions
    #####:  757:  switch( card )
        -:  758:    {
        -:  759:    case adventurer:
    #####:  760:      adventurer_action (drawntreasure, state, currentPlayer, cardDrawn, temphand, z);
    #####:  761:      return 0;
        -:  762:
        -:  763:    case council_room:
    #####:  764:      council_room_action (i, currentPlayer, state);
    #####:  765:      return 0;
        -:  766:
        -:  767:    case feast:
        -:  768:      //gain card with cost up to 5
        -:  769:      //Backup hand
    #####:  770:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  771:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  772:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  773:      }
        -:  774:      //Backup hand
        -:  775:
        -:  776:      //Update Coins for Buy
    #####:  777:      updateCoins(currentPlayer, state, 5);
    #####:  778:      x = 1;//Condition to loop on
    #####:  779:      while( x == 1) {//Buy one card
    #####:  780:	if (supplyCount(choice1, state) <= 0){
        -:  781:	  if (DEBUG)
        -:  782:	    printf("None of that card left, sorry!\n");
        -:  783:
        -:  784:	  if (DEBUG){
        -:  785:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  786:	  }
        -:  787:	}
    #####:  788:	else if (state->coins < getCost(choice1)){
    #####:  789:	  printf("That card is too expensive!\n");
        -:  790:
        -:  791:	  if (DEBUG){
        -:  792:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  793:	  }
        -:  794:	}
        -:  795:	else{
        -:  796:
        -:  797:	  if (DEBUG){
        -:  798:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  799:	  }
        -:  800:
    #####:  801:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    #####:  802:	  x = 0;//No more buying cards
        -:  803:
        -:  804:	  if (DEBUG){
        -:  805:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  806:	  }
        -:  807:
        -:  808:	}
        -:  809:      }
        -:  810:
        -:  811:      //Reset Hand
    #####:  812:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  813:	state->hand[currentPlayer][i] = temphand[i];
    #####:  814:	temphand[i] = -1;
        -:  815:      }
        -:  816:      //Reset Hand
        -:  817:
    #####:  818:      return 0;
        -:  819:
        -:  820:    case gardens:
    #####:  821:      return -1;
        -:  822:
        -:  823:    case mine:
    #####:  824:      m = mine_action (j, state, currentPlayer, choice1, choice2, handPos, i);
    #####:  825:      return m;
        -:  826:
        -:  827:    case remodel:
    #####:  828:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  829:
    #####:  830:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
        -:  831:	{
    #####:  832:	  return -1;
        -:  833:	}
        -:  834:
    #####:  835:      gainCard(choice2, state, 0, currentPlayer);
        -:  836:
        -:  837:      //discard card from hand
    #####:  838:      discardCard(handPos, currentPlayer, state, 0);
        -:  839:
        -:  840:      //discard trashed card
    #####:  841:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  842:	{
    #####:  843:	  if (state->hand[currentPlayer][i] == j)
        -:  844:	    {
    #####:  845:	      discardCard(i, currentPlayer, state, 0);
    #####:  846:	      break;
        -:  847:	    }
        -:  848:	}
        -:  849:
        -:  850:
    #####:  851:      return 0;
        -:  852:
        -:  853:    case smithy:
    #####:  854:      smithy_action (currentPlayer, state, i, handPos);
    #####:  855:      return 0;
        -:  856:
        -:  857:    case village:
    #####:  858:      village_action (currentPlayer, state, handPos);
    #####:  859:      return 0;
        -:  860:
        -:  861:    case baron:
    #####:  862:      state->numBuys++;//Increase buys by 1!
    #####:  863:      if (choice1 > 0){//Boolean true or going to discard an estate
    #####:  864:	int p = 0;//Iterator for hand!
    #####:  865:	int card_not_discarded = 1;//Flag for discard set!
    #####:  866:	while(card_not_discarded){
    #####:  867:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    #####:  868:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  869:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  870:	    state->discardCount[currentPlayer]++;
    #####:  871:	    for (;p < state->handCount[currentPlayer]; p++){
    #####:  872:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  873:	    }
    #####:  874:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  875:	    state->handCount[currentPlayer]--;
    #####:  876:	    card_not_discarded = 0;//Exit the loop
        -:  877:	  }
    #####:  878:	  else if (p > state->handCount[currentPlayer]){
        -:  879:	    if(DEBUG) {
        -:  880:	      printf("No estate cards in your hand, invalid choice\n");
        -:  881:	      printf("Must gain an estate if there are any\n");
        -:  882:	    }
    #####:  883:	    if (supplyCount(estate, state) > 0){
    #####:  884:	      gainCard(estate, state, 0, currentPlayer);
    #####:  885:	      state->supplyCount[estate]--;//Decrement estates
    #####:  886:	      if (supplyCount(estate, state) == 0){
    #####:  887:		isGameOver(state);
        -:  888:	      }
        -:  889:	    }
    #####:  890:	    card_not_discarded = 0;//Exit the loop
        -:  891:	  }
        -:  892:
        -:  893:	  else{
    #####:  894:	    p++;//Next card
        -:  895:	  }
        -:  896:	}
        -:  897:      }
        -:  898:
        -:  899:      else{
    #####:  900:	if (supplyCount(estate, state) > 0){
    #####:  901:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
    #####:  902:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  903:	  if (supplyCount(estate, state) == 0){
    #####:  904:	    isGameOver(state);
        -:  905:	  }
        -:  906:	}
        -:  907:      }
        -:  908:
        -:  909:
    #####:  910:      return 0;
        -:  911:
        -:  912:    case great_hall:
        -:  913:      //+1 Card
    #####:  914:      drawCard(currentPlayer, state);
        -:  915:
        -:  916:      //+1 Actions
    #####:  917:      state->numActions++;
        -:  918:
        -:  919:      //discard card from hand
    #####:  920:      discardCard(handPos, currentPlayer, state, 0);
    #####:  921:      return 0;
        -:  922:
        -:  923:    case minion:
        -:  924:      //+1 action
    #####:  925:      state->numActions++;
        -:  926:
        -:  927:      //discard card from hand
    #####:  928:      discardCard(handPos, currentPlayer, state, 0);
        -:  929:
    #####:  930:      if (choice1)		//+2 coins
        -:  931:	{
    #####:  932:	  state->coins = state->coins + 2;
        -:  933:	}
        -:  934:
    #####:  935:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
        -:  936:	{
        -:  937:	  //discard hand
    #####:  938:	  while(numHandCards(state) > 0)
        -:  939:	    {
    #####:  940:	      discardCard(handPos, currentPlayer, state, 0);
        -:  941:	    }
        -:  942:
        -:  943:	  //draw 4
    #####:  944:	  for (i = 0; i < 4; i++)
        -:  945:	    {
    #####:  946:	      drawCard(currentPlayer, state);
        -:  947:	    }
        -:  948:
        -:  949:	  //other players discard hand and redraw if hand size > 4
    #####:  950:	  for (i = 0; i < state->numPlayers; i++)
        -:  951:	    {
    #####:  952:	      if (i != currentPlayer)
        -:  953:		{
    #####:  954:		  if ( state->handCount[i] > 4 )
        -:  955:		    {
        -:  956:		      //discard hand
    #####:  957:		      while( state->handCount[i] > 0 )
        -:  958:			{
    #####:  959:			  discardCard(handPos, i, state, 0);
        -:  960:			}
        -:  961:
        -:  962:		      //draw 4
    #####:  963:		      for (j = 0; j < 4; j++)
        -:  964:			{
    #####:  965:			  drawCard(i, state);
        -:  966:			}
        -:  967:		    }
        -:  968:		}
        -:  969:	    }
        -:  970:
        -:  971:	}
    #####:  972:      return 0;
        -:  973:
        -:  974:    case steward:
    #####:  975:      if (choice1 == 1)
        -:  976:	{
        -:  977:	  //+2 cards
    #####:  978:	  drawCard(currentPlayer, state);
    #####:  979:	  drawCard(currentPlayer, state);
        -:  980:	}
    #####:  981:      else if (choice1 == 2)
        -:  982:	{
        -:  983:	  //+2 coins
    #####:  984:	  state->coins = state->coins + 2;
        -:  985:	}
        -:  986:      else
        -:  987:	{
        -:  988:	  //trash 2 cards in hand
    #####:  989:	  discardCard(choice2, currentPlayer, state, 1);
    #####:  990:	  discardCard(choice3, currentPlayer, state, 1);
        -:  991:	}
        -:  992:
        -:  993:      //discard card from hand
    #####:  994:      discardCard(handPos, currentPlayer, state, 0);
    #####:  995:      return 0;
        -:  996:
        -:  997:    case tribute:
    #####:  998:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    #####:  999:	if (state->deckCount[nextPlayer] > 0){
    #####: 1000:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1001:	  state->deckCount[nextPlayer]--;
        -: 1002:	}
    #####: 1003:	else if (state->discardCount[nextPlayer] > 0){
    #####: 1004:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1005:	  state->discardCount[nextPlayer]--;
        -: 1006:	}
        -: 1007:	else{
        -: 1008:	  //No Card to Reveal
        -: 1009:	  if (DEBUG){
        -: 1010:	    printf("No cards to reveal\n");
        -: 1011:	  }
        -: 1012:	}
        -: 1013:      }
        -: 1014:
        -: 1015:      else{
    #####: 1016:	if (state->deckCount[nextPlayer] == 0){
    #####: 1017:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    #####: 1018:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1019:	    state->deckCount[nextPlayer]++;
    #####: 1020:	    state->discard[nextPlayer][i] = -1;
    #####: 1021:	    state->discardCount[nextPlayer]--;
        -: 1022:	  }
        -: 1023:
    #####: 1024:	  shuffle(nextPlayer,state);//Shuffle the deck
        -: 1025:	}
    #####: 1026:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1027:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1028:	state->deckCount[nextPlayer]--;
    #####: 1029:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1030:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1031:	state->deckCount[nextPlayer]--;
        -: 1032:      }
        -: 1033:
    #####: 1034:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one
    #####: 1035:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1036:	state->playedCardCount++;
    #####: 1037:	tributeRevealedCards[1] = -1;
        -: 1038:      }
        -: 1039:
    #####: 1040:      for (i = 0; i <= 2; i ++){
    #####: 1041:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    #####: 1042:	  state->coins += 2;
        -: 1043:	}
        -: 1044:
    #####: 1045:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    #####: 1046:	  drawCard(currentPlayer, state);
    #####: 1047:	  drawCard(currentPlayer, state);
        -: 1048:	}
        -: 1049:	else{//Action Card
    #####: 1050:	  state->numActions = state->numActions + 2;
        -: 1051:	}
        -: 1052:      }
        -: 1053:
    #####: 1054:      return 0;
        -: 1055:
        -: 1056:    case ambassador:
    #####: 1057:      j = 0;		//used to check if player has enough cards to discard
        -: 1058:
    #####: 1059:      if (choice2 > 2 || choice2 < 0)
        -: 1060:	{
    #####: 1061:	  return -1;
        -: 1062:	}
        -: 1063:
    #####: 1064:      if (choice1 == handPos)
        -: 1065:	{
    #####: 1066:	  return -1;
        -: 1067:	}
        -: 1068:
    #####: 1069:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1070:	{
    #####: 1071:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
        -: 1072:	    {
    #####: 1073:	      j++;
        -: 1074:	    }
        -: 1075:	}
    #####: 1076:      if (j < choice2)
        -: 1077:	{
    #####: 1078:	  return -1;
        -: 1079:	}
        -: 1080:
        -: 1081:      if (DEBUG)
        -: 1082:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1083:
        -: 1084:      //increase supply count for choosen card by amount being discarded
    #####: 1085:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1086:
        -: 1087:      //each other player gains a copy of revealed card
    #####: 1088:      for (i = 0; i < state->numPlayers; i++)
        -: 1089:	{
    #####: 1090:	  if (i != currentPlayer)
        -: 1091:	    {
    #####: 1092:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
        -: 1093:	    }
        -: 1094:	}
        -: 1095:
        -: 1096:      //discard played card from hand
    #####: 1097:      discardCard(handPos, currentPlayer, state, 0);
        -: 1098:
        -: 1099:      //trash copies of cards returned to supply
    #####: 1100:      for (j = 0; j < choice2; j++)
        -: 1101:	{
    #####: 1102:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1103:	    {
    #####: 1104:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
        -: 1105:		{
    #####: 1106:		  discardCard(i, currentPlayer, state, 1);
    #####: 1107:		  break;
        -: 1108:		}
        -: 1109:	    }
        -: 1110:	}
        -: 1111:
    #####: 1112:      return 0;
        -: 1113:
        -: 1114:    case cutpurse:
        -: 1115:
    #####: 1116:      updateCoins(currentPlayer, state, 2);
    #####: 1117:      for (i = 0; i < state->numPlayers; i++)
        -: 1118:	{
    #####: 1119:	  if (i != currentPlayer)
        -: 1120:	    {
    #####: 1121:	      for (j = 0; j < state->handCount[i]; j++)
        -: 1122:		{
    #####: 1123:		  if (state->hand[i][j] == copper)
        -: 1124:		    {
    #####: 1125:		      discardCard(j, i, state, 0);
    #####: 1126:		      break;
        -: 1127:		    }
    #####: 1128:		  if (j == state->handCount[i])
        -: 1129:		    {
    #####: 1130:		      for (k = 0; k < state->handCount[i]; k++)
        -: 1131:			{
        -: 1132:			  if (DEBUG)
        -: 1133:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1134:			}
    #####: 1135:		      break;
        -: 1136:		    }
        -: 1137:		}
        -: 1138:
        -: 1139:	    }
        -: 1140:
        -: 1141:	}
        -: 1142:
        -: 1143:      //discard played card from hand
    #####: 1144:      discardCard(handPos, currentPlayer, state, 0);
        -: 1145:
    #####: 1146:      return 0;
        -: 1147:
        -: 1148:
        -: 1149:    case embargo:
        -: 1150:      //+2 Coins
    #####: 1151:      state->coins = state->coins + 2;
        -: 1152:
        -: 1153:      //see if selected pile is in play
    #####: 1154:      if ( state->supplyCount[choice1] == -1 )
        -: 1155:	{
    #####: 1156:	  return -1;
        -: 1157:	}
        -: 1158:
        -: 1159:      //add embargo token to selected supply pile
    #####: 1160:      state->embargoTokens[choice1]++;
        -: 1161:
        -: 1162:      //trash card
    #####: 1163:      discardCard(handPos, currentPlayer, state, 1);
    #####: 1164:      return 0;
        -: 1165:
        -: 1166:    case outpost:
        -: 1167:      //set outpost flag
    #####: 1168:      state->outpostPlayed++;
        -: 1169:
        -: 1170:      //discard card
    #####: 1171:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1172:      return 0;
        -: 1173:
        -: 1174:    case salvager:
        -: 1175:      //+1 buy
    #####: 1176:      state->numBuys++;
        -: 1177:
    #####: 1178:      if (choice1)
        -: 1179:	{
        -: 1180:	  //gain coins equal to trashed card
    #####: 1181:	  state->coins = state->coins + getCost( handCard(choice1, state) );
        -: 1182:	  //trash card
    #####: 1183:	  discardCard(choice1, currentPlayer, state, 1);
        -: 1184:	}
        -: 1185:
        -: 1186:      //discard card
    #####: 1187:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1188:      return 0;
        -: 1189:
        -: 1190:    case sea_hag:
    #####: 1191:      for (i = 0; i < state->numPlayers; i++){
    #####: 1192:	if (i != currentPlayer){
    #####: 1193:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1194:	  state->discardCount[i]++;
    #####: 1195:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1196:	}
        -: 1197:      }
    #####: 1198:      return 0;
        -: 1199:
        -: 1200:    case treasure_map:
        -: 1201:      //search hand for another treasure_map
    #####: 1202:      index = -1;
    #####: 1203:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1204:	{
    #####: 1205:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
        -: 1206:	    {
    #####: 1207:	      index = i;
    #####: 1208:	      break;
        -: 1209:	    }
        -: 1210:	}
    #####: 1211:      if (index > -1)
        -: 1212:	{
        -: 1213:	  //trash both treasure cards
    #####: 1214:	  discardCard(handPos, currentPlayer, state, 1);
    #####: 1215:	  discardCard(index, currentPlayer, state, 1);
        -: 1216:
        -: 1217:	  //gain 4 Gold cards
    #####: 1218:	  for (i = 0; i < 4; i++)
        -: 1219:	    {
    #####: 1220:	      gainCard(gold, state, 1, currentPlayer);
        -: 1221:	    }
        -: 1222:
        -: 1223:	  //return success
    #####: 1224:	  return 1;
        -: 1225:	}
        -: 1226:
        -: 1227:      //no second treasure_map found in hand
    #####: 1228:      return -1;
        -: 1229:    }
        -: 1230:
    #####: 1231:  return -1;
        -: 1232:}
        -: 1233:
    #####: 1234:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1235:{
        -: 1236:
        -: 1237:  //if card is not trashed, added to Played pile
    #####: 1238:  if (trashFlag < 1)
        -: 1239:    {
        -: 1240:      //add card to played pile
    #####: 1241:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos];
    #####: 1242:      state->playedCardCount++;
        -: 1243:    }
        -: 1244:
        -: 1245:  //set played card to -1
    #####: 1246:  state->hand[currentPlayer][handPos] = -1;
        -: 1247:
        -: 1248:  //remove card from player's hand
    #####: 1249:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
        -: 1250:    {
        -: 1251:      //reduce number of cards in hand
    #####: 1252:      state->handCount[currentPlayer]--;
        -: 1253:    }
    #####: 1254:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
        -: 1255:    {
        -: 1256:      //reduce number of cards in hand
    #####: 1257:      state->handCount[currentPlayer]--;
        -: 1258:    }
        -: 1259:  else
        -: 1260:    {
        -: 1261:      //replace discarded card with last card in hand
    #####: 1262:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1263:      //set last card to -1
    #####: 1264:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1265:      //reduce number of cards in hand
    #####: 1266:      state->handCount[currentPlayer]--;
        -: 1267:    }
        -: 1268:
    #####: 1269:  return 0;
        -: 1270:}
        -: 1271:
    #####: 1272:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1273:{
        -: 1274:  //Note: supplyPos is enum of choosen card
        -: 1275:
        -: 1276:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1277:  if ( supplyCount(supplyPos, state) < 1 )
        -: 1278:    {
    #####: 1279:      return -1;
        -: 1280:    }
        -: 1281:
        -: 1282:  //added card for [whoseTurn] current player:
        -: 1283:  // toFlag = 0 : add to discard
        -: 1284:  // toFlag = 1 : add to deck
        -: 1285:  // toFlag = 2 : add to hand
        -: 1286:
    #####: 1287:  if (toFlag == 1)
        -: 1288:    {
    #####: 1289:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1290:      state->deckCount[player]++;
        -: 1291:    }
    #####: 1292:  else if (toFlag == 2)
        -: 1293:    {
    #####: 1294:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1295:      state->handCount[player]++;
        -: 1296:    }
        -: 1297:  else
        -: 1298:    {
    #####: 1299:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1300:      state->discardCount[player]++;
        -: 1301:    }
        -: 1302:
        -: 1303:  //decrease number in supply pile
    #####: 1304:  state->supplyCount[supplyPos]--;
        -: 1305:
    #####: 1306:  return 0;
        -: 1307:}
        -: 1308:
        8: 1309:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1310:{
        -: 1311:  int i;
        -: 1312:
        -: 1313:  //reset coin count
        8: 1314:  state->coins = 0;
        -: 1315:
        -: 1316:  //add coins for each Treasure card in player's hand
        8: 1317:  for (i = 0; i < state->handCount[player]; i++)
        -: 1318:    {
    #####: 1319:      if (state->hand[player][i] == copper)
        -: 1320:	{
    #####: 1321:	  state->coins += 1;
        -: 1322:	}
    #####: 1323:      else if (state->hand[player][i] == silver)
        -: 1324:	{
    #####: 1325:	  state->coins += 2;
        -: 1326:	}
    #####: 1327:      else if (state->hand[player][i] == gold)
        -: 1328:	{
    #####: 1329:	  state->coins += 3;
        -: 1330:	}
        -: 1331:    }
        -: 1332:
        -: 1333:  //add bonus
        8: 1334:  state->coins += bonus;
        -: 1335:
        8: 1336:  return 0;
        -: 1337:}
        -: 1338:
        -: 1339:
        -: 1340://end of dominion.c
unittest4.c:
All tests passed! The expected number of cards and actual number always matched. 
File 'dominion.c'
Lines executed:8.73% of 561
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:4
        -:    0:Programs:4
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
    #####:    8:int compare(const void* a, const void* b) {
    #####:    9:  if (*(int*)a > *(int*)b)
    #####:   10:    return 1;
    #####:   11:  if (*(int*)a < *(int*)b)
    #####:   12:    return -1;
    #####:   13:  return 0;
        -:   14:}
        -:   15:
    #####:   16:struct gameState* newGame() {
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
        -:   19:}
        -:   20:
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
        -:   35:}
        -:   36:
    #####:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;
        -:   43:  //set up random number generator
    #####:   44:  SelectStream(1);
    #####:   45:  PutSeed((long)randomSeed);
        -:   46:
        -:   47:  //check number of players
    #####:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
    #####:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
    #####:   57:  for (i = 0; i < 10; i++)
        -:   58:    {
    #####:   59:      for (j = 0; j < 10; j++)
        -:   60:        {
    #####:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
    #####:   73:  if (numPlayers == 2)
        -:   74:    {
    #####:   75:      state->supplyCount[curse] = 10;
        -:   76:    }
    #####:   77:  else if (numPlayers == 3)
        -:   78:    {
    #####:   79:      state->supplyCount[curse] = 20;
        -:   80:    }
        -:   81:  else
        -:   82:    {
    #####:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
    #####:   87:  if (numPlayers == 2)
        -:   88:    {
    #####:   89:      state->supplyCount[estate] = 8;
    #####:   90:      state->supplyCount[duchy] = 8;
    #####:   91:      state->supplyCount[province] = 8;
        -:   92:    }
        -:   93:  else
        -:   94:    {
    #####:   95:      state->supplyCount[estate] = 12;
    #####:   96:      state->supplyCount[duchy] = 12;
    #####:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
    #####:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
    #####:  102:  state->supplyCount[silver] = 40;
    #####:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
    #####:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
        -:  107:    {
    #####:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
        -:  109:	{
    #####:  110:	  if (kingdomCards[j] == i)
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
    #####:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
        -:  114:		{
    #####:  115:		  if (numPlayers == 2){
    #####:  116:		    state->supplyCount[i] = 8;
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
        -:  119:		}
        -:  120:	      else
        -:  121:		{
    #####:  122:		  state->supplyCount[i] = 10;
        -:  123:		}
    #####:  124:	      break;
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
    #####:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
    #####:  138:  for (i = 0; i < numPlayers; i++)
        -:  139:    {
    #####:  140:      state->deckCount[i] = 0;
    #####:  141:      for (j = 0; j < 3; j++)
        -:  142:	{
    #####:  143:	  state->deck[i][j] = estate;
    #####:  144:	  state->deckCount[i]++;
        -:  145:	}
    #####:  146:      for (j = 3; j < 10; j++)
        -:  147:	{
    #####:  148:	  state->deck[i][j] = copper;
    #####:  149:	  state->deckCount[i]++;
        -:  150:	}
        -:  151:    }
        -:  152:
        -:  153:  //shuffle player decks
    #####:  154:  for (i = 0; i < numPlayers; i++)
        -:  155:    {
    #####:  156:      if ( shuffle(i, state) < 0 )
        -:  157:	{
    #####:  158:	  return -1;
        -:  159:	}
        -:  160:    }
        -:  161:
        -:  162:  //draw player hands
    #####:  163:  for (i = 0; i < numPlayers; i++)
        -:  164:    {
        -:  165:      //initialize hand size to zero
    #####:  166:      state->handCount[i] = 0;
    #####:  167:      state->discardCount[i] = 0;
        -:  168:      //draw 5 cards
        -:  169:      // for (j = 0; j < 5; j++)
        -:  170:      //	{
        -:  171:      //	  drawCard(i, state);
        -:  172:      //	}
        -:  173:    }
        -:  174:
        -:  175:  //set embargo tokens to 0 for all supply piles
    #####:  176:  for (i = 0; i <= treasure_map; i++)
        -:  177:    {
    #####:  178:      state->embargoTokens[i] = 0;
        -:  179:    }
        -:  180:
        -:  181:  //initialize first player's turn
    #####:  182:  state->outpostPlayed = 0;
    #####:  183:  state->phase = 0;
    #####:  184:  state->numActions = 1;
    #####:  185:  state->numBuys = 1;
    #####:  186:  state->playedCardCount = 0;
    #####:  187:  state->whoseTurn = 0;
    #####:  188:  state->handCount[state->whoseTurn] = 0;
        -:  189:  //int it; move to top
        -:  190:
        -:  191:  //Moved draw cards to here, only drawing at the start of a turn
    #####:  192:  for (it = 0; it < 5; it++){
    #####:  193:    drawCard(state->whoseTurn, state);
        -:  194:  }
        -:  195:
    #####:  196:  updateCoins(state->whoseTurn, state, 0);
        -:  197:
    #####:  198:  return 0;
        -:  199:}
        -:  200:
    #####:  201:int shuffle(int player, struct gameState *state) {
        -:  202:
        -:  203:
        -:  204:  int newDeck[MAX_DECK];
    #####:  205:  int newDeckPos = 0;
        -:  206:  int card;
        -:  207:  int i;
        -:  208:
    #####:  209:  if (state->deckCount[player] < 1)
    #####:  210:    return -1;
    #####:  211:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare);
        -:  212:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  213:
    #####:  214:  while (state->deckCount[player] > 0) {
    #####:  215:    card = floor(Random() * state->deckCount[player]);
    #####:  216:    newDeck[newDeckPos] = state->deck[player][card];
    #####:  217:    newDeckPos++;
    #####:  218:    for (i = card; i < state->deckCount[player]-1; i++) {
    #####:  219:      state->deck[player][i] = state->deck[player][i+1];
        -:  220:    }
    #####:  221:    state->deckCount[player]--;
        -:  222:  }
    #####:  223:  for (i = 0; i < newDeckPos; i++) {
    #####:  224:    state->deck[player][i] = newDeck[i];
    #####:  225:    state->deckCount[player]++;
        -:  226:  }
        -:  227:
    #####:  228:  return 0;
        -:  229:}
        -:  230:
    #####:  231:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state)
        -:  232:{
        -:  233:  int card;
    #####:  234:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  235:
        -:  236:  //check if it is the right phase
    #####:  237:  if (state->phase != 0)
        -:  238:    {
    #####:  239:      return -1;
        -:  240:    }
        -:  241:
        -:  242:  //check if player has enough actions
    #####:  243:  if ( state->numActions < 1 )
        -:  244:    {
    #####:  245:      return -1;
        -:  246:    }
        -:  247:
        -:  248:  //get card played
    #####:  249:  card = handCard(handPos, state);
        -:  250:
        -:  251:  //check if selected card is an action
    #####:  252:  if ( card < adventurer || card > treasure_map )
        -:  253:    {
    #####:  254:      return -1;
        -:  255:    }
        -:  256:
        -:  257:  //play card
    #####:  258:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
        -:  259:    {
    #####:  260:      return -1;
        -:  261:    }
        -:  262:
        -:  263:  //reduce number of actions
    #####:  264:  state->numActions--;
        -:  265:
        -:  266:  //update coins (Treasure cards may be added with card draws)
    #####:  267:  updateCoins(state->whoseTurn, state, coin_bonus);
        -:  268:
    #####:  269:  return 0;
        -:  270:}
        -:  271:
    #####:  272:int buyCard(int supplyPos, struct gameState *state) {
        -:  273:  int who;
        -:  274:  if (DEBUG){
        -:  275:    printf("Entering buyCard...\n");
        -:  276:  }
        -:  277:
        -:  278:  // I don't know what to do about the phase thing.
        -:  279:
    #####:  280:  who = state->whoseTurn;
        -:  281:
    #####:  282:  if (state->numBuys < 1){
        -:  283:    if (DEBUG)
        -:  284:      printf("You do not have any buys left\n");
    #####:  285:    return -1;
    #####:  286:  } else if (supplyCount(supplyPos, state) <1){
        -:  287:    if (DEBUG)
        -:  288:      printf("There are not any of that type of card left\n");
    #####:  289:    return -1;
    #####:  290:  } else if (state->coins < getCost(supplyPos)){
        -:  291:    if (DEBUG)
        -:  292:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  293:    return -1;
        -:  294:  } else {
    #####:  295:    state->phase=1;
        -:  296:    //state->supplyCount[supplyPos]--;
    #####:  297:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  298:
    #####:  299:    state->coins = (state->coins) - (getCost(supplyPos));
    #####:  300:    state->numBuys--;
        -:  301:    if (DEBUG)
        -:  302:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  303:  }
        -:  304:
        -:  305:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  306:  //state->discardCount[who]++;
        -:  307:
    #####:  308:  return 0;
        -:  309:}
        -:  310:
       12:  311:int numHandCards(struct gameState *state) {
       12:  312:  return state->handCount[ whoseTurn(state) ];
        -:  313:}
        -:  314:
    #####:  315:int handCard(int handPos, struct gameState *state) {
    #####:  316:  int currentPlayer = whoseTurn(state);
    #####:  317:  return state->hand[currentPlayer][handPos];
        -:  318:}
        -:  319:
    #####:  320:int supplyCount(int card, struct gameState *state) {
    #####:  321:  return state->supplyCount[card];
        -:  322:}
        -:  323:
    #####:  324:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  325:  int i;
    #####:  326:  int count = 0;
        -:  327:
    #####:  328:  for (i = 0; i < state->deckCount[player]; i++)
        -:  329:    {
    #####:  330:      if (state->deck[player][i] == card) count++;
        -:  331:    }
        -:  332:
    #####:  333:  for (i = 0; i < state->handCount[player]; i++)
        -:  334:    {
    #####:  335:      if (state->hand[player][i] == card) count++;
        -:  336:    }
        -:  337:
    #####:  338:  for (i = 0; i < state->discardCount[player]; i++)
        -:  339:    {
    #####:  340:      if (state->discard[player][i] == card) count++;
        -:  341:    }
        -:  342:
    #####:  343:  return count;
        -:  344:}
        -:  345:
       12:  346:int whoseTurn(struct gameState *state) {
       12:  347:  return state->whoseTurn;
        -:  348:}
        -:  349:
    #####:  350:int endTurn(struct gameState *state) {
        -:  351:  int k;
        -:  352:  int i;
    #####:  353:  int currentPlayer = whoseTurn(state);
        -:  354:
        -:  355:  //Discard hand
    #####:  356:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    #####:  357:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  358:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  359:  }
    #####:  360:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  361:
        -:  362:  //Code for determining the player
    #####:  363:  if (currentPlayer < (state->numPlayers - 1)){
    #####:  364:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  365:  }
        -:  366:  else{
    #####:  367:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  368:  }
        -:  369:
    #####:  370:  state->outpostPlayed = 0;
    #####:  371:  state->phase = 0;
    #####:  372:  state->numActions = 1;
    #####:  373:  state->coins = 0;
    #####:  374:  state->numBuys = 1;
    #####:  375:  state->playedCardCount = 0;
    #####:  376:  state->handCount[state->whoseTurn] = 0;
        -:  377:
        -:  378:  //int k; move to top
        -:  379:  //Next player draws hand
    #####:  380:  for (k = 0; k < 5; k++){
    #####:  381:    drawCard(state->whoseTurn, state);//Draw a card
        -:  382:  }
        -:  383:
        -:  384:  //Update money
    #####:  385:  updateCoins(state->whoseTurn, state , 0);
        -:  386:
    #####:  387:  return 0;
        -:  388:}
        -:  389:
     1002:  390:int isGameOver(struct gameState *state) {
        -:  391:  int i;
        -:  392:  int j;
        -:  393:
        -:  394:  //if stack of Province cards is empty, the game ends
     1002:  395:  if (state->supplyCount[province] == 0)
        -:  396:    {
      109:  397:      return 1;
        -:  398:    }
        -:  399:
        -:  400:  //if three supply pile are at 0, the game ends
      893:  401:  j = 0;
    23218:  402:  for (i = 0; i < 25; i++)
        -:  403:    {
    22325:  404:      if (state->supplyCount[i] == 0)
        -:  405:	{
     2676:  406:	  j++;
        -:  407:	}
        -:  408:    }
      893:  409:  if ( j >= 3)
        -:  410:    {
      892:  411:      return 1;
        -:  412:    }
        -:  413:
        1:  414:  return 0;
        -:  415:}
        -:  416:
    #####:  417:int scoreFor (int player, struct gameState *state) {
        -:  418:
        -:  419:  int i;
    #####:  420:  int score = 0;
        -:  421:  //score from hand
    #####:  422:  for (i = 0; i < state->handCount[player]; i++)
        -:  423:    {
    #####:  424:      if (state->hand[player][i] == curse) { score = score - 1; };
    #####:  425:      if (state->hand[player][i] == estate) { score = score + 1; };
    #####:  426:      if (state->hand[player][i] == duchy) { score = score + 3; };
    #####:  427:      if (state->hand[player][i] == province) { score = score + 6; };
    #####:  428:      if (state->hand[player][i] == great_hall) { score = score + 1; };
    #####:  429:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  430:    }
        -:  431:
        -:  432:  //score from discard
    #####:  433:  for (i = 0; i < state->discardCount[player]; i++)
        -:  434:    {
    #####:  435:      if (state->discard[player][i] == curse) { score = score - 1; };
    #####:  436:      if (state->discard[player][i] == estate) { score = score + 1; };
    #####:  437:      if (state->discard[player][i] == duchy) { score = score + 3; };
    #####:  438:      if (state->discard[player][i] == province) { score = score + 6; };
    #####:  439:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    #####:  440:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  441:    }
        -:  442:
        -:  443:  //score from deck
    #####:  444:  for (i = 0; i < state->discardCount[player]; i++)
        -:  445:    {
    #####:  446:      if (state->deck[player][i] == curse) { score = score - 1; };
    #####:  447:      if (state->deck[player][i] == estate) { score = score + 1; };
    #####:  448:      if (state->deck[player][i] == duchy) { score = score + 3; };
    #####:  449:      if (state->deck[player][i] == province) { score = score + 6; };
    #####:  450:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    #####:  451:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  452:    }
        -:  453:
    #####:  454:  return score;
        -:  455:}
        -:  456:
    #####:  457:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  458:  int i;
        -:  459:  int j;
        -:  460:  int highScore;
        -:  461:  int currentPlayer;
        -:  462:
        -:  463:  //get score for each player
    #####:  464:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  465:    {
        -:  466:      //set unused player scores to -9999
    #####:  467:      if (i >= state->numPlayers)
        -:  468:	{
    #####:  469:	  players[i] = -9999;
        -:  470:	}
        -:  471:      else
        -:  472:	{
    #####:  473:	  players[i] = scoreFor (i, state);
        -:  474:	}
        -:  475:    }
        -:  476:
        -:  477:  //find highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  480:    {
    #####:  481:      if (players[i] > players[j])
        -:  482:	{
    #####:  483:	  j = i;
        -:  484:	}
        -:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //add 1 to players who had less turns
    #####:  489:  currentPlayer = whoseTurn(state);
    #####:  490:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  491:    {
    #####:  492:      if ( players[i] == highScore && i > currentPlayer )
        -:  493:	{
    #####:  494:	  players[i]++;
        -:  495:	}
        -:  496:    }
        -:  497:
        -:  498:  //find new highest score
    #####:  499:  j = 0;
    #####:  500:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  501:    {
    #####:  502:      if ( players[i] > players[j] )
        -:  503:	{
    #####:  504:	  j = i;
        -:  505:	}
        -:  506:    }
    #####:  507:  highScore = players[j];
        -:  508:
        -:  509:  //set winners in array to 1 and rest to 0
    #####:  510:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  511:    {
    #####:  512:      if ( players[i] == highScore )
        -:  513:	{
    #####:  514:	  players[i] = 1;
        -:  515:	}
        -:  516:      else
        -:  517:	{
    #####:  518:	  players[i] = 0;
        -:  519:	}
        -:  520:    }
        -:  521:
    #####:  522:  return 0;
        -:  523:}
        -:  524:
    #####:  525:int drawCard(int player, struct gameState *state)
        -:  526:{	int count;
        -:  527:  int deckCounter;
    #####:  528:  if (state->deckCount[player] <= 0){//Deck is empty
        -:  529:
        -:  530:    //Step 1 Shuffle the discard pile back into a deck
        -:  531:    int i;
        -:  532:    //Move discard to deck
    #####:  533:    for (i = 0; i < state->discardCount[player];i++){
    #####:  534:      state->deck[player][i] = state->discard[player][i];
    #####:  535:      state->discard[player][i] = -1;
        -:  536:    }
        -:  537:
    #####:  538:    state->deckCount[player] = state->discardCount[player];
    #####:  539:    state->discardCount[player] = 0;//Reset discard
        -:  540:
        -:  541:    //Shufffle the deck
    #####:  542:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
        -:  543:
        -:  544:    if (DEBUG){//Debug statements
        -:  545:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  546:    }
        -:  547:
    #####:  548:    state->discardCount[player] = 0;
        -:  549:
        -:  550:    //Step 2 Draw Card
    #####:  551:    count = state->handCount[player];//Get current player's hand count
        -:  552:
        -:  553:    if (DEBUG){//Debug statements
        -:  554:      printf("Current hand count: %d\n", count);
        -:  555:    }
        -:  556:
    #####:  557:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  558:
    #####:  559:    if (deckCounter == 0)
    #####:  560:      return -1;
        -:  561:
    #####:  562:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    #####:  563:    state->deckCount[player]--;
    #####:  564:    state->handCount[player]++;//Increment hand count
        -:  565:  }
        -:  566:
        -:  567:  else{
    #####:  568:    int count = state->handCount[player];//Get current hand count for player
        -:  569:    int deckCounter;
        -:  570:    if (DEBUG){//Debug statements
        -:  571:      printf("Current hand count: %d\n", count);
        -:  572:    }
        -:  573:
    #####:  574:    deckCounter = state->deckCount[player];//Create holder for the deck count
    #####:  575:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
    #####:  576:    state->deckCount[player]--;
    #####:  577:    state->handCount[player]++;//Increment hand count
        -:  578:  }
        -:  579:
    #####:  580:  return 0;
        -:  581:}
        -:  582:
       35:  583:int getCost(int cardNumber)
        -:  584:{
       35:  585:  switch( cardNumber )
        -:  586:    {
        -:  587:    case curse:
        1:  588:      return 0;
        -:  589:    case estate:
        1:  590:      return 2;
        -:  591:    case duchy:
        1:  592:      return 5;
        -:  593:    case province:
        1:  594:      return 8;
        -:  595:    case copper:
        1:  596:      return 0;
        -:  597:    case silver:
        1:  598:      return 3;
        -:  599:    case gold:
        1:  600:      return 6;
        -:  601:    case adventurer:
        1:  602:      return 6;
        -:  603:    case council_room:
        1:  604:      return 5;
        -:  605:    case feast:
        1:  606:      return 4;
        -:  607:    case gardens:
        1:  608:      return 4;
        -:  609:    case mine:
        1:  610:      return 5;
        -:  611:    case remodel:
        1:  612:      return 4;
        -:  613:    case smithy:
        1:  614:      return 4;
        -:  615:    case village:
        1:  616:      return 3;
        -:  617:    case baron:
        1:  618:      return 4;
        -:  619:    case great_hall:
        1:  620:      return 3;
        -:  621:    case minion:
        1:  622:      return 5;
        -:  623:    case steward:
        1:  624:      return 3;
        -:  625:    case tribute:
        1:  626:      return 5;
        -:  627:    case ambassador:
        1:  628:      return 3;
        -:  629:    case cutpurse:
        1:  630:      return 4;
        -:  631:    case embargo:
        1:  632:      return 2;
        -:  633:    case outpost:
        1:  634:      return 5;
        -:  635:    case salvager:
        1:  636:      return 4;
        -:  637:    case sea_hag:
        1:  638:      return 4;
        -:  639:    case treasure_map:
        1:  640:      return 4;
        -:  641:    }
        -:  642:
        8:  643:  return -1;
        -:  644:}
        -:  645:
    #####:  646:void adventurer_action (int drawntreasure, struct gameState *state, int currentPlayer, int cardDrawn, int temphand[MAX_HAND], int z) {
    #####:  647:    while(drawntreasure<2){
    #####:  648:        if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
    #####:  649:            shuffle(currentPlayer, state);
        -:  650:        }
    #####:  651:        drawCard(currentPlayer, state);
    #####:  652:        cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
    #####:  653:        if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
    #####:  654:          drawntreasure++;
        -:  655:        else{
    #####:  656:          temphand[z]=cardDrawn;
    #####:  657:          state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
        -:  658:        }
        -:  659:  }
    #####:  660:  while(z-1>=0){
    #####:  661:      state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    #####:  662:      z=z-1;
        -:  663:  }
    #####:  664:}
        -:  665:
    #####:  666:void smithy_action (int currentPlayer, struct gameState *state, int i, int handPos) {
        -:  667:  //+3 Cards
    #####:  668:  for (i = 0; i < 3; i++) {
    #####:  669:    drawCard(currentPlayer, state);
        -:  670:  }
        -:  671:
        -:  672:  //discard card from hand
    #####:  673:  discardCard(handPos, currentPlayer, state, 0);
    #####:  674:}
        -:  675:
    #####:  676:void village_action (int currentPlayer, struct gameState *state, int handPos) {
        -:  677:  //+1 Card
    #####:  678:  drawCard(currentPlayer, state);
        -:  679:
        -:  680:  //+2 Actions
    #####:  681:  state->numActions = state->numActions + 2;
        -:  682:
        -:  683:  //discard played card from hand
    #####:  684:  discardCard(handPos, currentPlayer, state, 0);
    #####:  685:}
        -:  686:
    #####:  687:void council_room_action (int i, int currentPlayer, struct gameState *state) {
        -:  688:  //+4 Cards
    #####:  689:  for (i = 0; i < 4; i++) {
    #####:  690:      drawCard(currentPlayer, state);
        -:  691:  }
        -:  692:
        -:  693:  //+1 Buy
    #####:  694:  state->numBuys++;
        -:  695:
        -:  696:  //Each other player draws a card
    #####:  697:  for (i = 0; i < state->numPlayers; i++) {
    #####:  698:      if ( i == currentPlayer ) {
    #####:  699:          drawCard(i, state);
        -:  700:      }
        -:  701:  }
    #####:  702:}
        -:  703:
    #####:  704:int mine_action (int j, struct gameState *state, int currentPlayer, int choice1, int choice2, int handPos, int i) {
    #####:  705:  j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  706:
    #####:  707:  if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold) {
    #####:  708:      return -1;
        -:  709:  }
        -:  710:
    #####:  711:  if (choice2 > treasure_map || choice2 < curse) {
    #####:  712:      return -1;
        -:  713:  }
        -:  714:
    #####:  715:  if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) ) {
    #####:  716:      return -1;
        -:  717:  }
        -:  718:
    #####:  719:  gainCard(choice2, state, 2, currentPlayer);
        -:  720:
        -:  721:  //discard card from hand
    #####:  722:  discardCard(handPos, currentPlayer, state, 0);
        -:  723:
        -:  724:  //discard trashed card
    #####:  725:  for (i = 0; i < state->handCount[currentPlayer]; i++) {
    #####:  726:      if (state->hand[currentPlayer][i] == j) {
    #####:  727:        discardCard(i, currentPlayer, state, 0);
    #####:  728:        break;
        -:  729:      }
        -:  730:  }
        -:  731:
    #####:  732:  return -1;
        -:  733:}
        -:  734:
    #####:  735:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  736:{
        -:  737:  int i;
        -:  738:  int j;
        -:  739:  int k;
        -:  740:  int x;
        -:  741:  int m;
        -:  742:  int index;
    #####:  743:  int currentPlayer = whoseTurn(state);
    #####:  744:  int nextPlayer = currentPlayer + 1;
        -:  745:
    #####:  746:  int tributeRevealedCards[2] = {-1, -1};
        -:  747:  int temphand[MAX_HAND];// moved above the if statement
    #####:  748:  int drawntreasure=0;
        -:  749:  int cardDrawn;
    #####:  750:  int z = 0;// this is the counter for the temp hand
    #####:  751:  if (nextPlayer > (state->numPlayers - 1)){
    #####:  752:    nextPlayer = 0;
        -:  753:  }
        -:  754:
        -:  755:
        -:  756:  //uses switch to select card and perform actions
    #####:  757:  switch( card )
        -:  758:    {
        -:  759:    case adventurer:
    #####:  760:      adventurer_action (drawntreasure, state, currentPlayer, cardDrawn, temphand, z);
    #####:  761:      return 0;
        -:  762:
        -:  763:    case council_room:
    #####:  764:      council_room_action (i, currentPlayer, state);
    #####:  765:      return 0;
        -:  766:
        -:  767:    case feast:
        -:  768:      //gain card with cost up to 5
        -:  769:      //Backup hand
    #####:  770:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  771:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  772:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  773:      }
        -:  774:      //Backup hand
        -:  775:
        -:  776:      //Update Coins for Buy
    #####:  777:      updateCoins(currentPlayer, state, 5);
    #####:  778:      x = 1;//Condition to loop on
    #####:  779:      while( x == 1) {//Buy one card
    #####:  780:	if (supplyCount(choice1, state) <= 0){
        -:  781:	  if (DEBUG)
        -:  782:	    printf("None of that card left, sorry!\n");
        -:  783:
        -:  784:	  if (DEBUG){
        -:  785:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  786:	  }
        -:  787:	}
    #####:  788:	else if (state->coins < getCost(choice1)){
    #####:  789:	  printf("That card is too expensive!\n");
        -:  790:
        -:  791:	  if (DEBUG){
        -:  792:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  793:	  }
        -:  794:	}
        -:  795:	else{
        -:  796:
        -:  797:	  if (DEBUG){
        -:  798:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  799:	  }
        -:  800:
    #####:  801:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    #####:  802:	  x = 0;//No more buying cards
        -:  803:
        -:  804:	  if (DEBUG){
        -:  805:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  806:	  }
        -:  807:
        -:  808:	}
        -:  809:      }
        -:  810:
        -:  811:      //Reset Hand
    #####:  812:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  813:	state->hand[currentPlayer][i] = temphand[i];
    #####:  814:	temphand[i] = -1;
        -:  815:      }
        -:  816:      //Reset Hand
        -:  817:
    #####:  818:      return 0;
        -:  819:
        -:  820:    case gardens:
    #####:  821:      return -1;
        -:  822:
        -:  823:    case mine:
    #####:  824:      m = mine_action (j, state, currentPlayer, choice1, choice2, handPos, i);
    #####:  825:      return m;
        -:  826:
        -:  827:    case remodel:
    #####:  828:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  829:
    #####:  830:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
        -:  831:	{
    #####:  832:	  return -1;
        -:  833:	}
        -:  834:
    #####:  835:      gainCard(choice2, state, 0, currentPlayer);
        -:  836:
        -:  837:      //discard card from hand
    #####:  838:      discardCard(handPos, currentPlayer, state, 0);
        -:  839:
        -:  840:      //discard trashed card
    #####:  841:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  842:	{
    #####:  843:	  if (state->hand[currentPlayer][i] == j)
        -:  844:	    {
    #####:  845:	      discardCard(i, currentPlayer, state, 0);
    #####:  846:	      break;
        -:  847:	    }
        -:  848:	}
        -:  849:
        -:  850:
    #####:  851:      return 0;
        -:  852:
        -:  853:    case smithy:
    #####:  854:      smithy_action (currentPlayer, state, i, handPos);
    #####:  855:      return 0;
        -:  856:
        -:  857:    case village:
    #####:  858:      village_action (currentPlayer, state, handPos);
    #####:  859:      return 0;
        -:  860:
        -:  861:    case baron:
    #####:  862:      state->numBuys++;//Increase buys by 1!
    #####:  863:      if (choice1 > 0){//Boolean true or going to discard an estate
    #####:  864:	int p = 0;//Iterator for hand!
    #####:  865:	int card_not_discarded = 1;//Flag for discard set!
    #####:  866:	while(card_not_discarded){
    #####:  867:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    #####:  868:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  869:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  870:	    state->discardCount[currentPlayer]++;
    #####:  871:	    for (;p < state->handCount[currentPlayer]; p++){
    #####:  872:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  873:	    }
    #####:  874:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  875:	    state->handCount[currentPlayer]--;
    #####:  876:	    card_not_discarded = 0;//Exit the loop
        -:  877:	  }
    #####:  878:	  else if (p > state->handCount[currentPlayer]){
        -:  879:	    if(DEBUG) {
        -:  880:	      printf("No estate cards in your hand, invalid choice\n");
        -:  881:	      printf("Must gain an estate if there are any\n");
        -:  882:	    }
    #####:  883:	    if (supplyCount(estate, state) > 0){
    #####:  884:	      gainCard(estate, state, 0, currentPlayer);
    #####:  885:	      state->supplyCount[estate]--;//Decrement estates
    #####:  886:	      if (supplyCount(estate, state) == 0){
    #####:  887:		isGameOver(state);
        -:  888:	      }
        -:  889:	    }
    #####:  890:	    card_not_discarded = 0;//Exit the loop
        -:  891:	  }
        -:  892:
        -:  893:	  else{
    #####:  894:	    p++;//Next card
        -:  895:	  }
        -:  896:	}
        -:  897:      }
        -:  898:
        -:  899:      else{
    #####:  900:	if (supplyCount(estate, state) > 0){
    #####:  901:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
    #####:  902:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  903:	  if (supplyCount(estate, state) == 0){
    #####:  904:	    isGameOver(state);
        -:  905:	  }
        -:  906:	}
        -:  907:      }
        -:  908:
        -:  909:
    #####:  910:      return 0;
        -:  911:
        -:  912:    case great_hall:
        -:  913:      //+1 Card
    #####:  914:      drawCard(currentPlayer, state);
        -:  915:
        -:  916:      //+1 Actions
    #####:  917:      state->numActions++;
        -:  918:
        -:  919:      //discard card from hand
    #####:  920:      discardCard(handPos, currentPlayer, state, 0);
    #####:  921:      return 0;
        -:  922:
        -:  923:    case minion:
        -:  924:      //+1 action
    #####:  925:      state->numActions++;
        -:  926:
        -:  927:      //discard card from hand
    #####:  928:      discardCard(handPos, currentPlayer, state, 0);
        -:  929:
    #####:  930:      if (choice1)		//+2 coins
        -:  931:	{
    #####:  932:	  state->coins = state->coins + 2;
        -:  933:	}
        -:  934:
    #####:  935:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
        -:  936:	{
        -:  937:	  //discard hand
    #####:  938:	  while(numHandCards(state) > 0)
        -:  939:	    {
    #####:  940:	      discardCard(handPos, currentPlayer, state, 0);
        -:  941:	    }
        -:  942:
        -:  943:	  //draw 4
    #####:  944:	  for (i = 0; i < 4; i++)
        -:  945:	    {
    #####:  946:	      drawCard(currentPlayer, state);
        -:  947:	    }
        -:  948:
        -:  949:	  //other players discard hand and redraw if hand size > 4
    #####:  950:	  for (i = 0; i < state->numPlayers; i++)
        -:  951:	    {
    #####:  952:	      if (i != currentPlayer)
        -:  953:		{
    #####:  954:		  if ( state->handCount[i] > 4 )
        -:  955:		    {
        -:  956:		      //discard hand
    #####:  957:		      while( state->handCount[i] > 0 )
        -:  958:			{
    #####:  959:			  discardCard(handPos, i, state, 0);
        -:  960:			}
        -:  961:
        -:  962:		      //draw 4
    #####:  963:		      for (j = 0; j < 4; j++)
        -:  964:			{
    #####:  965:			  drawCard(i, state);
        -:  966:			}
        -:  967:		    }
        -:  968:		}
        -:  969:	    }
        -:  970:
        -:  971:	}
    #####:  972:      return 0;
        -:  973:
        -:  974:    case steward:
    #####:  975:      if (choice1 == 1)
        -:  976:	{
        -:  977:	  //+2 cards
    #####:  978:	  drawCard(currentPlayer, state);
    #####:  979:	  drawCard(currentPlayer, state);
        -:  980:	}
    #####:  981:      else if (choice1 == 2)
        -:  982:	{
        -:  983:	  //+2 coins
    #####:  984:	  state->coins = state->coins + 2;
        -:  985:	}
        -:  986:      else
        -:  987:	{
        -:  988:	  //trash 2 cards in hand
    #####:  989:	  discardCard(choice2, currentPlayer, state, 1);
    #####:  990:	  discardCard(choice3, currentPlayer, state, 1);
        -:  991:	}
        -:  992:
        -:  993:      //discard card from hand
    #####:  994:      discardCard(handPos, currentPlayer, state, 0);
    #####:  995:      return 0;
        -:  996:
        -:  997:    case tribute:
    #####:  998:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    #####:  999:	if (state->deckCount[nextPlayer] > 0){
    #####: 1000:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1001:	  state->deckCount[nextPlayer]--;
        -: 1002:	}
    #####: 1003:	else if (state->discardCount[nextPlayer] > 0){
    #####: 1004:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1005:	  state->discardCount[nextPlayer]--;
        -: 1006:	}
        -: 1007:	else{
        -: 1008:	  //No Card to Reveal
        -: 1009:	  if (DEBUG){
        -: 1010:	    printf("No cards to reveal\n");
        -: 1011:	  }
        -: 1012:	}
        -: 1013:      }
        -: 1014:
        -: 1015:      else{
    #####: 1016:	if (state->deckCount[nextPlayer] == 0){
    #####: 1017:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    #####: 1018:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1019:	    state->deckCount[nextPlayer]++;
    #####: 1020:	    state->discard[nextPlayer][i] = -1;
    #####: 1021:	    state->discardCount[nextPlayer]--;
        -: 1022:	  }
        -: 1023:
    #####: 1024:	  shuffle(nextPlayer,state);//Shuffle the deck
        -: 1025:	}
    #####: 1026:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1027:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1028:	state->deckCount[nextPlayer]--;
    #####: 1029:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1030:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1031:	state->deckCount[nextPlayer]--;
        -: 1032:      }
        -: 1033:
    #####: 1034:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one
    #####: 1035:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1036:	state->playedCardCount++;
    #####: 1037:	tributeRevealedCards[1] = -1;
        -: 1038:      }
        -: 1039:
    #####: 1040:      for (i = 0; i <= 2; i ++){
    #####: 1041:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    #####: 1042:	  state->coins += 2;
        -: 1043:	}
        -: 1044:
    #####: 1045:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    #####: 1046:	  drawCard(currentPlayer, state);
    #####: 1047:	  drawCard(currentPlayer, state);
        -: 1048:	}
        -: 1049:	else{//Action Card
    #####: 1050:	  state->numActions = state->numActions + 2;
        -: 1051:	}
        -: 1052:      }
        -: 1053:
    #####: 1054:      return 0;
        -: 1055:
        -: 1056:    case ambassador:
    #####: 1057:      j = 0;		//used to check if player has enough cards to discard
        -: 1058:
    #####: 1059:      if (choice2 > 2 || choice2 < 0)
        -: 1060:	{
    #####: 1061:	  return -1;
        -: 1062:	}
        -: 1063:
    #####: 1064:      if (choice1 == handPos)
        -: 1065:	{
    #####: 1066:	  return -1;
        -: 1067:	}
        -: 1068:
    #####: 1069:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1070:	{
    #####: 1071:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
        -: 1072:	    {
    #####: 1073:	      j++;
        -: 1074:	    }
        -: 1075:	}
    #####: 1076:      if (j < choice2)
        -: 1077:	{
    #####: 1078:	  return -1;
        -: 1079:	}
        -: 1080:
        -: 1081:      if (DEBUG)
        -: 1082:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1083:
        -: 1084:      //increase supply count for choosen card by amount being discarded
    #####: 1085:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1086:
        -: 1087:      //each other player gains a copy of revealed card
    #####: 1088:      for (i = 0; i < state->numPlayers; i++)
        -: 1089:	{
    #####: 1090:	  if (i != currentPlayer)
        -: 1091:	    {
    #####: 1092:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
        -: 1093:	    }
        -: 1094:	}
        -: 1095:
        -: 1096:      //discard played card from hand
    #####: 1097:      discardCard(handPos, currentPlayer, state, 0);
        -: 1098:
        -: 1099:      //trash copies of cards returned to supply
    #####: 1100:      for (j = 0; j < choice2; j++)
        -: 1101:	{
    #####: 1102:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1103:	    {
    #####: 1104:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
        -: 1105:		{
    #####: 1106:		  discardCard(i, currentPlayer, state, 1);
    #####: 1107:		  break;
        -: 1108:		}
        -: 1109:	    }
        -: 1110:	}
        -: 1111:
    #####: 1112:      return 0;
        -: 1113:
        -: 1114:    case cutpurse:
        -: 1115:
    #####: 1116:      updateCoins(currentPlayer, state, 2);
    #####: 1117:      for (i = 0; i < state->numPlayers; i++)
        -: 1118:	{
    #####: 1119:	  if (i != currentPlayer)
        -: 1120:	    {
    #####: 1121:	      for (j = 0; j < state->handCount[i]; j++)
        -: 1122:		{
    #####: 1123:		  if (state->hand[i][j] == copper)
        -: 1124:		    {
    #####: 1125:		      discardCard(j, i, state, 0);
    #####: 1126:		      break;
        -: 1127:		    }
    #####: 1128:		  if (j == state->handCount[i])
        -: 1129:		    {
    #####: 1130:		      for (k = 0; k < state->handCount[i]; k++)
        -: 1131:			{
        -: 1132:			  if (DEBUG)
        -: 1133:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1134:			}
    #####: 1135:		      break;
        -: 1136:		    }
        -: 1137:		}
        -: 1138:
        -: 1139:	    }
        -: 1140:
        -: 1141:	}
        -: 1142:
        -: 1143:      //discard played card from hand
    #####: 1144:      discardCard(handPos, currentPlayer, state, 0);
        -: 1145:
    #####: 1146:      return 0;
        -: 1147:
        -: 1148:
        -: 1149:    case embargo:
        -: 1150:      //+2 Coins
    #####: 1151:      state->coins = state->coins + 2;
        -: 1152:
        -: 1153:      //see if selected pile is in play
    #####: 1154:      if ( state->supplyCount[choice1] == -1 )
        -: 1155:	{
    #####: 1156:	  return -1;
        -: 1157:	}
        -: 1158:
        -: 1159:      //add embargo token to selected supply pile
    #####: 1160:      state->embargoTokens[choice1]++;
        -: 1161:
        -: 1162:      //trash card
    #####: 1163:      discardCard(handPos, currentPlayer, state, 1);
    #####: 1164:      return 0;
        -: 1165:
        -: 1166:    case outpost:
        -: 1167:      //set outpost flag
    #####: 1168:      state->outpostPlayed++;
        -: 1169:
        -: 1170:      //discard card
    #####: 1171:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1172:      return 0;
        -: 1173:
        -: 1174:    case salvager:
        -: 1175:      //+1 buy
    #####: 1176:      state->numBuys++;
        -: 1177:
    #####: 1178:      if (choice1)
        -: 1179:	{
        -: 1180:	  //gain coins equal to trashed card
    #####: 1181:	  state->coins = state->coins + getCost( handCard(choice1, state) );
        -: 1182:	  //trash card
    #####: 1183:	  discardCard(choice1, currentPlayer, state, 1);
        -: 1184:	}
        -: 1185:
        -: 1186:      //discard card
    #####: 1187:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1188:      return 0;
        -: 1189:
        -: 1190:    case sea_hag:
    #####: 1191:      for (i = 0; i < state->numPlayers; i++){
    #####: 1192:	if (i != currentPlayer){
    #####: 1193:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1194:	  state->discardCount[i]++;
    #####: 1195:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1196:	}
        -: 1197:      }
    #####: 1198:      return 0;
        -: 1199:
        -: 1200:    case treasure_map:
        -: 1201:      //search hand for another treasure_map
    #####: 1202:      index = -1;
    #####: 1203:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1204:	{
    #####: 1205:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
        -: 1206:	    {
    #####: 1207:	      index = i;
    #####: 1208:	      break;
        -: 1209:	    }
        -: 1210:	}
    #####: 1211:      if (index > -1)
        -: 1212:	{
        -: 1213:	  //trash both treasure cards
    #####: 1214:	  discardCard(handPos, currentPlayer, state, 1);
    #####: 1215:	  discardCard(index, currentPlayer, state, 1);
        -: 1216:
        -: 1217:	  //gain 4 Gold cards
    #####: 1218:	  for (i = 0; i < 4; i++)
        -: 1219:	    {
    #####: 1220:	      gainCard(gold, state, 1, currentPlayer);
        -: 1221:	    }
        -: 1222:
        -: 1223:	  //return success
    #####: 1224:	  return 1;
        -: 1225:	}
        -: 1226:
        -: 1227:      //no second treasure_map found in hand
    #####: 1228:      return -1;
        -: 1229:    }
        -: 1230:
    #####: 1231:  return -1;
        -: 1232:}
        -: 1233:
    #####: 1234:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1235:{
        -: 1236:
        -: 1237:  //if card is not trashed, added to Played pile
    #####: 1238:  if (trashFlag < 1)
        -: 1239:    {
        -: 1240:      //add card to played pile
    #####: 1241:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos];
    #####: 1242:      state->playedCardCount++;
        -: 1243:    }
        -: 1244:
        -: 1245:  //set played card to -1
    #####: 1246:  state->hand[currentPlayer][handPos] = -1;
        -: 1247:
        -: 1248:  //remove card from player's hand
    #####: 1249:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
        -: 1250:    {
        -: 1251:      //reduce number of cards in hand
    #####: 1252:      state->handCount[currentPlayer]--;
        -: 1253:    }
    #####: 1254:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
        -: 1255:    {
        -: 1256:      //reduce number of cards in hand
    #####: 1257:      state->handCount[currentPlayer]--;
        -: 1258:    }
        -: 1259:  else
        -: 1260:    {
        -: 1261:      //replace discarded card with last card in hand
    #####: 1262:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1263:      //set last card to -1
    #####: 1264:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1265:      //reduce number of cards in hand
    #####: 1266:      state->handCount[currentPlayer]--;
        -: 1267:    }
        -: 1268:
    #####: 1269:  return 0;
        -: 1270:}
        -: 1271:
    #####: 1272:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1273:{
        -: 1274:  //Note: supplyPos is enum of choosen card
        -: 1275:
        -: 1276:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1277:  if ( supplyCount(supplyPos, state) < 1 )
        -: 1278:    {
    #####: 1279:      return -1;
        -: 1280:    }
        -: 1281:
        -: 1282:  //added card for [whoseTurn] current player:
        -: 1283:  // toFlag = 0 : add to discard
        -: 1284:  // toFlag = 1 : add to deck
        -: 1285:  // toFlag = 2 : add to hand
        -: 1286:
    #####: 1287:  if (toFlag == 1)
        -: 1288:    {
    #####: 1289:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1290:      state->deckCount[player]++;
        -: 1291:    }
    #####: 1292:  else if (toFlag == 2)
        -: 1293:    {
    #####: 1294:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1295:      state->handCount[player]++;
        -: 1296:    }
        -: 1297:  else
        -: 1298:    {
    #####: 1299:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1300:      state->discardCount[player]++;
        -: 1301:    }
        -: 1302:
        -: 1303:  //decrease number in supply pile
    #####: 1304:  state->supplyCount[supplyPos]--;
        -: 1305:
    #####: 1306:  return 0;
        -: 1307:}
        -: 1308:
        8: 1309:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1310:{
        -: 1311:  int i;
        -: 1312:
        -: 1313:  //reset coin count
        8: 1314:  state->coins = 0;
        -: 1315:
        -: 1316:  //add coins for each Treasure card in player's hand
        8: 1317:  for (i = 0; i < state->handCount[player]; i++)
        -: 1318:    {
    #####: 1319:      if (state->hand[player][i] == copper)
        -: 1320:	{
    #####: 1321:	  state->coins += 1;
        -: 1322:	}
    #####: 1323:      else if (state->hand[player][i] == silver)
        -: 1324:	{
    #####: 1325:	  state->coins += 2;
        -: 1326:	}
    #####: 1327:      else if (state->hand[player][i] == gold)
        -: 1328:	{
    #####: 1329:	  state->coins += 3;
        -: 1330:	}
        -: 1331:    }
        -: 1332:
        -: 1333:  //add bonus
        8: 1334:  state->coins += bonus;
        -: 1335:
        8: 1336:  return 0;
        -: 1337:}
        -: 1338:
        -: 1339:
        -: 1340://end of dominion.c
cardtest1.c:
All tests passed! Returned fine and 3 new cards were added
File 'dominion.c'
Lines executed:14.97% of 561
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:5
        -:    0:Programs:5
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
    #####:    8:int compare(const void* a, const void* b) {
    #####:    9:  if (*(int*)a > *(int*)b)
    #####:   10:    return 1;
    #####:   11:  if (*(int*)a < *(int*)b)
    #####:   12:    return -1;
    #####:   13:  return 0;
        -:   14:}
        -:   15:
    #####:   16:struct gameState* newGame() {
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
        -:   19:}
        -:   20:
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
        -:   35:}
        -:   36:
    #####:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;
        -:   43:  //set up random number generator
    #####:   44:  SelectStream(1);
    #####:   45:  PutSeed((long)randomSeed);
        -:   46:
        -:   47:  //check number of players
    #####:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
    #####:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
    #####:   57:  for (i = 0; i < 10; i++)
        -:   58:    {
    #####:   59:      for (j = 0; j < 10; j++)
        -:   60:        {
    #####:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
    #####:   73:  if (numPlayers == 2)
        -:   74:    {
    #####:   75:      state->supplyCount[curse] = 10;
        -:   76:    }
    #####:   77:  else if (numPlayers == 3)
        -:   78:    {
    #####:   79:      state->supplyCount[curse] = 20;
        -:   80:    }
        -:   81:  else
        -:   82:    {
    #####:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
    #####:   87:  if (numPlayers == 2)
        -:   88:    {
    #####:   89:      state->supplyCount[estate] = 8;
    #####:   90:      state->supplyCount[duchy] = 8;
    #####:   91:      state->supplyCount[province] = 8;
        -:   92:    }
        -:   93:  else
        -:   94:    {
    #####:   95:      state->supplyCount[estate] = 12;
    #####:   96:      state->supplyCount[duchy] = 12;
    #####:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
    #####:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
    #####:  102:  state->supplyCount[silver] = 40;
    #####:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
    #####:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
        -:  107:    {
    #####:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
        -:  109:	{
    #####:  110:	  if (kingdomCards[j] == i)
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
    #####:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
        -:  114:		{
    #####:  115:		  if (numPlayers == 2){
    #####:  116:		    state->supplyCount[i] = 8;
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
        -:  119:		}
        -:  120:	      else
        -:  121:		{
    #####:  122:		  state->supplyCount[i] = 10;
        -:  123:		}
    #####:  124:	      break;
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
    #####:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
    #####:  138:  for (i = 0; i < numPlayers; i++)
        -:  139:    {
    #####:  140:      state->deckCount[i] = 0;
    #####:  141:      for (j = 0; j < 3; j++)
        -:  142:	{
    #####:  143:	  state->deck[i][j] = estate;
    #####:  144:	  state->deckCount[i]++;
        -:  145:	}
    #####:  146:      for (j = 3; j < 10; j++)
        -:  147:	{
    #####:  148:	  state->deck[i][j] = copper;
    #####:  149:	  state->deckCount[i]++;
        -:  150:	}
        -:  151:    }
        -:  152:
        -:  153:  //shuffle player decks
    #####:  154:  for (i = 0; i < numPlayers; i++)
        -:  155:    {
    #####:  156:      if ( shuffle(i, state) < 0 )
        -:  157:	{
    #####:  158:	  return -1;
        -:  159:	}
        -:  160:    }
        -:  161:
        -:  162:  //draw player hands
    #####:  163:  for (i = 0; i < numPlayers; i++)
        -:  164:    {
        -:  165:      //initialize hand size to zero
    #####:  166:      state->handCount[i] = 0;
    #####:  167:      state->discardCount[i] = 0;
        -:  168:      //draw 5 cards
        -:  169:      // for (j = 0; j < 5; j++)
        -:  170:      //	{
        -:  171:      //	  drawCard(i, state);
        -:  172:      //	}
        -:  173:    }
        -:  174:
        -:  175:  //set embargo tokens to 0 for all supply piles
    #####:  176:  for (i = 0; i <= treasure_map; i++)
        -:  177:    {
    #####:  178:      state->embargoTokens[i] = 0;
        -:  179:    }
        -:  180:
        -:  181:  //initialize first player's turn
    #####:  182:  state->outpostPlayed = 0;
    #####:  183:  state->phase = 0;
    #####:  184:  state->numActions = 1;
    #####:  185:  state->numBuys = 1;
    #####:  186:  state->playedCardCount = 0;
    #####:  187:  state->whoseTurn = 0;
    #####:  188:  state->handCount[state->whoseTurn] = 0;
        -:  189:  //int it; move to top
        -:  190:
        -:  191:  //Moved draw cards to here, only drawing at the start of a turn
    #####:  192:  for (it = 0; it < 5; it++){
    #####:  193:    drawCard(state->whoseTurn, state);
        -:  194:  }
        -:  195:
    #####:  196:  updateCoins(state->whoseTurn, state, 0);
        -:  197:
    #####:  198:  return 0;
        -:  199:}
        -:  200:
    #####:  201:int shuffle(int player, struct gameState *state) {
        -:  202:
        -:  203:
        -:  204:  int newDeck[MAX_DECK];
    #####:  205:  int newDeckPos = 0;
        -:  206:  int card;
        -:  207:  int i;
        -:  208:
    #####:  209:  if (state->deckCount[player] < 1)
    #####:  210:    return -1;
    #####:  211:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare);
        -:  212:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  213:
    #####:  214:  while (state->deckCount[player] > 0) {
    #####:  215:    card = floor(Random() * state->deckCount[player]);
    #####:  216:    newDeck[newDeckPos] = state->deck[player][card];
    #####:  217:    newDeckPos++;
    #####:  218:    for (i = card; i < state->deckCount[player]-1; i++) {
    #####:  219:      state->deck[player][i] = state->deck[player][i+1];
        -:  220:    }
    #####:  221:    state->deckCount[player]--;
        -:  222:  }
    #####:  223:  for (i = 0; i < newDeckPos; i++) {
    #####:  224:    state->deck[player][i] = newDeck[i];
    #####:  225:    state->deckCount[player]++;
        -:  226:  }
        -:  227:
    #####:  228:  return 0;
        -:  229:}
        -:  230:
    #####:  231:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state)
        -:  232:{
        -:  233:  int card;
    #####:  234:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  235:
        -:  236:  //check if it is the right phase
    #####:  237:  if (state->phase != 0)
        -:  238:    {
    #####:  239:      return -1;
        -:  240:    }
        -:  241:
        -:  242:  //check if player has enough actions
    #####:  243:  if ( state->numActions < 1 )
        -:  244:    {
    #####:  245:      return -1;
        -:  246:    }
        -:  247:
        -:  248:  //get card played
    #####:  249:  card = handCard(handPos, state);
        -:  250:
        -:  251:  //check if selected card is an action
    #####:  252:  if ( card < adventurer || card > treasure_map )
        -:  253:    {
    #####:  254:      return -1;
        -:  255:    }
        -:  256:
        -:  257:  //play card
    #####:  258:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
        -:  259:    {
    #####:  260:      return -1;
        -:  261:    }
        -:  262:
        -:  263:  //reduce number of actions
    #####:  264:  state->numActions--;
        -:  265:
        -:  266:  //update coins (Treasure cards may be added with card draws)
    #####:  267:  updateCoins(state->whoseTurn, state, coin_bonus);
        -:  268:
    #####:  269:  return 0;
        -:  270:}
        -:  271:
    #####:  272:int buyCard(int supplyPos, struct gameState *state) {
        -:  273:  int who;
        -:  274:  if (DEBUG){
        -:  275:    printf("Entering buyCard...\n");
        -:  276:  }
        -:  277:
        -:  278:  // I don't know what to do about the phase thing.
        -:  279:
    #####:  280:  who = state->whoseTurn;
        -:  281:
    #####:  282:  if (state->numBuys < 1){
        -:  283:    if (DEBUG)
        -:  284:      printf("You do not have any buys left\n");
    #####:  285:    return -1;
    #####:  286:  } else if (supplyCount(supplyPos, state) <1){
        -:  287:    if (DEBUG)
        -:  288:      printf("There are not any of that type of card left\n");
    #####:  289:    return -1;
    #####:  290:  } else if (state->coins < getCost(supplyPos)){
        -:  291:    if (DEBUG)
        -:  292:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  293:    return -1;
        -:  294:  } else {
    #####:  295:    state->phase=1;
        -:  296:    //state->supplyCount[supplyPos]--;
    #####:  297:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  298:
    #####:  299:    state->coins = (state->coins) - (getCost(supplyPos));
    #####:  300:    state->numBuys--;
        -:  301:    if (DEBUG)
        -:  302:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  303:  }
        -:  304:
        -:  305:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  306:  //state->discardCount[who]++;
        -:  307:
    #####:  308:  return 0;
        -:  309:}
        -:  310:
       12:  311:int numHandCards(struct gameState *state) {
       12:  312:  return state->handCount[ whoseTurn(state) ];
        -:  313:}
        -:  314:
    #####:  315:int handCard(int handPos, struct gameState *state) {
    #####:  316:  int currentPlayer = whoseTurn(state);
    #####:  317:  return state->hand[currentPlayer][handPos];
        -:  318:}
        -:  319:
    #####:  320:int supplyCount(int card, struct gameState *state) {
    #####:  321:  return state->supplyCount[card];
        -:  322:}
        -:  323:
    #####:  324:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  325:  int i;
    #####:  326:  int count = 0;
        -:  327:
    #####:  328:  for (i = 0; i < state->deckCount[player]; i++)
        -:  329:    {
    #####:  330:      if (state->deck[player][i] == card) count++;
        -:  331:    }
        -:  332:
    #####:  333:  for (i = 0; i < state->handCount[player]; i++)
        -:  334:    {
    #####:  335:      if (state->hand[player][i] == card) count++;
        -:  336:    }
        -:  337:
    #####:  338:  for (i = 0; i < state->discardCount[player]; i++)
        -:  339:    {
    #####:  340:      if (state->discard[player][i] == card) count++;
        -:  341:    }
        -:  342:
    #####:  343:  return count;
        -:  344:}
        -:  345:
     4012:  346:int whoseTurn(struct gameState *state) {
     4012:  347:  return state->whoseTurn;
        -:  348:}
        -:  349:
    #####:  350:int endTurn(struct gameState *state) {
        -:  351:  int k;
        -:  352:  int i;
    #####:  353:  int currentPlayer = whoseTurn(state);
        -:  354:
        -:  355:  //Discard hand
    #####:  356:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    #####:  357:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  358:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  359:  }
    #####:  360:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  361:
        -:  362:  //Code for determining the player
    #####:  363:  if (currentPlayer < (state->numPlayers - 1)){
    #####:  364:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  365:  }
        -:  366:  else{
    #####:  367:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  368:  }
        -:  369:
    #####:  370:  state->outpostPlayed = 0;
    #####:  371:  state->phase = 0;
    #####:  372:  state->numActions = 1;
    #####:  373:  state->coins = 0;
    #####:  374:  state->numBuys = 1;
    #####:  375:  state->playedCardCount = 0;
    #####:  376:  state->handCount[state->whoseTurn] = 0;
        -:  377:
        -:  378:  //int k; move to top
        -:  379:  //Next player draws hand
    #####:  380:  for (k = 0; k < 5; k++){
    #####:  381:    drawCard(state->whoseTurn, state);//Draw a card
        -:  382:  }
        -:  383:
        -:  384:  //Update money
    #####:  385:  updateCoins(state->whoseTurn, state , 0);
        -:  386:
    #####:  387:  return 0;
        -:  388:}
        -:  389:
     1002:  390:int isGameOver(struct gameState *state) {
        -:  391:  int i;
        -:  392:  int j;
        -:  393:
        -:  394:  //if stack of Province cards is empty, the game ends
     1002:  395:  if (state->supplyCount[province] == 0)
        -:  396:    {
      109:  397:      return 1;
        -:  398:    }
        -:  399:
        -:  400:  //if three supply pile are at 0, the game ends
      893:  401:  j = 0;
    23218:  402:  for (i = 0; i < 25; i++)
        -:  403:    {
    22325:  404:      if (state->supplyCount[i] == 0)
        -:  405:	{
     2676:  406:	  j++;
        -:  407:	}
        -:  408:    }
      893:  409:  if ( j >= 3)
        -:  410:    {
      892:  411:      return 1;
        -:  412:    }
        -:  413:
        1:  414:  return 0;
        -:  415:}
        -:  416:
    #####:  417:int scoreFor (int player, struct gameState *state) {
        -:  418:
        -:  419:  int i;
    #####:  420:  int score = 0;
        -:  421:  //score from hand
    #####:  422:  for (i = 0; i < state->handCount[player]; i++)
        -:  423:    {
    #####:  424:      if (state->hand[player][i] == curse) { score = score - 1; };
    #####:  425:      if (state->hand[player][i] == estate) { score = score + 1; };
    #####:  426:      if (state->hand[player][i] == duchy) { score = score + 3; };
    #####:  427:      if (state->hand[player][i] == province) { score = score + 6; };
    #####:  428:      if (state->hand[player][i] == great_hall) { score = score + 1; };
    #####:  429:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  430:    }
        -:  431:
        -:  432:  //score from discard
    #####:  433:  for (i = 0; i < state->discardCount[player]; i++)
        -:  434:    {
    #####:  435:      if (state->discard[player][i] == curse) { score = score - 1; };
    #####:  436:      if (state->discard[player][i] == estate) { score = score + 1; };
    #####:  437:      if (state->discard[player][i] == duchy) { score = score + 3; };
    #####:  438:      if (state->discard[player][i] == province) { score = score + 6; };
    #####:  439:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    #####:  440:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  441:    }
        -:  442:
        -:  443:  //score from deck
    #####:  444:  for (i = 0; i < state->discardCount[player]; i++)
        -:  445:    {
    #####:  446:      if (state->deck[player][i] == curse) { score = score - 1; };
    #####:  447:      if (state->deck[player][i] == estate) { score = score + 1; };
    #####:  448:      if (state->deck[player][i] == duchy) { score = score + 3; };
    #####:  449:      if (state->deck[player][i] == province) { score = score + 6; };
    #####:  450:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    #####:  451:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  452:    }
        -:  453:
    #####:  454:  return score;
        -:  455:}
        -:  456:
    #####:  457:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  458:  int i;
        -:  459:  int j;
        -:  460:  int highScore;
        -:  461:  int currentPlayer;
        -:  462:
        -:  463:  //get score for each player
    #####:  464:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  465:    {
        -:  466:      //set unused player scores to -9999
    #####:  467:      if (i >= state->numPlayers)
        -:  468:	{
    #####:  469:	  players[i] = -9999;
        -:  470:	}
        -:  471:      else
        -:  472:	{
    #####:  473:	  players[i] = scoreFor (i, state);
        -:  474:	}
        -:  475:    }
        -:  476:
        -:  477:  //find highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  480:    {
    #####:  481:      if (players[i] > players[j])
        -:  482:	{
    #####:  483:	  j = i;
        -:  484:	}
        -:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //add 1 to players who had less turns
    #####:  489:  currentPlayer = whoseTurn(state);
    #####:  490:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  491:    {
    #####:  492:      if ( players[i] == highScore && i > currentPlayer )
        -:  493:	{
    #####:  494:	  players[i]++;
        -:  495:	}
        -:  496:    }
        -:  497:
        -:  498:  //find new highest score
    #####:  499:  j = 0;
    #####:  500:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  501:    {
    #####:  502:      if ( players[i] > players[j] )
        -:  503:	{
    #####:  504:	  j = i;
        -:  505:	}
        -:  506:    }
    #####:  507:  highScore = players[j];
        -:  508:
        -:  509:  //set winners in array to 1 and rest to 0
    #####:  510:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  511:    {
    #####:  512:      if ( players[i] == highScore )
        -:  513:	{
    #####:  514:	  players[i] = 1;
        -:  515:	}
        -:  516:      else
        -:  517:	{
    #####:  518:	  players[i] = 0;
        -:  519:	}
        -:  520:    }
        -:  521:
    #####:  522:  return 0;
        -:  523:}
        -:  524:
    12000:  525:int drawCard(int player, struct gameState *state)
        -:  526:{	int count;
        -:  527:  int deckCounter;
    12000:  528:  if (state->deckCount[player] <= 0){//Deck is empty
        -:  529:
        -:  530:    //Step 1 Shuffle the discard pile back into a deck
        -:  531:    int i;
        -:  532:    //Move discard to deck
    #####:  533:    for (i = 0; i < state->discardCount[player];i++){
    #####:  534:      state->deck[player][i] = state->discard[player][i];
    #####:  535:      state->discard[player][i] = -1;
        -:  536:    }
        -:  537:
    #####:  538:    state->deckCount[player] = state->discardCount[player];
    #####:  539:    state->discardCount[player] = 0;//Reset discard
        -:  540:
        -:  541:    //Shufffle the deck
    #####:  542:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
        -:  543:
        -:  544:    if (DEBUG){//Debug statements
        -:  545:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  546:    }
        -:  547:
    #####:  548:    state->discardCount[player] = 0;
        -:  549:
        -:  550:    //Step 2 Draw Card
    #####:  551:    count = state->handCount[player];//Get current player's hand count
        -:  552:
        -:  553:    if (DEBUG){//Debug statements
        -:  554:      printf("Current hand count: %d\n", count);
        -:  555:    }
        -:  556:
    #####:  557:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  558:
    #####:  559:    if (deckCounter == 0)
    #####:  560:      return -1;
        -:  561:
    #####:  562:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    #####:  563:    state->deckCount[player]--;
    #####:  564:    state->handCount[player]++;//Increment hand count
        -:  565:  }
        -:  566:
        -:  567:  else{
    12000:  568:    int count = state->handCount[player];//Get current hand count for player
        -:  569:    int deckCounter;
        -:  570:    if (DEBUG){//Debug statements
        -:  571:      printf("Current hand count: %d\n", count);
        -:  572:    }
        -:  573:
    12000:  574:    deckCounter = state->deckCount[player];//Create holder for the deck count
    12000:  575:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
    12000:  576:    state->deckCount[player]--;
    12000:  577:    state->handCount[player]++;//Increment hand count
        -:  578:  }
        -:  579:
    12000:  580:  return 0;
        -:  581:}
        -:  582:
       35:  583:int getCost(int cardNumber)
        -:  584:{
       35:  585:  switch( cardNumber )
        -:  586:    {
        -:  587:    case curse:
        1:  588:      return 0;
        -:  589:    case estate:
        1:  590:      return 2;
        -:  591:    case duchy:
        1:  592:      return 5;
        -:  593:    case province:
        1:  594:      return 8;
        -:  595:    case copper:
        1:  596:      return 0;
        -:  597:    case silver:
        1:  598:      return 3;
        -:  599:    case gold:
        1:  600:      return 6;
        -:  601:    case adventurer:
        1:  602:      return 6;
        -:  603:    case council_room:
        1:  604:      return 5;
        -:  605:    case feast:
        1:  606:      return 4;
        -:  607:    case gardens:
        1:  608:      return 4;
        -:  609:    case mine:
        1:  610:      return 5;
        -:  611:    case remodel:
        1:  612:      return 4;
        -:  613:    case smithy:
        1:  614:      return 4;
        -:  615:    case village:
        1:  616:      return 3;
        -:  617:    case baron:
        1:  618:      return 4;
        -:  619:    case great_hall:
        1:  620:      return 3;
        -:  621:    case minion:
        1:  622:      return 5;
        -:  623:    case steward:
        1:  624:      return 3;
        -:  625:    case tribute:
        1:  626:      return 5;
        -:  627:    case ambassador:
        1:  628:      return 3;
        -:  629:    case cutpurse:
        1:  630:      return 4;
        -:  631:    case embargo:
        1:  632:      return 2;
        -:  633:    case outpost:
        1:  634:      return 5;
        -:  635:    case salvager:
        1:  636:      return 4;
        -:  637:    case sea_hag:
        1:  638:      return 4;
        -:  639:    case treasure_map:
        1:  640:      return 4;
        -:  641:    }
        -:  642:
        8:  643:  return -1;
        -:  644:}
        -:  645:
    #####:  646:void adventurer_action (int drawntreasure, struct gameState *state, int currentPlayer, int cardDrawn, int temphand[MAX_HAND], int z) {
    #####:  647:    while(drawntreasure<2){
    #####:  648:        if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
    #####:  649:            shuffle(currentPlayer, state);
        -:  650:        }
    #####:  651:        drawCard(currentPlayer, state);
    #####:  652:        cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
    #####:  653:        if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
    #####:  654:          drawntreasure++;
        -:  655:        else{
    #####:  656:          temphand[z]=cardDrawn;
    #####:  657:          state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
        -:  658:        }
        -:  659:  }
    #####:  660:  while(z-1>=0){
    #####:  661:      state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    #####:  662:      z=z-1;
        -:  663:  }
    #####:  664:}
        -:  665:
     4000:  666:void smithy_action (int currentPlayer, struct gameState *state, int i, int handPos) {
        -:  667:  //+3 Cards
    16000:  668:  for (i = 0; i < 3; i++) {
    12000:  669:    drawCard(currentPlayer, state);
        -:  670:  }
        -:  671:
        -:  672:  //discard card from hand
     4000:  673:  discardCard(handPos, currentPlayer, state, 0);
     4000:  674:}
        -:  675:
    #####:  676:void village_action (int currentPlayer, struct gameState *state, int handPos) {
        -:  677:  //+1 Card
    #####:  678:  drawCard(currentPlayer, state);
        -:  679:
        -:  680:  //+2 Actions
    #####:  681:  state->numActions = state->numActions + 2;
        -:  682:
        -:  683:  //discard played card from hand
    #####:  684:  discardCard(handPos, currentPlayer, state, 0);
    #####:  685:}
        -:  686:
    #####:  687:void council_room_action (int i, int currentPlayer, struct gameState *state) {
        -:  688:  //+4 Cards
    #####:  689:  for (i = 0; i < 4; i++) {
    #####:  690:      drawCard(currentPlayer, state);
        -:  691:  }
        -:  692:
        -:  693:  //+1 Buy
    #####:  694:  state->numBuys++;
        -:  695:
        -:  696:  //Each other player draws a card
    #####:  697:  for (i = 0; i < state->numPlayers; i++) {
    #####:  698:      if ( i == currentPlayer ) {
    #####:  699:          drawCard(i, state);
        -:  700:      }
        -:  701:  }
    #####:  702:}
        -:  703:
    #####:  704:int mine_action (int j, struct gameState *state, int currentPlayer, int choice1, int choice2, int handPos, int i) {
    #####:  705:  j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  706:
    #####:  707:  if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold) {
    #####:  708:      return -1;
        -:  709:  }
        -:  710:
    #####:  711:  if (choice2 > treasure_map || choice2 < curse) {
    #####:  712:      return -1;
        -:  713:  }
        -:  714:
    #####:  715:  if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) ) {
    #####:  716:      return -1;
        -:  717:  }
        -:  718:
    #####:  719:  gainCard(choice2, state, 2, currentPlayer);
        -:  720:
        -:  721:  //discard card from hand
    #####:  722:  discardCard(handPos, currentPlayer, state, 0);
        -:  723:
        -:  724:  //discard trashed card
    #####:  725:  for (i = 0; i < state->handCount[currentPlayer]; i++) {
    #####:  726:      if (state->hand[currentPlayer][i] == j) {
    #####:  727:        discardCard(i, currentPlayer, state, 0);
    #####:  728:        break;
        -:  729:      }
        -:  730:  }
        -:  731:
    #####:  732:  return -1;
        -:  733:}
        -:  734:
     4000:  735:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  736:{
        -:  737:  int i;
        -:  738:  int j;
        -:  739:  int k;
        -:  740:  int x;
        -:  741:  int m;
        -:  742:  int index;
     4000:  743:  int currentPlayer = whoseTurn(state);
     4000:  744:  int nextPlayer = currentPlayer + 1;
        -:  745:
     4000:  746:  int tributeRevealedCards[2] = {-1, -1};
        -:  747:  int temphand[MAX_HAND];// moved above the if statement
     4000:  748:  int drawntreasure=0;
        -:  749:  int cardDrawn;
     4000:  750:  int z = 0;// this is the counter for the temp hand
     4000:  751:  if (nextPlayer > (state->numPlayers - 1)){
     4000:  752:    nextPlayer = 0;
        -:  753:  }
        -:  754:
        -:  755:
        -:  756:  //uses switch to select card and perform actions
     4000:  757:  switch( card )
        -:  758:    {
        -:  759:    case adventurer:
    #####:  760:      adventurer_action (drawntreasure, state, currentPlayer, cardDrawn, temphand, z);
    #####:  761:      return 0;
        -:  762:
        -:  763:    case council_room:
    #####:  764:      council_room_action (i, currentPlayer, state);
    #####:  765:      return 0;
        -:  766:
        -:  767:    case feast:
        -:  768:      //gain card with cost up to 5
        -:  769:      //Backup hand
    #####:  770:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  771:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  772:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  773:      }
        -:  774:      //Backup hand
        -:  775:
        -:  776:      //Update Coins for Buy
    #####:  777:      updateCoins(currentPlayer, state, 5);
    #####:  778:      x = 1;//Condition to loop on
    #####:  779:      while( x == 1) {//Buy one card
    #####:  780:	if (supplyCount(choice1, state) <= 0){
        -:  781:	  if (DEBUG)
        -:  782:	    printf("None of that card left, sorry!\n");
        -:  783:
        -:  784:	  if (DEBUG){
        -:  785:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  786:	  }
        -:  787:	}
    #####:  788:	else if (state->coins < getCost(choice1)){
    #####:  789:	  printf("That card is too expensive!\n");
        -:  790:
        -:  791:	  if (DEBUG){
        -:  792:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  793:	  }
        -:  794:	}
        -:  795:	else{
        -:  796:
        -:  797:	  if (DEBUG){
        -:  798:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  799:	  }
        -:  800:
    #####:  801:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    #####:  802:	  x = 0;//No more buying cards
        -:  803:
        -:  804:	  if (DEBUG){
        -:  805:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  806:	  }
        -:  807:
        -:  808:	}
        -:  809:      }
        -:  810:
        -:  811:      //Reset Hand
    #####:  812:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  813:	state->hand[currentPlayer][i] = temphand[i];
    #####:  814:	temphand[i] = -1;
        -:  815:      }
        -:  816:      //Reset Hand
        -:  817:
    #####:  818:      return 0;
        -:  819:
        -:  820:    case gardens:
    #####:  821:      return -1;
        -:  822:
        -:  823:    case mine:
    #####:  824:      m = mine_action (j, state, currentPlayer, choice1, choice2, handPos, i);
    #####:  825:      return m;
        -:  826:
        -:  827:    case remodel:
    #####:  828:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  829:
    #####:  830:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
        -:  831:	{
    #####:  832:	  return -1;
        -:  833:	}
        -:  834:
    #####:  835:      gainCard(choice2, state, 0, currentPlayer);
        -:  836:
        -:  837:      //discard card from hand
    #####:  838:      discardCard(handPos, currentPlayer, state, 0);
        -:  839:
        -:  840:      //discard trashed card
    #####:  841:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  842:	{
    #####:  843:	  if (state->hand[currentPlayer][i] == j)
        -:  844:	    {
    #####:  845:	      discardCard(i, currentPlayer, state, 0);
    #####:  846:	      break;
        -:  847:	    }
        -:  848:	}
        -:  849:
        -:  850:
    #####:  851:      return 0;
        -:  852:
        -:  853:    case smithy:
     4000:  854:      smithy_action (currentPlayer, state, i, handPos);
     4000:  855:      return 0;
        -:  856:
        -:  857:    case village:
    #####:  858:      village_action (currentPlayer, state, handPos);
    #####:  859:      return 0;
        -:  860:
        -:  861:    case baron:
    #####:  862:      state->numBuys++;//Increase buys by 1!
    #####:  863:      if (choice1 > 0){//Boolean true or going to discard an estate
    #####:  864:	int p = 0;//Iterator for hand!
    #####:  865:	int card_not_discarded = 1;//Flag for discard set!
    #####:  866:	while(card_not_discarded){
    #####:  867:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    #####:  868:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  869:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  870:	    state->discardCount[currentPlayer]++;
    #####:  871:	    for (;p < state->handCount[currentPlayer]; p++){
    #####:  872:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  873:	    }
    #####:  874:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  875:	    state->handCount[currentPlayer]--;
    #####:  876:	    card_not_discarded = 0;//Exit the loop
        -:  877:	  }
    #####:  878:	  else if (p > state->handCount[currentPlayer]){
        -:  879:	    if(DEBUG) {
        -:  880:	      printf("No estate cards in your hand, invalid choice\n");
        -:  881:	      printf("Must gain an estate if there are any\n");
        -:  882:	    }
    #####:  883:	    if (supplyCount(estate, state) > 0){
    #####:  884:	      gainCard(estate, state, 0, currentPlayer);
    #####:  885:	      state->supplyCount[estate]--;//Decrement estates
    #####:  886:	      if (supplyCount(estate, state) == 0){
    #####:  887:		isGameOver(state);
        -:  888:	      }
        -:  889:	    }
    #####:  890:	    card_not_discarded = 0;//Exit the loop
        -:  891:	  }
        -:  892:
        -:  893:	  else{
    #####:  894:	    p++;//Next card
        -:  895:	  }
        -:  896:	}
        -:  897:      }
        -:  898:
        -:  899:      else{
    #####:  900:	if (supplyCount(estate, state) > 0){
    #####:  901:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
    #####:  902:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  903:	  if (supplyCount(estate, state) == 0){
    #####:  904:	    isGameOver(state);
        -:  905:	  }
        -:  906:	}
        -:  907:      }
        -:  908:
        -:  909:
    #####:  910:      return 0;
        -:  911:
        -:  912:    case great_hall:
        -:  913:      //+1 Card
    #####:  914:      drawCard(currentPlayer, state);
        -:  915:
        -:  916:      //+1 Actions
    #####:  917:      state->numActions++;
        -:  918:
        -:  919:      //discard card from hand
    #####:  920:      discardCard(handPos, currentPlayer, state, 0);
    #####:  921:      return 0;
        -:  922:
        -:  923:    case minion:
        -:  924:      //+1 action
    #####:  925:      state->numActions++;
        -:  926:
        -:  927:      //discard card from hand
    #####:  928:      discardCard(handPos, currentPlayer, state, 0);
        -:  929:
    #####:  930:      if (choice1)		//+2 coins
        -:  931:	{
    #####:  932:	  state->coins = state->coins + 2;
        -:  933:	}
        -:  934:
    #####:  935:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
        -:  936:	{
        -:  937:	  //discard hand
    #####:  938:	  while(numHandCards(state) > 0)
        -:  939:	    {
    #####:  940:	      discardCard(handPos, currentPlayer, state, 0);
        -:  941:	    }
        -:  942:
        -:  943:	  //draw 4
    #####:  944:	  for (i = 0; i < 4; i++)
        -:  945:	    {
    #####:  946:	      drawCard(currentPlayer, state);
        -:  947:	    }
        -:  948:
        -:  949:	  //other players discard hand and redraw if hand size > 4
    #####:  950:	  for (i = 0; i < state->numPlayers; i++)
        -:  951:	    {
    #####:  952:	      if (i != currentPlayer)
        -:  953:		{
    #####:  954:		  if ( state->handCount[i] > 4 )
        -:  955:		    {
        -:  956:		      //discard hand
    #####:  957:		      while( state->handCount[i] > 0 )
        -:  958:			{
    #####:  959:			  discardCard(handPos, i, state, 0);
        -:  960:			}
        -:  961:
        -:  962:		      //draw 4
    #####:  963:		      for (j = 0; j < 4; j++)
        -:  964:			{
    #####:  965:			  drawCard(i, state);
        -:  966:			}
        -:  967:		    }
        -:  968:		}
        -:  969:	    }
        -:  970:
        -:  971:	}
    #####:  972:      return 0;
        -:  973:
        -:  974:    case steward:
    #####:  975:      if (choice1 == 1)
        -:  976:	{
        -:  977:	  //+2 cards
    #####:  978:	  drawCard(currentPlayer, state);
    #####:  979:	  drawCard(currentPlayer, state);
        -:  980:	}
    #####:  981:      else if (choice1 == 2)
        -:  982:	{
        -:  983:	  //+2 coins
    #####:  984:	  state->coins = state->coins + 2;
        -:  985:	}
        -:  986:      else
        -:  987:	{
        -:  988:	  //trash 2 cards in hand
    #####:  989:	  discardCard(choice2, currentPlayer, state, 1);
    #####:  990:	  discardCard(choice3, currentPlayer, state, 1);
        -:  991:	}
        -:  992:
        -:  993:      //discard card from hand
    #####:  994:      discardCard(handPos, currentPlayer, state, 0);
    #####:  995:      return 0;
        -:  996:
        -:  997:    case tribute:
    #####:  998:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    #####:  999:	if (state->deckCount[nextPlayer] > 0){
    #####: 1000:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1001:	  state->deckCount[nextPlayer]--;
        -: 1002:	}
    #####: 1003:	else if (state->discardCount[nextPlayer] > 0){
    #####: 1004:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1005:	  state->discardCount[nextPlayer]--;
        -: 1006:	}
        -: 1007:	else{
        -: 1008:	  //No Card to Reveal
        -: 1009:	  if (DEBUG){
        -: 1010:	    printf("No cards to reveal\n");
        -: 1011:	  }
        -: 1012:	}
        -: 1013:      }
        -: 1014:
        -: 1015:      else{
    #####: 1016:	if (state->deckCount[nextPlayer] == 0){
    #####: 1017:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    #####: 1018:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1019:	    state->deckCount[nextPlayer]++;
    #####: 1020:	    state->discard[nextPlayer][i] = -1;
    #####: 1021:	    state->discardCount[nextPlayer]--;
        -: 1022:	  }
        -: 1023:
    #####: 1024:	  shuffle(nextPlayer,state);//Shuffle the deck
        -: 1025:	}
    #####: 1026:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1027:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1028:	state->deckCount[nextPlayer]--;
    #####: 1029:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1030:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1031:	state->deckCount[nextPlayer]--;
        -: 1032:      }
        -: 1033:
    #####: 1034:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one
    #####: 1035:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1036:	state->playedCardCount++;
    #####: 1037:	tributeRevealedCards[1] = -1;
        -: 1038:      }
        -: 1039:
    #####: 1040:      for (i = 0; i <= 2; i ++){
    #####: 1041:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    #####: 1042:	  state->coins += 2;
        -: 1043:	}
        -: 1044:
    #####: 1045:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    #####: 1046:	  drawCard(currentPlayer, state);
    #####: 1047:	  drawCard(currentPlayer, state);
        -: 1048:	}
        -: 1049:	else{//Action Card
    #####: 1050:	  state->numActions = state->numActions + 2;
        -: 1051:	}
        -: 1052:      }
        -: 1053:
    #####: 1054:      return 0;
        -: 1055:
        -: 1056:    case ambassador:
    #####: 1057:      j = 0;		//used to check if player has enough cards to discard
        -: 1058:
    #####: 1059:      if (choice2 > 2 || choice2 < 0)
        -: 1060:	{
    #####: 1061:	  return -1;
        -: 1062:	}
        -: 1063:
    #####: 1064:      if (choice1 == handPos)
        -: 1065:	{
    #####: 1066:	  return -1;
        -: 1067:	}
        -: 1068:
    #####: 1069:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1070:	{
    #####: 1071:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
        -: 1072:	    {
    #####: 1073:	      j++;
        -: 1074:	    }
        -: 1075:	}
    #####: 1076:      if (j < choice2)
        -: 1077:	{
    #####: 1078:	  return -1;
        -: 1079:	}
        -: 1080:
        -: 1081:      if (DEBUG)
        -: 1082:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1083:
        -: 1084:      //increase supply count for choosen card by amount being discarded
    #####: 1085:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1086:
        -: 1087:      //each other player gains a copy of revealed card
    #####: 1088:      for (i = 0; i < state->numPlayers; i++)
        -: 1089:	{
    #####: 1090:	  if (i != currentPlayer)
        -: 1091:	    {
    #####: 1092:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
        -: 1093:	    }
        -: 1094:	}
        -: 1095:
        -: 1096:      //discard played card from hand
    #####: 1097:      discardCard(handPos, currentPlayer, state, 0);
        -: 1098:
        -: 1099:      //trash copies of cards returned to supply
    #####: 1100:      for (j = 0; j < choice2; j++)
        -: 1101:	{
    #####: 1102:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1103:	    {
    #####: 1104:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
        -: 1105:		{
    #####: 1106:		  discardCard(i, currentPlayer, state, 1);
    #####: 1107:		  break;
        -: 1108:		}
        -: 1109:	    }
        -: 1110:	}
        -: 1111:
    #####: 1112:      return 0;
        -: 1113:
        -: 1114:    case cutpurse:
        -: 1115:
    #####: 1116:      updateCoins(currentPlayer, state, 2);
    #####: 1117:      for (i = 0; i < state->numPlayers; i++)
        -: 1118:	{
    #####: 1119:	  if (i != currentPlayer)
        -: 1120:	    {
    #####: 1121:	      for (j = 0; j < state->handCount[i]; j++)
        -: 1122:		{
    #####: 1123:		  if (state->hand[i][j] == copper)
        -: 1124:		    {
    #####: 1125:		      discardCard(j, i, state, 0);
    #####: 1126:		      break;
        -: 1127:		    }
    #####: 1128:		  if (j == state->handCount[i])
        -: 1129:		    {
    #####: 1130:		      for (k = 0; k < state->handCount[i]; k++)
        -: 1131:			{
        -: 1132:			  if (DEBUG)
        -: 1133:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1134:			}
    #####: 1135:		      break;
        -: 1136:		    }
        -: 1137:		}
        -: 1138:
        -: 1139:	    }
        -: 1140:
        -: 1141:	}
        -: 1142:
        -: 1143:      //discard played card from hand
    #####: 1144:      discardCard(handPos, currentPlayer, state, 0);
        -: 1145:
    #####: 1146:      return 0;
        -: 1147:
        -: 1148:
        -: 1149:    case embargo:
        -: 1150:      //+2 Coins
    #####: 1151:      state->coins = state->coins + 2;
        -: 1152:
        -: 1153:      //see if selected pile is in play
    #####: 1154:      if ( state->supplyCount[choice1] == -1 )
        -: 1155:	{
    #####: 1156:	  return -1;
        -: 1157:	}
        -: 1158:
        -: 1159:      //add embargo token to selected supply pile
    #####: 1160:      state->embargoTokens[choice1]++;
        -: 1161:
        -: 1162:      //trash card
    #####: 1163:      discardCard(handPos, currentPlayer, state, 1);
    #####: 1164:      return 0;
        -: 1165:
        -: 1166:    case outpost:
        -: 1167:      //set outpost flag
    #####: 1168:      state->outpostPlayed++;
        -: 1169:
        -: 1170:      //discard card
    #####: 1171:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1172:      return 0;
        -: 1173:
        -: 1174:    case salvager:
        -: 1175:      //+1 buy
    #####: 1176:      state->numBuys++;
        -: 1177:
    #####: 1178:      if (choice1)
        -: 1179:	{
        -: 1180:	  //gain coins equal to trashed card
    #####: 1181:	  state->coins = state->coins + getCost( handCard(choice1, state) );
        -: 1182:	  //trash card
    #####: 1183:	  discardCard(choice1, currentPlayer, state, 1);
        -: 1184:	}
        -: 1185:
        -: 1186:      //discard card
    #####: 1187:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1188:      return 0;
        -: 1189:
        -: 1190:    case sea_hag:
    #####: 1191:      for (i = 0; i < state->numPlayers; i++){
    #####: 1192:	if (i != currentPlayer){
    #####: 1193:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1194:	  state->discardCount[i]++;
    #####: 1195:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1196:	}
        -: 1197:      }
    #####: 1198:      return 0;
        -: 1199:
        -: 1200:    case treasure_map:
        -: 1201:      //search hand for another treasure_map
    #####: 1202:      index = -1;
    #####: 1203:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1204:	{
    #####: 1205:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
        -: 1206:	    {
    #####: 1207:	      index = i;
    #####: 1208:	      break;
        -: 1209:	    }
        -: 1210:	}
    #####: 1211:      if (index > -1)
        -: 1212:	{
        -: 1213:	  //trash both treasure cards
    #####: 1214:	  discardCard(handPos, currentPlayer, state, 1);
    #####: 1215:	  discardCard(index, currentPlayer, state, 1);
        -: 1216:
        -: 1217:	  //gain 4 Gold cards
    #####: 1218:	  for (i = 0; i < 4; i++)
        -: 1219:	    {
    #####: 1220:	      gainCard(gold, state, 1, currentPlayer);
        -: 1221:	    }
        -: 1222:
        -: 1223:	  //return success
    #####: 1224:	  return 1;
        -: 1225:	}
        -: 1226:
        -: 1227:      //no second treasure_map found in hand
    #####: 1228:      return -1;
        -: 1229:    }
        -: 1230:
    #####: 1231:  return -1;
        -: 1232:}
        -: 1233:
     4000: 1234:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1235:{
        -: 1236:
        -: 1237:  //if card is not trashed, added to Played pile
     4000: 1238:  if (trashFlag < 1)
        -: 1239:    {
        -: 1240:      //add card to played pile
     4000: 1241:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos];
     4000: 1242:      state->playedCardCount++;
        -: 1243:    }
        -: 1244:
        -: 1245:  //set played card to -1
     4000: 1246:  state->hand[currentPlayer][handPos] = -1;
        -: 1247:
        -: 1248:  //remove card from player's hand
     4000: 1249:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
        -: 1250:    {
        -: 1251:      //reduce number of cards in hand
    #####: 1252:      state->handCount[currentPlayer]--;
        -: 1253:    }
     4000: 1254:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
        -: 1255:    {
        -: 1256:      //reduce number of cards in hand
    #####: 1257:      state->handCount[currentPlayer]--;
        -: 1258:    }
        -: 1259:  else
        -: 1260:    {
        -: 1261:      //replace discarded card with last card in hand
     4000: 1262:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1263:      //set last card to -1
     4000: 1264:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1265:      //reduce number of cards in hand
     4000: 1266:      state->handCount[currentPlayer]--;
        -: 1267:    }
        -: 1268:
     4000: 1269:  return 0;
        -: 1270:}
        -: 1271:
    #####: 1272:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1273:{
        -: 1274:  //Note: supplyPos is enum of choosen card
        -: 1275:
        -: 1276:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1277:  if ( supplyCount(supplyPos, state) < 1 )
        -: 1278:    {
    #####: 1279:      return -1;
        -: 1280:    }
        -: 1281:
        -: 1282:  //added card for [whoseTurn] current player:
        -: 1283:  // toFlag = 0 : add to discard
        -: 1284:  // toFlag = 1 : add to deck
        -: 1285:  // toFlag = 2 : add to hand
        -: 1286:
    #####: 1287:  if (toFlag == 1)
        -: 1288:    {
    #####: 1289:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1290:      state->deckCount[player]++;
        -: 1291:    }
    #####: 1292:  else if (toFlag == 2)
        -: 1293:    {
    #####: 1294:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1295:      state->handCount[player]++;
        -: 1296:    }
        -: 1297:  else
        -: 1298:    {
    #####: 1299:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1300:      state->discardCount[player]++;
        -: 1301:    }
        -: 1302:
        -: 1303:  //decrease number in supply pile
    #####: 1304:  state->supplyCount[supplyPos]--;
        -: 1305:
    #####: 1306:  return 0;
        -: 1307:}
        -: 1308:
        8: 1309:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1310:{
        -: 1311:  int i;
        -: 1312:
        -: 1313:  //reset coin count
        8: 1314:  state->coins = 0;
        -: 1315:
        -: 1316:  //add coins for each Treasure card in player's hand
        8: 1317:  for (i = 0; i < state->handCount[player]; i++)
        -: 1318:    {
    #####: 1319:      if (state->hand[player][i] == copper)
        -: 1320:	{
    #####: 1321:	  state->coins += 1;
        -: 1322:	}
    #####: 1323:      else if (state->hand[player][i] == silver)
        -: 1324:	{
    #####: 1325:	  state->coins += 2;
        -: 1326:	}
    #####: 1327:      else if (state->hand[player][i] == gold)
        -: 1328:	{
    #####: 1329:	  state->coins += 3;
        -: 1330:	}
        -: 1331:    }
        -: 1332:
        -: 1333:  //add bonus
        8: 1334:  state->coins += bonus;
        -: 1335:
        8: 1336:  return 0;
        -: 1337:}
        -: 1338:
        -: 1339:
        -: 1340://end of dominion.c
cardtest2.c:
FAIL: Hand count after playing adventurer was not correct. Expected 6, got 7
File 'dominion.c'
Lines executed:32.26% of 561
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:6
        -:    0:Programs:6
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
       30:    8:int compare(const void* a, const void* b) {
       30:    9:  if (*(int*)a > *(int*)b)
    #####:   10:    return 1;
       30:   11:  if (*(int*)a < *(int*)b)
        8:   12:    return -1;
       22:   13:  return 0;
        -:   14:}
        -:   15:
    #####:   16:struct gameState* newGame() {
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
        -:   19:}
        -:   20:
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
        -:   35:}
        -:   36:
        1:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;
        -:   43:  //set up random number generator
        1:   44:  SelectStream(1);
        1:   45:  PutSeed((long)randomSeed);
        -:   46:
        -:   47:  //check number of players
        1:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
        1:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
       11:   57:  for (i = 0; i < 10; i++)
        -:   58:    {
      110:   59:      for (j = 0; j < 10; j++)
        -:   60:        {
      100:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
        1:   73:  if (numPlayers == 2)
        -:   74:    {
        1:   75:      state->supplyCount[curse] = 10;
        -:   76:    }
    #####:   77:  else if (numPlayers == 3)
        -:   78:    {
    #####:   79:      state->supplyCount[curse] = 20;
        -:   80:    }
        -:   81:  else
        -:   82:    {
    #####:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
        1:   87:  if (numPlayers == 2)
        -:   88:    {
        1:   89:      state->supplyCount[estate] = 8;
        1:   90:      state->supplyCount[duchy] = 8;
        1:   91:      state->supplyCount[province] = 8;
        -:   92:    }
        -:   93:  else
        -:   94:    {
    #####:   95:      state->supplyCount[estate] = 12;
    #####:   96:      state->supplyCount[duchy] = 12;
    #####:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
        1:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
        1:  102:  state->supplyCount[silver] = 40;
        1:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
       21:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
        -:  107:    {
      165:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
        -:  109:	{
      155:  110:	  if (kingdomCards[j] == i)
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
       10:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
        -:  114:		{
    #####:  115:		  if (numPlayers == 2){
    #####:  116:		    state->supplyCount[i] = 8;
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
        -:  119:		}
        -:  120:	      else
        -:  121:		{
       10:  122:		  state->supplyCount[i] = 10;
        -:  123:		}
       10:  124:	      break;
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
      145:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
        3:  138:  for (i = 0; i < numPlayers; i++)
        -:  139:    {
        2:  140:      state->deckCount[i] = 0;
        8:  141:      for (j = 0; j < 3; j++)
        -:  142:	{
        6:  143:	  state->deck[i][j] = estate;
        6:  144:	  state->deckCount[i]++;
        -:  145:	}
       16:  146:      for (j = 3; j < 10; j++)
        -:  147:	{
       14:  148:	  state->deck[i][j] = copper;
       14:  149:	  state->deckCount[i]++;
        -:  150:	}
        -:  151:    }
        -:  152:
        -:  153:  //shuffle player decks
        3:  154:  for (i = 0; i < numPlayers; i++)
        -:  155:    {
        2:  156:      if ( shuffle(i, state) < 0 )
        -:  157:	{
    #####:  158:	  return -1;
        -:  159:	}
        -:  160:    }
        -:  161:
        -:  162:  //draw player hands
        3:  163:  for (i = 0; i < numPlayers; i++)
        -:  164:    {
        -:  165:      //initialize hand size to zero
        2:  166:      state->handCount[i] = 0;
        2:  167:      state->discardCount[i] = 0;
        -:  168:      //draw 5 cards
        -:  169:      // for (j = 0; j < 5; j++)
        -:  170:      //	{
        -:  171:      //	  drawCard(i, state);
        -:  172:      //	}
        -:  173:    }
        -:  174:
        -:  175:  //set embargo tokens to 0 for all supply piles
       28:  176:  for (i = 0; i <= treasure_map; i++)
        -:  177:    {
       27:  178:      state->embargoTokens[i] = 0;
        -:  179:    }
        -:  180:
        -:  181:  //initialize first player's turn
        1:  182:  state->outpostPlayed = 0;
        1:  183:  state->phase = 0;
        1:  184:  state->numActions = 1;
        1:  185:  state->numBuys = 1;
        1:  186:  state->playedCardCount = 0;
        1:  187:  state->whoseTurn = 0;
        1:  188:  state->handCount[state->whoseTurn] = 0;
        -:  189:  //int it; move to top
        -:  190:
        -:  191:  //Moved draw cards to here, only drawing at the start of a turn
        6:  192:  for (it = 0; it < 5; it++){
        5:  193:    drawCard(state->whoseTurn, state);
        -:  194:  }
        -:  195:
        1:  196:  updateCoins(state->whoseTurn, state, 0);
        -:  197:
        1:  198:  return 0;
        -:  199:}
        -:  200:
        2:  201:int shuffle(int player, struct gameState *state) {
        -:  202:
        -:  203:
        -:  204:  int newDeck[MAX_DECK];
        2:  205:  int newDeckPos = 0;
        -:  206:  int card;
        -:  207:  int i;
        -:  208:
        2:  209:  if (state->deckCount[player] < 1)
    #####:  210:    return -1;
        2:  211:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare);
        -:  212:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  213:
       24:  214:  while (state->deckCount[player] > 0) {
       20:  215:    card = floor(Random() * state->deckCount[player]);
       20:  216:    newDeck[newDeckPos] = state->deck[player][card];
       20:  217:    newDeckPos++;
       72:  218:    for (i = card; i < state->deckCount[player]-1; i++) {
       52:  219:      state->deck[player][i] = state->deck[player][i+1];
        -:  220:    }
       20:  221:    state->deckCount[player]--;
        -:  222:  }
       22:  223:  for (i = 0; i < newDeckPos; i++) {
       20:  224:    state->deck[player][i] = newDeck[i];
       20:  225:    state->deckCount[player]++;
        -:  226:  }
        -:  227:
        2:  228:  return 0;
        -:  229:}
        -:  230:
    #####:  231:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state)
        -:  232:{
        -:  233:  int card;
    #####:  234:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  235:
        -:  236:  //check if it is the right phase
    #####:  237:  if (state->phase != 0)
        -:  238:    {
    #####:  239:      return -1;
        -:  240:    }
        -:  241:
        -:  242:  //check if player has enough actions
    #####:  243:  if ( state->numActions < 1 )
        -:  244:    {
    #####:  245:      return -1;
        -:  246:    }
        -:  247:
        -:  248:  //get card played
    #####:  249:  card = handCard(handPos, state);
        -:  250:
        -:  251:  //check if selected card is an action
    #####:  252:  if ( card < adventurer || card > treasure_map )
        -:  253:    {
    #####:  254:      return -1;
        -:  255:    }
        -:  256:
        -:  257:  //play card
    #####:  258:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
        -:  259:    {
    #####:  260:      return -1;
        -:  261:    }
        -:  262:
        -:  263:  //reduce number of actions
    #####:  264:  state->numActions--;
        -:  265:
        -:  266:  //update coins (Treasure cards may be added with card draws)
    #####:  267:  updateCoins(state->whoseTurn, state, coin_bonus);
        -:  268:
    #####:  269:  return 0;
        -:  270:}
        -:  271:
    #####:  272:int buyCard(int supplyPos, struct gameState *state) {
        -:  273:  int who;
        -:  274:  if (DEBUG){
        -:  275:    printf("Entering buyCard...\n");
        -:  276:  }
        -:  277:
        -:  278:  // I don't know what to do about the phase thing.
        -:  279:
    #####:  280:  who = state->whoseTurn;
        -:  281:
    #####:  282:  if (state->numBuys < 1){
        -:  283:    if (DEBUG)
        -:  284:      printf("You do not have any buys left\n");
    #####:  285:    return -1;
    #####:  286:  } else if (supplyCount(supplyPos, state) <1){
        -:  287:    if (DEBUG)
        -:  288:      printf("There are not any of that type of card left\n");
    #####:  289:    return -1;
    #####:  290:  } else if (state->coins < getCost(supplyPos)){
        -:  291:    if (DEBUG)
        -:  292:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  293:    return -1;
        -:  294:  } else {
    #####:  295:    state->phase=1;
        -:  296:    //state->supplyCount[supplyPos]--;
    #####:  297:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  298:
    #####:  299:    state->coins = (state->coins) - (getCost(supplyPos));
    #####:  300:    state->numBuys--;
        -:  301:    if (DEBUG)
        -:  302:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  303:  }
        -:  304:
        -:  305:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  306:  //state->discardCount[who]++;
        -:  307:
    #####:  308:  return 0;
        -:  309:}
        -:  310:
       12:  311:int numHandCards(struct gameState *state) {
       12:  312:  return state->handCount[ whoseTurn(state) ];
        -:  313:}
        -:  314:
    #####:  315:int handCard(int handPos, struct gameState *state) {
    #####:  316:  int currentPlayer = whoseTurn(state);
    #####:  317:  return state->hand[currentPlayer][handPos];
        -:  318:}
        -:  319:
    #####:  320:int supplyCount(int card, struct gameState *state) {
    #####:  321:  return state->supplyCount[card];
        -:  322:}
        -:  323:
    #####:  324:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  325:  int i;
    #####:  326:  int count = 0;
        -:  327:
    #####:  328:  for (i = 0; i < state->deckCount[player]; i++)
        -:  329:    {
    #####:  330:      if (state->deck[player][i] == card) count++;
        -:  331:    }
        -:  332:
    #####:  333:  for (i = 0; i < state->handCount[player]; i++)
        -:  334:    {
    #####:  335:      if (state->hand[player][i] == card) count++;
        -:  336:    }
        -:  337:
    #####:  338:  for (i = 0; i < state->discardCount[player]; i++)
        -:  339:    {
    #####:  340:      if (state->discard[player][i] == card) count++;
        -:  341:    }
        -:  342:
    #####:  343:  return count;
        -:  344:}
        -:  345:
     4013:  346:int whoseTurn(struct gameState *state) {
     4013:  347:  return state->whoseTurn;
        -:  348:}
        -:  349:
    #####:  350:int endTurn(struct gameState *state) {
        -:  351:  int k;
        -:  352:  int i;
    #####:  353:  int currentPlayer = whoseTurn(state);
        -:  354:
        -:  355:  //Discard hand
    #####:  356:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    #####:  357:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  358:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  359:  }
    #####:  360:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  361:
        -:  362:  //Code for determining the player
    #####:  363:  if (currentPlayer < (state->numPlayers - 1)){
    #####:  364:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  365:  }
        -:  366:  else{
    #####:  367:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  368:  }
        -:  369:
    #####:  370:  state->outpostPlayed = 0;
    #####:  371:  state->phase = 0;
    #####:  372:  state->numActions = 1;
    #####:  373:  state->coins = 0;
    #####:  374:  state->numBuys = 1;
    #####:  375:  state->playedCardCount = 0;
    #####:  376:  state->handCount[state->whoseTurn] = 0;
        -:  377:
        -:  378:  //int k; move to top
        -:  379:  //Next player draws hand
    #####:  380:  for (k = 0; k < 5; k++){
    #####:  381:    drawCard(state->whoseTurn, state);//Draw a card
        -:  382:  }
        -:  383:
        -:  384:  //Update money
    #####:  385:  updateCoins(state->whoseTurn, state , 0);
        -:  386:
    #####:  387:  return 0;
        -:  388:}
        -:  389:
     1002:  390:int isGameOver(struct gameState *state) {
        -:  391:  int i;
        -:  392:  int j;
        -:  393:
        -:  394:  //if stack of Province cards is empty, the game ends
     1002:  395:  if (state->supplyCount[province] == 0)
        -:  396:    {
      109:  397:      return 1;
        -:  398:    }
        -:  399:
        -:  400:  //if three supply pile are at 0, the game ends
      893:  401:  j = 0;
    23218:  402:  for (i = 0; i < 25; i++)
        -:  403:    {
    22325:  404:      if (state->supplyCount[i] == 0)
        -:  405:	{
     2676:  406:	  j++;
        -:  407:	}
        -:  408:    }
      893:  409:  if ( j >= 3)
        -:  410:    {
      892:  411:      return 1;
        -:  412:    }
        -:  413:
        1:  414:  return 0;
        -:  415:}
        -:  416:
        4:  417:int scoreFor (int player, struct gameState *state) {
        -:  418:
        -:  419:  int i;
        4:  420:  int score = 0;
        -:  421:  //score from hand
       16:  422:  for (i = 0; i < state->handCount[player]; i++)
        -:  423:    {
       12:  424:      if (state->hand[player][i] == curse) { score = score - 1; };
       12:  425:      if (state->hand[player][i] == estate) { score = score + 1; };
       12:  426:      if (state->hand[player][i] == duchy) { score = score + 3; };
       12:  427:      if (state->hand[player][i] == province) { score = score + 6; };
       12:  428:      if (state->hand[player][i] == great_hall) { score = score + 1; };
       12:  429:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  430:    }
        -:  431:
        -:  432:  //score from discard
        4:  433:  for (i = 0; i < state->discardCount[player]; i++)
        -:  434:    {
    #####:  435:      if (state->discard[player][i] == curse) { score = score - 1; };
    #####:  436:      if (state->discard[player][i] == estate) { score = score + 1; };
    #####:  437:      if (state->discard[player][i] == duchy) { score = score + 3; };
    #####:  438:      if (state->discard[player][i] == province) { score = score + 6; };
    #####:  439:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    #####:  440:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  441:    }
        -:  442:
        -:  443:  //score from deck
        4:  444:  for (i = 0; i < state->discardCount[player]; i++)
        -:  445:    {
    #####:  446:      if (state->deck[player][i] == curse) { score = score - 1; };
    #####:  447:      if (state->deck[player][i] == estate) { score = score + 1; };
    #####:  448:      if (state->deck[player][i] == duchy) { score = score + 3; };
    #####:  449:      if (state->deck[player][i] == province) { score = score + 6; };
    #####:  450:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    #####:  451:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  452:    }
        -:  453:
        4:  454:  return score;
        -:  455:}
        -:  456:
    #####:  457:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  458:  int i;
        -:  459:  int j;
        -:  460:  int highScore;
        -:  461:  int currentPlayer;
        -:  462:
        -:  463:  //get score for each player
    #####:  464:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  465:    {
        -:  466:      //set unused player scores to -9999
    #####:  467:      if (i >= state->numPlayers)
        -:  468:	{
    #####:  469:	  players[i] = -9999;
        -:  470:	}
        -:  471:      else
        -:  472:	{
    #####:  473:	  players[i] = scoreFor (i, state);
        -:  474:	}
        -:  475:    }
        -:  476:
        -:  477:  //find highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  480:    {
    #####:  481:      if (players[i] > players[j])
        -:  482:	{
    #####:  483:	  j = i;
        -:  484:	}
        -:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //add 1 to players who had less turns
    #####:  489:  currentPlayer = whoseTurn(state);
    #####:  490:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  491:    {
    #####:  492:      if ( players[i] == highScore && i > currentPlayer )
        -:  493:	{
    #####:  494:	  players[i]++;
        -:  495:	}
        -:  496:    }
        -:  497:
        -:  498:  //find new highest score
    #####:  499:  j = 0;
    #####:  500:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  501:    {
    #####:  502:      if ( players[i] > players[j] )
        -:  503:	{
    #####:  504:	  j = i;
        -:  505:	}
        -:  506:    }
    #####:  507:  highScore = players[j];
        -:  508:
        -:  509:  //set winners in array to 1 and rest to 0
    #####:  510:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  511:    {
    #####:  512:      if ( players[i] == highScore )
        -:  513:	{
    #####:  514:	  players[i] = 1;
        -:  515:	}
        -:  516:      else
        -:  517:	{
    #####:  518:	  players[i] = 0;
        -:  519:	}
        -:  520:    }
        -:  521:
    #####:  522:  return 0;
        -:  523:}
        -:  524:
    12007:  525:int drawCard(int player, struct gameState *state)
        -:  526:{	int count;
        -:  527:  int deckCounter;
    12007:  528:  if (state->deckCount[player] <= 0){//Deck is empty
        -:  529:
        -:  530:    //Step 1 Shuffle the discard pile back into a deck
        -:  531:    int i;
        -:  532:    //Move discard to deck
    #####:  533:    for (i = 0; i < state->discardCount[player];i++){
    #####:  534:      state->deck[player][i] = state->discard[player][i];
    #####:  535:      state->discard[player][i] = -1;
        -:  536:    }
        -:  537:
    #####:  538:    state->deckCount[player] = state->discardCount[player];
    #####:  539:    state->discardCount[player] = 0;//Reset discard
        -:  540:
        -:  541:    //Shufffle the deck
    #####:  542:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
        -:  543:
        -:  544:    if (DEBUG){//Debug statements
        -:  545:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  546:    }
        -:  547:
    #####:  548:    state->discardCount[player] = 0;
        -:  549:
        -:  550:    //Step 2 Draw Card
    #####:  551:    count = state->handCount[player];//Get current player's hand count
        -:  552:
        -:  553:    if (DEBUG){//Debug statements
        -:  554:      printf("Current hand count: %d\n", count);
        -:  555:    }
        -:  556:
    #####:  557:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  558:
    #####:  559:    if (deckCounter == 0)
    #####:  560:      return -1;
        -:  561:
    #####:  562:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    #####:  563:    state->deckCount[player]--;
    #####:  564:    state->handCount[player]++;//Increment hand count
        -:  565:  }
        -:  566:
        -:  567:  else{
    12007:  568:    int count = state->handCount[player];//Get current hand count for player
        -:  569:    int deckCounter;
        -:  570:    if (DEBUG){//Debug statements
        -:  571:      printf("Current hand count: %d\n", count);
        -:  572:    }
        -:  573:
    12007:  574:    deckCounter = state->deckCount[player];//Create holder for the deck count
    12007:  575:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
    12007:  576:    state->deckCount[player]--;
    12007:  577:    state->handCount[player]++;//Increment hand count
        -:  578:  }
        -:  579:
    12007:  580:  return 0;
        -:  581:}
        -:  582:
       35:  583:int getCost(int cardNumber)
        -:  584:{
       35:  585:  switch( cardNumber )
        -:  586:    {
        -:  587:    case curse:
        1:  588:      return 0;
        -:  589:    case estate:
        1:  590:      return 2;
        -:  591:    case duchy:
        1:  592:      return 5;
        -:  593:    case province:
        1:  594:      return 8;
        -:  595:    case copper:
        1:  596:      return 0;
        -:  597:    case silver:
        1:  598:      return 3;
        -:  599:    case gold:
        1:  600:      return 6;
        -:  601:    case adventurer:
        1:  602:      return 6;
        -:  603:    case council_room:
        1:  604:      return 5;
        -:  605:    case feast:
        1:  606:      return 4;
        -:  607:    case gardens:
        1:  608:      return 4;
        -:  609:    case mine:
        1:  610:      return 5;
        -:  611:    case remodel:
        1:  612:      return 4;
        -:  613:    case smithy:
        1:  614:      return 4;
        -:  615:    case village:
        1:  616:      return 3;
        -:  617:    case baron:
        1:  618:      return 4;
        -:  619:    case great_hall:
        1:  620:      return 3;
        -:  621:    case minion:
        1:  622:      return 5;
        -:  623:    case steward:
        1:  624:      return 3;
        -:  625:    case tribute:
        1:  626:      return 5;
        -:  627:    case ambassador:
        1:  628:      return 3;
        -:  629:    case cutpurse:
        1:  630:      return 4;
        -:  631:    case embargo:
        1:  632:      return 2;
        -:  633:    case outpost:
        1:  634:      return 5;
        -:  635:    case salvager:
        1:  636:      return 4;
        -:  637:    case sea_hag:
        1:  638:      return 4;
        -:  639:    case treasure_map:
        1:  640:      return 4;
        -:  641:    }
        -:  642:
        8:  643:  return -1;
        -:  644:}
        -:  645:
        1:  646:void adventurer_action (int drawntreasure, struct gameState *state, int currentPlayer, int cardDrawn, int temphand[MAX_HAND], int z) {
        4:  647:    while(drawntreasure<2){
        2:  648:        if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
    #####:  649:            shuffle(currentPlayer, state);
        -:  650:        }
        2:  651:        drawCard(currentPlayer, state);
        2:  652:        cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
        2:  653:        if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
        2:  654:          drawntreasure++;
        -:  655:        else{
    #####:  656:          temphand[z]=cardDrawn;
    #####:  657:          state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
        -:  658:        }
        -:  659:  }
        2:  660:  while(z-1>=0){
    #####:  661:      state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    #####:  662:      z=z-1;
        -:  663:  }
        1:  664:}
        -:  665:
     4000:  666:void smithy_action (int currentPlayer, struct gameState *state, int i, int handPos) {
        -:  667:  //+3 Cards
    16000:  668:  for (i = 0; i < 3; i++) {
    12000:  669:    drawCard(currentPlayer, state);
        -:  670:  }
        -:  671:
        -:  672:  //discard card from hand
     4000:  673:  discardCard(handPos, currentPlayer, state, 0);
     4000:  674:}
        -:  675:
    #####:  676:void village_action (int currentPlayer, struct gameState *state, int handPos) {
        -:  677:  //+1 Card
    #####:  678:  drawCard(currentPlayer, state);
        -:  679:
        -:  680:  //+2 Actions
    #####:  681:  state->numActions = state->numActions + 2;
        -:  682:
        -:  683:  //discard played card from hand
    #####:  684:  discardCard(handPos, currentPlayer, state, 0);
    #####:  685:}
        -:  686:
    #####:  687:void council_room_action (int i, int currentPlayer, struct gameState *state) {
        -:  688:  //+4 Cards
    #####:  689:  for (i = 0; i < 4; i++) {
    #####:  690:      drawCard(currentPlayer, state);
        -:  691:  }
        -:  692:
        -:  693:  //+1 Buy
    #####:  694:  state->numBuys++;
        -:  695:
        -:  696:  //Each other player draws a card
    #####:  697:  for (i = 0; i < state->numPlayers; i++) {
    #####:  698:      if ( i == currentPlayer ) {
    #####:  699:          drawCard(i, state);
        -:  700:      }
        -:  701:  }
    #####:  702:}
        -:  703:
    #####:  704:int mine_action (int j, struct gameState *state, int currentPlayer, int choice1, int choice2, int handPos, int i) {
    #####:  705:  j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  706:
    #####:  707:  if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold) {
    #####:  708:      return -1;
        -:  709:  }
        -:  710:
    #####:  711:  if (choice2 > treasure_map || choice2 < curse) {
    #####:  712:      return -1;
        -:  713:  }
        -:  714:
    #####:  715:  if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) ) {
    #####:  716:      return -1;
        -:  717:  }
        -:  718:
    #####:  719:  gainCard(choice2, state, 2, currentPlayer);
        -:  720:
        -:  721:  //discard card from hand
    #####:  722:  discardCard(handPos, currentPlayer, state, 0);
        -:  723:
        -:  724:  //discard trashed card
    #####:  725:  for (i = 0; i < state->handCount[currentPlayer]; i++) {
    #####:  726:      if (state->hand[currentPlayer][i] == j) {
    #####:  727:        discardCard(i, currentPlayer, state, 0);
    #####:  728:        break;
        -:  729:      }
        -:  730:  }
        -:  731:
    #####:  732:  return -1;
        -:  733:}
        -:  734:
     4001:  735:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  736:{
        -:  737:  int i;
        -:  738:  int j;
        -:  739:  int k;
        -:  740:  int x;
        -:  741:  int m;
        -:  742:  int index;
     4001:  743:  int currentPlayer = whoseTurn(state);
     4001:  744:  int nextPlayer = currentPlayer + 1;
        -:  745:
     4001:  746:  int tributeRevealedCards[2] = {-1, -1};
        -:  747:  int temphand[MAX_HAND];// moved above the if statement
     4001:  748:  int drawntreasure=0;
        -:  749:  int cardDrawn;
     4001:  750:  int z = 0;// this is the counter for the temp hand
     4001:  751:  if (nextPlayer > (state->numPlayers - 1)){
     4000:  752:    nextPlayer = 0;
        -:  753:  }
        -:  754:
        -:  755:
        -:  756:  //uses switch to select card and perform actions
     4001:  757:  switch( card )
        -:  758:    {
        -:  759:    case adventurer:
        1:  760:      adventurer_action (drawntreasure, state, currentPlayer, cardDrawn, temphand, z);
        1:  761:      return 0;
        -:  762:
        -:  763:    case council_room:
    #####:  764:      council_room_action (i, currentPlayer, state);
    #####:  765:      return 0;
        -:  766:
        -:  767:    case feast:
        -:  768:      //gain card with cost up to 5
        -:  769:      //Backup hand
    #####:  770:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  771:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  772:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  773:      }
        -:  774:      //Backup hand
        -:  775:
        -:  776:      //Update Coins for Buy
    #####:  777:      updateCoins(currentPlayer, state, 5);
    #####:  778:      x = 1;//Condition to loop on
    #####:  779:      while( x == 1) {//Buy one card
    #####:  780:	if (supplyCount(choice1, state) <= 0){
        -:  781:	  if (DEBUG)
        -:  782:	    printf("None of that card left, sorry!\n");
        -:  783:
        -:  784:	  if (DEBUG){
        -:  785:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  786:	  }
        -:  787:	}
    #####:  788:	else if (state->coins < getCost(choice1)){
    #####:  789:	  printf("That card is too expensive!\n");
        -:  790:
        -:  791:	  if (DEBUG){
        -:  792:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  793:	  }
        -:  794:	}
        -:  795:	else{
        -:  796:
        -:  797:	  if (DEBUG){
        -:  798:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  799:	  }
        -:  800:
    #####:  801:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    #####:  802:	  x = 0;//No more buying cards
        -:  803:
        -:  804:	  if (DEBUG){
        -:  805:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  806:	  }
        -:  807:
        -:  808:	}
        -:  809:      }
        -:  810:
        -:  811:      //Reset Hand
    #####:  812:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  813:	state->hand[currentPlayer][i] = temphand[i];
    #####:  814:	temphand[i] = -1;
        -:  815:      }
        -:  816:      //Reset Hand
        -:  817:
    #####:  818:      return 0;
        -:  819:
        -:  820:    case gardens:
    #####:  821:      return -1;
        -:  822:
        -:  823:    case mine:
    #####:  824:      m = mine_action (j, state, currentPlayer, choice1, choice2, handPos, i);
    #####:  825:      return m;
        -:  826:
        -:  827:    case remodel:
    #####:  828:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  829:
    #####:  830:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
        -:  831:	{
    #####:  832:	  return -1;
        -:  833:	}
        -:  834:
    #####:  835:      gainCard(choice2, state, 0, currentPlayer);
        -:  836:
        -:  837:      //discard card from hand
    #####:  838:      discardCard(handPos, currentPlayer, state, 0);
        -:  839:
        -:  840:      //discard trashed card
    #####:  841:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  842:	{
    #####:  843:	  if (state->hand[currentPlayer][i] == j)
        -:  844:	    {
    #####:  845:	      discardCard(i, currentPlayer, state, 0);
    #####:  846:	      break;
        -:  847:	    }
        -:  848:	}
        -:  849:
        -:  850:
    #####:  851:      return 0;
        -:  852:
        -:  853:    case smithy:
     4000:  854:      smithy_action (currentPlayer, state, i, handPos);
     4000:  855:      return 0;
        -:  856:
        -:  857:    case village:
    #####:  858:      village_action (currentPlayer, state, handPos);
    #####:  859:      return 0;
        -:  860:
        -:  861:    case baron:
    #####:  862:      state->numBuys++;//Increase buys by 1!
    #####:  863:      if (choice1 > 0){//Boolean true or going to discard an estate
    #####:  864:	int p = 0;//Iterator for hand!
    #####:  865:	int card_not_discarded = 1;//Flag for discard set!
    #####:  866:	while(card_not_discarded){
    #####:  867:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    #####:  868:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  869:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  870:	    state->discardCount[currentPlayer]++;
    #####:  871:	    for (;p < state->handCount[currentPlayer]; p++){
    #####:  872:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  873:	    }
    #####:  874:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  875:	    state->handCount[currentPlayer]--;
    #####:  876:	    card_not_discarded = 0;//Exit the loop
        -:  877:	  }
    #####:  878:	  else if (p > state->handCount[currentPlayer]){
        -:  879:	    if(DEBUG) {
        -:  880:	      printf("No estate cards in your hand, invalid choice\n");
        -:  881:	      printf("Must gain an estate if there are any\n");
        -:  882:	    }
    #####:  883:	    if (supplyCount(estate, state) > 0){
    #####:  884:	      gainCard(estate, state, 0, currentPlayer);
    #####:  885:	      state->supplyCount[estate]--;//Decrement estates
    #####:  886:	      if (supplyCount(estate, state) == 0){
    #####:  887:		isGameOver(state);
        -:  888:	      }
        -:  889:	    }
    #####:  890:	    card_not_discarded = 0;//Exit the loop
        -:  891:	  }
        -:  892:
        -:  893:	  else{
    #####:  894:	    p++;//Next card
        -:  895:	  }
        -:  896:	}
        -:  897:      }
        -:  898:
        -:  899:      else{
    #####:  900:	if (supplyCount(estate, state) > 0){
    #####:  901:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
    #####:  902:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  903:	  if (supplyCount(estate, state) == 0){
    #####:  904:	    isGameOver(state);
        -:  905:	  }
        -:  906:	}
        -:  907:      }
        -:  908:
        -:  909:
    #####:  910:      return 0;
        -:  911:
        -:  912:    case great_hall:
        -:  913:      //+1 Card
    #####:  914:      drawCard(currentPlayer, state);
        -:  915:
        -:  916:      //+1 Actions
    #####:  917:      state->numActions++;
        -:  918:
        -:  919:      //discard card from hand
    #####:  920:      discardCard(handPos, currentPlayer, state, 0);
    #####:  921:      return 0;
        -:  922:
        -:  923:    case minion:
        -:  924:      //+1 action
    #####:  925:      state->numActions++;
        -:  926:
        -:  927:      //discard card from hand
    #####:  928:      discardCard(handPos, currentPlayer, state, 0);
        -:  929:
    #####:  930:      if (choice1)		//+2 coins
        -:  931:	{
    #####:  932:	  state->coins = state->coins + 2;
        -:  933:	}
        -:  934:
    #####:  935:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
        -:  936:	{
        -:  937:	  //discard hand
    #####:  938:	  while(numHandCards(state) > 0)
        -:  939:	    {
    #####:  940:	      discardCard(handPos, currentPlayer, state, 0);
        -:  941:	    }
        -:  942:
        -:  943:	  //draw 4
    #####:  944:	  for (i = 0; i < 4; i++)
        -:  945:	    {
    #####:  946:	      drawCard(currentPlayer, state);
        -:  947:	    }
        -:  948:
        -:  949:	  //other players discard hand and redraw if hand size > 4
    #####:  950:	  for (i = 0; i < state->numPlayers; i++)
        -:  951:	    {
    #####:  952:	      if (i != currentPlayer)
        -:  953:		{
    #####:  954:		  if ( state->handCount[i] > 4 )
        -:  955:		    {
        -:  956:		      //discard hand
    #####:  957:		      while( state->handCount[i] > 0 )
        -:  958:			{
    #####:  959:			  discardCard(handPos, i, state, 0);
        -:  960:			}
        -:  961:
        -:  962:		      //draw 4
    #####:  963:		      for (j = 0; j < 4; j++)
        -:  964:			{
    #####:  965:			  drawCard(i, state);
        -:  966:			}
        -:  967:		    }
        -:  968:		}
        -:  969:	    }
        -:  970:
        -:  971:	}
    #####:  972:      return 0;
        -:  973:
        -:  974:    case steward:
    #####:  975:      if (choice1 == 1)
        -:  976:	{
        -:  977:	  //+2 cards
    #####:  978:	  drawCard(currentPlayer, state);
    #####:  979:	  drawCard(currentPlayer, state);
        -:  980:	}
    #####:  981:      else if (choice1 == 2)
        -:  982:	{
        -:  983:	  //+2 coins
    #####:  984:	  state->coins = state->coins + 2;
        -:  985:	}
        -:  986:      else
        -:  987:	{
        -:  988:	  //trash 2 cards in hand
    #####:  989:	  discardCard(choice2, currentPlayer, state, 1);
    #####:  990:	  discardCard(choice3, currentPlayer, state, 1);
        -:  991:	}
        -:  992:
        -:  993:      //discard card from hand
    #####:  994:      discardCard(handPos, currentPlayer, state, 0);
    #####:  995:      return 0;
        -:  996:
        -:  997:    case tribute:
    #####:  998:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    #####:  999:	if (state->deckCount[nextPlayer] > 0){
    #####: 1000:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1001:	  state->deckCount[nextPlayer]--;
        -: 1002:	}
    #####: 1003:	else if (state->discardCount[nextPlayer] > 0){
    #####: 1004:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1005:	  state->discardCount[nextPlayer]--;
        -: 1006:	}
        -: 1007:	else{
        -: 1008:	  //No Card to Reveal
        -: 1009:	  if (DEBUG){
        -: 1010:	    printf("No cards to reveal\n");
        -: 1011:	  }
        -: 1012:	}
        -: 1013:      }
        -: 1014:
        -: 1015:      else{
    #####: 1016:	if (state->deckCount[nextPlayer] == 0){
    #####: 1017:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    #####: 1018:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1019:	    state->deckCount[nextPlayer]++;
    #####: 1020:	    state->discard[nextPlayer][i] = -1;
    #####: 1021:	    state->discardCount[nextPlayer]--;
        -: 1022:	  }
        -: 1023:
    #####: 1024:	  shuffle(nextPlayer,state);//Shuffle the deck
        -: 1025:	}
    #####: 1026:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1027:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1028:	state->deckCount[nextPlayer]--;
    #####: 1029:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1030:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1031:	state->deckCount[nextPlayer]--;
        -: 1032:      }
        -: 1033:
    #####: 1034:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one
    #####: 1035:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1036:	state->playedCardCount++;
    #####: 1037:	tributeRevealedCards[1] = -1;
        -: 1038:      }
        -: 1039:
    #####: 1040:      for (i = 0; i <= 2; i ++){
    #####: 1041:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    #####: 1042:	  state->coins += 2;
        -: 1043:	}
        -: 1044:
    #####: 1045:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    #####: 1046:	  drawCard(currentPlayer, state);
    #####: 1047:	  drawCard(currentPlayer, state);
        -: 1048:	}
        -: 1049:	else{//Action Card
    #####: 1050:	  state->numActions = state->numActions + 2;
        -: 1051:	}
        -: 1052:      }
        -: 1053:
    #####: 1054:      return 0;
        -: 1055:
        -: 1056:    case ambassador:
    #####: 1057:      j = 0;		//used to check if player has enough cards to discard
        -: 1058:
    #####: 1059:      if (choice2 > 2 || choice2 < 0)
        -: 1060:	{
    #####: 1061:	  return -1;
        -: 1062:	}
        -: 1063:
    #####: 1064:      if (choice1 == handPos)
        -: 1065:	{
    #####: 1066:	  return -1;
        -: 1067:	}
        -: 1068:
    #####: 1069:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1070:	{
    #####: 1071:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
        -: 1072:	    {
    #####: 1073:	      j++;
        -: 1074:	    }
        -: 1075:	}
    #####: 1076:      if (j < choice2)
        -: 1077:	{
    #####: 1078:	  return -1;
        -: 1079:	}
        -: 1080:
        -: 1081:      if (DEBUG)
        -: 1082:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1083:
        -: 1084:      //increase supply count for choosen card by amount being discarded
    #####: 1085:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1086:
        -: 1087:      //each other player gains a copy of revealed card
    #####: 1088:      for (i = 0; i < state->numPlayers; i++)
        -: 1089:	{
    #####: 1090:	  if (i != currentPlayer)
        -: 1091:	    {
    #####: 1092:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
        -: 1093:	    }
        -: 1094:	}
        -: 1095:
        -: 1096:      //discard played card from hand
    #####: 1097:      discardCard(handPos, currentPlayer, state, 0);
        -: 1098:
        -: 1099:      //trash copies of cards returned to supply
    #####: 1100:      for (j = 0; j < choice2; j++)
        -: 1101:	{
    #####: 1102:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1103:	    {
    #####: 1104:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
        -: 1105:		{
    #####: 1106:		  discardCard(i, currentPlayer, state, 1);
    #####: 1107:		  break;
        -: 1108:		}
        -: 1109:	    }
        -: 1110:	}
        -: 1111:
    #####: 1112:      return 0;
        -: 1113:
        -: 1114:    case cutpurse:
        -: 1115:
    #####: 1116:      updateCoins(currentPlayer, state, 2);
    #####: 1117:      for (i = 0; i < state->numPlayers; i++)
        -: 1118:	{
    #####: 1119:	  if (i != currentPlayer)
        -: 1120:	    {
    #####: 1121:	      for (j = 0; j < state->handCount[i]; j++)
        -: 1122:		{
    #####: 1123:		  if (state->hand[i][j] == copper)
        -: 1124:		    {
    #####: 1125:		      discardCard(j, i, state, 0);
    #####: 1126:		      break;
        -: 1127:		    }
    #####: 1128:		  if (j == state->handCount[i])
        -: 1129:		    {
    #####: 1130:		      for (k = 0; k < state->handCount[i]; k++)
        -: 1131:			{
        -: 1132:			  if (DEBUG)
        -: 1133:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1134:			}
    #####: 1135:		      break;
        -: 1136:		    }
        -: 1137:		}
        -: 1138:
        -: 1139:	    }
        -: 1140:
        -: 1141:	}
        -: 1142:
        -: 1143:      //discard played card from hand
    #####: 1144:      discardCard(handPos, currentPlayer, state, 0);
        -: 1145:
    #####: 1146:      return 0;
        -: 1147:
        -: 1148:
        -: 1149:    case embargo:
        -: 1150:      //+2 Coins
    #####: 1151:      state->coins = state->coins + 2;
        -: 1152:
        -: 1153:      //see if selected pile is in play
    #####: 1154:      if ( state->supplyCount[choice1] == -1 )
        -: 1155:	{
    #####: 1156:	  return -1;
        -: 1157:	}
        -: 1158:
        -: 1159:      //add embargo token to selected supply pile
    #####: 1160:      state->embargoTokens[choice1]++;
        -: 1161:
        -: 1162:      //trash card
    #####: 1163:      discardCard(handPos, currentPlayer, state, 1);
    #####: 1164:      return 0;
        -: 1165:
        -: 1166:    case outpost:
        -: 1167:      //set outpost flag
    #####: 1168:      state->outpostPlayed++;
        -: 1169:
        -: 1170:      //discard card
    #####: 1171:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1172:      return 0;
        -: 1173:
        -: 1174:    case salvager:
        -: 1175:      //+1 buy
    #####: 1176:      state->numBuys++;
        -: 1177:
    #####: 1178:      if (choice1)
        -: 1179:	{
        -: 1180:	  //gain coins equal to trashed card
    #####: 1181:	  state->coins = state->coins + getCost( handCard(choice1, state) );
        -: 1182:	  //trash card
    #####: 1183:	  discardCard(choice1, currentPlayer, state, 1);
        -: 1184:	}
        -: 1185:
        -: 1186:      //discard card
    #####: 1187:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1188:      return 0;
        -: 1189:
        -: 1190:    case sea_hag:
    #####: 1191:      for (i = 0; i < state->numPlayers; i++){
    #####: 1192:	if (i != currentPlayer){
    #####: 1193:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1194:	  state->discardCount[i]++;
    #####: 1195:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1196:	}
        -: 1197:      }
    #####: 1198:      return 0;
        -: 1199:
        -: 1200:    case treasure_map:
        -: 1201:      //search hand for another treasure_map
    #####: 1202:      index = -1;
    #####: 1203:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1204:	{
    #####: 1205:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
        -: 1206:	    {
    #####: 1207:	      index = i;
    #####: 1208:	      break;
        -: 1209:	    }
        -: 1210:	}
    #####: 1211:      if (index > -1)
        -: 1212:	{
        -: 1213:	  //trash both treasure cards
    #####: 1214:	  discardCard(handPos, currentPlayer, state, 1);
    #####: 1215:	  discardCard(index, currentPlayer, state, 1);
        -: 1216:
        -: 1217:	  //gain 4 Gold cards
    #####: 1218:	  for (i = 0; i < 4; i++)
        -: 1219:	    {
    #####: 1220:	      gainCard(gold, state, 1, currentPlayer);
        -: 1221:	    }
        -: 1222:
        -: 1223:	  //return success
    #####: 1224:	  return 1;
        -: 1225:	}
        -: 1226:
        -: 1227:      //no second treasure_map found in hand
    #####: 1228:      return -1;
        -: 1229:    }
        -: 1230:
    #####: 1231:  return -1;
        -: 1232:}
        -: 1233:
     4000: 1234:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1235:{
        -: 1236:
        -: 1237:  //if card is not trashed, added to Played pile
     4000: 1238:  if (trashFlag < 1)
        -: 1239:    {
        -: 1240:      //add card to played pile
     4000: 1241:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos];
     4000: 1242:      state->playedCardCount++;
        -: 1243:    }
        -: 1244:
        -: 1245:  //set played card to -1
     4000: 1246:  state->hand[currentPlayer][handPos] = -1;
        -: 1247:
        -: 1248:  //remove card from player's hand
     4000: 1249:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
        -: 1250:    {
        -: 1251:      //reduce number of cards in hand
    #####: 1252:      state->handCount[currentPlayer]--;
        -: 1253:    }
     4000: 1254:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
        -: 1255:    {
        -: 1256:      //reduce number of cards in hand
    #####: 1257:      state->handCount[currentPlayer]--;
        -: 1258:    }
        -: 1259:  else
        -: 1260:    {
        -: 1261:      //replace discarded card with last card in hand
     4000: 1262:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1263:      //set last card to -1
     4000: 1264:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1265:      //reduce number of cards in hand
     4000: 1266:      state->handCount[currentPlayer]--;
        -: 1267:    }
        -: 1268:
     4000: 1269:  return 0;
        -: 1270:}
        -: 1271:
    #####: 1272:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1273:{
        -: 1274:  //Note: supplyPos is enum of choosen card
        -: 1275:
        -: 1276:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1277:  if ( supplyCount(supplyPos, state) < 1 )
        -: 1278:    {
    #####: 1279:      return -1;
        -: 1280:    }
        -: 1281:
        -: 1282:  //added card for [whoseTurn] current player:
        -: 1283:  // toFlag = 0 : add to discard
        -: 1284:  // toFlag = 1 : add to deck
        -: 1285:  // toFlag = 2 : add to hand
        -: 1286:
    #####: 1287:  if (toFlag == 1)
        -: 1288:    {
    #####: 1289:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1290:      state->deckCount[player]++;
        -: 1291:    }
    #####: 1292:  else if (toFlag == 2)
        -: 1293:    {
    #####: 1294:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1295:      state->handCount[player]++;
        -: 1296:    }
        -: 1297:  else
        -: 1298:    {
    #####: 1299:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1300:      state->discardCount[player]++;
        -: 1301:    }
        -: 1302:
        -: 1303:  //decrease number in supply pile
    #####: 1304:  state->supplyCount[supplyPos]--;
        -: 1305:
    #####: 1306:  return 0;
        -: 1307:}
        -: 1308:
        9: 1309:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1310:{
        -: 1311:  int i;
        -: 1312:
        -: 1313:  //reset coin count
        9: 1314:  state->coins = 0;
        -: 1315:
        -: 1316:  //add coins for each Treasure card in player's hand
       14: 1317:  for (i = 0; i < state->handCount[player]; i++)
        -: 1318:    {
        5: 1319:      if (state->hand[player][i] == copper)
        -: 1320:	{
        4: 1321:	  state->coins += 1;
        -: 1322:	}
        1: 1323:      else if (state->hand[player][i] == silver)
        -: 1324:	{
    #####: 1325:	  state->coins += 2;
        -: 1326:	}
        1: 1327:      else if (state->hand[player][i] == gold)
        -: 1328:	{
    #####: 1329:	  state->coins += 3;
        -: 1330:	}
        -: 1331:    }
        -: 1332:
        -: 1333:  //add bonus
        9: 1334:  state->coins += bonus;
        -: 1335:
        9: 1336:  return 0;
        -: 1337:}
        -: 1338:
        -: 1339:
        -: 1340://end of dominion.c
cardtest3.c:
FAIL: Hand count after playing council_room was not correct. Expected 197, got 199
FAIL: Hand count after playing council_room was not correct. Expected 199, got 463
FAIL: Hand count after playing council_room was not correct. Expected 199, got 434
FAIL: Hand count after playing council_room was not correct. Expected 199, got 254
FAIL: Hand count after playing council_room was not correct. Expected 328, got 330
FAIL: Hand count after playing council_room was not correct. Expected 330, got 350
FAIL: Hand count after playing council_room was not correct. Expected 330, got 372
FAIL: Hand count after playing council_room was not correct. Expected 330, got 298
FAIL: Hand count after playing council_room was not correct. Expected 73, got 75
FAIL: Hand count after playing council_room was not correct. Expected 75, got 5
FAIL: Hand count after playing council_room was not correct. Expected 75, got 38
FAIL: Hand count after playing council_room was not correct. Expected 75, got 95
FAIL: Hand count after playing council_room was not correct. Expected 88, got 90
FAIL: Hand count after playing council_room was not correct. Expected 90, got 234
FAIL: Hand count after playing council_room was not correct. Expected 90, got 192
FAIL: Hand count after playing council_room was not correct. Expected 90, got 473
FAIL: Hand count after playing council_room was not correct. Expected 216, got 218
FAIL: Hand count after playing council_room was not correct. Expected 218, got 3
FAIL: Hand count after playing council_room was not correct. Expected 218, got 284
FAIL: Hand count after playing council_room was not correct. Expected 218, got 209
FAIL: Hand count after playing council_room was not correct. Expected 343, got 345
FAIL: Hand count after playing council_room was not correct. Expected 345, got 32
FAIL: Hand count after playing council_room was not correct. Expected 345, got 488
FAIL: Hand count after playing council_room was not correct. Expected 345, got 80
FAIL: Hand count after playing council_room was not correct. Expected 158, got 160
FAIL: Hand count after playing council_room was not correct. Expected 160, got 269
FAIL: Hand count after playing council_room was not correct. Expected 160, got 242
FAIL: Hand count after playing council_room was not correct. Expected 160, got 150
FAIL: Hand count after playing council_room was not correct. Expected 199, got 201
FAIL: Hand count after playing council_room was not correct. Expected 201, got 499
FAIL: Hand count after playing council_room was not correct. Expected 201, got 179
FAIL: Hand count after playing council_room was not correct. Expected 201, got 179
FAIL: Hand count after playing council_room was not correct. Expected 87, got 89
FAIL: Hand count after playing council_room was not correct. Expected 89, got 452
FAIL: Hand count after playing council_room was not correct. Expected 89, got 210
FAIL: Hand count after playing council_room was not correct. Expected 89, got 116
FAIL: Hand count after playing council_room was not correct. Expected 247, got 249
FAIL: Hand count after playing council_room was not correct. Expected 249, got 207
FAIL: Hand count after playing council_room was not correct. Expected 249, got 242
FAIL: Hand count after playing council_room was not correct. Expected 249, got 174
FAIL: Hand count after playing council_room was not correct. Expected 428, got 430
FAIL: Hand count after playing council_room was not correct. Expected 430, got 60
FAIL: Hand count after playing council_room was not correct. Expected 430, got 86
FAIL: Hand count after playing council_room was not correct. Expected 430, got 443
FAIL: Hand count after playing council_room was not correct. Expected 277, got 279
FAIL: Hand count after playing council_room was not correct. Expected 279, got 237
FAIL: Hand count after playing council_room was not correct. Expected 279, got 72
FAIL: Hand count after playing council_room was not correct. Expected 279, got 65
FAIL: Hand count after playing council_room was not correct. Expected 61, got 63
FAIL: Hand count after playing council_room was not correct. Expected 63, got 436
FAIL: Hand count after playing council_room was not correct. Expected 63, got 301
FAIL: Hand count after playing council_room was not correct. Expected 63, got 484
FAIL: Hand count after playing council_room was not correct. Expected 94, got 96
FAIL: Hand count after playing council_room was not correct. Expected 96, got 244
FAIL: Hand count after playing council_room was not correct. Expected 96, got 368
FAIL: Hand count after playing council_room was not correct. Expected 96, got 68
FAIL: Hand count after playing council_room was not correct. Expected 299, got 301
FAIL: Hand count after playing council_room was not correct. Expected 301, got 317
FAIL: Hand count after playing council_room was not correct. Expected 301, got 126
FAIL: Hand count after playing council_room was not correct. Expected 301, got 70
FAIL: Hand count after playing council_room was not correct. Expected 258, got 260
FAIL: Hand count after playing council_room was not correct. Expected 260, got 116
FAIL: Hand count after playing council_room was not correct. Expected 260, got 458
FAIL: Hand count after playing council_room was not correct. Expected 260, got 256
FAIL: Hand count after playing council_room was not correct. Expected 77, got 79
FAIL: Hand count after playing council_room was not correct. Expected 79, got 154
FAIL: Hand count after playing council_room was not correct. Expected 79, got 231
FAIL: Hand count after playing council_room was not correct. Expected 79, got 475
FAIL: Hand count after playing council_room was not correct. Expected 395, got 397
FAIL: Hand count after playing council_room was not correct. Expected 397, got 392
FAIL: Hand count after playing council_room was not correct. Expected 397, got 22
FAIL: Hand count after playing council_room was not correct. Expected 397, got 482
FAIL: Hand count after playing council_room was not correct. Expected 417, got 419
FAIL: Hand count after playing council_room was not correct. Expected 419, got 239
FAIL: Hand count after playing council_room was not correct. Expected 419, got 382
FAIL: Hand count after playing council_room was not correct. Expected 419, got 421
FAIL: Hand count after playing council_room was not correct. Expected 453, got 455
FAIL: Hand count after playing council_room was not correct. Expected 455, got 140
FAIL: Hand count after playing council_room was not correct. Expected 455, got 262
FAIL: Hand count after playing council_room was not correct. Expected 455, got 409
FAIL: Hand count after playing council_room was not correct. Expected 238, got 240
FAIL: Hand count after playing council_room was not correct. Expected 240, got 395
FAIL: Hand count after playing council_room was not correct. Expected 240, got 265
FAIL: Hand count after playing council_room was not correct. Expected 240, got 429
FAIL: Hand count after playing council_room was not correct. Expected 498, got 500
FAIL: Hand count after playing council_room was not correct. Expected 500, got 387
FAIL: Hand count after playing council_room was not correct. Expected 500, got 235
FAIL: Hand count after playing council_room was not correct. Expected 500, got 106
FAIL: Hand count after playing council_room was not correct. Expected 401, got 403
FAIL: Hand count after playing council_room was not correct. Expected 403, got 475
FAIL: Hand count after playing council_room was not correct. Expected 403, got 186
FAIL: Hand count after playing council_room was not correct. Expected 403, got 469
FAIL: Hand count after playing council_room was not correct. Expected 77, got 79
FAIL: Hand count after playing council_room was not correct. Expected 79, got 283
FAIL: Hand count after playing council_room was not correct. Expected 79, got 226
FAIL: Hand count after playing council_room was not correct. Expected 79, got 313
FAIL: Hand count after playing council_room was not correct. Expected 207, got 209
FAIL: Hand count after playing council_room was not correct. Expected 209, got 73
FAIL: Hand count after playing council_room was not correct. Expected 209, got 126
FAIL: Hand count after playing council_room was not correct. Expected 209, got 21
FAIL: Hand count after playing council_room was not correct. Expected 223, got 225
FAIL: Hand count after playing council_room was not correct. Expected 225, got 498
FAIL: Hand count after playing council_room was not correct. Expected 225, got 122
FAIL: Hand count after playing council_room was not correct. Expected 225, got 243
FAIL: Hand count after playing council_room was not correct. Expected 488, got 490
FAIL: Hand count after playing council_room was not correct. Expected 490, got 416
FAIL: Hand count after playing council_room was not correct. Expected 490, got 194
FAIL: Hand count after playing council_room was not correct. Expected 490, got 41
FAIL: Hand count after playing council_room was not correct. Expected 345, got 347
FAIL: Hand count after playing council_room was not correct. Expected 347, got 202
FAIL: Hand count after playing council_room was not correct. Expected 347, got 92
FAIL: Hand count after playing council_room was not correct. Expected 347, got 459
FAIL: Hand count after playing council_room was not correct. Expected 287, got 289
FAIL: Hand count after playing council_room was not correct. Expected 289, got 101
FAIL: Hand count after playing council_room was not correct. Expected 289, got 324
FAIL: Hand count after playing council_room was not correct. Expected 289, got 356
FAIL: Hand count after playing council_room was not correct. Expected 52, got 54
FAIL: Hand count after playing council_room was not correct. Expected 54, got 281
FAIL: Hand count after playing council_room was not correct. Expected 54, got 109
FAIL: Hand count after playing council_room was not correct. Expected 54, got 245
FAIL: Hand count after playing council_room was not correct. Expected 451, got 453
FAIL: Hand count after playing council_room was not correct. Expected 453, got 465
FAIL: Hand count after playing council_room was not correct. Expected 453, got 327
FAIL: Hand count after playing council_room was not correct. Expected 453, got 450
FAIL: Hand count after playing council_room was not correct. Expected 87, got 89
FAIL: Hand count after playing council_room was not correct. Expected 89, got 194
FAIL: Hand count after playing council_room was not correct. Expected 89, got 308
FAIL: Hand count after playing council_room was not correct. Expected 89, got 257
FAIL: Hand count after playing council_room was not correct. Expected 184, got 186
FAIL: Hand count after playing council_room was not correct. Expected 186, got 355
FAIL: Hand count after playing council_room was not correct. Expected 186, got 222
FAIL: Hand count after playing council_room was not correct. Expected 186, got 175
FAIL: Hand count after playing council_room was not correct. Expected 445, got 447
FAIL: Hand count after playing council_room was not correct. Expected 447, got 346
FAIL: Hand count after playing council_room was not correct. Expected 447, got 155
FAIL: Hand count after playing council_room was not correct. Expected 447, got 368
FAIL: Hand count after playing council_room was not correct. Expected 253, got 255
FAIL: Hand count after playing council_room was not correct. Expected 255, got 203
FAIL: Hand count after playing council_room was not correct. Expected 255, got 51
FAIL: Hand count after playing council_room was not correct. Expected 255, got 270
FAIL: Hand count after playing council_room was not correct. Expected 417, got 419
FAIL: Hand count after playing council_room was not correct. Expected 419, got 231
FAIL: Hand count after playing council_room was not correct. Expected 419, got 168
FAIL: Hand count after playing council_room was not correct. Expected 419, got 450
FAIL: Hand count after playing council_room was not correct. Expected 431, got 433
FAIL: Hand count after playing council_room was not correct. Expected 433, got 74
FAIL: Hand count after playing council_room was not correct. Expected 433, got 401
FAIL: Hand count after playing council_room was not correct. Expected 433, got 302
FAIL: Hand count after playing council_room was not correct. Expected 385, got 387
FAIL: Hand count after playing council_room was not correct. Expected 387, got 415
FAIL: Hand count after playing council_room was not correct. Expected 387, got 78
FAIL: Hand count after playing council_room was not correct. Expected 387, got 256
FAIL: Hand count after playing council_room was not correct. Expected 19, got 21
FAIL: Hand count after playing council_room was not correct. Expected 21, got 118
FAIL: Hand count after playing council_room was not correct. Expected 21, got 482
FAIL: Hand count after playing council_room was not correct. Expected 21, got 44
FAIL: Hand count after playing council_room was not correct. Expected 107, got 109
FAIL: Hand count after playing council_room was not correct. Expected 109, got 466
FAIL: Hand count after playing council_room was not correct. Expected 109, got 294
FAIL: Hand count after playing council_room was not correct. Expected 109, got 51
FAIL: Hand count after playing council_room was not correct. Expected 34, got 36
FAIL: Hand count after playing council_room was not correct. Expected 36, got 296
FAIL: Hand count after playing council_room was not correct. Expected 36, got 176
FAIL: Hand count after playing council_room was not correct. Expected 36, got 204
FAIL: Hand count after playing council_room was not correct. Expected 5, got 7
FAIL: Hand count after playing council_room was not correct. Expected 7, got 191
FAIL: Hand count after playing council_room was not correct. Expected 7, got 209
FAIL: Hand count after playing council_room was not correct. Expected 7, got 272
FAIL: Hand count after playing council_room was not correct. Expected 258, got 260
FAIL: Hand count after playing council_room was not correct. Expected 260, got 77
FAIL: Hand count after playing council_room was not correct. Expected 260, got 88
FAIL: Hand count after playing council_room was not correct. Expected 260, got 156
FAIL: Hand count after playing council_room was not correct. Expected 323, got 325
FAIL: Hand count after playing council_room was not correct. Expected 325, got 303
FAIL: Hand count after playing council_room was not correct. Expected 325, got 172
FAIL: Hand count after playing council_room was not correct. Expected 325, got 271
FAIL: Hand count after playing council_room was not correct. Expected 112, got 114
FAIL: Hand count after playing council_room was not correct. Expected 114, got 391
FAIL: Hand count after playing council_room was not correct. Expected 114, got 80
FAIL: Hand count after playing council_room was not correct. Expected 114, got 442
FAIL: Hand count after playing council_room was not correct. Expected 338, got 340
FAIL: Hand count after playing council_room was not correct. Expected 340, got 321
FAIL: Hand count after playing council_room was not correct. Expected 340, got 85
FAIL: Hand count after playing council_room was not correct. Expected 340, got 155
FAIL: Hand count after playing council_room was not correct. Expected 437, got 439
FAIL: Hand count after playing council_room was not correct. Expected 439, got 405
FAIL: Hand count after playing council_room was not correct. Expected 439, got 222
FAIL: Hand count after playing council_room was not correct. Expected 439, got 397
FAIL: Hand count after playing council_room was not correct. Expected 324, got 326
FAIL: Hand count after playing council_room was not correct. Expected 326, got 108
FAIL: Hand count after playing council_room was not correct. Expected 326, got 58
FAIL: Hand count after playing council_room was not correct. Expected 326, got 313
FAIL: Hand count after playing council_room was not correct. Expected 93, got 95
FAIL: Hand count after playing council_room was not correct. Expected 95, got 191
FAIL: Hand count after playing council_room was not correct. Expected 95, got 200
FAIL: Hand count after playing council_room was not correct. Expected 95, got 303
FAIL: Hand count after playing council_room was not correct. Expected 464, got 466
FAIL: Hand count after playing council_room was not correct. Expected 466, got 432
FAIL: Hand count after playing council_room was not correct. Expected 466, got 208
FAIL: Hand count after playing council_room was not correct. Expected 466, got 260
FAIL: Hand count after playing council_room was not correct. Expected 476, got 478
FAIL: Hand count after playing council_room was not correct. Expected 478, got 350
FAIL: Hand count after playing council_room was not correct. Expected 478, got 445
FAIL: Hand count after playing council_room was not correct. Expected 478, got 327
FAIL: Hand count after playing council_room was not correct. Expected 40, got 42
FAIL: Hand count after playing council_room was not correct. Expected 42, got 64
FAIL: Hand count after playing council_room was not correct. Expected 42, got 211
FAIL: Hand count after playing council_room was not correct. Expected 42, got 106
FAIL: Hand count after playing council_room was not correct. Expected 379, got 381
FAIL: Hand count after playing council_room was not correct. Expected 381, got 60
FAIL: Hand count after playing council_room was not correct. Expected 381, got 376
FAIL: Hand count after playing council_room was not correct. Expected 381, got 302
FAIL: Hand count after playing council_room was not correct. Expected 330, got 332
FAIL: Hand count after playing council_room was not correct. Expected 332, got 179
FAIL: Hand count after playing council_room was not correct. Expected 332, got 477
FAIL: Hand count after playing council_room was not correct. Expected 332, got 24
FAIL: Hand count after playing council_room was not correct. Expected 112, got 114
FAIL: Hand count after playing council_room was not correct. Expected 114, got 16
FAIL: Hand count after playing council_room was not correct. Expected 114, got 236
FAIL: Hand count after playing council_room was not correct. Expected 114, got 284
FAIL: Hand count after playing council_room was not correct. Expected 276, got 278
FAIL: Hand count after playing council_room was not correct. Expected 278, got 9
FAIL: Hand count after playing council_room was not correct. Expected 278, got 322
FAIL: Hand count after playing council_room was not correct. Expected 278, got 284
FAIL: Hand count after playing council_room was not correct. Expected 164, got 166
FAIL: Hand count after playing council_room was not correct. Expected 166, got 115
FAIL: Hand count after playing council_room was not correct. Expected 166, got 202
FAIL: Hand count after playing council_room was not correct. Expected 166, got 192
FAIL: Hand count after playing council_room was not correct. Expected 57, got 59
FAIL: Hand count after playing council_room was not correct. Expected 59, got 201
FAIL: Hand count after playing council_room was not correct. Expected 59, got 45
FAIL: Hand count after playing council_room was not correct. Expected 59, got 390
FAIL: Hand count after playing council_room was not correct. Expected 107, got 109
FAIL: Hand count after playing council_room was not correct. Expected 109, got 399
FAIL: Hand count after playing council_room was not correct. Expected 109, got 161
FAIL: Hand count after playing council_room was not correct. Expected 109, got 450
FAIL: Hand count after playing council_room was not correct. Expected 192, got 194
FAIL: Hand count after playing council_room was not correct. Expected 194, got 474
FAIL: Hand count after playing council_room was not correct. Expected 194, got 322
FAIL: Hand count after playing council_room was not correct. Expected 194, got 174
FAIL: Hand count after playing council_room was not correct. Expected 208, got 210
FAIL: Hand count after playing council_room was not correct. Expected 210, got 492
FAIL: Hand count after playing council_room was not correct. Expected 210, got 131
FAIL: Hand count after playing council_room was not correct. Expected 210, got 245
FAIL: Hand count after playing council_room was not correct. Expected 451, got 453
FAIL: Hand count after playing council_room was not correct. Expected 453, got 27
FAIL: Hand count after playing council_room was not correct. Expected 453, got 288
FAIL: Hand count after playing council_room was not correct. Expected 453, got 339
FAIL: Hand count after playing council_room was not correct. Expected 302, got 304
FAIL: Hand count after playing council_room was not correct. Expected 304, got 93
FAIL: Hand count after playing council_room was not correct. Expected 304, got 197
FAIL: Hand count after playing council_room was not correct. Expected 304, got 372
FAIL: Hand count after playing council_room was not correct. Expected 401, got 403
FAIL: Hand count after playing council_room was not correct. Expected 403, got 108
FAIL: Hand count after playing council_room was not correct. Expected 403, got 266
FAIL: Hand count after playing council_room was not correct. Expected 403, got 482
FAIL: Hand count after playing council_room was not correct. Expected 79, got 81
FAIL: Hand count after playing council_room was not correct. Expected 81, got 164
FAIL: Hand count after playing council_room was not correct. Expected 81, got 44
FAIL: Hand count after playing council_room was not correct. Expected 81, got 240
FAIL: Hand count after playing council_room was not correct. Expected 499, got 501
FAIL: Hand count after playing council_room was not correct. Expected 501, got 37
FAIL: Hand count after playing council_room was not correct. Expected 501, got 36
FAIL: Hand count after playing council_room was not correct. Expected 501, got 27
FAIL: Hand count after playing council_room was not correct. Expected 403, got 405
FAIL: Hand count after playing council_room was not correct. Expected 405, got 223
FAIL: Hand count after playing council_room was not correct. Expected 405, got 276
FAIL: Hand count after playing council_room was not correct. Expected 405, got 289
FAIL: Hand count after playing council_room was not correct. Expected 462, got 464
FAIL: Hand count after playing council_room was not correct. Expected 464, got 143
FAIL: Hand count after playing council_room was not correct. Expected 464, got 84
FAIL: Hand count after playing council_room was not correct. Expected 464, got 395
FAIL: Hand count after playing council_room was not correct. Expected 314, got 316
FAIL: Hand count after playing council_room was not correct. Expected 316, got 292
FAIL: Hand count after playing council_room was not correct. Expected 316, got 332
FAIL: Hand count after playing council_room was not correct. Expected 316, got 358
FAIL: Hand count after playing council_room was not correct. Expected 397, got 399
FAIL: Hand count after playing council_room was not correct. Expected 399, got 39
FAIL: Hand count after playing council_room was not correct. Expected 399, got 54
FAIL: Hand count after playing council_room was not correct. Expected 399, got 232
FAIL: Hand count after playing council_room was not correct. Expected 236, got 238
FAIL: Hand count after playing council_room was not correct. Expected 238, got 64
FAIL: Hand count after playing council_room was not correct. Expected 238, got 400
FAIL: Hand count after playing council_room was not correct. Expected 238, got 12
FAIL: Hand count after playing council_room was not correct. Expected 36, got 38
FAIL: Hand count after playing council_room was not correct. Expected 38, got 251
FAIL: Hand count after playing council_room was not correct. Expected 38, got 403
FAIL: Hand count after playing council_room was not correct. Expected 38, got 331
FAIL: Hand count after playing council_room was not correct. Expected 379, got 381
FAIL: Hand count after playing council_room was not correct. Expected 381, got 16
FAIL: Hand count after playing council_room was not correct. Expected 381, got 43
FAIL: Hand count after playing council_room was not correct. Expected 381, got 139
FAIL: Hand count after playing council_room was not correct. Expected 202, got 204
FAIL: Hand count after playing council_room was not correct. Expected 204, got 261
FAIL: Hand count after playing council_room was not correct. Expected 204, got 475
FAIL: Hand count after playing council_room was not correct. Expected 204, got 278
FAIL: Hand count after playing council_room was not correct. Expected 381, got 383
FAIL: Hand count after playing council_room was not correct. Expected 383, got 273
FAIL: Hand count after playing council_room was not correct. Expected 383, got 364
FAIL: Hand count after playing council_room was not correct. Expected 383, got 489
FAIL: Hand count after playing council_room was not correct. Expected 342, got 344
FAIL: Hand count after playing council_room was not correct. Expected 344, got 58
FAIL: Hand count after playing council_room was not correct. Expected 344, got 210
FAIL: Hand count after playing council_room was not correct. Expected 344, got 406
FAIL: Hand count after playing council_room was not correct. Expected 183, got 185
FAIL: Hand count after playing council_room was not correct. Expected 185, got 248
FAIL: Hand count after playing council_room was not correct. Expected 185, got 398
FAIL: Hand count after playing council_room was not correct. Expected 185, got 435
FAIL: Hand count after playing council_room was not correct. Expected 297, got 299
FAIL: Hand count after playing council_room was not correct. Expected 299, got 447
FAIL: Hand count after playing council_room was not correct. Expected 299, got 78
FAIL: Hand count after playing council_room was not correct. Expected 299, got 297
FAIL: Hand count after playing council_room was not correct. Expected 282, got 284
FAIL: Hand count after playing council_room was not correct. Expected 284, got 82
FAIL: Hand count after playing council_room was not correct. Expected 284, got 144
FAIL: Hand count after playing council_room was not correct. Expected 284, got 482
FAIL: Hand count after playing council_room was not correct. Expected 464, got 466
FAIL: Hand count after playing council_room was not correct. Expected 466, got 454
FAIL: Hand count after playing council_room was not correct. Expected 466, got 455
FAIL: Hand count after playing council_room was not correct. Expected 466, got 431
FAIL: Hand count after playing council_room was not correct. Expected 230, got 232
FAIL: Hand count after playing council_room was not correct. Expected 232, got 245
FAIL: Hand count after playing council_room was not correct. Expected 232, got 209
FAIL: Hand count after playing council_room was not correct. Expected 232, got 281
FAIL: Hand count after playing council_room was not correct. Expected 58, got 60
FAIL: Hand count after playing council_room was not correct. Expected 60, got 214
FAIL: Hand count after playing council_room was not correct. Expected 60, got 487
FAIL: Hand count after playing council_room was not correct. Expected 60, got 289
FAIL: Hand count after playing council_room was not correct. Expected 426, got 428
FAIL: Hand count after playing council_room was not correct. Expected 428, got 322
FAIL: Hand count after playing council_room was not correct. Expected 428, got 112
FAIL: Hand count after playing council_room was not correct. Expected 428, got 354
FAIL: Hand count after playing council_room was not correct. Expected 249, got 251
FAIL: Hand count after playing council_room was not correct. Expected 251, got 267
FAIL: Hand count after playing council_room was not correct. Expected 251, got 46
FAIL: Hand count after playing council_room was not correct. Expected 251, got 200
FAIL: Hand count after playing council_room was not correct. Expected 290, got 292
FAIL: Hand count after playing council_room was not correct. Expected 292, got 206
FAIL: Hand count after playing council_room was not correct. Expected 292, got 451
FAIL: Hand count after playing council_room was not correct. Expected 292, got 399
FAIL: Hand count after playing council_room was not correct. Expected 448, got 450
FAIL: Hand count after playing council_room was not correct. Expected 450, got 469
FAIL: Hand count after playing council_room was not correct. Expected 450, got 213
FAIL: Hand count after playing council_room was not correct. Expected 450, got 408
FAIL: Hand count after playing council_room was not correct. Expected 195, got 197
FAIL: Hand count after playing council_room was not correct. Expected 197, got 147
FAIL: Hand count after playing council_room was not correct. Expected 197, got 400
FAIL: Hand count after playing council_room was not correct. Expected 197, got 101
FAIL: Hand count after playing council_room was not correct. Expected 174, got 176
FAIL: Hand count after playing council_room was not correct. Expected 176, got 391
FAIL: Hand count after playing council_room was not correct. Expected 176, got 157
FAIL: Hand count after playing council_room was not correct. Expected 176, got 204
FAIL: Hand count after playing council_room was not correct. Expected 310, got 312
FAIL: Hand count after playing council_room was not correct. Expected 312, got 158
FAIL: Hand count after playing council_room was not correct. Expected 312, got 31
FAIL: Hand count after playing council_room was not correct. Expected 312, got 63
FAIL: Hand count after playing council_room was not correct. Expected 19, got 21
FAIL: Hand count after playing council_room was not correct. Expected 21, got 116
FAIL: Hand count after playing council_room was not correct. Expected 21, got 229
FAIL: Hand count after playing council_room was not correct. Expected 21, got 260
FAIL: Hand count after playing council_room was not correct. Expected 242, got 244
FAIL: Hand count after playing council_room was not correct. Expected 244, got 373
FAIL: Hand count after playing council_room was not correct. Expected 244, got 268
FAIL: Hand count after playing council_room was not correct. Expected 244, got 352
FAIL: Hand count after playing council_room was not correct. Expected 266, got 268
FAIL: Hand count after playing council_room was not correct. Expected 268, got 296
FAIL: Hand count after playing council_room was not correct. Expected 268, got 225
FAIL: Hand count after playing council_room was not correct. Expected 268, got 356
FAIL: Hand count after playing council_room was not correct. Expected 223, got 225
FAIL: Hand count after playing council_room was not correct. Expected 225, got 223
FAIL: Hand count after playing council_room was not correct. Expected 225, got 346
FAIL: Hand count after playing council_room was not correct. Expected 225, got 140
FAIL: Hand count after playing council_room was not correct. Expected 119, got 121
FAIL: Hand count after playing council_room was not correct. Expected 121, got 73
FAIL: Hand count after playing council_room was not correct. Expected 121, got 480
FAIL: Hand count after playing council_room was not correct. Expected 121, got 491
FAIL: Hand count after playing council_room was not correct. Expected 111, got 113
FAIL: Hand count after playing council_room was not correct. Expected 113, got 252
FAIL: Hand count after playing council_room was not correct. Expected 113, got 460
FAIL: Hand count after playing council_room was not correct. Expected 113, got 423
FAIL: Hand count after playing council_room was not correct. Expected 463, got 465
FAIL: Hand count after playing council_room was not correct. Expected 465, got 136
FAIL: Hand count after playing council_room was not correct. Expected 465, got 195
FAIL: Hand count after playing council_room was not correct. Expected 465, got 20
FAIL: Hand count after playing council_room was not correct. Expected 457, got 459
FAIL: Hand count after playing council_room was not correct. Expected 459, got 115
FAIL: Hand count after playing council_room was not correct. Expected 459, got 439
FAIL: Hand count after playing council_room was not correct. Expected 459, got 176
FAIL: Hand count after playing council_room was not correct. Expected 248, got 250
FAIL: Hand count after playing council_room was not correct. Expected 250, got 419
FAIL: Hand count after playing council_room was not correct. Expected 250, got 354
FAIL: Hand count after playing council_room was not correct. Expected 250, got 41
FAIL: Hand count after playing council_room was not correct. Expected 237, got 239
FAIL: Hand count after playing council_room was not correct. Expected 239, got 185
FAIL: Hand count after playing council_room was not correct. Expected 239, got 83
FAIL: Hand count after playing council_room was not correct. Expected 239, got 225
FAIL: Hand count after playing council_room was not correct. Expected 328, got 330
FAIL: Hand count after playing council_room was not correct. Expected 330, got 379
FAIL: Hand count after playing council_room was not correct. Expected 330, got 181
FAIL: Hand count after playing council_room was not correct. Expected 330, got 401
FAIL: Hand count after playing council_room was not correct. Expected 11, got 13
FAIL: Hand count after playing council_room was not correct. Expected 13, got 249
FAIL: Hand count after playing council_room was not correct. Expected 13, got 203
FAIL: Hand count after playing council_room was not correct. Expected 13, got 297
FAIL: Hand count after playing council_room was not correct. Expected 74, got 76
FAIL: Hand count after playing council_room was not correct. Expected 76, got 158
FAIL: Hand count after playing council_room was not correct. Expected 76, got 227
FAIL: Hand count after playing council_room was not correct. Expected 76, got 358
FAIL: Hand count after playing council_room was not correct. Expected 414, got 416
FAIL: Hand count after playing council_room was not correct. Expected 416, got 118
FAIL: Hand count after playing council_room was not correct. Expected 416, got 334
FAIL: Hand count after playing council_room was not correct. Expected 416, got 375
FAIL: Hand count after playing council_room was not correct. Expected 23, got 25
FAIL: Hand count after playing council_room was not correct. Expected 25, got 214
FAIL: Hand count after playing council_room was not correct. Expected 25, got 493
FAIL: Hand count after playing council_room was not correct. Expected 25, got 337
FAIL: Hand count after playing council_room was not correct. Expected 423, got 425
FAIL: Hand count after playing council_room was not correct. Expected 425, got 435
FAIL: Hand count after playing council_room was not correct. Expected 425, got 154
FAIL: Hand count after playing council_room was not correct. Expected 425, got 111
FAIL: Hand count after playing council_room was not correct. Expected 188, got 190
FAIL: Hand count after playing council_room was not correct. Expected 190, got 426
FAIL: Hand count after playing council_room was not correct. Expected 190, got 203
FAIL: Hand count after playing council_room was not correct. Expected 190, got 303
FAIL: Hand count after playing council_room was not correct. Expected 279, got 281
FAIL: Hand count after playing council_room was not correct. Expected 281, got 219
FAIL: Hand count after playing council_room was not correct. Expected 281, got 384
FAIL: Hand count after playing council_room was not correct. Expected 281, got 242
FAIL: Hand count after playing council_room was not correct. Expected 446, got 448
FAIL: Hand count after playing council_room was not correct. Expected 448, got 440
FAIL: Hand count after playing council_room was not correct. Expected 448, got 413
FAIL: Hand count after playing council_room was not correct. Expected 448, got 89
FAIL: Hand count after playing council_room was not correct. Expected 432, got 434
FAIL: Hand count after playing council_room was not correct. Expected 434, got 347
FAIL: Hand count after playing council_room was not correct. Expected 434, got 464
FAIL: Hand count after playing council_room was not correct. Expected 434, got 322
FAIL: Hand count after playing council_room was not correct. Expected 416, got 418
FAIL: Hand count after playing council_room was not correct. Expected 418, got 321
FAIL: Hand count after playing council_room was not correct. Expected 418, got 198
FAIL: Hand count after playing council_room was not correct. Expected 418, got 78
FAIL: Hand count after playing council_room was not correct. Expected 305, got 307
FAIL: Hand count after playing council_room was not correct. Expected 307, got 24
FAIL: Hand count after playing council_room was not correct. Expected 307, got 208
FAIL: Hand count after playing council_room was not correct. Expected 307, got 2
FAIL: Hand count after playing council_room was not correct. Expected 144, got 146
FAIL: Hand count after playing council_room was not correct. Expected 146, got 272
FAIL: Hand count after playing council_room was not correct. Expected 146, got 307
FAIL: Hand count after playing council_room was not correct. Expected 146, got 418
FAIL: Hand count after playing council_room was not correct. Expected 438, got 440
FAIL: Hand count after playing council_room was not correct. Expected 440, got 224
FAIL: Hand count after playing council_room was not correct. Expected 440, got 442
FAIL: Hand count after playing council_room was not correct. Expected 440, got 432
FAIL: Hand count after playing council_room was not correct. Expected 410, got 412
FAIL: Hand count after playing council_room was not correct. Expected 412, got 462
FAIL: Hand count after playing council_room was not correct. Expected 412, got 464
FAIL: Hand count after playing council_room was not correct. Expected 412, got 291
FAIL: Hand count after playing council_room was not correct. Expected 72, got 74
FAIL: Hand count after playing council_room was not correct. Expected 74, got 420
FAIL: Hand count after playing council_room was not correct. Expected 74, got 19
FAIL: Hand count after playing council_room was not correct. Expected 74, got 271
FAIL: Hand count after playing council_room was not correct. Expected 484, got 486
FAIL: Hand count after playing council_room was not correct. Expected 486, got 307
FAIL: Hand count after playing council_room was not correct. Expected 486, got 194
FAIL: Hand count after playing council_room was not correct. Expected 486, got 84
FAIL: Hand count after playing council_room was not correct. Expected 276, got 278
FAIL: Hand count after playing council_room was not correct. Expected 278, got 292
FAIL: Hand count after playing council_room was not correct. Expected 278, got 266
FAIL: Hand count after playing council_room was not correct. Expected 278, got 459
FAIL: Hand count after playing council_room was not correct. Expected 321, got 323
FAIL: Hand count after playing council_room was not correct. Expected 323, got 38
FAIL: Hand count after playing council_room was not correct. Expected 323, got 412
FAIL: Hand count after playing council_room was not correct. Expected 323, got 16
FAIL: Hand count after playing council_room was not correct. Expected 220, got 222
FAIL: Hand count after playing council_room was not correct. Expected 222, got 337
FAIL: Hand count after playing council_room was not correct. Expected 222, got 168
FAIL: Hand count after playing council_room was not correct. Expected 222, got 87
FAIL: Hand count after playing council_room was not correct. Expected 145, got 147
FAIL: Hand count after playing council_room was not correct. Expected 147, got 109
FAIL: Hand count after playing council_room was not correct. Expected 147, got 497
FAIL: Hand count after playing council_room was not correct. Expected 147, got 253
FAIL: Hand count after playing council_room was not correct. Expected 366, got 368
FAIL: Hand count after playing council_room was not correct. Expected 368, got 81
FAIL: Hand count after playing council_room was not correct. Expected 368, got 6
FAIL: Hand count after playing council_room was not correct. Expected 368, got 398
FAIL: Hand count after playing council_room was not correct. Expected 95, got 97
FAIL: Hand count after playing council_room was not correct. Expected 97, got 401
FAIL: Hand count after playing council_room was not correct. Expected 97, got 130
FAIL: Hand count after playing council_room was not correct. Expected 97, got 324
FAIL: Hand count after playing council_room was not correct. Expected 350, got 352
FAIL: Hand count after playing council_room was not correct. Expected 352, got 338
FAIL: Hand count after playing council_room was not correct. Expected 352, got 271
FAIL: Hand count after playing council_room was not correct. Expected 352, got 207
FAIL: Hand count after playing council_room was not correct. Expected 311, got 313
FAIL: Hand count after playing council_room was not correct. Expected 313, got 82
FAIL: Hand count after playing council_room was not correct. Expected 313, got 471
FAIL: Hand count after playing council_room was not correct. Expected 313, got 130
FAIL: Hand count after playing council_room was not correct. Expected 85, got 87
FAIL: Hand count after playing council_room was not correct. Expected 87, got 430
FAIL: Hand count after playing council_room was not correct. Expected 87, got 499
FAIL: Hand count after playing council_room was not correct. Expected 87, got 194
FAIL: Hand count after playing council_room was not correct. Expected 80, got 82
FAIL: Hand count after playing council_room was not correct. Expected 82, got 481
FAIL: Hand count after playing council_room was not correct. Expected 82, got 131
FAIL: Hand count after playing council_room was not correct. Expected 82, got 373
FAIL: Hand count after playing council_room was not correct. Expected 16, got 18
FAIL: Hand count after playing council_room was not correct. Expected 18, got 239
FAIL: Hand count after playing council_room was not correct. Expected 18, got 141
FAIL: Hand count after playing council_room was not correct. Expected 18, got 232
FAIL: Hand count after playing council_room was not correct. Expected 481, got 483
FAIL: Hand count after playing council_room was not correct. Expected 483, got 463
FAIL: Hand count after playing council_room was not correct. Expected 483, got 76
FAIL: Hand count after playing council_room was not correct. Expected 483, got 231
FAIL: Hand count after playing council_room was not correct. Expected 325, got 327
FAIL: Hand count after playing council_room was not correct. Expected 327, got 334
FAIL: Hand count after playing council_room was not correct. Expected 327, got 136
FAIL: Hand count after playing council_room was not correct. Expected 327, got 472
FAIL: Hand count after playing council_room was not correct. Expected 28, got 30
FAIL: Hand count after playing council_room was not correct. Expected 30, got 179
FAIL: Hand count after playing council_room was not correct. Expected 30, got 91
FAIL: Hand count after playing council_room was not correct. Expected 30, got 140
FAIL: Hand count after playing council_room was not correct. Expected 373, got 375
FAIL: Hand count after playing council_room was not correct. Expected 375, got 498
FAIL: Hand count after playing council_room was not correct. Expected 375, got 318
FAIL: Hand count after playing council_room was not correct. Expected 375, got 374
FAIL: Hand count after playing council_room was not correct. Expected 57, got 59
FAIL: Hand count after playing council_room was not correct. Expected 59, got 75
FAIL: Hand count after playing council_room was not correct. Expected 59, got 85
FAIL: Hand count after playing council_room was not correct. Expected 59, got 454
FAIL: Hand count after playing council_room was not correct. Expected 318, got 320
FAIL: Hand count after playing council_room was not correct. Expected 320, got 58
FAIL: Hand count after playing council_room was not correct. Expected 320, got 466
FAIL: Hand count after playing council_room was not correct. Expected 320, got 446
FAIL: Hand count after playing council_room was not correct. Expected 34, got 36
FAIL: Hand count after playing council_room was not correct. Expected 36, got 261
FAIL: Hand count after playing council_room was not correct. Expected 36, got 204
FAIL: Hand count after playing council_room was not correct. Expected 36, got 258
FAIL: Hand count after playing council_room was not correct. Expected 255, got 257
FAIL: Hand count after playing council_room was not correct. Expected 257, got 194
FAIL: Hand count after playing council_room was not correct. Expected 257, got 486
FAIL: Hand count after playing council_room was not correct. Expected 257, got 321
FAIL: Hand count after playing council_room was not correct. Expected 51, got 53
FAIL: Hand count after playing council_room was not correct. Expected 53, got 495
FAIL: Hand count after playing council_room was not correct. Expected 53, got 177
FAIL: Hand count after playing council_room was not correct. Expected 53, got 145
FAIL: Hand count after playing council_room was not correct. Expected 475, got 477
FAIL: Hand count after playing council_room was not correct. Expected 477, got 465
FAIL: Hand count after playing council_room was not correct. Expected 477, got 139
FAIL: Hand count after playing council_room was not correct. Expected 477, got 3
FAIL: Hand count after playing council_room was not correct. Expected 434, got 436
FAIL: Hand count after playing council_room was not correct. Expected 436, got 364
FAIL: Hand count after playing council_room was not correct. Expected 436, got 468
FAIL: Hand count after playing council_room was not correct. Expected 436, got 188
FAIL: Hand count after playing council_room was not correct. Expected 152, got 154
FAIL: Hand count after playing council_room was not correct. Expected 154, got 446
FAIL: Hand count after playing council_room was not correct. Expected 154, got 459
FAIL: Hand count after playing council_room was not correct. Expected 154, got 465
FAIL: Hand count after playing council_room was not correct. Expected 393, got 395
FAIL: Hand count after playing council_room was not correct. Expected 395, got 115
FAIL: Hand count after playing council_room was not correct. Expected 395, got 421
FAIL: Hand count after playing council_room was not correct. Expected 395, got 134
FAIL: Hand count after playing council_room was not correct. Expected 193, got 195
FAIL: Hand count after playing council_room was not correct. Expected 195, got 169
FAIL: Hand count after playing council_room was not correct. Expected 195, got 419
FAIL: Hand count after playing council_room was not correct. Expected 195, got 296
FAIL: Hand count after playing council_room was not correct. Expected 48, got 50
FAIL: Hand count after playing council_room was not correct. Expected 50, got 284
FAIL: Hand count after playing council_room was not correct. Expected 50, got 458
FAIL: Hand count after playing council_room was not correct. Expected 50, got 124
FAIL: Hand count after playing council_room was not correct. Expected 457, got 459
FAIL: Hand count after playing council_room was not correct. Expected 459, got 261
FAIL: Hand count after playing council_room was not correct. Expected 459, got 38
FAIL: Hand count after playing council_room was not correct. Expected 459, got 118
FAIL: Hand count after playing council_room was not correct. Expected 161, got 163
FAIL: Hand count after playing council_room was not correct. Expected 163, got 16
FAIL: Hand count after playing council_room was not correct. Expected 163, got 189
FAIL: Hand count after playing council_room was not correct. Expected 163, got 189
FAIL: Hand count after playing council_room was not correct. Expected 245, got 247
FAIL: Hand count after playing council_room was not correct. Expected 247, got 40
FAIL: Hand count after playing council_room was not correct. Expected 247, got 354
FAIL: Hand count after playing council_room was not correct. Expected 247, got 252
FAIL: Hand count after playing council_room was not correct. Expected 77, got 79
FAIL: Hand count after playing council_room was not correct. Expected 79, got 174
FAIL: Hand count after playing council_room was not correct. Expected 79, got 370
FAIL: Hand count after playing council_room was not correct. Expected 79, got 230
FAIL: Hand count after playing council_room was not correct. Expected 133, got 135
FAIL: Hand count after playing council_room was not correct. Expected 135, got 4
FAIL: Hand count after playing council_room was not correct. Expected 135, got 78
FAIL: Hand count after playing council_room was not correct. Expected 135, got 144
FAIL: Hand count after playing council_room was not correct. Expected 275, got 277
FAIL: Hand count after playing council_room was not correct. Expected 277, got 109
FAIL: Hand count after playing council_room was not correct. Expected 277, got 171
FAIL: Hand count after playing council_room was not correct. Expected 277, got 439
FAIL: Hand count after playing council_room was not correct. Expected 8, got 10
FAIL: Hand count after playing council_room was not correct. Expected 10, got 413
FAIL: Hand count after playing council_room was not correct. Expected 10, got 114
FAIL: Hand count after playing council_room was not correct. Expected 10, got 153
FAIL: Hand count after playing council_room was not correct. Expected 466, got 468
FAIL: Hand count after playing council_room was not correct. Expected 468, got 431
FAIL: Hand count after playing council_room was not correct. Expected 468, got 406
FAIL: Hand count after playing council_room was not correct. Expected 468, got 460
FAIL: Hand count after playing council_room was not correct. Expected 171, got 173
FAIL: Hand count after playing council_room was not correct. Expected 173, got 24
FAIL: Hand count after playing council_room was not correct. Expected 173, got 7
FAIL: Hand count after playing council_room was not correct. Expected 173, got 288
FAIL: Hand count after playing council_room was not correct. Expected 291, got 293
FAIL: Hand count after playing council_room was not correct. Expected 293, got 116
FAIL: Hand count after playing council_room was not correct. Expected 293, got 325
FAIL: Hand count after playing council_room was not correct. Expected 293, got 204
FAIL: Hand count after playing council_room was not correct. Expected 488, got 490
FAIL: Hand count after playing council_room was not correct. Expected 490, got 140
FAIL: Hand count after playing council_room was not correct. Expected 490, got 175
FAIL: Hand count after playing council_room was not correct. Expected 490, got 358
FAIL: Hand count after playing council_room was not correct. Expected 127, got 129
FAIL: Hand count after playing council_room was not correct. Expected 129, got 388
FAIL: Hand count after playing council_room was not correct. Expected 129, got 54
FAIL: Hand count after playing council_room was not correct. Expected 129, got 213
FAIL: Hand count after playing council_room was not correct. Expected 82, got 84
FAIL: Hand count after playing council_room was not correct. Expected 84, got 56
FAIL: Hand count after playing council_room was not correct. Expected 84, got 432
FAIL: Hand count after playing council_room was not correct. Expected 84, got 419
FAIL: Hand count after playing council_room was not correct. Expected 62, got 64
FAIL: Hand count after playing council_room was not correct. Expected 64, got 91
FAIL: Hand count after playing council_room was not correct. Expected 64, got 49
FAIL: Hand count after playing council_room was not correct. Expected 64, got 491
FAIL: Hand count after playing council_room was not correct. Expected 93, got 95
FAIL: Hand count after playing council_room was not correct. Expected 95, got 94
FAIL: Hand count after playing council_room was not correct. Expected 95, got 371
FAIL: Hand count after playing council_room was not correct. Expected 95, got 371
FAIL: Hand count after playing council_room was not correct. Expected 486, got 488
FAIL: Hand count after playing council_room was not correct. Expected 488, got 316
FAIL: Hand count after playing council_room was not correct. Expected 488, got 8
FAIL: Hand count after playing council_room was not correct. Expected 488, got 465
FAIL: Hand count after playing council_room was not correct. Expected 315, got 317
FAIL: Hand count after playing council_room was not correct. Expected 317, got 362
FAIL: Hand count after playing council_room was not correct. Expected 317, got 307
FAIL: Hand count after playing council_room was not correct. Expected 317, got 10
FAIL: Hand count after playing council_room was not correct. Expected 277, got 279
FAIL: Hand count after playing council_room was not correct. Expected 279, got 210
FAIL: Hand count after playing council_room was not correct. Expected 279, got 227
FAIL: Hand count after playing council_room was not correct. Expected 279, got 48
FAIL: Hand count after playing council_room was not correct. Expected 14, got 16
FAIL: Hand count after playing council_room was not correct. Expected 16, got 196
FAIL: Hand count after playing council_room was not correct. Expected 16, got 335
FAIL: Hand count after playing council_room was not correct. Expected 16, got 492
FAIL: Hand count after playing council_room was not correct. Expected 63, got 65
FAIL: Hand count after playing council_room was not correct. Expected 65, got 218
FAIL: Hand count after playing council_room was not correct. Expected 65, got 317
FAIL: Hand count after playing council_room was not correct. Expected 65, got 493
FAIL: Hand count after playing council_room was not correct. Expected 183, got 185
FAIL: Hand count after playing council_room was not correct. Expected 185, got 278
FAIL: Hand count after playing council_room was not correct. Expected 185, got 484
FAIL: Hand count after playing council_room was not correct. Expected 185, got 126
FAIL: Hand count after playing council_room was not correct. Expected 51, got 53
FAIL: Hand count after playing council_room was not correct. Expected 53, got 14
FAIL: Hand count after playing council_room was not correct. Expected 53, got 156
FAIL: Hand count after playing council_room was not correct. Expected 53, got 261
FAIL: Hand count after playing council_room was not correct. Expected 349, got 351
FAIL: Hand count after playing council_room was not correct. Expected 351, got 241
FAIL: Hand count after playing council_room was not correct. Expected 351, got 364
FAIL: Hand count after playing council_room was not correct. Expected 351, got 483
FAIL: Hand count after playing council_room was not correct. Expected 345, got 347
FAIL: Hand count after playing council_room was not correct. Expected 347, got 367
FAIL: Hand count after playing council_room was not correct. Expected 347, got 436
FAIL: Hand count after playing council_room was not correct. Expected 347, got 209
FAIL: Hand count after playing council_room was not correct. Expected 483, got 485
FAIL: Hand count after playing council_room was not correct. Expected 485, got 208
FAIL: Hand count after playing council_room was not correct. Expected 485, got 265
FAIL: Hand count after playing council_room was not correct. Expected 485, got 238
FAIL: Hand count after playing council_room was not correct. Expected 346, got 348
FAIL: Hand count after playing council_room was not correct. Expected 348, got 458
FAIL: Hand count after playing council_room was not correct. Expected 348, got 150
FAIL: Hand count after playing council_room was not correct. Expected 348, got 436
FAIL: Hand count after playing council_room was not correct. Expected 294, got 296
FAIL: Hand count after playing council_room was not correct. Expected 296, got 120
FAIL: Hand count after playing council_room was not correct. Expected 296, got 48
FAIL: Hand count after playing council_room was not correct. Expected 296, got 158
FAIL: Hand count after playing council_room was not correct. Expected 449, got 451
FAIL: Hand count after playing council_room was not correct. Expected 451, got 289
FAIL: Hand count after playing council_room was not correct. Expected 451, got 500
FAIL: Hand count after playing council_room was not correct. Expected 451, got 242
FAIL: Hand count after playing council_room was not correct. Expected 144, got 146
FAIL: Hand count after playing council_room was not correct. Expected 146, got 341
FAIL: Hand count after playing council_room was not correct. Expected 146, got 396
FAIL: Hand count after playing council_room was not correct. Expected 146, got 449
FAIL: Hand count after playing council_room was not correct. Expected 440, got 442
FAIL: Hand count after playing council_room was not correct. Expected 442, got 55
FAIL: Hand count after playing council_room was not correct. Expected 442, got 351
FAIL: Hand count after playing council_room was not correct. Expected 442, got 421
FAIL: Hand count after playing council_room was not correct. Expected 125, got 127
FAIL: Hand count after playing council_room was not correct. Expected 127, got 317
FAIL: Hand count after playing council_room was not correct. Expected 127, got 194
FAIL: Hand count after playing council_room was not correct. Expected 127, got 346
FAIL: Hand count after playing council_room was not correct. Expected 303, got 305
FAIL: Hand count after playing council_room was not correct. Expected 305, got 157
FAIL: Hand count after playing council_room was not correct. Expected 305, got 386
FAIL: Hand count after playing council_room was not correct. Expected 305, got 45
FAIL: Hand count after playing council_room was not correct. Expected 314, got 316
FAIL: Hand count after playing council_room was not correct. Expected 316, got 155
FAIL: Hand count after playing council_room was not correct. Expected 316, got 382
FAIL: Hand count after playing council_room was not correct. Expected 316, got 399
FAIL: Hand count after playing council_room was not correct. Expected 200, got 202
FAIL: Hand count after playing council_room was not correct. Expected 202, got 401
FAIL: Hand count after playing council_room was not correct. Expected 202, got 473
FAIL: Hand count after playing council_room was not correct. Expected 202, got 452
FAIL: Hand count after playing council_room was not correct. Expected 340, got 342
FAIL: Hand count after playing council_room was not correct. Expected 342, got 58
FAIL: Hand count after playing council_room was not correct. Expected 342, got 376
FAIL: Hand count after playing council_room was not correct. Expected 342, got 456
FAIL: Hand count after playing council_room was not correct. Expected 181, got 183
FAIL: Hand count after playing council_room was not correct. Expected 183, got 11
FAIL: Hand count after playing council_room was not correct. Expected 183, got 125
FAIL: Hand count after playing council_room was not correct. Expected 183, got 327
FAIL: Hand count after playing council_room was not correct. Expected 63, got 65
FAIL: Hand count after playing council_room was not correct. Expected 65, got 215
FAIL: Hand count after playing council_room was not correct. Expected 65, got 449
FAIL: Hand count after playing council_room was not correct. Expected 65, got 96
FAIL: Hand count after playing council_room was not correct. Expected 77, got 79
FAIL: Hand count after playing council_room was not correct. Expected 79, got 407
FAIL: Hand count after playing council_room was not correct. Expected 79, got 98
FAIL: Hand count after playing council_room was not correct. Expected 79, got 102
FAIL: Hand count after playing council_room was not correct. Expected 118, got 120
FAIL: Hand count after playing council_room was not correct. Expected 120, got 334
FAIL: Hand count after playing council_room was not correct. Expected 120, got 67
FAIL: Hand count after playing council_room was not correct. Expected 120, got 439
FAIL: Hand count after playing council_room was not correct. Expected 360, got 362
FAIL: Hand count after playing council_room was not correct. Expected 362, got 199
FAIL: Hand count after playing council_room was not correct. Expected 362, got 25
FAIL: Hand count after playing council_room was not correct. Expected 362, got 190
FAIL: Hand count after playing council_room was not correct. Expected 141, got 143
FAIL: Hand count after playing council_room was not correct. Expected 143, got 488
FAIL: Hand count after playing council_room was not correct. Expected 143, got 179
FAIL: Hand count after playing council_room was not correct. Expected 143, got 16
FAIL: Hand count after playing council_room was not correct. Expected 303, got 305
FAIL: Hand count after playing council_room was not correct. Expected 305, got 308
FAIL: Hand count after playing council_room was not correct. Expected 305, got 496
FAIL: Hand count after playing council_room was not correct. Expected 305, got 272
FAIL: Hand count after playing council_room was not correct. Expected 93, got 95
FAIL: Hand count after playing council_room was not correct. Expected 95, got 374
FAIL: Hand count after playing council_room was not correct. Expected 95, got 475
FAIL: Hand count after playing council_room was not correct. Expected 95, got 274
FAIL: Hand count after playing council_room was not correct. Expected 199, got 201
FAIL: Hand count after playing council_room was not correct. Expected 201, got 3
FAIL: Hand count after playing council_room was not correct. Expected 201, got 90
FAIL: Hand count after playing council_room was not correct. Expected 201, got 200
FAIL: Hand count after playing council_room was not correct. Expected 183, got 185
FAIL: Hand count after playing council_room was not correct. Expected 185, got 298
FAIL: Hand count after playing council_room was not correct. Expected 185, got 442
FAIL: Hand count after playing council_room was not correct. Expected 185, got 44
FAIL: Hand count after playing council_room was not correct. Expected 317, got 319
FAIL: Hand count after playing council_room was not correct. Expected 319, got 382
FAIL: Hand count after playing council_room was not correct. Expected 319, got 355
FAIL: Hand count after playing council_room was not correct. Expected 319, got 91
FAIL: Hand count after playing council_room was not correct. Expected 344, got 346
FAIL: Hand count after playing council_room was not correct. Expected 346, got 256
FAIL: Hand count after playing council_room was not correct. Expected 346, got 261
FAIL: Hand count after playing council_room was not correct. Expected 346, got 83
FAIL: Hand count after playing council_room was not correct. Expected 390, got 392
FAIL: Hand count after playing council_room was not correct. Expected 392, got 429
FAIL: Hand count after playing council_room was not correct. Expected 392, got 17
FAIL: Hand count after playing council_room was not correct. Expected 392, got 159
FAIL: Hand count after playing council_room was not correct. Expected 181, got 183
FAIL: Hand count after playing council_room was not correct. Expected 183, got 311
FAIL: Hand count after playing council_room was not correct. Expected 183, got 9
FAIL: Hand count after playing council_room was not correct. Expected 183, got 453
FAIL: Hand count after playing council_room was not correct. Expected 135, got 137
FAIL: Hand count after playing council_room was not correct. Expected 137, got 420
FAIL: Hand count after playing council_room was not correct. Expected 137, got 404
FAIL: Hand count after playing council_room was not correct. Expected 137, got 33
FAIL: Hand count after playing council_room was not correct. Expected 189, got 191
FAIL: Hand count after playing council_room was not correct. Expected 191, got 423
FAIL: Hand count after playing council_room was not correct. Expected 191, got 272
FAIL: Hand count after playing council_room was not correct. Expected 191, got 5
FAIL: Hand count after playing council_room was not correct. Expected 406, got 408
FAIL: Hand count after playing council_room was not correct. Expected 408, got 350
FAIL: Hand count after playing council_room was not correct. Expected 408, got 26
FAIL: Hand count after playing council_room was not correct. Expected 408, got 429
FAIL: Hand count after playing council_room was not correct. Expected 241, got 243
FAIL: Hand count after playing council_room was not correct. Expected 243, got 378
FAIL: Hand count after playing council_room was not correct. Expected 243, got 302
FAIL: Hand count after playing council_room was not correct. Expected 243, got 410
FAIL: Hand count after playing council_room was not correct. Expected 467, got 469
FAIL: Hand count after playing council_room was not correct. Expected 469, got 140
FAIL: Hand count after playing council_room was not correct. Expected 469, got 217
FAIL: Hand count after playing council_room was not correct. Expected 469, got 129
FAIL: Hand count after playing council_room was not correct. Expected 121, got 123
FAIL: Hand count after playing council_room was not correct. Expected 123, got 165
FAIL: Hand count after playing council_room was not correct. Expected 123, got 216
FAIL: Hand count after playing council_room was not correct. Expected 123, got 271
FAIL: Hand count after playing council_room was not correct. Expected 214, got 216
FAIL: Hand count after playing council_room was not correct. Expected 216, got 101
FAIL: Hand count after playing council_room was not correct. Expected 216, got 10
FAIL: Hand count after playing council_room was not correct. Expected 216, got 220
FAIL: Hand count after playing council_room was not correct. Expected 220, got 222
FAIL: Hand count after playing council_room was not correct. Expected 222, got 479
FAIL: Hand count after playing council_room was not correct. Expected 222, got 168
FAIL: Hand count after playing council_room was not correct. Expected 222, got 477
FAIL: Hand count after playing council_room was not correct. Expected 354, got 356
FAIL: Hand count after playing council_room was not correct. Expected 356, got 420
FAIL: Hand count after playing council_room was not correct. Expected 356, got 242
FAIL: Hand count after playing council_room was not correct. Expected 356, got 453
FAIL: Hand count after playing council_room was not correct. Expected 345, got 347
FAIL: Hand count after playing council_room was not correct. Expected 347, got 358
FAIL: Hand count after playing council_room was not correct. Expected 347, got 217
FAIL: Hand count after playing council_room was not correct. Expected 347, got 262
FAIL: Hand count after playing council_room was not correct. Expected 264, got 266
FAIL: Hand count after playing council_room was not correct. Expected 266, got 217
FAIL: Hand count after playing council_room was not correct. Expected 266, got 32
FAIL: Hand count after playing council_room was not correct. Expected 266, got 71
FAIL: Hand count after playing council_room was not correct. Expected 108, got 110
FAIL: Hand count after playing council_room was not correct. Expected 110, got 308
FAIL: Hand count after playing council_room was not correct. Expected 110, got 315
FAIL: Hand count after playing council_room was not correct. Expected 110, got 21
FAIL: Hand count after playing council_room was not correct. Expected 387, got 389
FAIL: Hand count after playing council_room was not correct. Expected 389, got 311
FAIL: Hand count after playing council_room was not correct. Expected 389, got 418
FAIL: Hand count after playing council_room was not correct. Expected 389, got 67
FAIL: Hand count after playing council_room was not correct. Expected 220, got 222
FAIL: Hand count after playing council_room was not correct. Expected 222, got 456
FAIL: Hand count after playing council_room was not correct. Expected 222, got 315
FAIL: Hand count after playing council_room was not correct. Expected 222, got 135
FAIL: Hand count after playing council_room was not correct. Expected 94, got 96
FAIL: Hand count after playing council_room was not correct. Expected 96, got 462
FAIL: Hand count after playing council_room was not correct. Expected 96, got 108
FAIL: Hand count after playing council_room was not correct. Expected 96, got 37
FAIL: Hand count after playing council_room was not correct. Expected 433, got 435
FAIL: Hand count after playing council_room was not correct. Expected 435, got 463
FAIL: Hand count after playing council_room was not correct. Expected 435, got 37
FAIL: Hand count after playing council_room was not correct. Expected 435, got 461
FAIL: Hand count after playing council_room was not correct. Expected 322, got 324
FAIL: Hand count after playing council_room was not correct. Expected 324, got 207
FAIL: Hand count after playing council_room was not correct. Expected 324, got 452
FAIL: Hand count after playing council_room was not correct. Expected 324, got 28
FAIL: Hand count after playing council_room was not correct. Expected 327, got 329
FAIL: Hand count after playing council_room was not correct. Expected 329, got 7
FAIL: Hand count after playing council_room was not correct. Expected 329, got 202
FAIL: Hand count after playing council_room was not correct. Expected 329, got 229
FAIL: Hand count after playing council_room was not correct. Expected 46, got 48
FAIL: Hand count after playing council_room was not correct. Expected 48, got 219
FAIL: Hand count after playing council_room was not correct. Expected 48, got 459
FAIL: Hand count after playing council_room was not correct. Expected 48, got 402
FAIL: Hand count after playing council_room was not correct. Expected 312, got 314
FAIL: Hand count after playing council_room was not correct. Expected 314, got 140
FAIL: Hand count after playing council_room was not correct. Expected 314, got 45
FAIL: Hand count after playing council_room was not correct. Expected 314, got 451
FAIL: Hand count after playing council_room was not correct. Expected 486, got 488
FAIL: Hand count after playing council_room was not correct. Expected 488, got 112
FAIL: Hand count after playing council_room was not correct. Expected 488, got 384
FAIL: Hand count after playing council_room was not correct. Expected 488, got 75
FAIL: Hand count after playing council_room was not correct. Expected 312, got 314
FAIL: Hand count after playing council_room was not correct. Expected 314, got 159
FAIL: Hand count after playing council_room was not correct. Expected 314, got 370
FAIL: Hand count after playing council_room was not correct. Expected 314, got 14
FAIL: Hand count after playing council_room was not correct. Expected 360, got 362
FAIL: Hand count after playing council_room was not correct. Expected 362, got 205
FAIL: Hand count after playing council_room was not correct. Expected 362, got 248
FAIL: Hand count after playing council_room was not correct. Expected 362, got 377
FAIL: Hand count after playing council_room was not correct. Expected 242, got 244
FAIL: Hand count after playing council_room was not correct. Expected 244, got 284
FAIL: Hand count after playing council_room was not correct. Expected 244, got 249
FAIL: Hand count after playing council_room was not correct. Expected 244, got 244
FAIL: Hand count after playing council_room was not correct. Expected 276, got 278
FAIL: Hand count after playing council_room was not correct. Expected 278, got 282
FAIL: Hand count after playing council_room was not correct. Expected 278, got 215
FAIL: Hand count after playing council_room was not correct. Expected 278, got 495
FAIL: Hand count after playing council_room was not correct. Expected 79, got 81
FAIL: Hand count after playing council_room was not correct. Expected 81, got 164
FAIL: Hand count after playing council_room was not correct. Expected 81, got 156
FAIL: Hand count after playing council_room was not correct. Expected 81, got 266
FAIL: Hand count after playing council_room was not correct. Expected 132, got 134
FAIL: Hand count after playing council_room was not correct. Expected 134, got 9
FAIL: Hand count after playing council_room was not correct. Expected 134, got 371
FAIL: Hand count after playing council_room was not correct. Expected 134, got 175
FAIL: Hand count after playing council_room was not correct. Expected 96, got 98
FAIL: Hand count after playing council_room was not correct. Expected 98, got 440
FAIL: Hand count after playing council_room was not correct. Expected 98, got 343
FAIL: Hand count after playing council_room was not correct. Expected 98, got 137
FAIL: Hand count after playing council_room was not correct. Expected 427, got 429
FAIL: Hand count after playing council_room was not correct. Expected 429, got 211
FAIL: Hand count after playing council_room was not correct. Expected 429, got 327
FAIL: Hand count after playing council_room was not correct. Expected 429, got 177
FAIL: Hand count after playing council_room was not correct. Expected 170, got 172
FAIL: Hand count after playing council_room was not correct. Expected 172, got 246
FAIL: Hand count after playing council_room was not correct. Expected 172, got 77
FAIL: Hand count after playing council_room was not correct. Expected 172, got 30
FAIL: Hand count after playing council_room was not correct. Expected 4, got 6
FAIL: Hand count after playing council_room was not correct. Expected 6, got 285
FAIL: Hand count after playing council_room was not correct. Expected 6, got 458
FAIL: Hand count after playing council_room was not correct. Expected 6, got 214
FAIL: Hand count after playing council_room was not correct. Expected 168, got 170
FAIL: Hand count after playing council_room was not correct. Expected 170, got 224
FAIL: Hand count after playing council_room was not correct. Expected 170, got 351
FAIL: Hand count after playing council_room was not correct. Expected 170, got 261
FAIL: Hand count after playing council_room was not correct. Expected 107, got 109
FAIL: Hand count after playing council_room was not correct. Expected 109, got 132
FAIL: Hand count after playing council_room was not correct. Expected 109, got 410
FAIL: Hand count after playing council_room was not correct. Expected 109, got 499
FAIL: Hand count after playing council_room was not correct. Expected 397, got 399
FAIL: Hand count after playing council_room was not correct. Expected 399, got 488
FAIL: Hand count after playing council_room was not correct. Expected 399, got 71
FAIL: Hand count after playing council_room was not correct. Expected 399, got 285
FAIL: Hand count after playing council_room was not correct. Expected 291, got 293
FAIL: Hand count after playing council_room was not correct. Expected 293, got 420
FAIL: Hand count after playing council_room was not correct. Expected 293, got 180
FAIL: Hand count after playing council_room was not correct. Expected 293, got 207
FAIL: Hand count after playing council_room was not correct. Expected 443, got 445
FAIL: Hand count after playing council_room was not correct. Expected 445, got 18
FAIL: Hand count after playing council_room was not correct. Expected 445, got 173
FAIL: Hand count after playing council_room was not correct. Expected 445, got 414
FAIL: Hand count after playing council_room was not correct. Expected 150, got 152
FAIL: Hand count after playing council_room was not correct. Expected 152, got 337
FAIL: Hand count after playing council_room was not correct. Expected 152, got 75
FAIL: Hand count after playing council_room was not correct. Expected 152, got 447
FAIL: Hand count after playing council_room was not correct. Expected 20, got 22
FAIL: Hand count after playing council_room was not correct. Expected 22, got 449
FAIL: Hand count after playing council_room was not correct. Expected 22, got 98
FAIL: Hand count after playing council_room was not correct. Expected 22, got 455
FAIL: Hand count after playing council_room was not correct. Expected 261, got 263
FAIL: Hand count after playing council_room was not correct. Expected 263, got 483
FAIL: Hand count after playing council_room was not correct. Expected 263, got 223
FAIL: Hand count after playing council_room was not correct. Expected 263, got 389
FAIL: Hand count after playing council_room was not correct. Expected 67, got 69
FAIL: Hand count after playing council_room was not correct. Expected 69, got 59
FAIL: Hand count after playing council_room was not correct. Expected 69, got 41
FAIL: Hand count after playing council_room was not correct. Expected 69, got 122
FAIL: Hand count after playing council_room was not correct. Expected 285, got 287
FAIL: Hand count after playing council_room was not correct. Expected 287, got 333
FAIL: Hand count after playing council_room was not correct. Expected 287, got 51
FAIL: Hand count after playing council_room was not correct. Expected 287, got 481
FAIL: Hand count after playing council_room was not correct. Expected 56, got 58
FAIL: Hand count after playing council_room was not correct. Expected 58, got 47
FAIL: Hand count after playing council_room was not correct. Expected 58, got 323
FAIL: Hand count after playing council_room was not correct. Expected 58, got 171
FAIL: Hand count after playing council_room was not correct. Expected 423, got 425
FAIL: Hand count after playing council_room was not correct. Expected 425, got 57
FAIL: Hand count after playing council_room was not correct. Expected 425, got 353
FAIL: Hand count after playing council_room was not correct. Expected 425, got 90
FAIL: Hand count after playing council_room was not correct. Expected 352, got 354
FAIL: Hand count after playing council_room was not correct. Expected 354, got 411
FAIL: Hand count after playing council_room was not correct. Expected 354, got 313
FAIL: Hand count after playing council_room was not correct. Expected 354, got 483
FAIL: Hand count after playing council_room was not correct. Expected 344, got 346
FAIL: Hand count after playing council_room was not correct. Expected 346, got 295
FAIL: Hand count after playing council_room was not correct. Expected 346, got 89
FAIL: Hand count after playing council_room was not correct. Expected 346, got 351
FAIL: Hand count after playing council_room was not correct. Expected 213, got 215
FAIL: Hand count after playing council_room was not correct. Expected 215, got 233
FAIL: Hand count after playing council_room was not correct. Expected 215, got 415
FAIL: Hand count after playing council_room was not correct. Expected 215, got 413
FAIL: Hand count after playing council_room was not correct. Expected 108, got 110
FAIL: Hand count after playing council_room was not correct. Expected 110, got 205
FAIL: Hand count after playing council_room was not correct. Expected 110, got 392
FAIL: Hand count after playing council_room was not correct. Expected 110, got 432
FAIL: Hand count after playing council_room was not correct. Expected 325, got 327
FAIL: Hand count after playing council_room was not correct. Expected 327, got 207
FAIL: Hand count after playing council_room was not correct. Expected 327, got 165
FAIL: Hand count after playing council_room was not correct. Expected 327, got 455
FAIL: Hand count after playing council_room was not correct. Expected 299, got 301
FAIL: Hand count after playing council_room was not correct. Expected 301, got 474
FAIL: Hand count after playing council_room was not correct. Expected 301, got 469
FAIL: Hand count after playing council_room was not correct. Expected 301, got 83
FAIL: Hand count after playing council_room was not correct. Expected 391, got 393
FAIL: Hand count after playing council_room was not correct. Expected 393, got 385
FAIL: Hand count after playing council_room was not correct. Expected 393, got 453
FAIL: Hand count after playing council_room was not correct. Expected 393, got 288
FAIL: Hand count after playing council_room was not correct. Expected 346, got 348
FAIL: Hand count after playing council_room was not correct. Expected 348, got 103
FAIL: Hand count after playing council_room was not correct. Expected 348, got 311
FAIL: Hand count after playing council_room was not correct. Expected 348, got 217
FAIL: Hand count after playing council_room was not correct. Expected 284, got 286
FAIL: Hand count after playing council_room was not correct. Expected 286, got 270
FAIL: Hand count after playing council_room was not correct. Expected 286, got 72
FAIL: Hand count after playing council_room was not correct. Expected 286, got 404
FAIL: Hand count after playing council_room was not correct. Expected 8, got 10
FAIL: Hand count after playing council_room was not correct. Expected 10, got 421
FAIL: Hand count after playing council_room was not correct. Expected 10, got 358
FAIL: Hand count after playing council_room was not correct. Expected 10, got 148
FAIL: Hand count after playing council_room was not correct. Expected 143, got 145
FAIL: Hand count after playing council_room was not correct. Expected 145, got 147
FAIL: Hand count after playing council_room was not correct. Expected 145, got 419
FAIL: Hand count after playing council_room was not correct. Expected 145, got 34
FAIL: Hand count after playing council_room was not correct. Expected 315, got 317
FAIL: Hand count after playing council_room was not correct. Expected 317, got 218
FAIL: Hand count after playing council_room was not correct. Expected 317, got 28
FAIL: Hand count after playing council_room was not correct. Expected 317, got 491
FAIL: Hand count after playing council_room was not correct. Expected 363, got 365
FAIL: Hand count after playing council_room was not correct. Expected 365, got 140
FAIL: Hand count after playing council_room was not correct. Expected 365, got 352
FAIL: Hand count after playing council_room was not correct. Expected 365, got 376
FAIL: Hand count after playing council_room was not correct. Expected 191, got 193
FAIL: Hand count after playing council_room was not correct. Expected 193, got 413
FAIL: Hand count after playing council_room was not correct. Expected 193, got 88
FAIL: Hand count after playing council_room was not correct. Expected 193, got 202
FAIL: Hand count after playing council_room was not correct. Expected 28, got 30
FAIL: Hand count after playing council_room was not correct. Expected 30, got 10
FAIL: Hand count after playing council_room was not correct. Expected 30, got 389
FAIL: Hand count after playing council_room was not correct. Expected 30, got 146
FAIL: Hand count after playing council_room was not correct. Expected 230, got 232
FAIL: Hand count after playing council_room was not correct. Expected 232, got 463
FAIL: Hand count after playing council_room was not correct. Expected 232, got 6
FAIL: Hand count after playing council_room was not correct. Expected 232, got 480
FAIL: Hand count after playing council_room was not correct. Expected 255, got 257
FAIL: Hand count after playing council_room was not correct. Expected 257, got 224
FAIL: Hand count after playing council_room was not correct. Expected 257, got 32
FAIL: Hand count after playing council_room was not correct. Expected 257, got 50
FAIL: Hand count after playing council_room was not correct. Expected 492, got 494
FAIL: Hand count after playing council_room was not correct. Expected 494, got 228
FAIL: Hand count after playing council_room was not correct. Expected 494, got 130
FAIL: Hand count after playing council_room was not correct. Expected 494, got 114
FAIL: Hand count after playing council_room was not correct. Expected 10, got 12
FAIL: Hand count after playing council_room was not correct. Expected 12, got 446
FAIL: Hand count after playing council_room was not correct. Expected 12, got 382
FAIL: Hand count after playing council_room was not correct. Expected 12, got 457
FAIL: Hand count after playing council_room was not correct. Expected 358, got 360
FAIL: Hand count after playing council_room was not correct. Expected 360, got 8
FAIL: Hand count after playing council_room was not correct. Expected 360, got 496
FAIL: Hand count after playing council_room was not correct. Expected 360, got 90
FAIL: Hand count after playing council_room was not correct. Expected 375, got 377
FAIL: Hand count after playing council_room was not correct. Expected 377, got 255
FAIL: Hand count after playing council_room was not correct. Expected 377, got 169
FAIL: Hand count after playing council_room was not correct. Expected 377, got 386
FAIL: Hand count after playing council_room was not correct. Expected 358, got 360
FAIL: Hand count after playing council_room was not correct. Expected 360, got 299
FAIL: Hand count after playing council_room was not correct. Expected 360, got 37
FAIL: Hand count after playing council_room was not correct. Expected 360, got 192
FAIL: Hand count after playing council_room was not correct. Expected 120, got 122
FAIL: Hand count after playing council_room was not correct. Expected 122, got 385
FAIL: Hand count after playing council_room was not correct. Expected 122, got 436
FAIL: Hand count after playing council_room was not correct. Expected 122, got 436
FAIL: Hand count after playing council_room was not correct. Expected 384, got 386
FAIL: Hand count after playing council_room was not correct. Expected 386, got 82
FAIL: Hand count after playing council_room was not correct. Expected 386, got 140
FAIL: Hand count after playing council_room was not correct. Expected 386, got 205
FAIL: Hand count after playing council_room was not correct. Expected 333, got 335
FAIL: Hand count after playing council_room was not correct. Expected 335, got 492
FAIL: Hand count after playing council_room was not correct. Expected 335, got 143
FAIL: Hand count after playing council_room was not correct. Expected 335, got 310
FAIL: Hand count after playing council_room was not correct. Expected 170, got 172
FAIL: Hand count after playing council_room was not correct. Expected 172, got 390
FAIL: Hand count after playing council_room was not correct. Expected 172, got 421
FAIL: Hand count after playing council_room was not correct. Expected 172, got 27
FAIL: Hand count after playing council_room was not correct. Expected 91, got 93
FAIL: Hand count after playing council_room was not correct. Expected 93, got 185
FAIL: Hand count after playing council_room was not correct. Expected 93, got 82
FAIL: Hand count after playing council_room was not correct. Expected 93, got 147
FAIL: Hand count after playing council_room was not correct. Expected 348, got 350
FAIL: Hand count after playing council_room was not correct. Expected 350, got 44
FAIL: Hand count after playing council_room was not correct. Expected 350, got 349
FAIL: Hand count after playing council_room was not correct. Expected 350, got 136
FAIL: Hand count after playing council_room was not correct. Expected 202, got 204
FAIL: Hand count after playing council_room was not correct. Expected 204, got 452
FAIL: Hand count after playing council_room was not correct. Expected 204, got 45
FAIL: Hand count after playing council_room was not correct. Expected 204, got 11
FAIL: Hand count after playing council_room was not correct. Expected 443, got 445
FAIL: Hand count after playing council_room was not correct. Expected 445, got 445
FAIL: Hand count after playing council_room was not correct. Expected 445, got 442
FAIL: Hand count after playing council_room was not correct. Expected 445, got 292
FAIL: Hand count after playing council_room was not correct. Expected 27, got 29
FAIL: Hand count after playing council_room was not correct. Expected 29, got 370
FAIL: Hand count after playing council_room was not correct. Expected 29, got 494
FAIL: Hand count after playing council_room was not correct. Expected 29, got 364
FAIL: Hand count after playing council_room was not correct. Expected 122, got 124
FAIL: Hand count after playing council_room was not correct. Expected 124, got 33
FAIL: Hand count after playing council_room was not correct. Expected 124, got 25
FAIL: Hand count after playing council_room was not correct. Expected 124, got 12
FAIL: Hand count after playing council_room was not correct. Expected 5, got 7
FAIL: Hand count after playing council_room was not correct. Expected 7, got 65
FAIL: Hand count after playing council_room was not correct. Expected 7, got 174
FAIL: Hand count after playing council_room was not correct. Expected 7, got 331
FAIL: Hand count after playing council_room was not correct. Expected 97, got 99
FAIL: Hand count after playing council_room was not correct. Expected 99, got 137
FAIL: Hand count after playing council_room was not correct. Expected 99, got 119
FAIL: Hand count after playing council_room was not correct. Expected 99, got 364
FAIL: Hand count after playing council_room was not correct. Expected 342, got 344
FAIL: Hand count after playing council_room was not correct. Expected 344, got 298
FAIL: Hand count after playing council_room was not correct. Expected 344, got 298
FAIL: Hand count after playing council_room was not correct. Expected 344, got 437
FAIL: Hand count after playing council_room was not correct. Expected 481, got 483
FAIL: Hand count after playing council_room was not correct. Expected 483, got 478
FAIL: Hand count after playing council_room was not correct. Expected 483, got 299
FAIL: Hand count after playing council_room was not correct. Expected 483, got 103
FAIL: Hand count after playing council_room was not correct. Expected 240, got 242
FAIL: Hand count after playing council_room was not correct. Expected 242, got 274
FAIL: Hand count after playing council_room was not correct. Expected 242, got 166
FAIL: Hand count after playing council_room was not correct. Expected 242, got 344
FAIL: Hand count after playing council_room was not correct. Expected 19, got 21
FAIL: Hand count after playing council_room was not correct. Expected 21, got 303
FAIL: Hand count after playing council_room was not correct. Expected 21, got 193
FAIL: Hand count after playing council_room was not correct. Expected 21, got 454
FAIL: Hand count after playing council_room was not correct. Expected 311, got 313
FAIL: Hand count after playing council_room was not correct. Expected 313, got 160
FAIL: Hand count after playing council_room was not correct. Expected 313, got 171
FAIL: Hand count after playing council_room was not correct. Expected 313, got 376
FAIL: Hand count after playing council_room was not correct. Expected 107, got 109
FAIL: Hand count after playing council_room was not correct. Expected 109, got 26
FAIL: Hand count after playing council_room was not correct. Expected 109, got 387
FAIL: Hand count after playing council_room was not correct. Expected 109, got 107
FAIL: Hand count after playing council_room was not correct. Expected 496, got 498
FAIL: Hand count after playing council_room was not correct. Expected 498, got 154
FAIL: Hand count after playing council_room was not correct. Expected 498, got 363
FAIL: Hand count after playing council_room was not correct. Expected 498, got 145
FAIL: Hand count after playing council_room was not correct. Expected 72, got 74
FAIL: Hand count after playing council_room was not correct. Expected 74, got 428
FAIL: Hand count after playing council_room was not correct. Expected 74, got 257
FAIL: Hand count after playing council_room was not correct. Expected 74, got 499
FAIL: Hand count after playing council_room was not correct. Expected 143, got 145
FAIL: Hand count after playing council_room was not correct. Expected 145, got 46
FAIL: Hand count after playing council_room was not correct. Expected 145, got 158
FAIL: Hand count after playing council_room was not correct. Expected 145, got 53
FAIL: Hand count after playing council_room was not correct. Expected 257, got 259
FAIL: Hand count after playing council_room was not correct. Expected 259, got 286
FAIL: Hand count after playing council_room was not correct. Expected 259, got 335
FAIL: Hand count after playing council_room was not correct. Expected 259, got 16
FAIL: Hand count after playing council_room was not correct. Expected 350, got 352
FAIL: Hand count after playing council_room was not correct. Expected 352, got 408
FAIL: Hand count after playing council_room was not correct. Expected 352, got 57
FAIL: Hand count after playing council_room was not correct. Expected 352, got 205
FAIL: Hand count after playing council_room was not correct. Expected 405, got 407
FAIL: Hand count after playing council_room was not correct. Expected 407, got 92
FAIL: Hand count after playing council_room was not correct. Expected 407, got 11
FAIL: Hand count after playing council_room was not correct. Expected 407, got 26
FAIL: Hand count after playing council_room was not correct. Expected 337, got 339
FAIL: Hand count after playing council_room was not correct. Expected 339, got 159
FAIL: Hand count after playing council_room was not correct. Expected 339, got 372
FAIL: Hand count after playing council_room was not correct. Expected 339, got 66
FAIL: Hand count after playing council_room was not correct. Expected 268, got 270
FAIL: Hand count after playing council_room was not correct. Expected 270, got 228
FAIL: Hand count after playing council_room was not correct. Expected 270, got 209
FAIL: Hand count after playing council_room was not correct. Expected 270, got 489
FAIL: Hand count after playing council_room was not correct. Expected 11, got 13
FAIL: Hand count after playing council_room was not correct. Expected 13, got 235
FAIL: Hand count after playing council_room was not correct. Expected 13, got 141
FAIL: Hand count after playing council_room was not correct. Expected 13, got 275
FAIL: Hand count after playing council_room was not correct. Expected 452, got 454
FAIL: Hand count after playing council_room was not correct. Expected 454, got 6
FAIL: Hand count after playing council_room was not correct. Expected 454, got 420
FAIL: Hand count after playing council_room was not correct. Expected 454, got 127
FAIL: Hand count after playing council_room was not correct. Expected 447, got 449
FAIL: Hand count after playing council_room was not correct. Expected 449, got 124
FAIL: Hand count after playing council_room was not correct. Expected 449, got 63
FAIL: Hand count after playing council_room was not correct. Expected 449, got 286
FAIL: Hand count after playing council_room was not correct. Expected 326, got 328
FAIL: Hand count after playing council_room was not correct. Expected 328, got 246
FAIL: Hand count after playing council_room was not correct. Expected 328, got 266
FAIL: Hand count after playing council_room was not correct. Expected 328, got 259
FAIL: Hand count after playing council_room was not correct. Expected 418, got 420
FAIL: Hand count after playing council_room was not correct. Expected 420, got 78
FAIL: Hand count after playing council_room was not correct. Expected 420, got 451
FAIL: Hand count after playing council_room was not correct. Expected 420, got 268
FAIL: Hand count after playing council_room was not correct. Expected 59, got 61
FAIL: Hand count after playing council_room was not correct. Expected 61, got 450
FAIL: Hand count after playing council_room was not correct. Expected 61, got 94
FAIL: Hand count after playing council_room was not correct. Expected 61, got 34
FAIL: Hand count after playing council_room was not correct. Expected 332, got 334
FAIL: Hand count after playing council_room was not correct. Expected 334, got 441
FAIL: Hand count after playing council_room was not correct. Expected 334, got 270
FAIL: Hand count after playing council_room was not correct. Expected 334, got 46
FAIL: Hand count after playing council_room was not correct. Expected 60, got 62
FAIL: Hand count after playing council_room was not correct. Expected 62, got 77
FAIL: Hand count after playing council_room was not correct. Expected 62, got 122
FAIL: Hand count after playing council_room was not correct. Expected 62, got 413
FAIL: Hand count after playing council_room was not correct. Expected 486, got 488
FAIL: Hand count after playing council_room was not correct. Expected 488, got 196
FAIL: Hand count after playing council_room was not correct. Expected 488, got 71
FAIL: Hand count after playing council_room was not correct. Expected 488, got 169
FAIL: Hand count after playing council_room was not correct. Expected 487, got 489
FAIL: Hand count after playing council_room was not correct. Expected 489, got 268
FAIL: Hand count after playing council_room was not correct. Expected 489, got 488
FAIL: Hand count after playing council_room was not correct. Expected 489, got 448
FAIL: Hand count after playing council_room was not correct. Expected 122, got 124
FAIL: Hand count after playing council_room was not correct. Expected 124, got 60
FAIL: Hand count after playing council_room was not correct. Expected 124, got 500
FAIL: Hand count after playing council_room was not correct. Expected 124, got 137
FAIL: Hand count after playing council_room was not correct. Expected 266, got 268
FAIL: Hand count after playing council_room was not correct. Expected 268, got 125
FAIL: Hand count after playing council_room was not correct. Expected 268, got 108
FAIL: Hand count after playing council_room was not correct. Expected 268, got 118
FAIL: Hand count after playing council_room was not correct. Expected 356, got 358
FAIL: Hand count after playing council_room was not correct. Expected 358, got 320
FAIL: Hand count after playing council_room was not correct. Expected 358, got 248
FAIL: Hand count after playing council_room was not correct. Expected 358, got 243
FAIL: Hand count after playing council_room was not correct. Expected 36, got 38
FAIL: Hand count after playing council_room was not correct. Expected 38, got 35
FAIL: Hand count after playing council_room was not correct. Expected 38, got 212
FAIL: Hand count after playing council_room was not correct. Expected 38, got 83
FAIL: Hand count after playing council_room was not correct. Expected 78, got 80
FAIL: Hand count after playing council_room was not correct. Expected 80, got 420
FAIL: Hand count after playing council_room was not correct. Expected 80, got 81
FAIL: Hand count after playing council_room was not correct. Expected 80, got 85
FAIL: Hand count after playing council_room was not correct. Expected 217, got 219
FAIL: Hand count after playing council_room was not correct. Expected 219, got 456
FAIL: Hand count after playing council_room was not correct. Expected 219, got 76
FAIL: Hand count after playing council_room was not correct. Expected 219, got 43
FAIL: Hand count after playing council_room was not correct. Expected 91, got 93
FAIL: Hand count after playing council_room was not correct. Expected 93, got 375
FAIL: Hand count after playing council_room was not correct. Expected 93, got 406
FAIL: Hand count after playing council_room was not correct. Expected 93, got 285
FAIL: Hand count after playing council_room was not correct. Expected 109, got 111
FAIL: Hand count after playing council_room was not correct. Expected 111, got 46
FAIL: Hand count after playing council_room was not correct. Expected 111, got 363
FAIL: Hand count after playing council_room was not correct. Expected 111, got 33
FAIL: Hand count after playing council_room was not correct. Expected 325, got 327
FAIL: Hand count after playing council_room was not correct. Expected 327, got 334
FAIL: Hand count after playing council_room was not correct. Expected 327, got 85
FAIL: Hand count after playing council_room was not correct. Expected 327, got 465
FAIL: Hand count after playing council_room was not correct. Expected 133, got 135
FAIL: Hand count after playing council_room was not correct. Expected 135, got 300
FAIL: Hand count after playing council_room was not correct. Expected 135, got 13
FAIL: Hand count after playing council_room was not correct. Expected 135, got 463
FAIL: Hand count after playing council_room was not correct. Expected 120, got 122
FAIL: Hand count after playing council_room was not correct. Expected 122, got 379
FAIL: Hand count after playing council_room was not correct. Expected 122, got 372
FAIL: Hand count after playing council_room was not correct. Expected 122, got 313
FAIL: Hand count after playing council_room was not correct. Expected 273, got 275
FAIL: Hand count after playing council_room was not correct. Expected 275, got 68
FAIL: Hand count after playing council_room was not correct. Expected 275, got 337
FAIL: Hand count after playing council_room was not correct. Expected 275, got 253
FAIL: Hand count after playing council_room was not correct. Expected 266, got 268
FAIL: Hand count after playing council_room was not correct. Expected 268, got 460
FAIL: Hand count after playing council_room was not correct. Expected 268, got 168
FAIL: Hand count after playing council_room was not correct. Expected 268, got 188
FAIL: Hand count after playing council_room was not correct. Expected 179, got 181
FAIL: Hand count after playing council_room was not correct. Expected 181, got 329
FAIL: Hand count after playing council_room was not correct. Expected 181, got 385
FAIL: Hand count after playing council_room was not correct. Expected 181, got 79
FAIL: Hand count after playing council_room was not correct. Expected 189, got 191
FAIL: Hand count after playing council_room was not correct. Expected 191, got 244
FAIL: Hand count after playing council_room was not correct. Expected 191, got 264
FAIL: Hand count after playing council_room was not correct. Expected 191, got 178
FAIL: Hand count after playing council_room was not correct. Expected 76, got 78
FAIL: Hand count after playing council_room was not correct. Expected 78, got 486
FAIL: Hand count after playing council_room was not correct. Expected 78, got 328
FAIL: Hand count after playing council_room was not correct. Expected 78, got 436
FAIL: Hand count after playing council_room was not correct. Expected 66, got 68
FAIL: Hand count after playing council_room was not correct. Expected 68, got 190
FAIL: Hand count after playing council_room was not correct. Expected 68, got 359
FAIL: Hand count after playing council_room was not correct. Expected 68, got 8
FAIL: Hand count after playing council_room was not correct. Expected 195, got 197
FAIL: Hand count after playing council_room was not correct. Expected 197, got 219
FAIL: Hand count after playing council_room was not correct. Expected 197, got 273
FAIL: Hand count after playing council_room was not correct. Expected 197, got 415
FAIL: Hand count after playing council_room was not correct. Expected 168, got 170
FAIL: Hand count after playing council_room was not correct. Expected 170, got 50
FAIL: Hand count after playing council_room was not correct. Expected 170, got 42
FAIL: Hand count after playing council_room was not correct. Expected 170, got 74
FAIL: Hand count after playing council_room was not correct. Expected 486, got 488
FAIL: Hand count after playing council_room was not correct. Expected 488, got 268
FAIL: Hand count after playing council_room was not correct. Expected 488, got 317
FAIL: Hand count after playing council_room was not correct. Expected 488, got 166
FAIL: Hand count after playing council_room was not correct. Expected 251, got 253
FAIL: Hand count after playing council_room was not correct. Expected 253, got 350
FAIL: Hand count after playing council_room was not correct. Expected 253, got 215
FAIL: Hand count after playing council_room was not correct. Expected 253, got 374
FAIL: Hand count after playing council_room was not correct. Expected 366, got 368
FAIL: Hand count after playing council_room was not correct. Expected 368, got 346
FAIL: Hand count after playing council_room was not correct. Expected 368, got 365
FAIL: Hand count after playing council_room was not correct. Expected 368, got 35
FAIL: Hand count after playing council_room was not correct. Expected 245, got 247
FAIL: Hand count after playing council_room was not correct. Expected 247, got 236
FAIL: Hand count after playing council_room was not correct. Expected 247, got 331
FAIL: Hand count after playing council_room was not correct. Expected 247, got 280
FAIL: Hand count after playing council_room was not correct. Expected 389, got 391
FAIL: Hand count after playing council_room was not correct. Expected 391, got 117
FAIL: Hand count after playing council_room was not correct. Expected 391, got 376
FAIL: Hand count after playing council_room was not correct. Expected 391, got 314
FAIL: Hand count after playing council_room was not correct. Expected 174, got 176
FAIL: Hand count after playing council_room was not correct. Expected 176, got 460
FAIL: Hand count after playing council_room was not correct. Expected 176, got 11
FAIL: Hand count after playing council_room was not correct. Expected 176, got 348
FAIL: Hand count after playing council_room was not correct. Expected 475, got 477
FAIL: Hand count after playing council_room was not correct. Expected 477, got 485
FAIL: Hand count after playing council_room was not correct. Expected 477, got 75
FAIL: Hand count after playing council_room was not correct. Expected 477, got 56
FAIL: Hand count after playing council_room was not correct. Expected 388, got 390
FAIL: Hand count after playing council_room was not correct. Expected 390, got 237
FAIL: Hand count after playing council_room was not correct. Expected 390, got 369
FAIL: Hand count after playing council_room was not correct. Expected 390, got 479
FAIL: Hand count after playing council_room was not correct. Expected 455, got 457
FAIL: Hand count after playing council_room was not correct. Expected 457, got 438
FAIL: Hand count after playing council_room was not correct. Expected 457, got 4
FAIL: Hand count after playing council_room was not correct. Expected 457, got 93
FAIL: Hand count after playing council_room was not correct. Expected 336, got 338
FAIL: Hand count after playing council_room was not correct. Expected 338, got 256
FAIL: Hand count after playing council_room was not correct. Expected 338, got 157
FAIL: Hand count after playing council_room was not correct. Expected 338, got 57
FAIL: Hand count after playing council_room was not correct. Expected 418, got 420
FAIL: Hand count after playing council_room was not correct. Expected 420, got 357
FAIL: Hand count after playing council_room was not correct. Expected 420, got 41
FAIL: Hand count after playing council_room was not correct. Expected 420, got 161
FAIL: Hand count after playing council_room was not correct. Expected 265, got 267
FAIL: Hand count after playing council_room was not correct. Expected 267, got 81
FAIL: Hand count after playing council_room was not correct. Expected 267, got 59
FAIL: Hand count after playing council_room was not correct. Expected 267, got 135
FAIL: Hand count after playing council_room was not correct. Expected 55, got 57
FAIL: Hand count after playing council_room was not correct. Expected 57, got 110
FAIL: Hand count after playing council_room was not correct. Expected 57, got 316
FAIL: Hand count after playing council_room was not correct. Expected 57, got 352
FAIL: Hand count after playing council_room was not correct. Expected 346, got 348
FAIL: Hand count after playing council_room was not correct. Expected 348, got 304
FAIL: Hand count after playing council_room was not correct. Expected 348, got 64
FAIL: Hand count after playing council_room was not correct. Expected 348, got 143
FAIL: Hand count after playing council_room was not correct. Expected 193, got 195
FAIL: Hand count after playing council_room was not correct. Expected 195, got 424
FAIL: Hand count after playing council_room was not correct. Expected 195, got 321
FAIL: Hand count after playing council_room was not correct. Expected 195, got 323
FAIL: Hand count after playing council_room was not correct. Expected 446, got 448
FAIL: Hand count after playing council_room was not correct. Expected 448, got 116
FAIL: Hand count after playing council_room was not correct. Expected 448, got 432
FAIL: Hand count after playing council_room was not correct. Expected 448, got 343
FAIL: Hand count after playing council_room was not correct. Expected 330, got 332
FAIL: Hand count after playing council_room was not correct. Expected 332, got 242
FAIL: Hand count after playing council_room was not correct. Expected 332, got 387
FAIL: Hand count after playing council_room was not correct. Expected 332, got 334
FAIL: Hand count after playing council_room was not correct. Expected 135, got 137
FAIL: Hand count after playing council_room was not correct. Expected 137, got 483
FAIL: Hand count after playing council_room was not correct. Expected 137, got 51
FAIL: Hand count after playing council_room was not correct. Expected 137, got 488
FAIL: Hand count after playing council_room was not correct. Expected 393, got 395
FAIL: Hand count after playing council_room was not correct. Expected 395, got 66
FAIL: Hand count after playing council_room was not correct. Expected 395, got 309
FAIL: Hand count after playing council_room was not correct. Expected 395, got 476
FAIL: Hand count after playing council_room was not correct. Expected 207, got 209
FAIL: Hand count after playing council_room was not correct. Expected 209, got 84
FAIL: Hand count after playing council_room was not correct. Expected 209, got 259
FAIL: Hand count after playing council_room was not correct. Expected 209, got 148
FAIL: Hand count after playing council_room was not correct. Expected 311, got 313
FAIL: Hand count after playing council_room was not correct. Expected 313, got 135
FAIL: Hand count after playing council_room was not correct. Expected 313, got 180
FAIL: Hand count after playing council_room was not correct. Expected 313, got 74
FAIL: Hand count after playing council_room was not correct. Expected 229, got 231
FAIL: Hand count after playing council_room was not correct. Expected 231, got 208
FAIL: Hand count after playing council_room was not correct. Expected 231, got 275
FAIL: Hand count after playing council_room was not correct. Expected 231, got 102
FAIL: Hand count after playing council_room was not correct. Expected 337, got 339
FAIL: Hand count after playing council_room was not correct. Expected 339, got 435
FAIL: Hand count after playing council_room was not correct. Expected 339, got 325
FAIL: Hand count after playing council_room was not correct. Expected 339, got 312
FAIL: Hand count after playing council_room was not correct. Expected 382, got 384
FAIL: Hand count after playing council_room was not correct. Expected 384, got 312
FAIL: Hand count after playing council_room was not correct. Expected 384, got 56
FAIL: Hand count after playing council_room was not correct. Expected 384, got 86
FAIL: Hand count after playing council_room was not correct. Expected 37, got 39
FAIL: Hand count after playing council_room was not correct. Expected 39, got 421
FAIL: Hand count after playing council_room was not correct. Expected 39, got 187
FAIL: Hand count after playing council_room was not correct. Expected 39, got 497
FAIL: Hand count after playing council_room was not correct. Expected 481, got 483
FAIL: Hand count after playing council_room was not correct. Expected 483, got 38
FAIL: Hand count after playing council_room was not correct. Expected 483, got 27
FAIL: Hand count after playing council_room was not correct. Expected 483, got 234
FAIL: Hand count after playing council_room was not correct. Expected 357, got 359
FAIL: Hand count after playing council_room was not correct. Expected 359, got 394
FAIL: Hand count after playing council_room was not correct. Expected 359, got 463
FAIL: Hand count after playing council_room was not correct. Expected 359, got 47
FAIL: Hand count after playing council_room was not correct. Expected 89, got 91
FAIL: Hand count after playing council_room was not correct. Expected 91, got 261
FAIL: Hand count after playing council_room was not correct. Expected 91, got 491
FAIL: Hand count after playing council_room was not correct. Expected 91, got 496
FAIL: Hand count after playing council_room was not correct. Expected 192, got 194
FAIL: Hand count after playing council_room was not correct. Expected 194, got 5
FAIL: Hand count after playing council_room was not correct. Expected 194, got 94
FAIL: Hand count after playing council_room was not correct. Expected 194, got 407
FAIL: Hand count after playing council_room was not correct. Expected 448, got 450
FAIL: Hand count after playing council_room was not correct. Expected 450, got 231
FAIL: Hand count after playing council_room was not correct. Expected 450, got 481
FAIL: Hand count after playing council_room was not correct. Expected 450, got 202
FAIL: Hand count after playing council_room was not correct. Expected 76, got 78
FAIL: Hand count after playing council_room was not correct. Expected 78, got 485
FAIL: Hand count after playing council_room was not correct. Expected 78, got 152
FAIL: Hand count after playing council_room was not correct. Expected 78, got 399
FAIL: Hand count after playing council_room was not correct. Expected 422, got 424
FAIL: Hand count after playing council_room was not correct. Expected 424, got 104
FAIL: Hand count after playing council_room was not correct. Expected 424, got 383
FAIL: Hand count after playing council_room was not correct. Expected 424, got 388
FAIL: Hand count after playing council_room was not correct. Expected 369, got 371
FAIL: Hand count after playing council_room was not correct. Expected 371, got 339
FAIL: Hand count after playing council_room was not correct. Expected 371, got 355
FAIL: Hand count after playing council_room was not correct. Expected 371, got 259
FAIL: Hand count after playing council_room was not correct. Expected 72, got 74
FAIL: Hand count after playing council_room was not correct. Expected 74, got 151
FAIL: Hand count after playing council_room was not correct. Expected 74, got 226
FAIL: Hand count after playing council_room was not correct. Expected 74, got 337
FAIL: Hand count after playing council_room was not correct. Expected 473, got 475
FAIL: Hand count after playing council_room was not correct. Expected 475, got 246
FAIL: Hand count after playing council_room was not correct. Expected 475, got 76
FAIL: Hand count after playing council_room was not correct. Expected 475, got 144
FAIL: Hand count after playing council_room was not correct. Expected 404, got 406
FAIL: Hand count after playing council_room was not correct. Expected 406, got 442
FAIL: Hand count after playing council_room was not correct. Expected 406, got 48
FAIL: Hand count after playing council_room was not correct. Expected 406, got 264
FAIL: Hand count after playing council_room was not correct. Expected 208, got 210
FAIL: Hand count after playing council_room was not correct. Expected 210, got 26
FAIL: Hand count after playing council_room was not correct. Expected 210, got 452
FAIL: Hand count after playing council_room was not correct. Expected 210, got 462
FAIL: Hand count after playing council_room was not correct. Expected 377, got 379
FAIL: Hand count after playing council_room was not correct. Expected 379, got 263
FAIL: Hand count after playing council_room was not correct. Expected 379, got 327
FAIL: Hand count after playing council_room was not correct. Expected 379, got 437
FAIL: Hand count after playing council_room was not correct. Expected 388, got 390
FAIL: Hand count after playing council_room was not correct. Expected 390, got 349
FAIL: Hand count after playing council_room was not correct. Expected 390, got 109
FAIL: Hand count after playing council_room was not correct. Expected 390, got 398
FAIL: Hand count after playing council_room was not correct. Expected 401, got 403
FAIL: Hand count after playing council_room was not correct. Expected 403, got 364
FAIL: Hand count after playing council_room was not correct. Expected 403, got 409
FAIL: Hand count after playing council_room was not correct. Expected 403, got 276
FAIL: Hand count after playing council_room was not correct. Expected 320, got 322
FAIL: Hand count after playing council_room was not correct. Expected 322, got 102
FAIL: Hand count after playing council_room was not correct. Expected 322, got 294
FAIL: Hand count after playing council_room was not correct. Expected 322, got 489
FAIL: Hand count after playing council_room was not correct. Expected 116, got 118
FAIL: Hand count after playing council_room was not correct. Expected 118, got 489
FAIL: Hand count after playing council_room was not correct. Expected 118, got 446
FAIL: Hand count after playing council_room was not correct. Expected 118, got 391
FAIL: Hand count after playing council_room was not correct. Expected 112, got 114
FAIL: Hand count after playing council_room was not correct. Expected 114, got 266
FAIL: Hand count after playing council_room was not correct. Expected 114, got 489
FAIL: Hand count after playing council_room was not correct. Expected 114, got 109
FAIL: Hand count after playing council_room was not correct. Expected 301, got 303
FAIL: Hand count after playing council_room was not correct. Expected 303, got 243
FAIL: Hand count after playing council_room was not correct. Expected 303, got 436
FAIL: Hand count after playing council_room was not correct. Expected 303, got 85
FAIL: Hand count after playing council_room was not correct. Expected 282, got 284
FAIL: Hand count after playing council_room was not correct. Expected 284, got 497
FAIL: Hand count after playing council_room was not correct. Expected 284, got 110
FAIL: Hand count after playing council_room was not correct. Expected 284, got 230
FAIL: Hand count after playing council_room was not correct. Expected 448, got 450
FAIL: Hand count after playing council_room was not correct. Expected 450, got 89
FAIL: Hand count after playing council_room was not correct. Expected 450, got 331
FAIL: Hand count after playing council_room was not correct. Expected 450, got 201
FAIL: Hand count after playing council_room was not correct. Expected 110, got 112
FAIL: Hand count after playing council_room was not correct. Expected 112, got 399
FAIL: Hand count after playing council_room was not correct. Expected 112, got 313
FAIL: Hand count after playing council_room was not correct. Expected 112, got 464
FAIL: Hand count after playing council_room was not correct. Expected 84, got 86
FAIL: Hand count after playing council_room was not correct. Expected 86, got 75
FAIL: Hand count after playing council_room was not correct. Expected 86, got 463
FAIL: Hand count after playing council_room was not correct. Expected 86, got 444
FAIL: Hand count after playing council_room was not correct. Expected 354, got 356
FAIL: Hand count after playing council_room was not correct. Expected 356, got 371
FAIL: Hand count after playing council_room was not correct. Expected 356, got 397
FAIL: Hand count after playing council_room was not correct. Expected 356, got 16
FAIL: Hand count after playing council_room was not correct. Expected 206, got 208
FAIL: Hand count after playing council_room was not correct. Expected 208, got 355
FAIL: Hand count after playing council_room was not correct. Expected 208, got 33
FAIL: Hand count after playing council_room was not correct. Expected 208, got 196
FAIL: Hand count after playing council_room was not correct. Expected 404, got 406
FAIL: Hand count after playing council_room was not correct. Expected 406, got 306
FAIL: Hand count after playing council_room was not correct. Expected 406, got 234
FAIL: Hand count after playing council_room was not correct. Expected 406, got 406
FAIL: Hand count after playing council_room was not correct. Expected 24, got 26
FAIL: Hand count after playing council_room was not correct. Expected 26, got 40
FAIL: Hand count after playing council_room was not correct. Expected 26, got 486
FAIL: Hand count after playing council_room was not correct. Expected 26, got 196
FAIL: Hand count after playing council_room was not correct. Expected 465, got 467
FAIL: Hand count after playing council_room was not correct. Expected 467, got 223
FAIL: Hand count after playing council_room was not correct. Expected 467, got 489
FAIL: Hand count after playing council_room was not correct. Expected 467, got 277
FAIL: Hand count after playing council_room was not correct. Expected 425, got 427
FAIL: Hand count after playing council_room was not correct. Expected 427, got 453
FAIL: Hand count after playing council_room was not correct. Expected 427, got 296
FAIL: Hand count after playing council_room was not correct. Expected 427, got 249
FAIL: Hand count after playing council_room was not correct. Expected 56, got 58
FAIL: Hand count after playing council_room was not correct. Expected 58, got 181
FAIL: Hand count after playing council_room was not correct. Expected 58, got 241
FAIL: Hand count after playing council_room was not correct. Expected 58, got 98
FAIL: Hand count after playing council_room was not correct. Expected 303, got 305
FAIL: Hand count after playing council_room was not correct. Expected 305, got 59
FAIL: Hand count after playing council_room was not correct. Expected 305, got 154
FAIL: Hand count after playing council_room was not correct. Expected 305, got 139
FAIL: Hand count after playing council_room was not correct. Expected 36, got 38
FAIL: Hand count after playing council_room was not correct. Expected 38, got 354
FAIL: Hand count after playing council_room was not correct. Expected 38, got 97
FAIL: Hand count after playing council_room was not correct. Expected 38, got 298
FAIL: Hand count after playing council_room was not correct. Expected 345, got 347
FAIL: Hand count after playing council_room was not correct. Expected 347, got 275
FAIL: Hand count after playing council_room was not correct. Expected 347, got 304
FAIL: Hand count after playing council_room was not correct. Expected 347, got 70
FAIL: Hand count after playing council_room was not correct. Expected 384, got 386
FAIL: Hand count after playing council_room was not correct. Expected 386, got 297
FAIL: Hand count after playing council_room was not correct. Expected 386, got 296
FAIL: Hand count after playing council_room was not correct. Expected 386, got 243
FAIL: Hand count after playing council_room was not correct. Expected 167, got 169
FAIL: Hand count after playing council_room was not correct. Expected 169, got 400
FAIL: Hand count after playing council_room was not correct. Expected 169, got 21
FAIL: Hand count after playing council_room was not correct. Expected 169, got 396
FAIL: Hand count after playing council_room was not correct. Expected 314, got 316
FAIL: Hand count after playing council_room was not correct. Expected 316, got 299
FAIL: Hand count after playing council_room was not correct. Expected 316, got 262
FAIL: Hand count after playing council_room was not correct. Expected 316, got 316
FAIL: Hand count after playing council_room was not correct. Expected 286, got 288
FAIL: Hand count after playing council_room was not correct. Expected 288, got 285
FAIL: Hand count after playing council_room was not correct. Expected 288, got 29
FAIL: Hand count after playing council_room was not correct. Expected 288, got 50
FAIL: Hand count after playing council_room was not correct. Expected 311, got 313
FAIL: Hand count after playing council_room was not correct. Expected 313, got 316
FAIL: Hand count after playing council_room was not correct. Expected 313, got 332
FAIL: Hand count after playing council_room was not correct. Expected 313, got 177
FAIL: Hand count after playing council_room was not correct. Expected 270, got 272
FAIL: Hand count after playing council_room was not correct. Expected 272, got 472
FAIL: Hand count after playing council_room was not correct. Expected 272, got 431
FAIL: Hand count after playing council_room was not correct. Expected 272, got 309
FAIL: Hand count after playing council_room was not correct. Expected 468, got 470
FAIL: Hand count after playing council_room was not correct. Expected 470, got 215
FAIL: Hand count after playing council_room was not correct. Expected 470, got 413
FAIL: Hand count after playing council_room was not correct. Expected 470, got 2
FAIL: Hand count after playing council_room was not correct. Expected 313, got 315
FAIL: Hand count after playing council_room was not correct. Expected 315, got 122
FAIL: Hand count after playing council_room was not correct. Expected 315, got 369
FAIL: Hand count after playing council_room was not correct. Expected 315, got 219
FAIL: Hand count after playing council_room was not correct. Expected 96, got 98
FAIL: Hand count after playing council_room was not correct. Expected 98, got 346
FAIL: Hand count after playing council_room was not correct. Expected 98, got 479
FAIL: Hand count after playing council_room was not correct. Expected 98, got 65
FAIL: Hand count after playing council_room was not correct. Expected 427, got 429
FAIL: Hand count after playing council_room was not correct. Expected 429, got 325
FAIL: Hand count after playing council_room was not correct. Expected 429, got 308
FAIL: Hand count after playing council_room was not correct. Expected 429, got 18
FAIL: Hand count after playing council_room was not correct. Expected 421, got 423
FAIL: Hand count after playing council_room was not correct. Expected 423, got 142
FAIL: Hand count after playing council_room was not correct. Expected 423, got 146
FAIL: Hand count after playing council_room was not correct. Expected 423, got 36
FAIL: Hand count after playing council_room was not correct. Expected 437, got 439
FAIL: Hand count after playing council_room was not correct. Expected 439, got 398
FAIL: Hand count after playing council_room was not correct. Expected 439, got 187
FAIL: Hand count after playing council_room was not correct. Expected 439, got 415
FAIL: Hand count after playing council_room was not correct. Expected 45, got 47
FAIL: Hand count after playing council_room was not correct. Expected 47, got 499
FAIL: Hand count after playing council_room was not correct. Expected 47, got 425
FAIL: Hand count after playing council_room was not correct. Expected 47, got 122
FAIL: Hand count after playing council_room was not correct. Expected 36, got 38
FAIL: Hand count after playing council_room was not correct. Expected 38, got 170
FAIL: Hand count after playing council_room was not correct. Expected 38, got 46
FAIL: Hand count after playing council_room was not correct. Expected 38, got 350
FAIL: Hand count after playing council_room was not correct. Expected 466, got 468
FAIL: Hand count after playing council_room was not correct. Expected 468, got 17
FAIL: Hand count after playing council_room was not correct. Expected 468, got 346
FAIL: Hand count after playing council_room was not correct. Expected 468, got 197
FAIL: Hand count after playing council_room was not correct. Expected 407, got 409
FAIL: Hand count after playing council_room was not correct. Expected 409, got 63
FAIL: Hand count after playing council_room was not correct. Expected 409, got 494
FAIL: Hand count after playing council_room was not correct. Expected 409, got 346
FAIL: Hand count after playing council_room was not correct. Expected 464, got 466
FAIL: Hand count after playing council_room was not correct. Expected 466, got 106
FAIL: Hand count after playing council_room was not correct. Expected 466, got 113
FAIL: Hand count after playing council_room was not correct. Expected 466, got 289
FAIL: Hand count after playing council_room was not correct. Expected 360, got 362
FAIL: Hand count after playing council_room was not correct. Expected 362, got 367
FAIL: Hand count after playing council_room was not correct. Expected 362, got 428
FAIL: Hand count after playing council_room was not correct. Expected 362, got 367
FAIL: Hand count after playing council_room was not correct. Expected 322, got 324
FAIL: Hand count after playing council_room was not correct. Expected 324, got 480
FAIL: Hand count after playing council_room was not correct. Expected 324, got 91
FAIL: Hand count after playing council_room was not correct. Expected 324, got 342
FAIL: Hand count after playing council_room was not correct. Expected 357, got 359
FAIL: Hand count after playing council_room was not correct. Expected 359, got 281
FAIL: Hand count after playing council_room was not correct. Expected 359, got 270
FAIL: Hand count after playing council_room was not correct. Expected 359, got 96
FAIL: Hand count after playing council_room was not correct. Expected 413, got 415
FAIL: Hand count after playing council_room was not correct. Expected 415, got 341
FAIL: Hand count after playing council_room was not correct. Expected 415, got 490
FAIL: Hand count after playing council_room was not correct. Expected 415, got 321
FAIL: Hand count after playing council_room was not correct. Expected 246, got 248
FAIL: Hand count after playing council_room was not correct. Expected 248, got 340
FAIL: Hand count after playing council_room was not correct. Expected 248, got 64
FAIL: Hand count after playing council_room was not correct. Expected 248, got 470
FAIL: Hand count after playing council_room was not correct. Expected 46, got 48
FAIL: Hand count after playing council_room was not correct. Expected 48, got 279
FAIL: Hand count after playing council_room was not correct. Expected 48, got 97
FAIL: Hand count after playing council_room was not correct. Expected 48, got 282
FAIL: Hand count after playing council_room was not correct. Expected 68, got 70
FAIL: Hand count after playing council_room was not correct. Expected 70, got 106
FAIL: Hand count after playing council_room was not correct. Expected 70, got 466
FAIL: Hand count after playing council_room was not correct. Expected 70, got 183
FAIL: Hand count after playing council_room was not correct. Expected 78, got 80
FAIL: Hand count after playing council_room was not correct. Expected 80, got 310
FAIL: Hand count after playing council_room was not correct. Expected 80, got 338
FAIL: Hand count after playing council_room was not correct. Expected 80, got 228
FAIL: Hand count after playing council_room was not correct. Expected 55, got 57
FAIL: Hand count after playing council_room was not correct. Expected 57, got 324
FAIL: Hand count after playing council_room was not correct. Expected 57, got 241
FAIL: Hand count after playing council_room was not correct. Expected 57, got 112
FAIL: Hand count after playing council_room was not correct. Expected 74, got 76
FAIL: Hand count after playing council_room was not correct. Expected 76, got 167
FAIL: Hand count after playing council_room was not correct. Expected 76, got 418
FAIL: Hand count after playing council_room was not correct. Expected 76, got 273
FAIL: Hand count after playing council_room was not correct. Expected 287, got 289
FAIL: Hand count after playing council_room was not correct. Expected 289, got 32
FAIL: Hand count after playing council_room was not correct. Expected 289, got 180
FAIL: Hand count after playing council_room was not correct. Expected 289, got 213
FAIL: Hand count after playing council_room was not correct. Expected 370, got 372
FAIL: Hand count after playing council_room was not correct. Expected 372, got 364
FAIL: Hand count after playing council_room was not correct. Expected 372, got 106
FAIL: Hand count after playing council_room was not correct. Expected 372, got 312
FAIL: Hand count after playing council_room was not correct. Expected 292, got 294
FAIL: Hand count after playing council_room was not correct. Expected 294, got 334
FAIL: Hand count after playing council_room was not correct. Expected 294, got 155
FAIL: Hand count after playing council_room was not correct. Expected 294, got 85
FAIL: Hand count after playing council_room was not correct. Expected 337, got 339
FAIL: Hand count after playing council_room was not correct. Expected 339, got 160
FAIL: Hand count after playing council_room was not correct. Expected 339, got 371
FAIL: Hand count after playing council_room was not correct. Expected 339, got 121
FAIL: Hand count after playing council_room was not correct. Expected 473, got 475
FAIL: Hand count after playing council_room was not correct. Expected 475, got 175
FAIL: Hand count after playing council_room was not correct. Expected 475, got 275
FAIL: Hand count after playing council_room was not correct. Expected 475, got 325
FAIL: Hand count after playing council_room was not correct. Expected 219, got 221
FAIL: Hand count after playing council_room was not correct. Expected 221, got 468
FAIL: Hand count after playing council_room was not correct. Expected 221, got 61
FAIL: Hand count after playing council_room was not correct. Expected 221, got 287
FAIL: Hand count after playing council_room was not correct. Expected 70, got 72
FAIL: Hand count after playing council_room was not correct. Expected 72, got 324
FAIL: Hand count after playing council_room was not correct. Expected 72, got 75
FAIL: Hand count after playing council_room was not correct. Expected 72, got 200
FAIL: Hand count after playing council_room was not correct. Expected 109, got 111
FAIL: Hand count after playing council_room was not correct. Expected 111, got 47
FAIL: Hand count after playing council_room was not correct. Expected 111, got 274
FAIL: Hand count after playing council_room was not correct. Expected 111, got 55
FAIL: Hand count after playing council_room was not correct. Expected 217, got 219
FAIL: Hand count after playing council_room was not correct. Expected 219, got 454
FAIL: Hand count after playing council_room was not correct. Expected 219, got 86
FAIL: Hand count after playing council_room was not correct. Expected 219, got 376
FAIL: Hand count after playing council_room was not correct. Expected 389, got 391
FAIL: Hand count after playing council_room was not correct. Expected 391, got 332
FAIL: Hand count after playing council_room was not correct. Expected 391, got 75
FAIL: Hand count after playing council_room was not correct. Expected 391, got 191
FAIL: Hand count after playing council_room was not correct. Expected 443, got 445
FAIL: Hand count after playing council_room was not correct. Expected 445, got 21
FAIL: Hand count after playing council_room was not correct. Expected 445, got 12
FAIL: Hand count after playing council_room was not correct. Expected 445, got 125
FAIL: Hand count after playing council_room was not correct. Expected 420, got 422
FAIL: Hand count after playing council_room was not correct. Expected 422, got 375
FAIL: Hand count after playing council_room was not correct. Expected 422, got 194
FAIL: Hand count after playing council_room was not correct. Expected 422, got 132
FAIL: Hand count after playing council_room was not correct. Expected 375, got 377
FAIL: Hand count after playing council_room was not correct. Expected 377, got 146
FAIL: Hand count after playing council_room was not correct. Expected 377, got 482
FAIL: Hand count after playing council_room was not correct. Expected 377, got 399
FAIL: Hand count after playing council_room was not correct. Expected 459, got 461
FAIL: Hand count after playing council_room was not correct. Expected 461, got 161
FAIL: Hand count after playing council_room was not correct. Expected 461, got 304
FAIL: Hand count after playing council_room was not correct. Expected 461, got 438
FAIL: Hand count after playing council_room was not correct. Expected 168, got 170
FAIL: Hand count after playing council_room was not correct. Expected 170, got 54
FAIL: Hand count after playing council_room was not correct. Expected 170, got 478
FAIL: Hand count after playing council_room was not correct. Expected 170, got 354
FAIL: Hand count after playing council_room was not correct. Expected 313, got 315
FAIL: Hand count after playing council_room was not correct. Expected 315, got 362
FAIL: Hand count after playing council_room was not correct. Expected 315, got 175
FAIL: Hand count after playing council_room was not correct. Expected 315, got 99
FAIL: Hand count after playing council_room was not correct. Expected 419, got 421
FAIL: Hand count after playing council_room was not correct. Expected 421, got 227
FAIL: Hand count after playing council_room was not correct. Expected 421, got 429
FAIL: Hand count after playing council_room was not correct. Expected 421, got 157
FAIL: Hand count after playing council_room was not correct. Expected 455, got 457
FAIL: Hand count after playing council_room was not correct. Expected 457, got 427
FAIL: Hand count after playing council_room was not correct. Expected 457, got 117
FAIL: Hand count after playing council_room was not correct. Expected 457, got 225
FAIL: Hand count after playing council_room was not correct. Expected 86, got 88
FAIL: Hand count after playing council_room was not correct. Expected 88, got 337
FAIL: Hand count after playing council_room was not correct. Expected 88, got 481
FAIL: Hand count after playing council_room was not correct. Expected 88, got 29
FAIL: Hand count after playing council_room was not correct. Expected 315, got 317
FAIL: Hand count after playing council_room was not correct. Expected 317, got 146
FAIL: Hand count after playing council_room was not correct. Expected 317, got 392
FAIL: Hand count after playing council_room was not correct. Expected 317, got 38
FAIL: Hand count after playing council_room was not correct. Expected 475, got 477
FAIL: Hand count after playing council_room was not correct. Expected 477, got 166
FAIL: Hand count after playing council_room was not correct. Expected 477, got 315
FAIL: Hand count after playing council_room was not correct. Expected 477, got 33
FAIL: Hand count after playing council_room was not correct. Expected 490, got 492
FAIL: Hand count after playing council_room was not correct. Expected 492, got 382
FAIL: Hand count after playing council_room was not correct. Expected 492, got 310
FAIL: Hand count after playing council_room was not correct. Expected 492, got 266
FAIL: Hand count after playing council_room was not correct. Expected 395, got 397
FAIL: Hand count after playing council_room was not correct. Expected 397, got 373
FAIL: Hand count after playing council_room was not correct. Expected 397, got 146
FAIL: Hand count after playing council_room was not correct. Expected 397, got 402
FAIL: Hand count after playing council_room was not correct. Expected 130, got 132
FAIL: Hand count after playing council_room was not correct. Expected 132, got 441
FAIL: Hand count after playing council_room was not correct. Expected 132, got 10
FAIL: Hand count after playing council_room was not correct. Expected 132, got 412
FAIL: Hand count after playing council_room was not correct. Expected 492, got 494
FAIL: Hand count after playing council_room was not correct. Expected 494, got 219
FAIL: Hand count after playing council_room was not correct. Expected 494, got 177
FAIL: Hand count after playing council_room was not correct. Expected 494, got 333
FAIL: Hand count after playing council_room was not correct. Expected 138, got 140
FAIL: Hand count after playing council_room was not correct. Expected 140, got 122
FAIL: Hand count after playing council_room was not correct. Expected 140, got 248
FAIL: Hand count after playing council_room was not correct. Expected 140, got 126
FAIL: Hand count after playing council_room was not correct. Expected 219, got 221
FAIL: Hand count after playing council_room was not correct. Expected 221, got 449
FAIL: Hand count after playing council_room was not correct. Expected 221, got 114
FAIL: Hand count after playing council_room was not correct. Expected 221, got 152
FAIL: Hand count after playing council_room was not correct. Expected 394, got 396
FAIL: Hand count after playing council_room was not correct. Expected 396, got 74
FAIL: Hand count after playing council_room was not correct. Expected 396, got 237
FAIL: Hand count after playing council_room was not correct. Expected 396, got 338
FAIL: Hand count after playing council_room was not correct. Expected 293, got 295
FAIL: Hand count after playing council_room was not correct. Expected 295, got 477
FAIL: Hand count after playing council_room was not correct. Expected 295, got 79
FAIL: Hand count after playing council_room was not correct. Expected 295, got 177
FAIL: Hand count after playing council_room was not correct. Expected 334, got 336
FAIL: Hand count after playing council_room was not correct. Expected 336, got 76
FAIL: Hand count after playing council_room was not correct. Expected 336, got 409
FAIL: Hand count after playing council_room was not correct. Expected 336, got 329
FAIL: Hand count after playing council_room was not correct. Expected 368, got 370
FAIL: Hand count after playing council_room was not correct. Expected 370, got 21
FAIL: Hand count after playing council_room was not correct. Expected 370, got 254
FAIL: Hand count after playing council_room was not correct. Expected 370, got 51
FAIL: Hand count after playing council_room was not correct. Expected 116, got 118
FAIL: Hand count after playing council_room was not correct. Expected 118, got 171
FAIL: Hand count after playing council_room was not correct. Expected 118, got 191
FAIL: Hand count after playing council_room was not correct. Expected 118, got 249
FAIL: Hand count after playing council_room was not correct. Expected 422, got 424
FAIL: Hand count after playing council_room was not correct. Expected 424, got 284
FAIL: Hand count after playing council_room was not correct. Expected 424, got 62
FAIL: Hand count after playing council_room was not correct. Expected 424, got 472
FAIL: Hand count after playing council_room was not correct. Expected 10, got 12
FAIL: Hand count after playing council_room was not correct. Expected 12, got 444
FAIL: Hand count after playing council_room was not correct. Expected 12, got 138
FAIL: Hand count after playing council_room was not correct. Expected 12, got 350
FAIL: Hand count after playing council_room was not correct. Expected 443, got 445
FAIL: Hand count after playing council_room was not correct. Expected 445, got 284
FAIL: Hand count after playing council_room was not correct. Expected 445, got 325
FAIL: Hand count after playing council_room was not correct. Expected 445, got 321
FAIL: Hand count after playing council_room was not correct. Expected 115, got 117
FAIL: Hand count after playing council_room was not correct. Expected 117, got 65
FAIL: Hand count after playing council_room was not correct. Expected 117, got 446
FAIL: Hand count after playing council_room was not correct. Expected 117, got 130
FAIL: Hand count after playing council_room was not correct. Expected 123, got 125
FAIL: Hand count after playing council_room was not correct. Expected 125, got 439
FAIL: Hand count after playing council_room was not correct. Expected 125, got 247
FAIL: Hand count after playing council_room was not correct. Expected 125, got 174
FAIL: Hand count after playing council_room was not correct. Expected 416, got 418
FAIL: Hand count after playing council_room was not correct. Expected 418, got 83
FAIL: Hand count after playing council_room was not correct. Expected 418, got 128
FAIL: Hand count after playing council_room was not correct. Expected 418, got 144
FAIL: Hand count after playing council_room was not correct. Expected 239, got 241
FAIL: Hand count after playing council_room was not correct. Expected 241, got 395
FAIL: Hand count after playing council_room was not correct. Expected 241, got 491
FAIL: Hand count after playing council_room was not correct. Expected 241, got 258
FAIL: Hand count after playing council_room was not correct. Expected 107, got 109
FAIL: Hand count after playing council_room was not correct. Expected 109, got 151
FAIL: Hand count after playing council_room was not correct. Expected 109, got 186
FAIL: Hand count after playing council_room was not correct. Expected 109, got 486
FAIL: Hand count after playing council_room was not correct. Expected 441, got 443
FAIL: Hand count after playing council_room was not correct. Expected 443, got 69
FAIL: Hand count after playing council_room was not correct. Expected 443, got 192
FAIL: Hand count after playing council_room was not correct. Expected 443, got 471
FAIL: Hand count after playing council_room was not correct. Expected 99, got 101
FAIL: Hand count after playing council_room was not correct. Expected 101, got 94
FAIL: Hand count after playing council_room was not correct. Expected 101, got 296
FAIL: Hand count after playing council_room was not correct. Expected 101, got 67
FAIL: Hand count after playing council_room was not correct. Expected 320, got 322
FAIL: Hand count after playing council_room was not correct. Expected 322, got 58
FAIL: Hand count after playing council_room was not correct. Expected 322, got 142
FAIL: Hand count after playing council_room was not correct. Expected 322, got 400
FAIL: Hand count after playing council_room was not correct. Expected 29, got 31
FAIL: Hand count after playing council_room was not correct. Expected 31, got 295
FAIL: Hand count after playing council_room was not correct. Expected 31, got 412
FAIL: Hand count after playing council_room was not correct. Expected 31, got 36
FAIL: Hand count after playing council_room was not correct. Expected 371, got 373
FAIL: Hand count after playing council_room was not correct. Expected 373, got 71
FAIL: Hand count after playing council_room was not correct. Expected 373, got 368
FAIL: Hand count after playing council_room was not correct. Expected 373, got 439
FAIL: Hand count after playing council_room was not correct. Expected 7, got 9
FAIL: Hand count after playing council_room was not correct. Expected 9, got 411
FAIL: Hand count after playing council_room was not correct. Expected 9, got 491
FAIL: Hand count after playing council_room was not correct. Expected 9, got 321
FAIL: Hand count after playing council_room was not correct. Expected 478, got 480
FAIL: Hand count after playing council_room was not correct. Expected 480, got 480
FAIL: Hand count after playing council_room was not correct. Expected 480, got 489
FAIL: Hand count after playing council_room was not correct. Expected 480, got 129
FAIL: Hand count after playing council_room was not correct. Expected 457, got 459
FAIL: Hand count after playing council_room was not correct. Expected 459, got 310
FAIL: Hand count after playing council_room was not correct. Expected 459, got 120
FAIL: Hand count after playing council_room was not correct. Expected 459, got 374
FAIL: Hand count after playing council_room was not correct. Expected 458, got 460
FAIL: Hand count after playing council_room was not correct. Expected 460, got 35
FAIL: Hand count after playing council_room was not correct. Expected 460, got 204
FAIL: Hand count after playing council_room was not correct. Expected 460, got 336
FAIL: Hand count after playing council_room was not correct. Expected 118, got 120
FAIL: Hand count after playing council_room was not correct. Expected 120, got 327
FAIL: Hand count after playing council_room was not correct. Expected 120, got 230
FAIL: Hand count after playing council_room was not correct. Expected 120, got 339
FAIL: Hand count after playing council_room was not correct. Expected 18, got 20
FAIL: Hand count after playing council_room was not correct. Expected 20, got 188
FAIL: Hand count after playing council_room was not correct. Expected 20, got 392
FAIL: Hand count after playing council_room was not correct. Expected 20, got 387
FAIL: Hand count after playing council_room was not correct. Expected 231, got 233
FAIL: Hand count after playing council_room was not correct. Expected 233, got 492
FAIL: Hand count after playing council_room was not correct. Expected 233, got 370
FAIL: Hand count after playing council_room was not correct. Expected 233, got 181
FAIL: Hand count after playing council_room was not correct. Expected 486, got 488
FAIL: Hand count after playing council_room was not correct. Expected 488, got 375
FAIL: Hand count after playing council_room was not correct. Expected 488, got 383
FAIL: Hand count after playing council_room was not correct. Expected 488, got 292
FAIL: Hand count after playing council_room was not correct. Expected 6, got 8
FAIL: Hand count after playing council_room was not correct. Expected 8, got 105
FAIL: Hand count after playing council_room was not correct. Expected 8, got 232
FAIL: Hand count after playing council_room was not correct. Expected 8, got 149
FAIL: Hand count after playing council_room was not correct. Expected 47, got 49
FAIL: Hand count after playing council_room was not correct. Expected 49, got 80
FAIL: Hand count after playing council_room was not correct. Expected 49, got 363
FAIL: Hand count after playing council_room was not correct. Expected 49, got 488
FAIL: Hand count after playing council_room was not correct. Expected 380, got 382
FAIL: Hand count after playing council_room was not correct. Expected 382, got 75
FAIL: Hand count after playing council_room was not correct. Expected 382, got 6
FAIL: Hand count after playing council_room was not correct. Expected 382, got 306
FAIL: Hand count after playing council_room was not correct. Expected 142, got 144
FAIL: Hand count after playing council_room was not correct. Expected 144, got 313
FAIL: Hand count after playing council_room was not correct. Expected 144, got 396
FAIL: Hand count after playing council_room was not correct. Expected 144, got 235
FAIL: Hand count after playing council_room was not correct. Expected 212, got 214
FAIL: Hand count after playing council_room was not correct. Expected 214, got 302
FAIL: Hand count after playing council_room was not correct. Expected 214, got 60
FAIL: Hand count after playing council_room was not correct. Expected 214, got 333
FAIL: Hand count after playing council_room was not correct. Expected 230, got 232
FAIL: Hand count after playing council_room was not correct. Expected 232, got 221
FAIL: Hand count after playing council_room was not correct. Expected 232, got 325
FAIL: Hand count after playing council_room was not correct. Expected 232, got 265
FAIL: Hand count after playing council_room was not correct. Expected 306, got 308
FAIL: Hand count after playing council_room was not correct. Expected 308, got 140
FAIL: Hand count after playing council_room was not correct. Expected 308, got 59
FAIL: Hand count after playing council_room was not correct. Expected 308, got 303
FAIL: Hand count after playing council_room was not correct. Expected 165, got 167
FAIL: Hand count after playing council_room was not correct. Expected 167, got 422
FAIL: Hand count after playing council_room was not correct. Expected 167, got 134
FAIL: Hand count after playing council_room was not correct. Expected 167, got 199
FAIL: Hand count after playing council_room was not correct. Expected 431, got 433
FAIL: Hand count after playing council_room was not correct. Expected 433, got 420
FAIL: Hand count after playing council_room was not correct. Expected 433, got 109
FAIL: Hand count after playing council_room was not correct. Expected 433, got 318
FAIL: Hand count after playing council_room was not correct. Expected 219, got 221
FAIL: Hand count after playing council_room was not correct. Expected 221, got 301
FAIL: Hand count after playing council_room was not correct. Expected 221, got 203
FAIL: Hand count after playing council_room was not correct. Expected 221, got 388
FAIL: Hand count after playing council_room was not correct. Expected 214, got 216
FAIL: Hand count after playing council_room was not correct. Expected 216, got 372
FAIL: Hand count after playing council_room was not correct. Expected 216, got 141
FAIL: Hand count after playing council_room was not correct. Expected 216, got 485
FAIL: Hand count after playing council_room was not correct. Expected 209, got 211
FAIL: Hand count after playing council_room was not correct. Expected 211, got 17
FAIL: Hand count after playing council_room was not correct. Expected 211, got 281
FAIL: Hand count after playing council_room was not correct. Expected 211, got 242
FAIL: Hand count after playing council_room was not correct. Expected 92, got 94
FAIL: Hand count after playing council_room was not correct. Expected 94, got 38
FAIL: Hand count after playing council_room was not correct. Expected 94, got 305
FAIL: Hand count after playing council_room was not correct. Expected 94, got 433
FAIL: Hand count after playing council_room was not correct. Expected 24, got 26
FAIL: Hand count after playing council_room was not correct. Expected 26, got 257
FAIL: Hand count after playing council_room was not correct. Expected 26, got 396
FAIL: Hand count after playing council_room was not correct. Expected 26, got 485
FAIL: Hand count after playing council_room was not correct. Expected 293, got 295
FAIL: Hand count after playing council_room was not correct. Expected 295, got 181
FAIL: Hand count after playing council_room was not correct. Expected 295, got 247
FAIL: Hand count after playing council_room was not correct. Expected 295, got 188
FAIL: Hand count after playing council_room was not correct. Expected 211, got 213
FAIL: Hand count after playing council_room was not correct. Expected 213, got 328
FAIL: Hand count after playing council_room was not correct. Expected 213, got 380
FAIL: Hand count after playing council_room was not correct. Expected 213, got 446
FAIL: Hand count after playing council_room was not correct. Expected 14, got 16
FAIL: Hand count after playing council_room was not correct. Expected 16, got 353
FAIL: Hand count after playing council_room was not correct. Expected 16, got 443
FAIL: Hand count after playing council_room was not correct. Expected 16, got 136
FAIL: Hand count after playing council_room was not correct. Expected 475, got 477
FAIL: Hand count after playing council_room was not correct. Expected 477, got 450
FAIL: Hand count after playing council_room was not correct. Expected 477, got 146
FAIL: Hand count after playing council_room was not correct. Expected 477, got 179
FAIL: Hand count after playing council_room was not correct. Expected 428, got 430
FAIL: Hand count after playing council_room was not correct. Expected 430, got 440
FAIL: Hand count after playing council_room was not correct. Expected 430, got 452
FAIL: Hand count after playing council_room was not correct. Expected 430, got 331
FAIL: Hand count after playing council_room was not correct. Expected 167, got 169
FAIL: Hand count after playing council_room was not correct. Expected 169, got 342
FAIL: Hand count after playing council_room was not correct. Expected 169, got 206
FAIL: Hand count after playing council_room was not correct. Expected 169, got 115
FAIL: Hand count after playing council_room was not correct. Expected 167, got 169
FAIL: Hand count after playing council_room was not correct. Expected 169, got 163
FAIL: Hand count after playing council_room was not correct. Expected 169, got 101
FAIL: Hand count after playing council_room was not correct. Expected 169, got 326
FAIL: Hand count after playing council_room was not correct. Expected 420, got 422
FAIL: Hand count after playing council_room was not correct. Expected 422, got 177
FAIL: Hand count after playing council_room was not correct. Expected 422, got 240
FAIL: Hand count after playing council_room was not correct. Expected 422, got 96
FAIL: Hand count after playing council_room was not correct. Expected 139, got 141
FAIL: Hand count after playing council_room was not correct. Expected 141, got 107
FAIL: Hand count after playing council_room was not correct. Expected 141, got 314
FAIL: Hand count after playing council_room was not correct. Expected 141, got 111
FAIL: Hand count after playing council_room was not correct. Expected 213, got 215
FAIL: Hand count after playing council_room was not correct. Expected 215, got 401
FAIL: Hand count after playing council_room was not correct. Expected 215, got 187
FAIL: Hand count after playing council_room was not correct. Expected 215, got 95
FAIL: Hand count after playing council_room was not correct. Expected 83, got 85
FAIL: Hand count after playing council_room was not correct. Expected 85, got 413
FAIL: Hand count after playing council_room was not correct. Expected 85, got 413
FAIL: Hand count after playing council_room was not correct. Expected 85, got 245
FAIL: Hand count after playing council_room was not correct. Expected 161, got 163
FAIL: Hand count after playing council_room was not correct. Expected 163, got 86
FAIL: Hand count after playing council_room was not correct. Expected 163, got 163
FAIL: Hand count after playing council_room was not correct. Expected 163, got 328
FAIL: Hand count after playing council_room was not correct. Expected 236, got 238
FAIL: Hand count after playing council_room was not correct. Expected 238, got 138
FAIL: Hand count after playing council_room was not correct. Expected 238, got 129
FAIL: Hand count after playing council_room was not correct. Expected 238, got 164
FAIL: Hand count after playing council_room was not correct. Expected 118, got 120
FAIL: Hand count after playing council_room was not correct. Expected 120, got 115
FAIL: Hand count after playing council_room was not correct. Expected 120, got 499
FAIL: Hand count after playing council_room was not correct. Expected 120, got 58
FAIL: Hand count after playing council_room was not correct. Expected 461, got 463
FAIL: Hand count after playing council_room was not correct. Expected 463, got 23
FAIL: Hand count after playing council_room was not correct. Expected 463, got 234
FAIL: Hand count after playing council_room was not correct. Expected 463, got 165
FAIL: Hand count after playing council_room was not correct. Expected 233, got 235
FAIL: Hand count after playing council_room was not correct. Expected 235, got 442
FAIL: Hand count after playing council_room was not correct. Expected 235, got 3
FAIL: Hand count after playing council_room was not correct. Expected 235, got 172
FAIL: Hand count after playing council_room was not correct. Expected 138, got 140
FAIL: Hand count after playing council_room was not correct. Expected 140, got 384
FAIL: Hand count after playing council_room was not correct. Expected 140, got 246
FAIL: Hand count after playing council_room was not correct. Expected 140, got 386
FAIL: Hand count after playing council_room was not correct. Expected 167, got 169
FAIL: Hand count after playing council_room was not correct. Expected 169, got 456
FAIL: Hand count after playing council_room was not correct. Expected 169, got 89
FAIL: Hand count after playing council_room was not correct. Expected 169, got 169
FAIL: Hand count after playing council_room was not correct. Expected 394, got 396
FAIL: Hand count after playing council_room was not correct. Expected 396, got 187
FAIL: Hand count after playing council_room was not correct. Expected 396, got 57
FAIL: Hand count after playing council_room was not correct. Expected 396, got 386
FAIL: Hand count after playing council_room was not correct. Expected 347, got 349
FAIL: Hand count after playing council_room was not correct. Expected 349, got 39
FAIL: Hand count after playing council_room was not correct. Expected 349, got 247
FAIL: Hand count after playing council_room was not correct. Expected 349, got 371
FAIL: Hand count after playing council_room was not correct. Expected 23, got 25
FAIL: Hand count after playing council_room was not correct. Expected 25, got 138
FAIL: Hand count after playing council_room was not correct. Expected 25, got 368
FAIL: Hand count after playing council_room was not correct. Expected 25, got 190
FAIL: Hand count after playing council_room was not correct. Expected 347, got 349
FAIL: Hand count after playing council_room was not correct. Expected 349, got 363
FAIL: Hand count after playing council_room was not correct. Expected 349, got 122
FAIL: Hand count after playing council_room was not correct. Expected 349, got 223
FAIL: Hand count after playing council_room was not correct. Expected 405, got 407
FAIL: Hand count after playing council_room was not correct. Expected 407, got 423
FAIL: Hand count after playing council_room was not correct. Expected 407, got 1
FAIL: Hand count after playing council_room was not correct. Expected 407, got 333
FAIL: Hand count after playing council_room was not correct. Expected 335, got 337
FAIL: Hand count after playing council_room was not correct. Expected 337, got 175
FAIL: Hand count after playing council_room was not correct. Expected 337, got 397
FAIL: Hand count after playing council_room was not correct. Expected 337, got 454
FAIL: Hand count after playing council_room was not correct. Expected 472, got 474
FAIL: Hand count after playing council_room was not correct. Expected 474, got 48
FAIL: Hand count after playing council_room was not correct. Expected 474, got 247
FAIL: Hand count after playing council_room was not correct. Expected 474, got 73
FAIL: Hand count after playing council_room was not correct. Expected 91, got 93
FAIL: Hand count after playing council_room was not correct. Expected 93, got 325
FAIL: Hand count after playing council_room was not correct. Expected 93, got 372
FAIL: Hand count after playing council_room was not correct. Expected 93, got 325
FAIL: Hand count after playing council_room was not correct. Expected 267, got 269
FAIL: Hand count after playing council_room was not correct. Expected 269, got 155
FAIL: Hand count after playing council_room was not correct. Expected 269, got 142
FAIL: Hand count after playing council_room was not correct. Expected 269, got 219
FAIL: Hand count after playing council_room was not correct. Expected 176, got 178
FAIL: Hand count after playing council_room was not correct. Expected 178, got 113
FAIL: Hand count after playing council_room was not correct. Expected 178, got 18
FAIL: Hand count after playing council_room was not correct. Expected 178, got 119
FAIL: Hand count after playing council_room was not correct. Expected 6, got 8
FAIL: Hand count after playing council_room was not correct. Expected 8, got 449
FAIL: Hand count after playing council_room was not correct. Expected 8, got 263
FAIL: Hand count after playing council_room was not correct. Expected 8, got 349
FAIL: Hand count after playing council_room was not correct. Expected 323, got 325
FAIL: Hand count after playing council_room was not correct. Expected 325, got 44
FAIL: Hand count after playing council_room was not correct. Expected 325, got 59
FAIL: Hand count after playing council_room was not correct. Expected 325, got 485
FAIL: Hand count after playing council_room was not correct. Expected 311, got 313
FAIL: Hand count after playing council_room was not correct. Expected 313, got 254
FAIL: Hand count after playing council_room was not correct. Expected 313, got 372
FAIL: Hand count after playing council_room was not correct. Expected 313, got 205
FAIL: Hand count after playing council_room was not correct. Expected 53, got 55
FAIL: Hand count after playing council_room was not correct. Expected 55, got 422
FAIL: Hand count after playing council_room was not correct. Expected 55, got 138
FAIL: Hand count after playing council_room was not correct. Expected 55, got 254
FAIL: Hand count after playing council_room was not correct. Expected 278, got 280
FAIL: Hand count after playing council_room was not correct. Expected 280, got 312
FAIL: Hand count after playing council_room was not correct. Expected 280, got 283
FAIL: Hand count after playing council_room was not correct. Expected 280, got 424
FAIL: Hand count after playing council_room was not correct. Expected 16, got 18
FAIL: Hand count after playing council_room was not correct. Expected 18, got 42
FAIL: Hand count after playing council_room was not correct. Expected 18, got 188
FAIL: Hand count after playing council_room was not correct. Expected 18, got 33
FAIL: Hand count after playing council_room was not correct. Expected 425, got 427
FAIL: Hand count after playing council_room was not correct. Expected 427, got 443
FAIL: Hand count after playing council_room was not correct. Expected 427, got 61
FAIL: Hand count after playing council_room was not correct. Expected 427, got 198
FAIL: Hand count after playing council_room was not correct. Expected 107, got 109
FAIL: Hand count after playing council_room was not correct. Expected 109, got 88
FAIL: Hand count after playing council_room was not correct. Expected 109, got 215
FAIL: Hand count after playing council_room was not correct. Expected 109, got 431
FAIL: Hand count after playing council_room was not correct. Expected 110, got 112
FAIL: Hand count after playing council_room was not correct. Expected 112, got 46
FAIL: Hand count after playing council_room was not correct. Expected 112, got 348
FAIL: Hand count after playing council_room was not correct. Expected 112, got 471
FAIL: Hand count after playing council_room was not correct. Expected 419, got 421
FAIL: Hand count after playing council_room was not correct. Expected 421, got 19
FAIL: Hand count after playing council_room was not correct. Expected 421, got 97
FAIL: Hand count after playing council_room was not correct. Expected 421, got 37
FAIL: Hand count after playing council_room was not correct. Expected 332, got 334
FAIL: Hand count after playing council_room was not correct. Expected 334, got 212
FAIL: Hand count after playing council_room was not correct. Expected 334, got 64
FAIL: Hand count after playing council_room was not correct. Expected 334, got 330
FAIL: Hand count after playing council_room was not correct. Expected 279, got 281
FAIL: Hand count after playing council_room was not correct. Expected 281, got 446
FAIL: Hand count after playing council_room was not correct. Expected 281, got 123
FAIL: Hand count after playing council_room was not correct. Expected 281, got 178
FAIL: Hand count after playing council_room was not correct. Expected 111, got 113
FAIL: Hand count after playing council_room was not correct. Expected 113, got 238
FAIL: Hand count after playing council_room was not correct. Expected 113, got 208
FAIL: Hand count after playing council_room was not correct. Expected 113, got 246
FAIL: Hand count after playing council_room was not correct. Expected 238, got 240
FAIL: Hand count after playing council_room was not correct. Expected 240, got 218
FAIL: Hand count after playing council_room was not correct. Expected 240, got 370
FAIL: Hand count after playing council_room was not correct. Expected 240, got 118
FAIL: Hand count after playing council_room was not correct. Expected 409, got 411
FAIL: Hand count after playing council_room was not correct. Expected 411, got 332
FAIL: Hand count after playing council_room was not correct. Expected 411, got 194
FAIL: Hand count after playing council_room was not correct. Expected 411, got 125
FAIL: Hand count after playing council_room was not correct. Expected 28, got 30
FAIL: Hand count after playing council_room was not correct. Expected 30, got 158
FAIL: Hand count after playing council_room was not correct. Expected 30, got 86
FAIL: Hand count after playing council_room was not correct. Expected 30, got 483
FAIL: Hand count after playing council_room was not correct. Expected 446, got 448
FAIL: Hand count after playing council_room was not correct. Expected 448, got 478
FAIL: Hand count after playing council_room was not correct. Expected 448, got 361
FAIL: Hand count after playing council_room was not correct. Expected 448, got 92
FAIL: Hand count after playing council_room was not correct. Expected 471, got 473
FAIL: Hand count after playing council_room was not correct. Expected 473, got 167
FAIL: Hand count after playing council_room was not correct. Expected 473, got 472
FAIL: Hand count after playing council_room was not correct. Expected 473, got 66
FAIL: Hand count after playing council_room was not correct. Expected 55, got 57
FAIL: Hand count after playing council_room was not correct. Expected 57, got 26
FAIL: Hand count after playing council_room was not correct. Expected 57, got 373
FAIL: Hand count after playing council_room was not correct. Expected 57, got 18
FAIL: Hand count after playing council_room was not correct. Expected 102, got 104
FAIL: Hand count after playing council_room was not correct. Expected 104, got 449
FAIL: Hand count after playing council_room was not correct. Expected 104, got 243
FAIL: Hand count after playing council_room was not correct. Expected 104, got 267
FAIL: Hand count after playing council_room was not correct. Expected 425, got 427
FAIL: Hand count after playing council_room was not correct. Expected 427, got 359
FAIL: Hand count after playing council_room was not correct. Expected 427, got 167
FAIL: Hand count after playing council_room was not correct. Expected 427, got 181
FAIL: Hand count after playing council_room was not correct. Expected 441, got 443
FAIL: Hand count after playing council_room was not correct. Expected 443, got 13
FAIL: Hand count after playing council_room was not correct. Expected 443, got 305
FAIL: Hand count after playing council_room was not correct. Expected 443, got 71
FAIL: Hand count after playing council_room was not correct. Expected 271, got 273
FAIL: Hand count after playing council_room was not correct. Expected 273, got 116
FAIL: Hand count after playing council_room was not correct. Expected 273, got 10
FAIL: Hand count after playing council_room was not correct. Expected 273, got 378
FAIL: Hand count after playing council_room was not correct. Expected 491, got 493
FAIL: Hand count after playing council_room was not correct. Expected 493, got 317
FAIL: Hand count after playing council_room was not correct. Expected 493, got 257
FAIL: Hand count after playing council_room was not correct. Expected 493, got 282
FAIL: Hand count after playing council_room was not correct. Expected 358, got 360
FAIL: Hand count after playing council_room was not correct. Expected 360, got 273
FAIL: Hand count after playing council_room was not correct. Expected 360, got 455
FAIL: Hand count after playing council_room was not correct. Expected 360, got 92
FAIL: Hand count after playing council_room was not correct. Expected 366, got 368
FAIL: Hand count after playing council_room was not correct. Expected 368, got 138
FAIL: Hand count after playing council_room was not correct. Expected 368, got 253
FAIL: Hand count after playing council_room was not correct. Expected 368, got 280
FAIL: Hand count after playing council_room was not correct. Expected 181, got 183
FAIL: Hand count after playing council_room was not correct. Expected 183, got 71
FAIL: Hand count after playing council_room was not correct. Expected 183, got 262
FAIL: Hand count after playing council_room was not correct. Expected 183, got 209
FAIL: Hand count after playing council_room was not correct. Expected 168, got 170
FAIL: Hand count after playing council_room was not correct. Expected 170, got 271
FAIL: Hand count after playing council_room was not correct. Expected 170, got 377
FAIL: Hand count after playing council_room was not correct. Expected 170, got 356
FAIL: Hand count after playing council_room was not correct. Expected 140, got 142
FAIL: Hand count after playing council_room was not correct. Expected 142, got 236
FAIL: Hand count after playing council_room was not correct. Expected 142, got 250
FAIL: Hand count after playing council_room was not correct. Expected 142, got 350
FAIL: Hand count after playing council_room was not correct. Expected 396, got 398
FAIL: Hand count after playing council_room was not correct. Expected 398, got 268
FAIL: Hand count after playing council_room was not correct. Expected 398, got 5
FAIL: Hand count after playing council_room was not correct. Expected 398, got 150
FAIL: Hand count after playing council_room was not correct. Expected 102, got 104
FAIL: Hand count after playing council_room was not correct. Expected 104, got 288
FAIL: Hand count after playing council_room was not correct. Expected 104, got 409
FAIL: Hand count after playing council_room was not correct. Expected 104, got 318
FAIL: Hand count after playing council_room was not correct. Expected 122, got 124
FAIL: Hand count after playing council_room was not correct. Expected 124, got 418
FAIL: Hand count after playing council_room was not correct. Expected 124, got 90
FAIL: Hand count after playing council_room was not correct. Expected 124, got 304
FAIL: Hand count after playing council_room was not correct. Expected 462, got 464
FAIL: Hand count after playing council_room was not correct. Expected 464, got 425
FAIL: Hand count after playing council_room was not correct. Expected 464, got 360
FAIL: Hand count after playing council_room was not correct. Expected 464, got 4
FAIL: Hand count after playing council_room was not correct. Expected 23, got 25
FAIL: Hand count after playing council_room was not correct. Expected 25, got 318
FAIL: Hand count after playing council_room was not correct. Expected 25, got 170
FAIL: Hand count after playing council_room was not correct. Expected 25, got 347
FAIL: Hand count after playing council_room was not correct. Expected 222, got 224
FAIL: Hand count after playing council_room was not correct. Expected 224, got 236
FAIL: Hand count after playing council_room was not correct. Expected 224, got 324
FAIL: Hand count after playing council_room was not correct. Expected 224, got 359
FAIL: Hand count after playing council_room was not correct. Expected 395, got 397
FAIL: Hand count after playing council_room was not correct. Expected 397, got 38
FAIL: Hand count after playing council_room was not correct. Expected 397, got 38
FAIL: Hand count after playing council_room was not correct. Expected 397, got 322
FAIL: Hand count after playing council_room was not correct. Expected 227, got 229
FAIL: Hand count after playing council_room was not correct. Expected 229, got 453
FAIL: Hand count after playing council_room was not correct. Expected 229, got 348
FAIL: Hand count after playing council_room was not correct. Expected 229, got 446
FAIL: Hand count after playing council_room was not correct. Expected 473, got 475
FAIL: Hand count after playing council_room was not correct. Expected 475, got 405
FAIL: Hand count after playing council_room was not correct. Expected 475, got 349
FAIL: Hand count after playing council_room was not correct. Expected 475, got 178
FAIL: Hand count after playing council_room was not correct. Expected 156, got 158
FAIL: Hand count after playing council_room was not correct. Expected 158, got 111
FAIL: Hand count after playing council_room was not correct. Expected 158, got 189
FAIL: Hand count after playing council_room was not correct. Expected 158, got 210
FAIL: Hand count after playing council_room was not correct. Expected 395, got 397
FAIL: Hand count after playing council_room was not correct. Expected 397, got 70
FAIL: Hand count after playing council_room was not correct. Expected 397, got 136
FAIL: Hand count after playing council_room was not correct. Expected 397, got 349
FAIL: Hand count after playing council_room was not correct. Expected 105, got 107
FAIL: Hand count after playing council_room was not correct. Expected 107, got 99
FAIL: Hand count after playing council_room was not correct. Expected 107, got 140
FAIL: Hand count after playing council_room was not correct. Expected 107, got 217
FAIL: Hand count after playing council_room was not correct. Expected 291, got 293
FAIL: Hand count after playing council_room was not correct. Expected 293, got 113
FAIL: Hand count after playing council_room was not correct. Expected 293, got 261
FAIL: Hand count after playing council_room was not correct. Expected 293, got 124
FAIL: Hand count after playing council_room was not correct. Expected 225, got 227
FAIL: Hand count after playing council_room was not correct. Expected 227, got 44
FAIL: Hand count after playing council_room was not correct. Expected 227, got 270
FAIL: Hand count after playing council_room was not correct. Expected 227, got 416
FAIL: Hand count after playing council_room was not correct. Expected 201, got 203
FAIL: Hand count after playing council_room was not correct. Expected 203, got 292
FAIL: Hand count after playing council_room was not correct. Expected 203, got 428
FAIL: Hand count after playing council_room was not correct. Expected 203, got 239
FAIL: Hand count after playing council_room was not correct. Expected 183, got 185
FAIL: Hand count after playing council_room was not correct. Expected 185, got 49
FAIL: Hand count after playing council_room was not correct. Expected 185, got 121
FAIL: Hand count after playing council_room was not correct. Expected 185, got 110
FAIL: Hand count after playing council_room was not correct. Expected 355, got 357
FAIL: Hand count after playing council_room was not correct. Expected 357, got 482
FAIL: Hand count after playing council_room was not correct. Expected 357, got 404
FAIL: Hand count after playing council_room was not correct. Expected 357, got 137
FAIL: Hand count after playing council_room was not correct. Expected 247, got 249
FAIL: Hand count after playing council_room was not correct. Expected 249, got 458
FAIL: Hand count after playing council_room was not correct. Expected 249, got 59
FAIL: Hand count after playing council_room was not correct. Expected 249, got 81
FAIL: Hand count after playing council_room was not correct. Expected 294, got 296
FAIL: Hand count after playing council_room was not correct. Expected 296, got 459
FAIL: Hand count after playing council_room was not correct. Expected 296, got 447
FAIL: Hand count after playing council_room was not correct. Expected 296, got 158
FAIL: Hand count after playing council_room was not correct. Expected 14, got 16
FAIL: Hand count after playing council_room was not correct. Expected 16, got 130
FAIL: Hand count after playing council_room was not correct. Expected 16, got 306
FAIL: Hand count after playing council_room was not correct. Expected 16, got 77
FAIL: Hand count after playing council_room was not correct. Expected 265, got 267
FAIL: Hand count after playing council_room was not correct. Expected 267, got 95
FAIL: Hand count after playing council_room was not correct. Expected 267, got 457
FAIL: Hand count after playing council_room was not correct. Expected 267, got 413
FAIL: Hand count after playing council_room was not correct. Expected 11, got 13
FAIL: Hand count after playing council_room was not correct. Expected 13, got 74
FAIL: Hand count after playing council_room was not correct. Expected 13, got 50
FAIL: Hand count after playing council_room was not correct. Expected 13, got 222
FAIL: Hand count after playing council_room was not correct. Expected 396, got 398
FAIL: Hand count after playing council_room was not correct. Expected 398, got 218
FAIL: Hand count after playing council_room was not correct. Expected 398, got 287
FAIL: Hand count after playing council_room was not correct. Expected 398, got 178
FAIL: Hand count after playing council_room was not correct. Expected 242, got 244
FAIL: Hand count after playing council_room was not correct. Expected 244, got 452
FAIL: Hand count after playing council_room was not correct. Expected 244, got 236
FAIL: Hand count after playing council_room was not correct. Expected 244, got 109
FAIL: Hand count after playing council_room was not correct. Expected 427, got 429
FAIL: Hand count after playing council_room was not correct. Expected 429, got 169
FAIL: Hand count after playing council_room was not correct. Expected 429, got 348
FAIL: Hand count after playing council_room was not correct. Expected 429, got 455
FAIL: Hand count after playing council_room was not correct. Expected 70, got 72
FAIL: Hand count after playing council_room was not correct. Expected 72, got 12
FAIL: Hand count after playing council_room was not correct. Expected 72, got 421
FAIL: Hand count after playing council_room was not correct. Expected 72, got 223
FAIL: Hand count after playing council_room was not correct. Expected 294, got 296
FAIL: Hand count after playing council_room was not correct. Expected 296, got 410
FAIL: Hand count after playing council_room was not correct. Expected 296, got 235
FAIL: Hand count after playing council_room was not correct. Expected 296, got 269
FAIL: Hand count after playing council_room was not correct. Expected 410, got 412
FAIL: Hand count after playing council_room was not correct. Expected 412, got 335
FAIL: Hand count after playing council_room was not correct. Expected 412, got 492
FAIL: Hand count after playing council_room was not correct. Expected 412, got 261
FAIL: Hand count after playing council_room was not correct. Expected 10, got 12
FAIL: Hand count after playing council_room was not correct. Expected 12, got 416
FAIL: Hand count after playing council_room was not correct. Expected 12, got 18
FAIL: Hand count after playing council_room was not correct. Expected 12, got 269
FAIL: Hand count after playing council_room was not correct. Expected 330, got 332
FAIL: Hand count after playing council_room was not correct. Expected 332, got 269
FAIL: Hand count after playing council_room was not correct. Expected 332, got 148
FAIL: Hand count after playing council_room was not correct. Expected 332, got 460
FAIL: Hand count after playing council_room was not correct. Expected 429, got 431
FAIL: Hand count after playing council_room was not correct. Expected 431, got 326
FAIL: Hand count after playing council_room was not correct. Expected 431, got 107
FAIL: Hand count after playing council_room was not correct. Expected 431, got 441
FAIL: Hand count after playing council_room was not correct. Expected 16, got 18
FAIL: Hand count after playing council_room was not correct. Expected 18, got 112
FAIL: Hand count after playing council_room was not correct. Expected 18, got 172
FAIL: Hand count after playing council_room was not correct. Expected 18, got 46
FAIL: Hand count after playing council_room was not correct. Expected 82, got 84
FAIL: Hand count after playing council_room was not correct. Expected 84, got 32
FAIL: Hand count after playing council_room was not correct. Expected 84, got 215
FAIL: Hand count after playing council_room was not correct. Expected 84, got 328
FAIL: Hand count after playing council_room was not correct. Expected 239, got 241
FAIL: Hand count after playing council_room was not correct. Expected 241, got 161
FAIL: Hand count after playing council_room was not correct. Expected 241, got 269
FAIL: Hand count after playing council_room was not correct. Expected 241, got 314
FAIL: Hand count after playing council_room was not correct. Expected 358, got 360
FAIL: Hand count after playing council_room was not correct. Expected 360, got 275
FAIL: Hand count after playing council_room was not correct. Expected 360, got 429
FAIL: Hand count after playing council_room was not correct. Expected 360, got 170
FAIL: Hand count after playing council_room was not correct. Expected 403, got 405
FAIL: Hand count after playing council_room was not correct. Expected 405, got 49
FAIL: Hand count after playing council_room was not correct. Expected 405, got 287
FAIL: Hand count after playing council_room was not correct. Expected 405, got 247
FAIL: Hand count after playing council_room was not correct. Expected 482, got 484
FAIL: Hand count after playing council_room was not correct. Expected 484, got 32
FAIL: Hand count after playing council_room was not correct. Expected 484, got 274
FAIL: Hand count after playing council_room was not correct. Expected 484, got 185
FAIL: Hand count after playing council_room was not correct. Expected 194, got 196
FAIL: Hand count after playing council_room was not correct. Expected 196, got 431
FAIL: Hand count after playing council_room was not correct. Expected 196, got 119
FAIL: Hand count after playing council_room was not correct. Expected 196, got 460
FAIL: Hand count after playing council_room was not correct. Expected 179, got 181
FAIL: Hand count after playing council_room was not correct. Expected 181, got 296
FAIL: Hand count after playing council_room was not correct. Expected 181, got 314
FAIL: Hand count after playing council_room was not correct. Expected 181, got 321
FAIL: Hand count after playing council_room was not correct. Expected 63, got 65
FAIL: Hand count after playing council_room was not correct. Expected 65, got 6
FAIL: Hand count after playing council_room was not correct. Expected 65, got 236
FAIL: Hand count after playing council_room was not correct. Expected 65, got 322
FAIL: Hand count after playing council_room was not correct. Expected 416, got 418
FAIL: Hand count after playing council_room was not correct. Expected 418, got 432
FAIL: Hand count after playing council_room was not correct. Expected 418, got 289
FAIL: Hand count after playing council_room was not correct. Expected 418, got 435
FAIL: Hand count after playing council_room was not correct. Expected 35, got 37
FAIL: Hand count after playing council_room was not correct. Expected 37, got 358
FAIL: Hand count after playing council_room was not correct. Expected 37, got 18
FAIL: Hand count after playing council_room was not correct. Expected 37, got 418
FAIL: Hand count after playing council_room was not correct. Expected 215, got 217
FAIL: Hand count after playing council_room was not correct. Expected 217, got 235
FAIL: Hand count after playing council_room was not correct. Expected 217, got 261
FAIL: Hand count after playing council_room was not correct. Expected 217, got 381
FAIL: Hand count after playing council_room was not correct. Expected 326, got 328
FAIL: Hand count after playing council_room was not correct. Expected 328, got 370
FAIL: Hand count after playing council_room was not correct. Expected 328, got 73
FAIL: Hand count after playing council_room was not correct. Expected 328, got 160
FAIL: Hand count after playing council_room was not correct. Expected 341, got 343
FAIL: Hand count after playing council_room was not correct. Expected 343, got 402
FAIL: Hand count after playing council_room was not correct. Expected 343, got 75
FAIL: Hand count after playing council_room was not correct. Expected 343, got 72
FAIL: Hand count after playing council_room was not correct. Expected 352, got 354
FAIL: Hand count after playing council_room was not correct. Expected 354, got 214
FAIL: Hand count after playing council_room was not correct. Expected 354, got 101
FAIL: Hand count after playing council_room was not correct. Expected 354, got 182
FAIL: Hand count after playing council_room was not correct. Expected 404, got 406
FAIL: Hand count after playing council_room was not correct. Expected 406, got 258
FAIL: Hand count after playing council_room was not correct. Expected 406, got 246
FAIL: Hand count after playing council_room was not correct. Expected 406, got 244
FAIL: Hand count after playing council_room was not correct. Expected 452, got 454
FAIL: Hand count after playing council_room was not correct. Expected 454, got 232
FAIL: Hand count after playing council_room was not correct. Expected 454, got 396
FAIL: Hand count after playing council_room was not correct. Expected 454, got 64
FAIL: Hand count after playing council_room was not correct. Expected 264, got 266
FAIL: Hand count after playing council_room was not correct. Expected 266, got 263
FAIL: Hand count after playing council_room was not correct. Expected 266, got 299
FAIL: Hand count after playing council_room was not correct. Expected 266, got 300
FAIL: Hand count after playing council_room was not correct. Expected 478, got 480
FAIL: Hand count after playing council_room was not correct. Expected 480, got 444
FAIL: Hand count after playing council_room was not correct. Expected 480, got 449
FAIL: Hand count after playing council_room was not correct. Expected 480, got 199
FAIL: Hand count after playing council_room was not correct. Expected 470, got 472
FAIL: Hand count after playing council_room was not correct. Expected 472, got 16
FAIL: Hand count after playing council_room was not correct. Expected 472, got 232
FAIL: Hand count after playing council_room was not correct. Expected 472, got 484
FAIL: Hand count after playing council_room was not correct. Expected 134, got 136
FAIL: Hand count after playing council_room was not correct. Expected 136, got 319
FAIL: Hand count after playing council_room was not correct. Expected 136, got 329
FAIL: Hand count after playing council_room was not correct. Expected 136, got 283
FAIL: Hand count after playing council_room was not correct. Expected 347, got 349
FAIL: Hand count after playing council_room was not correct. Expected 349, got 452
FAIL: Hand count after playing council_room was not correct. Expected 349, got 227
FAIL: Hand count after playing council_room was not correct. Expected 349, got 141
FAIL: Hand count after playing council_room was not correct. Expected 445, got 447
FAIL: Hand count after playing council_room was not correct. Expected 447, got 31
FAIL: Hand count after playing council_room was not correct. Expected 447, got 392
FAIL: Hand count after playing council_room was not correct. Expected 447, got 392
FAIL: Hand count after playing council_room was not correct. Expected 169, got 171
FAIL: Hand count after playing council_room was not correct. Expected 171, got 328
FAIL: Hand count after playing council_room was not correct. Expected 171, got 471
FAIL: Hand count after playing council_room was not correct. Expected 171, got 180
FAIL: Hand count after playing council_room was not correct. Expected 107, got 109
FAIL: Hand count after playing council_room was not correct. Expected 109, got 81
FAIL: Hand count after playing council_room was not correct. Expected 109, got 339
FAIL: Hand count after playing council_room was not correct. Expected 109, got 283
FAIL: Hand count after playing council_room was not correct. Expected 178, got 180
FAIL: Hand count after playing council_room was not correct. Expected 180, got 387
FAIL: Hand count after playing council_room was not correct. Expected 180, got 82
FAIL: Hand count after playing council_room was not correct. Expected 180, got 228
FAIL: Hand count after playing council_room was not correct. Expected 369, got 371
FAIL: Hand count after playing council_room was not correct. Expected 371, got 320
FAIL: Hand count after playing council_room was not correct. Expected 371, got 411
FAIL: Hand count after playing council_room was not correct. Expected 371, got 253
FAIL: Hand count after playing council_room was not correct. Expected 122, got 124
FAIL: Hand count after playing council_room was not correct. Expected 124, got 301
FAIL: Hand count after playing council_room was not correct. Expected 124, got 223
FAIL: Hand count after playing council_room was not correct. Expected 124, got 329
FAIL: Hand count after playing council_room was not correct. Expected 372, got 374
FAIL: Hand count after playing council_room was not correct. Expected 374, got 480
FAIL: Hand count after playing council_room was not correct. Expected 374, got 310
FAIL: Hand count after playing council_room was not correct. Expected 374, got 456
FAIL: Hand count after playing council_room was not correct. Expected 347, got 349
FAIL: Hand count after playing council_room was not correct. Expected 349, got 323
FAIL: Hand count after playing council_room was not correct. Expected 349, got 404
FAIL: Hand count after playing council_room was not correct. Expected 349, got 312
FAIL: Hand count after playing council_room was not correct. Expected 328, got 330
FAIL: Hand count after playing council_room was not correct. Expected 330, got 254
FAIL: Hand count after playing council_room was not correct. Expected 330, got 150
FAIL: Hand count after playing council_room was not correct. Expected 330, got 297
FAIL: Hand count after playing council_room was not correct. Expected 445, got 447
FAIL: Hand count after playing council_room was not correct. Expected 447, got 260
FAIL: Hand count after playing council_room was not correct. Expected 447, got 308
FAIL: Hand count after playing council_room was not correct. Expected 447, got 396
FAIL: Hand count after playing council_room was not correct. Expected 441, got 443
FAIL: Hand count after playing council_room was not correct. Expected 443, got 18
FAIL: Hand count after playing council_room was not correct. Expected 443, got 173
FAIL: Hand count after playing council_room was not correct. Expected 443, got 131
FAIL: Hand count after playing council_room was not correct. Expected 419, got 421
FAIL: Hand count after playing council_room was not correct. Expected 421, got 298
FAIL: Hand count after playing council_room was not correct. Expected 421, got 111
FAIL: Hand count after playing council_room was not correct. Expected 421, got 35
FAIL: Hand count after playing council_room was not correct. Expected 477, got 479
FAIL: Hand count after playing council_room was not correct. Expected 479, got 421
FAIL: Hand count after playing council_room was not correct. Expected 479, got 496
FAIL: Hand count after playing council_room was not correct. Expected 479, got 255
FAIL: Hand count after playing council_room was not correct. Expected 98, got 100
FAIL: Hand count after playing council_room was not correct. Expected 100, got 160
FAIL: Hand count after playing council_room was not correct. Expected 100, got 22
FAIL: Hand count after playing council_room was not correct. Expected 100, got 328
FAIL: Hand count after playing council_room was not correct. Expected 214, got 216
FAIL: Hand count after playing council_room was not correct. Expected 216, got 354
FAIL: Hand count after playing council_room was not correct. Expected 216, got 162
FAIL: Hand count after playing council_room was not correct. Expected 216, got 305
FAIL: Hand count after playing council_room was not correct. Expected 196, got 198
FAIL: Hand count after playing council_room was not correct. Expected 198, got 124
FAIL: Hand count after playing council_room was not correct. Expected 198, got 391
FAIL: Hand count after playing council_room was not correct. Expected 198, got 93
FAIL: Hand count after playing council_room was not correct. Expected 447, got 449
FAIL: Hand count after playing council_room was not correct. Expected 449, got 496
FAIL: Hand count after playing council_room was not correct. Expected 449, got 283
FAIL: Hand count after playing council_room was not correct. Expected 449, got 251
FAIL: Hand count after playing council_room was not correct. Expected 81, got 83
FAIL: Hand count after playing council_room was not correct. Expected 83, got 320
FAIL: Hand count after playing council_room was not correct. Expected 83, got 199
FAIL: Hand count after playing council_room was not correct. Expected 83, got 317
FAIL: Hand count after playing council_room was not correct. Expected 129, got 131
FAIL: Hand count after playing council_room was not correct. Expected 131, got 434
FAIL: Hand count after playing council_room was not correct. Expected 131, got 485
FAIL: Hand count after playing council_room was not correct. Expected 131, got 300
FAIL: Hand count after playing council_room was not correct. Expected 251, got 253
FAIL: Hand count after playing council_room was not correct. Expected 253, got 62
FAIL: Hand count after playing council_room was not correct. Expected 253, got 181
FAIL: Hand count after playing council_room was not correct. Expected 253, got 458
FAIL: Hand count after playing council_room was not correct. Expected 151, got 153
FAIL: Hand count after playing council_room was not correct. Expected 153, got 123
FAIL: Hand count after playing council_room was not correct. Expected 153, got 373
FAIL: Hand count after playing council_room was not correct. Expected 153, got 43
FAIL: Hand count after playing council_room was not correct. Expected 279, got 281
FAIL: Hand count after playing council_room was not correct. Expected 281, got 216
FAIL: Hand count after playing council_room was not correct. Expected 281, got 119
FAIL: Hand count after playing council_room was not correct. Expected 281, got 404
FAIL: Hand count after playing council_room was not correct. Expected 193, got 195
FAIL: Hand count after playing council_room was not correct. Expected 195, got 389
FAIL: Hand count after playing council_room was not correct. Expected 195, got 213
FAIL: Hand count after playing council_room was not correct. Expected 195, got 84
FAIL: Hand count after playing council_room was not correct. Expected 209, got 211
FAIL: Hand count after playing council_room was not correct. Expected 211, got 46
FAIL: Hand count after playing council_room was not correct. Expected 211, got 492
FAIL: Hand count after playing council_room was not correct. Expected 211, got 322
FAIL: Hand count after playing council_room was not correct. Expected 445, got 447
FAIL: Hand count after playing council_room was not correct. Expected 447, got 224
FAIL: Hand count after playing council_room was not correct. Expected 447, got 421
FAIL: Hand count after playing council_room was not correct. Expected 447, got 60
FAIL: Hand count after playing council_room was not correct. Expected 373, got 375
FAIL: Hand count after playing council_room was not correct. Expected 375, got 168
FAIL: Hand count after playing council_room was not correct. Expected 375, got 26
FAIL: Hand count after playing council_room was not correct. Expected 375, got 337
FAIL: Hand count after playing council_room was not correct. Expected 20, got 22
FAIL: Hand count after playing council_room was not correct. Expected 22, got 481
FAIL: Hand count after playing council_room was not correct. Expected 22, got 141
FAIL: Hand count after playing council_room was not correct. Expected 22, got 239
FAIL: Hand count after playing council_room was not correct. Expected 172, got 174
FAIL: Hand count after playing council_room was not correct. Expected 174, got 490
FAIL: Hand count after playing council_room was not correct. Expected 174, got 366
FAIL: Hand count after playing council_room was not correct. Expected 174, got 394
FAIL: Hand count after playing council_room was not correct. Expected 328, got 330
FAIL: Hand count after playing council_room was not correct. Expected 330, got 244
FAIL: Hand count after playing council_room was not correct. Expected 330, got 384
FAIL: Hand count after playing council_room was not correct. Expected 330, got 436
FAIL: Hand count after playing council_room was not correct. Expected 382, got 384
FAIL: Hand count after playing council_room was not correct. Expected 384, got 315
FAIL: Hand count after playing council_room was not correct. Expected 384, got 498
FAIL: Hand count after playing council_room was not correct. Expected 384, got 335
FAIL: Hand count after playing council_room was not correct. Expected 336, got 338
FAIL: Hand count after playing council_room was not correct. Expected 338, got 83
FAIL: Hand count after playing council_room was not correct. Expected 338, got 64
FAIL: Hand count after playing council_room was not correct. Expected 338, got 275
FAIL: Hand count after playing council_room was not correct. Expected 468, got 470
FAIL: Hand count after playing council_room was not correct. Expected 470, got 247
FAIL: Hand count after playing council_room was not correct. Expected 470, got 481
FAIL: Hand count after playing council_room was not correct. Expected 470, got 210
FAIL: Hand count after playing council_room was not correct. Expected 461, got 463
FAIL: Hand count after playing council_room was not correct. Expected 463, got 263
FAIL: Hand count after playing council_room was not correct. Expected 463, got 432
FAIL: Hand count after playing council_room was not correct. Expected 463, got 136
FAIL: Hand count after playing council_room was not correct. Expected 238, got 240
FAIL: Hand count after playing council_room was not correct. Expected 240, got 22
FAIL: Hand count after playing council_room was not correct. Expected 240, got 231
FAIL: Hand count after playing council_room was not correct. Expected 240, got 458
FAIL: Hand count after playing council_room was not correct. Expected 139, got 141
FAIL: Hand count after playing council_room was not correct. Expected 141, got 17
FAIL: Hand count after playing council_room was not correct. Expected 141, got 74
FAIL: Hand count after playing council_room was not correct. Expected 141, got 45
FAIL: Hand count after playing council_room was not correct. Expected 258, got 260
FAIL: Hand count after playing council_room was not correct. Expected 260, got 251
FAIL: Hand count after playing council_room was not correct. Expected 260, got 61
FAIL: Hand count after playing council_room was not correct. Expected 260, got 314
FAIL: Hand count after playing council_room was not correct. Expected 350, got 352
FAIL: Hand count after playing council_room was not correct. Expected 352, got 428
FAIL: Hand count after playing council_room was not correct. Expected 352, got 99
FAIL: Hand count after playing council_room was not correct. Expected 352, got 322
FAIL: Hand count after playing council_room was not correct. Expected 24, got 26
FAIL: Hand count after playing council_room was not correct. Expected 26, got 284
FAIL: Hand count after playing council_room was not correct. Expected 26, got 405
FAIL: Hand count after playing council_room was not correct. Expected 26, got 204
FAIL: Hand count after playing council_room was not correct. Expected 115, got 117
FAIL: Hand count after playing council_room was not correct. Expected 117, got 126
FAIL: Hand count after playing council_room was not correct. Expected 117, got 323
FAIL: Hand count after playing council_room was not correct. Expected 117, got 97
FAIL: Hand count after playing council_room was not correct. Expected 159, got 161
FAIL: Hand count after playing council_room was not correct. Expected 161, got 273
FAIL: Hand count after playing council_room was not correct. Expected 161, got 344
FAIL: Hand count after playing council_room was not correct. Expected 161, got 234
FAIL: Hand count after playing council_room was not correct. Expected 81, got 83
FAIL: Hand count after playing council_room was not correct. Expected 83, got 53
FAIL: Hand count after playing council_room was not correct. Expected 83, got 77
FAIL: Hand count after playing council_room was not correct. Expected 83, got 287
FAIL: Hand count after playing council_room was not correct. Expected 419, got 421
FAIL: Hand count after playing council_room was not correct. Expected 421, got 62
FAIL: Hand count after playing council_room was not correct. Expected 421, got 477
FAIL: Hand count after playing council_room was not correct. Expected 421, got 321
FAIL: Hand count after playing council_room was not correct. Expected 245, got 247
FAIL: Hand count after playing council_room was not correct. Expected 247, got 131
FAIL: Hand count after playing council_room was not correct. Expected 247, got 239
FAIL: Hand count after playing council_room was not correct. Expected 247, got 491
FAIL: Hand count after playing council_room was not correct. Expected 145, got 147
FAIL: Hand count after playing council_room was not correct. Expected 147, got 307
FAIL: Hand count after playing council_room was not correct. Expected 147, got 473
FAIL: Hand count after playing council_room was not correct. Expected 147, got 264
FAIL: Hand count after playing council_room was not correct. Expected 281, got 283
FAIL: Hand count after playing council_room was not correct. Expected 283, got 125
FAIL: Hand count after playing council_room was not correct. Expected 283, got 148
FAIL: Hand count after playing council_room was not correct. Expected 283, got 172
FAIL: Hand count after playing council_room was not correct. Expected 465, got 467
FAIL: Hand count after playing council_room was not correct. Expected 467, got 30
FAIL: Hand count after playing council_room was not correct. Expected 467, got 469
FAIL: Hand count after playing council_room was not correct. Expected 467, got 363
FAIL: Hand count after playing council_room was not correct. Expected 216, got 218
FAIL: Hand count after playing council_room was not correct. Expected 218, got 287
FAIL: Hand count after playing council_room was not correct. Expected 218, got 182
FAIL: Hand count after playing council_room was not correct. Expected 218, got 459
FAIL: Hand count after playing council_room was not correct. Expected 302, got 304
FAIL: Hand count after playing council_room was not correct. Expected 304, got 94
FAIL: Hand count after playing council_room was not correct. Expected 304, got 175
FAIL: Hand count after playing council_room was not correct. Expected 304, got 363
FAIL: Hand count after playing council_room was not correct. Expected 310, got 312
FAIL: Hand count after playing council_room was not correct. Expected 312, got 293
FAIL: Hand count after playing council_room was not correct. Expected 312, got 276
FAIL: Hand count after playing council_room was not correct. Expected 312, got 144
FAIL: Hand count after playing council_room was not correct. Expected 54, got 56
FAIL: Hand count after playing council_room was not correct. Expected 56, got 38
FAIL: Hand count after playing council_room was not correct. Expected 56, got 291
FAIL: Hand count after playing council_room was not correct. Expected 56, got 399
FAIL: Hand count after playing council_room was not correct. Expected 75, got 77
FAIL: Hand count after playing council_room was not correct. Expected 77, got 260
FAIL: Hand count after playing council_room was not correct. Expected 77, got 167
FAIL: Hand count after playing council_room was not correct. Expected 77, got 489
FAIL: Hand count after playing council_room was not correct. Expected 121, got 123
FAIL: Hand count after playing council_room was not correct. Expected 123, got 62
FAIL: Hand count after playing council_room was not correct. Expected 123, got 391
FAIL: Hand count after playing council_room was not correct. Expected 123, got 497
FAIL: Hand count after playing council_room was not correct. Expected 42, got 44
FAIL: Hand count after playing council_room was not correct. Expected 44, got 143
FAIL: Hand count after playing council_room was not correct. Expected 44, got 106
FAIL: Hand count after playing council_room was not correct. Expected 44, got 46
FAIL: Hand count after playing council_room was not correct. Expected 49, got 51
FAIL: Hand count after playing council_room was not correct. Expected 51, got 116
FAIL: Hand count after playing council_room was not correct. Expected 51, got 194
FAIL: Hand count after playing council_room was not correct. Expected 51, got 162
FAIL: Hand count after playing council_room was not correct. Expected 374, got 376
FAIL: Hand count after playing council_room was not correct. Expected 376, got 314
FAIL: Hand count after playing council_room was not correct. Expected 376, got 160
FAIL: Hand count after playing council_room was not correct. Expected 376, got 72
FAIL: Hand count after playing council_room was not correct. Expected 322, got 324
FAIL: Hand count after playing council_room was not correct. Expected 324, got 28
FAIL: Hand count after playing council_room was not correct. Expected 324, got 167
FAIL: Hand count after playing council_room was not correct. Expected 324, got 245
FAIL: Hand count after playing council_room was not correct. Expected 417, got 419
FAIL: Hand count after playing council_room was not correct. Expected 419, got 95
FAIL: Hand count after playing council_room was not correct. Expected 419, got 58
FAIL: Hand count after playing council_room was not correct. Expected 419, got 229
FAIL: Hand count after playing council_room was not correct. Expected 230, got 232
FAIL: Hand count after playing council_room was not correct. Expected 232, got 272
FAIL: Hand count after playing council_room was not correct. Expected 232, got 33
FAIL: Hand count after playing council_room was not correct. Expected 232, got 30
FAIL: Hand count after playing council_room was not correct. Expected 61, got 63
FAIL: Hand count after playing council_room was not correct. Expected 63, got 358
FAIL: Hand count after playing council_room was not correct. Expected 63, got 465
FAIL: Hand count after playing council_room was not correct. Expected 63, got 165
FAIL: Hand count after playing council_room was not correct. Expected 23, got 25
FAIL: Hand count after playing council_room was not correct. Expected 25, got 54
FAIL: Hand count after playing council_room was not correct. Expected 25, got 228
FAIL: Hand count after playing council_room was not correct. Expected 25, got 184
FAIL: Hand count after playing council_room was not correct. Expected 171, got 173
FAIL: Hand count after playing council_room was not correct. Expected 173, got 453
FAIL: Hand count after playing council_room was not correct. Expected 173, got 412
FAIL: Hand count after playing council_room was not correct. Expected 173, got 192
FAIL: Hand count after playing council_room was not correct. Expected 298, got 300
FAIL: Hand count after playing council_room was not correct. Expected 300, got 385
FAIL: Hand count after playing council_room was not correct. Expected 300, got 68
FAIL: Hand count after playing council_room was not correct. Expected 300, got 310
FAIL: Hand count after playing council_room was not correct. Expected 359, got 361
FAIL: Hand count after playing council_room was not correct. Expected 361, got 243
FAIL: Hand count after playing council_room was not correct. Expected 361, got 11
FAIL: Hand count after playing council_room was not correct. Expected 361, got 57
FAIL: Hand count after playing council_room was not correct. Expected 466, got 468
FAIL: Hand count after playing council_room was not correct. Expected 468, got 157
FAIL: Hand count after playing council_room was not correct. Expected 468, got 23
FAIL: Hand count after playing council_room was not correct. Expected 468, got 390
FAIL: Hand count after playing council_room was not correct. Expected 447, got 449
FAIL: Hand count after playing council_room was not correct. Expected 449, got 98
FAIL: Hand count after playing council_room was not correct. Expected 449, got 398
FAIL: Hand count after playing council_room was not correct. Expected 449, got 336
FAIL: Hand count after playing council_room was not correct. Expected 346, got 348
FAIL: Hand count after playing council_room was not correct. Expected 348, got 375
FAIL: Hand count after playing council_room was not correct. Expected 348, got 434
FAIL: Hand count after playing council_room was not correct. Expected 348, got 53
FAIL: Hand count after playing council_room was not correct. Expected 414, got 416
FAIL: Hand count after playing council_room was not correct. Expected 416, got 443
FAIL: Hand count after playing council_room was not correct. Expected 416, got 22
FAIL: Hand count after playing council_room was not correct. Expected 416, got 176
FAIL: Hand count after playing council_room was not correct. Expected 332, got 334
FAIL: Hand count after playing council_room was not correct. Expected 334, got 154
FAIL: Hand count after playing council_room was not correct. Expected 334, got 221
FAIL: Hand count after playing council_room was not correct. Expected 334, got 165
FAIL: Hand count after playing council_room was not correct. Expected 494, got 496
FAIL: Hand count after playing council_room was not correct. Expected 496, got 405
FAIL: Hand count after playing council_room was not correct. Expected 496, got 468
FAIL: Hand count after playing council_room was not correct. Expected 496, got 372
FAIL: Hand count after playing council_room was not correct. Expected 336, got 338
FAIL: Hand count after playing council_room was not correct. Expected 338, got 178
FAIL: Hand count after playing council_room was not correct. Expected 338, got 341
FAIL: Hand count after playing council_room was not correct. Expected 338, got 33
FAIL: Hand count after playing council_room was not correct. Expected 405, got 407
FAIL: Hand count after playing council_room was not correct. Expected 407, got 109
FAIL: Hand count after playing council_room was not correct. Expected 407, got 158
FAIL: Hand count after playing council_room was not correct. Expected 407, got 451
FAIL: Hand count after playing council_room was not correct. Expected 276, got 278
FAIL: Hand count after playing council_room was not correct. Expected 278, got 411
FAIL: Hand count after playing council_room was not correct. Expected 278, got 292
FAIL: Hand count after playing council_room was not correct. Expected 278, got 361
FAIL: Hand count after playing council_room was not correct. Expected 163, got 165
FAIL: Hand count after playing council_room was not correct. Expected 165, got 420
FAIL: Hand count after playing council_room was not correct. Expected 165, got 256
FAIL: Hand count after playing council_room was not correct. Expected 165, got 263
FAIL: Hand count after playing council_room was not correct. Expected 60, got 62
FAIL: Hand count after playing council_room was not correct. Expected 62, got 411
FAIL: Hand count after playing council_room was not correct. Expected 62, got 174
FAIL: Hand count after playing council_room was not correct. Expected 62, got 384
FAIL: Hand count after playing council_room was not correct. Expected 300, got 302
FAIL: Hand count after playing council_room was not correct. Expected 302, got 403
FAIL: Hand count after playing council_room was not correct. Expected 302, got 496
FAIL: Hand count after playing council_room was not correct. Expected 302, got 409
FAIL: Hand count after playing council_room was not correct. Expected 63, got 65
FAIL: Hand count after playing council_room was not correct. Expected 65, got 223
FAIL: Hand count after playing council_room was not correct. Expected 65, got 108
FAIL: Hand count after playing council_room was not correct. Expected 65, got 117
FAIL: Hand count after playing council_room was not correct. Expected 141, got 143
FAIL: Hand count after playing council_room was not correct. Expected 143, got 214
FAIL: Hand count after playing council_room was not correct. Expected 143, got 383
FAIL: Hand count after playing council_room was not correct. Expected 143, got 110
FAIL: Hand count after playing council_room was not correct. Expected 490, got 492
FAIL: Hand count after playing council_room was not correct. Expected 492, got 63
FAIL: Hand count after playing council_room was not correct. Expected 492, got 189
FAIL: Hand count after playing council_room was not correct. Expected 492, got 438
FAIL: Hand count after playing council_room was not correct. Expected 43, got 45
FAIL: Hand count after playing council_room was not correct. Expected 45, got 478
FAIL: Hand count after playing council_room was not correct. Expected 45, got 475
FAIL: Hand count after playing council_room was not correct. Expected 45, got 60
FAIL: Hand count after playing council_room was not correct. Expected 484, got 486
FAIL: Hand count after playing council_room was not correct. Expected 486, got 224
FAIL: Hand count after playing council_room was not correct. Expected 486, got 209
FAIL: Hand count after playing council_room was not correct. Expected 486, got 478
FAIL: Hand count after playing council_room was not correct. Expected 199, got 201
FAIL: Hand count after playing council_room was not correct. Expected 201, got 316
FAIL: Hand count after playing council_room was not correct. Expected 201, got 56
FAIL: Hand count after playing council_room was not correct. Expected 201, got 468
FAIL: Hand count after playing council_room was not correct. Expected 207, got 209
FAIL: Hand count after playing council_room was not correct. Expected 209, got 162
FAIL: Hand count after playing council_room was not correct. Expected 209, got 414
FAIL: Hand count after playing council_room was not correct. Expected 209, got 446
FAIL: Hand count after playing council_room was not correct. Expected 313, got 315
FAIL: Hand count after playing council_room was not correct. Expected 315, got 183
FAIL: Hand count after playing council_room was not correct. Expected 315, got 180
FAIL: Hand count after playing council_room was not correct. Expected 315, got 150
FAIL: Hand count after playing council_room was not correct. Expected 403, got 405
FAIL: Hand count after playing council_room was not correct. Expected 405, got 287
FAIL: Hand count after playing council_room was not correct. Expected 405, got 328
FAIL: Hand count after playing council_room was not correct. Expected 405, got 321
FAIL: Hand count after playing council_room was not correct. Expected 39, got 41
FAIL: Hand count after playing council_room was not correct. Expected 41, got 62
FAIL: Hand count after playing council_room was not correct. Expected 41, got 274
FAIL: Hand count after playing council_room was not correct. Expected 41, got 458
FAIL: Hand count after playing council_room was not correct. Expected 207, got 209
FAIL: Hand count after playing council_room was not correct. Expected 209, got 95
FAIL: Hand count after playing council_room was not correct. Expected 209, got 221
FAIL: Hand count after playing council_room was not correct. Expected 209, got 453
FAIL: Hand count after playing council_room was not correct. Expected 92, got 94
FAIL: Hand count after playing council_room was not correct. Expected 94, got 144
FAIL: Hand count after playing council_room was not correct. Expected 94, got 332
FAIL: Hand count after playing council_room was not correct. Expected 94, got 500
FAIL: Hand count after playing council_room was not correct. Expected 349, got 351
FAIL: Hand count after playing council_room was not correct. Expected 351, got 337
FAIL: Hand count after playing council_room was not correct. Expected 351, got 415
FAIL: Hand count after playing council_room was not correct. Expected 351, got 466
FAIL: Hand count after playing council_room was not correct. Expected 142, got 144
FAIL: Hand count after playing council_room was not correct. Expected 144, got 316
FAIL: Hand count after playing council_room was not correct. Expected 144, got 255
FAIL: Hand count after playing council_room was not correct. Expected 144, got 497
FAIL: Hand count after playing council_room was not correct. Expected 319, got 321
FAIL: Hand count after playing council_room was not correct. Expected 321, got 128
FAIL: Hand count after playing council_room was not correct. Expected 321, got 138
FAIL: Hand count after playing council_room was not correct. Expected 321, got 281
FAIL: Hand count after playing council_room was not correct. Expected 239, got 241
FAIL: Hand count after playing council_room was not correct. Expected 241, got 360
FAIL: Hand count after playing council_room was not correct. Expected 241, got 356
FAIL: Hand count after playing council_room was not correct. Expected 241, got 258
FAIL: Hand count after playing council_room was not correct. Expected 144, got 146
FAIL: Hand count after playing council_room was not correct. Expected 146, got 361
FAIL: Hand count after playing council_room was not correct. Expected 146, got 90
FAIL: Hand count after playing council_room was not correct. Expected 146, got 223
FAIL: Hand count after playing council_room was not correct. Expected 365, got 367
FAIL: Hand count after playing council_room was not correct. Expected 367, got 346
FAIL: Hand count after playing council_room was not correct. Expected 367, got 84
FAIL: Hand count after playing council_room was not correct. Expected 367, got 26
FAIL: Hand count after playing council_room was not correct. Expected 339, got 341
FAIL: Hand count after playing council_room was not correct. Expected 341, got 438
FAIL: Hand count after playing council_room was not correct. Expected 341, got 114
FAIL: Hand count after playing council_room was not correct. Expected 341, got 206
FAIL: Hand count after playing council_room was not correct. Expected 467, got 469
FAIL: Hand count after playing council_room was not correct. Expected 469, got 439
FAIL: Hand count after playing council_room was not correct. Expected 469, got 345
FAIL: Hand count after playing council_room was not correct. Expected 469, got 68
FAIL: Hand count after playing council_room was not correct. Expected 406, got 408
FAIL: Hand count after playing council_room was not correct. Expected 408, got 215
FAIL: Hand count after playing council_room was not correct. Expected 408, got 217
FAIL: Hand count after playing council_room was not correct. Expected 408, got 439
FAIL: Hand count after playing council_room was not correct. Expected 242, got 244
FAIL: Hand count after playing council_room was not correct. Expected 244, got 294
FAIL: Hand count after playing council_room was not correct. Expected 244, got 500
FAIL: Hand count after playing council_room was not correct. Expected 244, got 330
FAIL: Hand count after playing council_room was not correct. Expected 119, got 121
FAIL: Hand count after playing council_room was not correct. Expected 121, got 254
FAIL: Hand count after playing council_room was not correct. Expected 121, got 459
FAIL: Hand count after playing council_room was not correct. Expected 121, got 231
FAIL: Hand count after playing council_room was not correct. Expected 246, got 248
FAIL: Hand count after playing council_room was not correct. Expected 248, got 459
FAIL: Hand count after playing council_room was not correct. Expected 248, got 335
FAIL: Hand count after playing council_room was not correct. Expected 248, got 225
FAIL: Hand count after playing council_room was not correct. Expected 326, got 328
FAIL: Hand count after playing council_room was not correct. Expected 328, got 28
FAIL: Hand count after playing council_room was not correct. Expected 328, got 257
FAIL: Hand count after playing council_room was not correct. Expected 328, got 477
FAIL: Hand count after playing council_room was not correct. Expected 182, got 184
FAIL: Hand count after playing council_room was not correct. Expected 184, got 83
FAIL: Hand count after playing council_room was not correct. Expected 184, got 119
FAIL: Hand count after playing council_room was not correct. Expected 184, got 80
FAIL: Hand count after playing council_room was not correct. Expected 139, got 141
FAIL: Hand count after playing council_room was not correct. Expected 141, got 484
FAIL: Hand count after playing council_room was not correct. Expected 141, got 499
FAIL: Hand count after playing council_room was not correct. Expected 141, got 231
FAIL: Hand count after playing council_room was not correct. Expected 250, got 252
FAIL: Hand count after playing council_room was not correct. Expected 252, got 102
FAIL: Hand count after playing council_room was not correct. Expected 252, got 452
FAIL: Hand count after playing council_room was not correct. Expected 252, got 33
FAIL: Hand count after playing council_room was not correct. Expected 348, got 350
FAIL: Hand count after playing council_room was not correct. Expected 350, got 108
FAIL: Hand count after playing council_room was not correct. Expected 350, got 413
FAIL: Hand count after playing council_room was not correct. Expected 350, got 307
FAIL: Hand count after playing council_room was not correct. Expected 133, got 135
FAIL: Hand count after playing council_room was not correct. Expected 135, got 108
FAIL: Hand count after playing council_room was not correct. Expected 135, got 366
FAIL: Hand count after playing council_room was not correct. Expected 135, got 4
FAIL: Hand count after playing council_room was not correct. Expected 137, got 139
FAIL: Hand count after playing council_room was not correct. Expected 139, got 329
FAIL: Hand count after playing council_room was not correct. Expected 139, got 49
FAIL: Hand count after playing council_room was not correct. Expected 139, got 351
FAIL: Hand count after playing council_room was not correct. Expected 328, got 330
FAIL: Hand count after playing council_room was not correct. Expected 330, got 315
FAIL: Hand count after playing council_room was not correct. Expected 330, got 362
FAIL: Hand count after playing council_room was not correct. Expected 330, got 294
FAIL: Hand count after playing council_room was not correct. Expected 132, got 134
FAIL: Hand count after playing council_room was not correct. Expected 134, got 491
FAIL: Hand count after playing council_room was not correct. Expected 134, got 42
FAIL: Hand count after playing council_room was not correct. Expected 134, got 382
FAIL: Hand count after playing council_room was not correct. Expected 7, got 9
FAIL: Hand count after playing council_room was not correct. Expected 9, got 496
FAIL: Hand count after playing council_room was not correct. Expected 9, got 270
FAIL: Hand count after playing council_room was not correct. Expected 9, got 460
FAIL: Hand count after playing council_room was not correct. Expected 456, got 458
FAIL: Hand count after playing council_room was not correct. Expected 458, got 268
FAIL: Hand count after playing council_room was not correct. Expected 458, got 115
FAIL: Hand count after playing council_room was not correct. Expected 458, got 377
FAIL: Hand count after playing council_room was not correct. Expected 233, got 235
FAIL: Hand count after playing council_room was not correct. Expected 235, got 420
FAIL: Hand count after playing council_room was not correct. Expected 235, got 262
FAIL: Hand count after playing council_room was not correct. Expected 235, got 255
FAIL: Hand count after playing council_room was not correct. Expected 218, got 220
FAIL: Hand count after playing council_room was not correct. Expected 220, got 268
FAIL: Hand count after playing council_room was not correct. Expected 220, got 90
FAIL: Hand count after playing council_room was not correct. Expected 220, got 338
FAIL: Hand count after playing council_room was not correct. Expected 404, got 406
FAIL: Hand count after playing council_room was not correct. Expected 406, got 269
FAIL: Hand count after playing council_room was not correct. Expected 406, got 465
FAIL: Hand count after playing council_room was not correct. Expected 406, got 32
FAIL: Hand count after playing council_room was not correct. Expected 459, got 461
FAIL: Hand count after playing council_room was not correct. Expected 461, got 437
FAIL: Hand count after playing council_room was not correct. Expected 461, got 164
FAIL: Hand count after playing council_room was not correct. Expected 461, got 381
FAIL: Hand count after playing council_room was not correct. Expected 335, got 337
FAIL: Hand count after playing council_room was not correct. Expected 337, got 132
FAIL: Hand count after playing council_room was not correct. Expected 337, got 354
FAIL: Hand count after playing council_room was not correct. Expected 337, got 453
FAIL: Hand count after playing council_room was not correct. Expected 319, got 321
FAIL: Hand count after playing council_room was not correct. Expected 321, got 40
FAIL: Hand count after playing council_room was not correct. Expected 321, got 130
FAIL: Hand count after playing council_room was not correct. Expected 321, got 127
FAIL: Hand count after playing council_room was not correct. Expected 388, got 390
FAIL: Hand count after playing council_room was not correct. Expected 390, got 303
FAIL: Hand count after playing council_room was not correct. Expected 390, got 202
FAIL: Hand count after playing council_room was not correct. Expected 390, got 370
FAIL: Hand count after playing council_room was not correct. Expected 189, got 191
FAIL: Hand count after playing council_room was not correct. Expected 191, got 449
FAIL: Hand count after playing council_room was not correct. Expected 191, got 280
FAIL: Hand count after playing council_room was not correct. Expected 191, got 410
FAIL: Hand count after playing council_room was not correct. Expected 379, got 381
FAIL: Hand count after playing council_room was not correct. Expected 381, got 418
FAIL: Hand count after playing council_room was not correct. Expected 381, got 291
FAIL: Hand count after playing council_room was not correct. Expected 381, got 237
FAIL: Hand count after playing council_room was not correct. Expected 327, got 329
FAIL: Hand count after playing council_room was not correct. Expected 329, got 209
FAIL: Hand count after playing council_room was not correct. Expected 329, got 47
FAIL: Hand count after playing council_room was not correct. Expected 329, got 453
FAIL: Hand count after playing council_room was not correct. Expected 137, got 139
FAIL: Hand count after playing council_room was not correct. Expected 139, got 5
FAIL: Hand count after playing council_room was not correct. Expected 139, got 429
FAIL: Hand count after playing council_room was not correct. Expected 139, got 91
FAIL: Hand count after playing council_room was not correct. Expected 161, got 163
FAIL: Hand count after playing council_room was not correct. Expected 163, got 459
FAIL: Hand count after playing council_room was not correct. Expected 163, got 87
FAIL: Hand count after playing council_room was not correct. Expected 163, got 166
FAIL: Hand count after playing council_room was not correct. Expected 395, got 397
FAIL: Hand count after playing council_room was not correct. Expected 397, got 248
FAIL: Hand count after playing council_room was not correct. Expected 397, got 458
FAIL: Hand count after playing council_room was not correct. Expected 397, got 258
FAIL: Hand count after playing council_room was not correct. Expected 154, got 156
FAIL: Hand count after playing council_room was not correct. Expected 156, got 356
FAIL: Hand count after playing council_room was not correct. Expected 156, got 331
FAIL: Hand count after playing council_room was not correct. Expected 156, got 418
FAIL: Hand count after playing council_room was not correct. Expected 266, got 268
FAIL: Hand count after playing council_room was not correct. Expected 268, got 493
FAIL: Hand count after playing council_room was not correct. Expected 268, got 211
FAIL: Hand count after playing council_room was not correct. Expected 268, got 382
FAIL: Hand count after playing council_room was not correct. Expected 234, got 236
FAIL: Hand count after playing council_room was not correct. Expected 236, got 131
FAIL: Hand count after playing council_room was not correct. Expected 236, got 107
FAIL: Hand count after playing council_room was not correct. Expected 236, got 44
FAIL: Hand count after playing council_room was not correct. Expected 441, got 443
FAIL: Hand count after playing council_room was not correct. Expected 443, got 197
FAIL: Hand count after playing council_room was not correct. Expected 443, got 325
FAIL: Hand count after playing council_room was not correct. Expected 443, got 106
FAIL: Hand count after playing council_room was not correct. Expected 263, got 265
FAIL: Hand count after playing council_room was not correct. Expected 265, got 182
FAIL: Hand count after playing council_room was not correct. Expected 265, got 196
FAIL: Hand count after playing council_room was not correct. Expected 265, got 457
FAIL: Hand count after playing council_room was not correct. Expected 466, got 468
FAIL: Hand count after playing council_room was not correct. Expected 468, got 264
FAIL: Hand count after playing council_room was not correct. Expected 468, got 497
FAIL: Hand count after playing council_room was not correct. Expected 468, got 334
FAIL: Hand count after playing council_room was not correct. Expected 196, got 198
FAIL: Hand count after playing council_room was not correct. Expected 198, got 23
FAIL: Hand count after playing council_room was not correct. Expected 198, got 406
FAIL: Hand count after playing council_room was not correct. Expected 198, got 31
FAIL: Hand count after playing council_room was not correct. Expected 72, got 74
FAIL: Hand count after playing council_room was not correct. Expected 74, got 374
FAIL: Hand count after playing council_room was not correct. Expected 74, got 3
FAIL: Hand count after playing council_room was not correct. Expected 74, got 470
FAIL: Hand count after playing council_room was not correct. Expected 429, got 431
FAIL: Hand count after playing council_room was not correct. Expected 431, got 349
FAIL: Hand count after playing council_room was not correct. Expected 431, got 342
FAIL: Hand count after playing council_room was not correct. Expected 431, got 179
FAIL: Hand count after playing council_room was not correct. Expected 432, got 434
FAIL: Hand count after playing council_room was not correct. Expected 434, got 237
FAIL: Hand count after playing council_room was not correct. Expected 434, got 168
FAIL: Hand count after playing council_room was not correct. Expected 434, got 284
FAIL: Hand count after playing council_room was not correct. Expected 431, got 433
FAIL: Hand count after playing council_room was not correct. Expected 433, got 369
FAIL: Hand count after playing council_room was not correct. Expected 433, got 476
FAIL: Hand count after playing council_room was not correct. Expected 433, got 227
FAIL: Hand count after playing council_room was not correct. Expected 157, got 159
FAIL: Hand count after playing council_room was not correct. Expected 159, got 212
FAIL: Hand count after playing council_room was not correct. Expected 159, got 353
FAIL: Hand count after playing council_room was not correct. Expected 159, got 315
FAIL: Hand count after playing council_room was not correct. Expected 487, got 489
FAIL: Hand count after playing council_room was not correct. Expected 489, got 352
FAIL: Hand count after playing council_room was not correct. Expected 489, got 203
FAIL: Hand count after playing council_room was not correct. Expected 489, got 423
FAIL: Hand count after playing council_room was not correct. Expected 300, got 302
FAIL: Hand count after playing council_room was not correct. Expected 302, got 255
FAIL: Hand count after playing council_room was not correct. Expected 302, got 32
FAIL: Hand count after playing council_room was not correct. Expected 302, got 227
FAIL: Hand count after playing council_room was not correct. Expected 226, got 228
FAIL: Hand count after playing council_room was not correct. Expected 228, got 340
FAIL: Hand count after playing council_room was not correct. Expected 228, got 258
FAIL: Hand count after playing council_room was not correct. Expected 228, got 349
FAIL: Hand count after playing council_room was not correct. Expected 42, got 44
FAIL: Hand count after playing council_room was not correct. Expected 44, got 344
FAIL: Hand count after playing council_room was not correct. Expected 44, got 274
FAIL: Hand count after playing council_room was not correct. Expected 44, got 169
FAIL: Hand count after playing council_room was not correct. Expected 61, got 63
FAIL: Hand count after playing council_room was not correct. Expected 63, got 259
FAIL: Hand count after playing council_room was not correct. Expected 63, got 274
FAIL: Hand count after playing council_room was not correct. Expected 63, got 268
FAIL: Hand count after playing council_room was not correct. Expected 14, got 16
FAIL: Hand count after playing council_room was not correct. Expected 16, got 41
FAIL: Hand count after playing council_room was not correct. Expected 16, got 387
FAIL: Hand count after playing council_room was not correct. Expected 16, got 256
FAIL: Hand count after playing council_room was not correct. Expected 14, got 16
FAIL: Hand count after playing council_room was not correct. Expected 16, got 43
FAIL: Hand count after playing council_room was not correct. Expected 16, got 487
FAIL: Hand count after playing council_room was not correct. Expected 16, got 302
FAIL: Hand count after playing council_room was not correct. Expected 13, got 15
FAIL: Hand count after playing council_room was not correct. Expected 15, got 235
FAIL: Hand count after playing council_room was not correct. Expected 15, got 45
FAIL: Hand count after playing council_room was not correct. Expected 15, got 356
FAIL: Hand count after playing council_room was not correct. Expected 67, got 69
FAIL: Hand count after playing council_room was not correct. Expected 69, got 42
FAIL: Hand count after playing council_room was not correct. Expected 69, got 433
FAIL: Hand count after playing council_room was not correct. Expected 69, got 131
FAIL: Hand count after playing council_room was not correct. Expected 249, got 251
FAIL: Hand count after playing council_room was not correct. Expected 251, got 135
FAIL: Hand count after playing council_room was not correct. Expected 251, got 144
FAIL: Hand count after playing council_room was not correct. Expected 251, got 424
FAIL: Hand count after playing council_room was not correct. Expected 491, got 493
FAIL: Hand count after playing council_room was not correct. Expected 493, got 231
FAIL: Hand count after playing council_room was not correct. Expected 493, got 235
FAIL: Hand count after playing council_room was not correct. Expected 493, got 232
FAIL: Hand count after playing council_room was not correct. Expected 86, got 88
FAIL: Hand count after playing council_room was not correct. Expected 88, got 69
FAIL: Hand count after playing council_room was not correct. Expected 88, got 44
FAIL: Hand count after playing council_room was not correct. Expected 88, got 370
FAIL: Hand count after playing council_room was not correct. Expected 446, got 448
FAIL: Hand count after playing council_room was not correct. Expected 448, got 173
FAIL: Hand count after playing council_room was not correct. Expected 448, got 316
FAIL: Hand count after playing council_room was not correct. Expected 448, got 145
FAIL: Hand count after playing council_room was not correct. Expected 42, got 44
FAIL: Hand count after playing council_room was not correct. Expected 44, got 436
FAIL: Hand count after playing council_room was not correct. Expected 44, got 114
FAIL: Hand count after playing council_room was not correct. Expected 44, got 307
FAIL: Hand count after playing council_room was not correct. Expected 399, got 401
FAIL: Hand count after playing council_room was not correct. Expected 401, got 85
FAIL: Hand count after playing council_room was not correct. Expected 401, got 485
FAIL: Hand count after playing council_room was not correct. Expected 401, got 58
FAIL: Hand count after playing council_room was not correct. Expected 303, got 305
FAIL: Hand count after playing council_room was not correct. Expected 305, got 367
FAIL: Hand count after playing council_room was not correct. Expected 305, got 166
FAIL: Hand count after playing council_room was not correct. Expected 305, got 378
FAIL: Hand count after playing council_room was not correct. Expected 392, got 394
FAIL: Hand count after playing council_room was not correct. Expected 394, got 87
FAIL: Hand count after playing council_room was not correct. Expected 394, got 15
FAIL: Hand count after playing council_room was not correct. Expected 394, got 167
FAIL: Hand count after playing council_room was not correct. Expected 443, got 445
FAIL: Hand count after playing council_room was not correct. Expected 445, got 240
FAIL: Hand count after playing council_room was not correct. Expected 445, got 27
FAIL: Hand count after playing council_room was not correct. Expected 445, got 131
FAIL: Hand count after playing council_room was not correct. Expected 78, got 80
FAIL: Hand count after playing council_room was not correct. Expected 80, got 356
FAIL: Hand count after playing council_room was not correct. Expected 80, got 65
FAIL: Hand count after playing council_room was not correct. Expected 80, got 227
FAIL: Hand count after playing council_room was not correct. Expected 228, got 230
FAIL: Hand count after playing council_room was not correct. Expected 230, got 150
FAIL: Hand count after playing council_room was not correct. Expected 230, got 211
FAIL: Hand count after playing council_room was not correct. Expected 230, got 153
FAIL: Hand count after playing council_room was not correct. Expected 61, got 63
FAIL: Hand count after playing council_room was not correct. Expected 63, got 201
FAIL: Hand count after playing council_room was not correct. Expected 63, got 463
FAIL: Hand count after playing council_room was not correct. Expected 63, got 50
FAIL: Hand count after playing council_room was not correct. Expected 383, got 385
FAIL: Hand count after playing council_room was not correct. Expected 385, got 337
FAIL: Hand count after playing council_room was not correct. Expected 385, got 9
FAIL: Hand count after playing council_room was not correct. Expected 385, got 411
FAIL: Hand count after playing council_room was not correct. Expected 276, got 278
FAIL: Hand count after playing council_room was not correct. Expected 278, got 16
FAIL: Hand count after playing council_room was not correct. Expected 278, got 7
FAIL: Hand count after playing council_room was not correct. Expected 278, got 429
FAIL: Hand count after playing council_room was not correct. Expected 435, got 437
FAIL: Hand count after playing council_room was not correct. Expected 437, got 144
FAIL: Hand count after playing council_room was not correct. Expected 437, got 167
FAIL: Hand count after playing council_room was not correct. Expected 437, got 223
FAIL: Hand count after playing council_room was not correct. Expected 287, got 289
FAIL: Hand count after playing council_room was not correct. Expected 289, got 15
FAIL: Hand count after playing council_room was not correct. Expected 289, got 407
FAIL: Hand count after playing council_room was not correct. Expected 289, got 93
FAIL: Hand count after playing council_room was not correct. Expected 406, got 408
FAIL: Hand count after playing council_room was not correct. Expected 408, got 251
FAIL: Hand count after playing council_room was not correct. Expected 408, got 445
FAIL: Hand count after playing council_room was not correct. Expected 408, got 283
FAIL: Hand count after playing council_room was not correct. Expected 369, got 371
FAIL: Hand count after playing council_room was not correct. Expected 371, got 201
FAIL: Hand count after playing council_room was not correct. Expected 371, got 72
FAIL: Hand count after playing council_room was not correct. Expected 371, got 378
FAIL: Hand count after playing council_room was not correct. Expected 419, got 421
FAIL: Hand count after playing council_room was not correct. Expected 421, got 168
FAIL: Hand count after playing council_room was not correct. Expected 421, got 240
FAIL: Hand count after playing council_room was not correct. Expected 421, got 48
FAIL: Hand count after playing council_room was not correct. Expected 442, got 444
FAIL: Hand count after playing council_room was not correct. Expected 444, got 325
FAIL: Hand count after playing council_room was not correct. Expected 444, got 258
FAIL: Hand count after playing council_room was not correct. Expected 444, got 311
FAIL: Hand count after playing council_room was not correct. Expected 64, got 66
FAIL: Hand count after playing council_room was not correct. Expected 66, got 407
FAIL: Hand count after playing council_room was not correct. Expected 66, got 171
FAIL: Hand count after playing council_room was not correct. Expected 66, got 73
FAIL: Hand count after playing council_room was not correct. Expected 415, got 417
FAIL: Hand count after playing council_room was not correct. Expected 417, got 443
FAIL: Hand count after playing council_room was not correct. Expected 417, got 275
FAIL: Hand count after playing council_room was not correct. Expected 417, got 422
FAIL: Hand count after playing council_room was not correct. Expected 440, got 442
FAIL: Hand count after playing council_room was not correct. Expected 442, got 272
FAIL: Hand count after playing council_room was not correct. Expected 442, got 26
FAIL: Hand count after playing council_room was not correct. Expected 442, got 422
FAIL: Hand count after playing council_room was not correct. Expected 178, got 180
FAIL: Hand count after playing council_room was not correct. Expected 180, got 173
FAIL: Hand count after playing council_room was not correct. Expected 180, got 386
FAIL: Hand count after playing council_room was not correct. Expected 180, got 124
FAIL: Hand count after playing council_room was not correct. Expected 279, got 281
FAIL: Hand count after playing council_room was not correct. Expected 281, got 106
FAIL: Hand count after playing council_room was not correct. Expected 281, got 298
FAIL: Hand count after playing council_room was not correct. Expected 281, got 88
FAIL: Hand count after playing council_room was not correct. Expected 313, got 315
FAIL: Hand count after playing council_room was not correct. Expected 315, got 237
FAIL: Hand count after playing council_room was not correct. Expected 315, got 117
FAIL: Hand count after playing council_room was not correct. Expected 315, got 495
FAIL: Hand count after playing council_room was not correct. Expected 153, got 155
FAIL: Hand count after playing council_room was not correct. Expected 155, got 497
FAIL: Hand count after playing council_room was not correct. Expected 155, got 95
FAIL: Hand count after playing council_room was not correct. Expected 155, got 358
FAIL: Hand count after playing council_room was not correct. Expected 61, got 63
FAIL: Hand count after playing council_room was not correct. Expected 63, got 10
FAIL: Hand count after playing council_room was not correct. Expected 63, got 15
FAIL: Hand count after playing council_room was not correct. Expected 63, got 418
FAIL: Hand count after playing council_room was not correct. Expected 95, got 97
FAIL: Hand count after playing council_room was not correct. Expected 97, got 105
FAIL: Hand count after playing council_room was not correct. Expected 97, got 21
FAIL: Hand count after playing council_room was not correct. Expected 97, got 220
FAIL: Hand count after playing council_room was not correct. Expected 467, got 469
FAIL: Hand count after playing council_room was not correct. Expected 469, got 292
FAIL: Hand count after playing council_room was not correct. Expected 469, got 397
FAIL: Hand count after playing council_room was not correct. Expected 469, got 167
FAIL: Hand count after playing council_room was not correct. Expected 353, got 355
FAIL: Hand count after playing council_room was not correct. Expected 355, got 407
FAIL: Hand count after playing council_room was not correct. Expected 355, got 333
FAIL: Hand count after playing council_room was not correct. Expected 355, got 476
FAIL: Hand count after playing council_room was not correct. Expected 36, got 38
FAIL: Hand count after playing council_room was not correct. Expected 38, got 386
FAIL: Hand count after playing council_room was not correct. Expected 38, got 200
FAIL: Hand count after playing council_room was not correct. Expected 38, got 407
FAIL: Hand count after playing council_room was not correct. Expected 396, got 398
FAIL: Hand count after playing council_room was not correct. Expected 398, got 213
FAIL: Hand count after playing council_room was not correct. Expected 398, got 243
FAIL: Hand count after playing council_room was not correct. Expected 398, got 92
FAIL: Hand count after playing council_room was not correct. Expected 405, got 407
FAIL: Hand count after playing council_room was not correct. Expected 407, got 126
FAIL: Hand count after playing council_room was not correct. Expected 407, got 392
FAIL: Hand count after playing council_room was not correct. Expected 407, got 274
FAIL: Hand count after playing council_room was not correct. Expected 357, got 359
FAIL: Hand count after playing council_room was not correct. Expected 359, got 327
FAIL: Hand count after playing council_room was not correct. Expected 359, got 478
FAIL: Hand count after playing council_room was not correct. Expected 359, got 96
FAIL: Hand count after playing council_room was not correct. Expected 77, got 79
FAIL: Hand count after playing council_room was not correct. Expected 79, got 45
FAIL: Hand count after playing council_room was not correct. Expected 79, got 360
FAIL: Hand count after playing council_room was not correct. Expected 79, got 286
FAIL: Hand count after playing council_room was not correct. Expected 368, got 370
FAIL: Hand count after playing council_room was not correct. Expected 370, got 301
FAIL: Hand count after playing council_room was not correct. Expected 370, got 213
FAIL: Hand count after playing council_room was not correct. Expected 370, got 89
FAIL: Hand count after playing council_room was not correct. Expected 4, got 6
FAIL: Hand count after playing council_room was not correct. Expected 6, got 280
FAIL: Hand count after playing council_room was not correct. Expected 6, got 115
FAIL: Hand count after playing council_room was not correct. Expected 6, got 96
FAIL: Hand count after playing council_room was not correct. Expected 342, got 344
FAIL: Hand count after playing council_room was not correct. Expected 344, got 337
FAIL: Hand count after playing council_room was not correct. Expected 344, got 349
FAIL: Hand count after playing council_room was not correct. Expected 344, got 141
FAIL: Hand count after playing council_room was not correct. Expected 310, got 312
FAIL: Hand count after playing council_room was not correct. Expected 312, got 76
FAIL: Hand count after playing council_room was not correct. Expected 312, got 178
FAIL: Hand count after playing council_room was not correct. Expected 312, got 372
FAIL: Hand count after playing council_room was not correct. Expected 151, got 153
FAIL: Hand count after playing council_room was not correct. Expected 153, got 411
FAIL: Hand count after playing council_room was not correct. Expected 153, got 106
FAIL: Hand count after playing council_room was not correct. Expected 153, got 479
FAIL: Hand count after playing council_room was not correct. Expected 251, got 253
FAIL: Hand count after playing council_room was not correct. Expected 253, got 45
FAIL: Hand count after playing council_room was not correct. Expected 253, got 109
FAIL: Hand count after playing council_room was not correct. Expected 253, got 394
FAIL: Hand count after playing council_room was not correct. Expected 409, got 411
FAIL: Hand count after playing council_room was not correct. Expected 411, got 315
FAIL: Hand count after playing council_room was not correct. Expected 411, got 331
FAIL: Hand count after playing council_room was not correct. Expected 411, got 244
FAIL: Hand count after playing council_room was not correct. Expected 262, got 264
FAIL: Hand count after playing council_room was not correct. Expected 264, got 339
FAIL: Hand count after playing council_room was not correct. Expected 264, got 340
FAIL: Hand count after playing council_room was not correct. Expected 264, got 127
FAIL: Hand count after playing council_room was not correct. Expected 393, got 395
FAIL: Hand count after playing council_room was not correct. Expected 395, got 145
FAIL: Hand count after playing council_room was not correct. Expected 395, got 9
FAIL: Hand count after playing council_room was not correct. Expected 395, got 490
FAIL: Hand count after playing council_room was not correct. Expected 216, got 218
FAIL: Hand count after playing council_room was not correct. Expected 218, got 338
FAIL: Hand count after playing council_room was not correct. Expected 218, got 160
FAIL: Hand count after playing council_room was not correct. Expected 218, got 55
FAIL: Hand count after playing council_room was not correct. Expected 198, got 200
FAIL: Hand count after playing council_room was not correct. Expected 200, got 264
FAIL: Hand count after playing council_room was not correct. Expected 200, got 7
FAIL: Hand count after playing council_room was not correct. Expected 200, got 18
FAIL: Hand count after playing council_room was not correct. Expected 156, got 158
FAIL: Hand count after playing council_room was not correct. Expected 158, got 108
FAIL: Hand count after playing council_room was not correct. Expected 158, got 180
FAIL: Hand count after playing council_room was not correct. Expected 158, got 108
FAIL: Hand count after playing council_room was not correct. Expected 152, got 154
FAIL: Hand count after playing council_room was not correct. Expected 154, got 156
FAIL: Hand count after playing council_room was not correct. Expected 154, got 327
FAIL: Hand count after playing council_room was not correct. Expected 154, got 3
FAIL: Hand count after playing council_room was not correct. Expected 340, got 342
FAIL: Hand count after playing council_room was not correct. Expected 342, got 427
FAIL: Hand count after playing council_room was not correct. Expected 342, got 117
FAIL: Hand count after playing council_room was not correct. Expected 342, got 253
FAIL: Hand count after playing council_room was not correct. Expected 215, got 217
FAIL: Hand count after playing council_room was not correct. Expected 217, got 22
FAIL: Hand count after playing council_room was not correct. Expected 217, got 442
FAIL: Hand count after playing council_room was not correct. Expected 217, got 317
FAIL: Hand count after playing council_room was not correct. Expected 91, got 93
FAIL: Hand count after playing council_room was not correct. Expected 93, got 355
FAIL: Hand count after playing council_room was not correct. Expected 93, got 262
FAIL: Hand count after playing council_room was not correct. Expected 93, got 420
FAIL: Hand count after playing council_room was not correct. Expected 216, got 218
FAIL: Hand count after playing council_room was not correct. Expected 218, got 271
FAIL: Hand count after playing council_room was not correct. Expected 218, got 75
FAIL: Hand count after playing council_room was not correct. Expected 218, got 330
FAIL: Hand count after playing council_room was not correct. Expected 485, got 487
FAIL: Hand count after playing council_room was not correct. Expected 487, got 17
FAIL: Hand count after playing council_room was not correct. Expected 487, got 49
FAIL: Hand count after playing council_room was not correct. Expected 487, got 1
FAIL: Hand count after playing council_room was not correct. Expected 168, got 170
FAIL: Hand count after playing council_room was not correct. Expected 170, got 268
FAIL: Hand count after playing council_room was not correct. Expected 170, got 245
FAIL: Hand count after playing council_room was not correct. Expected 170, got 431
FAIL: Hand count after playing council_room was not correct. Expected 399, got 401
FAIL: Hand count after playing council_room was not correct. Expected 401, got 452
FAIL: Hand count after playing council_room was not correct. Expected 401, got 189
FAIL: Hand count after playing council_room was not correct. Expected 401, got 380
FAIL: Hand count after playing council_room was not correct. Expected 495, got 497
FAIL: Hand count after playing council_room was not correct. Expected 497, got 401
FAIL: Hand count after playing council_room was not correct. Expected 497, got 75
FAIL: Hand count after playing council_room was not correct. Expected 497, got 243
FAIL: Hand count after playing council_room was not correct. Expected 380, got 382
FAIL: Hand count after playing council_room was not correct. Expected 382, got 248
FAIL: Hand count after playing council_room was not correct. Expected 382, got 216
FAIL: Hand count after playing council_room was not correct. Expected 382, got 25
FAIL: Hand count after playing council_room was not correct. Expected 223, got 225
FAIL: Hand count after playing council_room was not correct. Expected 225, got 305
FAIL: Hand count after playing council_room was not correct. Expected 225, got 172
FAIL: Hand count after playing council_room was not correct. Expected 225, got 414
FAIL: Hand count after playing council_room was not correct. Expected 344, got 346
FAIL: Hand count after playing council_room was not correct. Expected 346, got 310
FAIL: Hand count after playing council_room was not correct. Expected 346, got 289
FAIL: Hand count after playing council_room was not correct. Expected 346, got 55
FAIL: Hand count after playing council_room was not correct. Expected 431, got 433
FAIL: Hand count after playing council_room was not correct. Expected 433, got 91
FAIL: Hand count after playing council_room was not correct. Expected 433, got 222
FAIL: Hand count after playing council_room was not correct. Expected 433, got 469
FAIL: Hand count after playing council_room was not correct. Expected 61, got 63
FAIL: Hand count after playing council_room was not correct. Expected 63, got 324
FAIL: Hand count after playing council_room was not correct. Expected 63, got 141
FAIL: Hand count after playing council_room was not correct. Expected 63, got 276
FAIL: Hand count after playing council_room was not correct. Expected 270, got 272
FAIL: Hand count after playing council_room was not correct. Expected 272, got 341
FAIL: Hand count after playing council_room was not correct. Expected 272, got 156
FAIL: Hand count after playing council_room was not correct. Expected 272, got 187
FAIL: Hand count after playing council_room was not correct. Expected 77, got 79
FAIL: Hand count after playing council_room was not correct. Expected 79, got 160
FAIL: Hand count after playing council_room was not correct. Expected 79, got 262
FAIL: Hand count after playing council_room was not correct. Expected 79, got 489
FAIL: Hand count after playing council_room was not correct. Expected 7, got 9
FAIL: Hand count after playing council_room was not correct. Expected 9, got 350
FAIL: Hand count after playing council_room was not correct. Expected 9, got 472
FAIL: Hand count after playing council_room was not correct. Expected 9, got 183
FAIL: Hand count after playing council_room was not correct. Expected 144, got 146
FAIL: Hand count after playing council_room was not correct. Expected 146, got 426
FAIL: Hand count after playing council_room was not correct. Expected 146, got 477
FAIL: Hand count after playing council_room was not correct. Expected 146, got 370
FAIL: Hand count after playing council_room was not correct. Expected 293, got 295
FAIL: Hand count after playing council_room was not correct. Expected 295, got 246
FAIL: Hand count after playing council_room was not correct. Expected 295, got 323
FAIL: Hand count after playing council_room was not correct. Expected 295, got 210
FAIL: Hand count after playing council_room was not correct. Expected 261, got 263
FAIL: Hand count after playing council_room was not correct. Expected 263, got 46
FAIL: Hand count after playing council_room was not correct. Expected 263, got 103
FAIL: Hand count after playing council_room was not correct. Expected 263, got 338
FAIL: Hand count after playing council_room was not correct. Expected 274, got 276
FAIL: Hand count after playing council_room was not correct. Expected 276, got 57
FAIL: Hand count after playing council_room was not correct. Expected 276, got 392
FAIL: Hand count after playing council_room was not correct. Expected 276, got 394
FAIL: Hand count after playing council_room was not correct. Expected 100, got 102
FAIL: Hand count after playing council_room was not correct. Expected 102, got 64
FAIL: Hand count after playing council_room was not correct. Expected 102, got 483
FAIL: Hand count after playing council_room was not correct. Expected 102, got 342
FAIL: Hand count after playing council_room was not correct. Expected 194, got 196
FAIL: Hand count after playing council_room was not correct. Expected 196, got 392
FAIL: Hand count after playing council_room was not correct. Expected 196, got 162
FAIL: Hand count after playing council_room was not correct. Expected 196, got 37
FAIL: Hand count after playing council_room was not correct. Expected 310, got 312
FAIL: Hand count after playing council_room was not correct. Expected 312, got 253
FAIL: Hand count after playing council_room was not correct. Expected 312, got 55
FAIL: Hand count after playing council_room was not correct. Expected 312, got 391
FAIL: Hand count after playing council_room was not correct. Expected 263, got 265
FAIL: Hand count after playing council_room was not correct. Expected 265, got 373
FAIL: Hand count after playing council_room was not correct. Expected 265, got 18
FAIL: Hand count after playing council_room was not correct. Expected 265, got 125
FAIL: Hand count after playing council_room was not correct. Expected 43, got 45
FAIL: Hand count after playing council_room was not correct. Expected 45, got 16
FAIL: Hand count after playing council_room was not correct. Expected 45, got 206
FAIL: Hand count after playing council_room was not correct. Expected 45, got 82
FAIL: Hand count after playing council_room was not correct. Expected 32, got 34
FAIL: Hand count after playing council_room was not correct. Expected 34, got 285
FAIL: Hand count after playing council_room was not correct. Expected 34, got 345
FAIL: Hand count after playing council_room was not correct. Expected 34, got 364
FAIL: Hand count after playing council_room was not correct. Expected 104, got 106
FAIL: Hand count after playing council_room was not correct. Expected 106, got 46
FAIL: Hand count after playing council_room was not correct. Expected 106, got 350
FAIL: Hand count after playing council_room was not correct. Expected 106, got 99
FAIL: Hand count after playing council_room was not correct. Expected 269, got 271
FAIL: Hand count after playing council_room was not correct. Expected 271, got 21
FAIL: Hand count after playing council_room was not correct. Expected 271, got 184
FAIL: Hand count after playing council_room was not correct. Expected 271, got 23
FAIL: Hand count after playing council_room was not correct. Expected 283, got 285
FAIL: Hand count after playing council_room was not correct. Expected 285, got 209
FAIL: Hand count after playing council_room was not correct. Expected 285, got 243
FAIL: Hand count after playing council_room was not correct. Expected 285, got 259
FAIL: Hand count after playing council_room was not correct. Expected 383, got 385
FAIL: Hand count after playing council_room was not correct. Expected 385, got 445
FAIL: Hand count after playing council_room was not correct. Expected 385, got 489
FAIL: Hand count after playing council_room was not correct. Expected 385, got 286
FAIL: Hand count after playing council_room was not correct. Expected 470, got 472
FAIL: Hand count after playing council_room was not correct. Expected 472, got 176
FAIL: Hand count after playing council_room was not correct. Expected 472, got 77
FAIL: Hand count after playing council_room was not correct. Expected 472, got 466
FAIL: Hand count after playing council_room was not correct. Expected 372, got 374
FAIL: Hand count after playing council_room was not correct. Expected 374, got 424
FAIL: Hand count after playing council_room was not correct. Expected 374, got 197
FAIL: Hand count after playing council_room was not correct. Expected 374, got 367
FAIL: Hand count after playing council_room was not correct. Expected 379, got 381
FAIL: Hand count after playing council_room was not correct. Expected 381, got 487
FAIL: Hand count after playing council_room was not correct. Expected 381, got 83
FAIL: Hand count after playing council_room was not correct. Expected 381, got 265
FAIL: Hand count after playing council_room was not correct. Expected 39, got 41
FAIL: Hand count after playing council_room was not correct. Expected 41, got 211
FAIL: Hand count after playing council_room was not correct. Expected 41, got 39
FAIL: Hand count after playing council_room was not correct. Expected 41, got 174
FAIL: Hand count after playing council_room was not correct. Expected 161, got 163
FAIL: Hand count after playing council_room was not correct. Expected 163, got 410
FAIL: Hand count after playing council_room was not correct. Expected 163, got 222
FAIL: Hand count after playing council_room was not correct. Expected 163, got 264
FAIL: Hand count after playing council_room was not correct. Expected 433, got 435
FAIL: Hand count after playing council_room was not correct. Expected 435, got 342
FAIL: Hand count after playing council_room was not correct. Expected 435, got 74
FAIL: Hand count after playing council_room was not correct. Expected 435, got 428
FAIL: Hand count after playing council_room was not correct. Expected 397, got 399
FAIL: Hand count after playing council_room was not correct. Expected 399, got 27
FAIL: Hand count after playing council_room was not correct. Expected 399, got 165
FAIL: Hand count after playing council_room was not correct. Expected 399, got 419
FAIL: Hand count after playing council_room was not correct. Expected 336, got 338
FAIL: Hand count after playing council_room was not correct. Expected 338, got 434
FAIL: Hand count after playing council_room was not correct. Expected 338, got 30
FAIL: Hand count after playing council_room was not correct. Expected 338, got 487
FAIL: Hand count after playing council_room was not correct. Expected 476, got 478
FAIL: Hand count after playing council_room was not correct. Expected 478, got 54
FAIL: Hand count after playing council_room was not correct. Expected 478, got 68
FAIL: Hand count after playing council_room was not correct. Expected 478, got 316
FAIL: Hand count after playing council_room was not correct. Expected 293, got 295
FAIL: Hand count after playing council_room was not correct. Expected 295, got 166
FAIL: Hand count after playing council_room was not correct. Expected 295, got 170
FAIL: Hand count after playing council_room was not correct. Expected 295, got 48
FAIL: Hand count after playing council_room was not correct. Expected 250, got 252
FAIL: Hand count after playing council_room was not correct. Expected 252, got 400
FAIL: Hand count after playing council_room was not correct. Expected 252, got 99
FAIL: Hand count after playing council_room was not correct. Expected 252, got 383
FAIL: Hand count after playing council_room was not correct. Expected 459, got 461
FAIL: Hand count after playing council_room was not correct. Expected 461, got 497
FAIL: Hand count after playing council_room was not correct. Expected 461, got 228
FAIL: Hand count after playing council_room was not correct. Expected 461, got 32
FAIL: Hand count after playing council_room was not correct. Expected 349, got 351
FAIL: Hand count after playing council_room was not correct. Expected 351, got 86
FAIL: Hand count after playing council_room was not correct. Expected 351, got 402
FAIL: Hand count after playing council_room was not correct. Expected 351, got 141
FAIL: Hand count after playing council_room was not correct. Expected 384, got 386
FAIL: Hand count after playing council_room was not correct. Expected 386, got 491
FAIL: Hand count after playing council_room was not correct. Expected 386, got 29
FAIL: Hand count after playing council_room was not correct. Expected 386, got 399
FAIL: Hand count after playing council_room was not correct. Expected 226, got 228
FAIL: Hand count after playing council_room was not correct. Expected 228, got 372
FAIL: Hand count after playing council_room was not correct. Expected 228, got 215
FAIL: Hand count after playing council_room was not correct. Expected 228, got 247
FAIL: Hand count after playing council_room was not correct. Expected 273, got 275
FAIL: Hand count after playing council_room was not correct. Expected 275, got 450
FAIL: Hand count after playing council_room was not correct. Expected 275, got 49
FAIL: Hand count after playing council_room was not correct. Expected 275, got 14
FAIL: Hand count after playing council_room was not correct. Expected 444, got 446
FAIL: Hand count after playing council_room was not correct. Expected 446, got 398
FAIL: Hand count after playing council_room was not correct. Expected 446, got 259
FAIL: Hand count after playing council_room was not correct. Expected 446, got 54
FAIL: Hand count after playing council_room was not correct. Expected 261, got 263
FAIL: Hand count after playing council_room was not correct. Expected 263, got 172
FAIL: Hand count after playing council_room was not correct. Expected 263, got 34
FAIL: Hand count after playing council_room was not correct. Expected 263, got 361
FAIL: Hand count after playing council_room was not correct. Expected 449, got 451
FAIL: Hand count after playing council_room was not correct. Expected 451, got 58
FAIL: Hand count after playing council_room was not correct. Expected 451, got 42
FAIL: Hand count after playing council_room was not correct. Expected 451, got 284
FAIL: Hand count after playing council_room was not correct. Expected 24, got 26
FAIL: Hand count after playing council_room was not correct. Expected 26, got 325
FAIL: Hand count after playing council_room was not correct. Expected 26, got 465
FAIL: Hand count after playing council_room was not correct. Expected 26, got 460
FAIL: Hand count after playing council_room was not correct. Expected 341, got 343
FAIL: Hand count after playing council_room was not correct. Expected 343, got 197
FAIL: Hand count after playing council_room was not correct. Expected 343, got 253
FAIL: Hand count after playing council_room was not correct. Expected 343, got 12
FAIL: Hand count after playing council_room was not correct. Expected 423, got 425
FAIL: Hand count after playing council_room was not correct. Expected 425, got 302
FAIL: Hand count after playing council_room was not correct. Expected 425, got 326
FAIL: Hand count after playing council_room was not correct. Expected 425, got 251
FAIL: Hand count after playing council_room was not correct. Expected 349, got 351
FAIL: Hand count after playing council_room was not correct. Expected 351, got 72
FAIL: Hand count after playing council_room was not correct. Expected 351, got 480
FAIL: Hand count after playing council_room was not correct. Expected 351, got 45
FAIL: Hand count after playing council_room was not correct. Expected 326, got 328
FAIL: Hand count after playing council_room was not correct. Expected 328, got 115
FAIL: Hand count after playing council_room was not correct. Expected 328, got 398
FAIL: Hand count after playing council_room was not correct. Expected 328, got 365
FAIL: Hand count after playing council_room was not correct. Expected 50, got 52
FAIL: Hand count after playing council_room was not correct. Expected 52, got 50
FAIL: Hand count after playing council_room was not correct. Expected 52, got 227
FAIL: Hand count after playing council_room was not correct. Expected 52, got 126
FAIL: Hand count after playing council_room was not correct. Expected 461, got 463
FAIL: Hand count after playing council_room was not correct. Expected 463, got 130
FAIL: Hand count after playing council_room was not correct. Expected 463, got 483
FAIL: Hand count after playing council_room was not correct. Expected 463, got 17
FAIL: Hand count after playing council_room was not correct. Expected 425, got 427
FAIL: Hand count after playing council_room was not correct. Expected 427, got 185
FAIL: Hand count after playing council_room was not correct. Expected 427, got 391
FAIL: Hand count after playing council_room was not correct. Expected 427, got 468
FAIL: Hand count after playing council_room was not correct. Expected 391, got 393
FAIL: Hand count after playing council_room was not correct. Expected 393, got 250
FAIL: Hand count after playing council_room was not correct. Expected 393, got 104
FAIL: Hand count after playing council_room was not correct. Expected 393, got 95
FAIL: Hand count after playing council_room was not correct. Expected 467, got 469
FAIL: Hand count after playing council_room was not correct. Expected 469, got 106
FAIL: Hand count after playing council_room was not correct. Expected 469, got 145
FAIL: Hand count after playing council_room was not correct. Expected 469, got 137
FAIL: Hand count after playing council_room was not correct. Expected 487, got 489
FAIL: Hand count after playing council_room was not correct. Expected 489, got 25
FAIL: Hand count after playing council_room was not correct. Expected 489, got 221
FAIL: Hand count after playing council_room was not correct. Expected 489, got 116
FAIL: Hand count after playing council_room was not correct. Expected 293, got 295
FAIL: Hand count after playing council_room was not correct. Expected 295, got 314
FAIL: Hand count after playing council_room was not correct. Expected 295, got 452
FAIL: Hand count after playing council_room was not correct. Expected 295, got 163
FAIL: Hand count after playing council_room was not correct. Expected 291, got 293
FAIL: Hand count after playing council_room was not correct. Expected 293, got 439
FAIL: Hand count after playing council_room was not correct. Expected 293, got 272
FAIL: Hand count after playing council_room was not correct. Expected 293, got 41
FAIL: Hand count after playing council_room was not correct. Expected 376, got 378
FAIL: Hand count after playing council_room was not correct. Expected 378, got 473
FAIL: Hand count after playing council_room was not correct. Expected 378, got 401
FAIL: Hand count after playing council_room was not correct. Expected 378, got 168
FAIL: Hand count after playing council_room was not correct. Expected 323, got 325
FAIL: Hand count after playing council_room was not correct. Expected 325, got 366
FAIL: Hand count after playing council_room was not correct. Expected 325, got 35
FAIL: Hand count after playing council_room was not correct. Expected 325, got 109
FAIL: Hand count after playing council_room was not correct. Expected 433, got 435
FAIL: Hand count after playing council_room was not correct. Expected 435, got 230
FAIL: Hand count after playing council_room was not correct. Expected 435, got 40
FAIL: Hand count after playing council_room was not correct. Expected 435, got 176
FAIL: Hand count after playing council_room was not correct. Expected 101, got 103
FAIL: Hand count after playing council_room was not correct. Expected 103, got 198
FAIL: Hand count after playing council_room was not correct. Expected 103, got 302
FAIL: Hand count after playing council_room was not correct. Expected 103, got 337
FAIL: Hand count after playing council_room was not correct. Expected 266, got 268
FAIL: Hand count after playing council_room was not correct. Expected 268, got 261
FAIL: Hand count after playing council_room was not correct. Expected 268, got 275
FAIL: Hand count after playing council_room was not correct. Expected 268, got 359
FAIL: Hand count after playing council_room was not correct. Expected 427, got 429
FAIL: Hand count after playing council_room was not correct. Expected 429, got 197
FAIL: Hand count after playing council_room was not correct. Expected 429, got 368
FAIL: Hand count after playing council_room was not correct. Expected 429, got 354
FAIL: Hand count after playing council_room was not correct. Expected 121, got 123
FAIL: Hand count after playing council_room was not correct. Expected 123, got 325
FAIL: Hand count after playing council_room was not correct. Expected 123, got 473
FAIL: Hand count after playing council_room was not correct. Expected 123, got 463
FAIL: Hand count after playing council_room was not correct. Expected 111, got 113
FAIL: Hand count after playing council_room was not correct. Expected 113, got 479
FAIL: Hand count after playing council_room was not correct. Expected 113, got 195
FAIL: Hand count after playing council_room was not correct. Expected 113, got 187
FAIL: Hand count after playing council_room was not correct. Expected 154, got 156
FAIL: Hand count after playing council_room was not correct. Expected 156, got 338
FAIL: Hand count after playing council_room was not correct. Expected 156, got 193
FAIL: Hand count after playing council_room was not correct. Expected 156, got 416
FAIL: Hand count after playing council_room was not correct. Expected 452, got 454
FAIL: Hand count after playing council_room was not correct. Expected 454, got 315
FAIL: Hand count after playing council_room was not correct. Expected 454, got 485
FAIL: Hand count after playing council_room was not correct. Expected 454, got 210
FAIL: Hand count after playing council_room was not correct. Expected 400, got 402
FAIL: Hand count after playing council_room was not correct. Expected 402, got 13
FAIL: Hand count after playing council_room was not correct. Expected 402, got 318
FAIL: Hand count after playing council_room was not correct. Expected 402, got 261
FAIL: Hand count after playing council_room was not correct. Expected 112, got 114
FAIL: Hand count after playing council_room was not correct. Expected 114, got 58
FAIL: Hand count after playing council_room was not correct. Expected 114, got 342
FAIL: Hand count after playing council_room was not correct. Expected 114, got 287
FAIL: Hand count after playing council_room was not correct. Expected 104, got 106
FAIL: Hand count after playing council_room was not correct. Expected 106, got 53
FAIL: Hand count after playing council_room was not correct. Expected 106, got 154
FAIL: Hand count after playing council_room was not correct. Expected 106, got 4
FAIL: Hand count after playing council_room was not correct. Expected 404, got 406
FAIL: Hand count after playing council_room was not correct. Expected 406, got 43
FAIL: Hand count after playing council_room was not correct. Expected 406, got 387
FAIL: Hand count after playing council_room was not correct. Expected 406, got 376
FAIL: Hand count after playing council_room was not correct. Expected 66, got 68
FAIL: Hand count after playing council_room was not correct. Expected 68, got 247
FAIL: Hand count after playing council_room was not correct. Expected 68, got 293
FAIL: Hand count after playing council_room was not correct. Expected 68, got 182
FAIL: Hand count after playing council_room was not correct. Expected 416, got 418
FAIL: Hand count after playing council_room was not correct. Expected 418, got 391
FAIL: Hand count after playing council_room was not correct. Expected 418, got 155
FAIL: Hand count after playing council_room was not correct. Expected 418, got 38
FAIL: Hand count after playing council_room was not correct. Expected 401, got 403
FAIL: Hand count after playing council_room was not correct. Expected 403, got 449
FAIL: Hand count after playing council_room was not correct. Expected 403, got 308
FAIL: Hand count after playing council_room was not correct. Expected 403, got 392
FAIL: Hand count after playing council_room was not correct. Expected 82, got 84
FAIL: Hand count after playing council_room was not correct. Expected 84, got 440
FAIL: Hand count after playing council_room was not correct. Expected 84, got 102
FAIL: Hand count after playing council_room was not correct. Expected 84, got 379
FAIL: Hand count after playing council_room was not correct. Expected 228, got 230
FAIL: Hand count after playing council_room was not correct. Expected 230, got 181
FAIL: Hand count after playing council_room was not correct. Expected 230, got 459
FAIL: Hand count after playing council_room was not correct. Expected 230, got 18
FAIL: Hand count after playing council_room was not correct. Expected 27, got 29
FAIL: Hand count after playing council_room was not correct. Expected 29, got 289
FAIL: Hand count after playing council_room was not correct. Expected 29, got 170
FAIL: Hand count after playing council_room was not correct. Expected 29, got 357
FAIL: Hand count after playing council_room was not correct. Expected 447, got 449
FAIL: Hand count after playing council_room was not correct. Expected 449, got 194
FAIL: Hand count after playing council_room was not correct. Expected 449, got 62
FAIL: Hand count after playing council_room was not correct. Expected 449, got 394
FAIL: Hand count after playing council_room was not correct. Expected 295, got 297
FAIL: Hand count after playing council_room was not correct. Expected 297, got 494
FAIL: Hand count after playing council_room was not correct. Expected 297, got 120
FAIL: Hand count after playing council_room was not correct. Expected 297, got 276
FAIL: Hand count after playing council_room was not correct. Expected 153, got 155
FAIL: Hand count after playing council_room was not correct. Expected 155, got 209
FAIL: Hand count after playing council_room was not correct. Expected 155, got 189
FAIL: Hand count after playing council_room was not correct. Expected 155, got 290
FAIL: Hand count after playing council_room was not correct. Expected 416, got 418
FAIL: Hand count after playing council_room was not correct. Expected 418, got 406
FAIL: Hand count after playing council_room was not correct. Expected 418, got 267
FAIL: Hand count after playing council_room was not correct. Expected 418, got 158
FAIL: Hand count after playing council_room was not correct. Expected 77, got 79
FAIL: Hand count after playing council_room was not correct. Expected 79, got 427
FAIL: Hand count after playing council_room was not correct. Expected 79, got 275
FAIL: Hand count after playing council_room was not correct. Expected 79, got 88
FAIL: Hand count after playing council_room was not correct. Expected 476, got 478
FAIL: Hand count after playing council_room was not correct. Expected 478, got 282
FAIL: Hand count after playing council_room was not correct. Expected 478, got 287
FAIL: Hand count after playing council_room was not correct. Expected 478, got 487
FAIL: Hand count after playing council_room was not correct. Expected 69, got 71
FAIL: Hand count after playing council_room was not correct. Expected 71, got 403
FAIL: Hand count after playing council_room was not correct. Expected 71, got 190
FAIL: Hand count after playing council_room was not correct. Expected 71, got 400
FAIL: Hand count after playing council_room was not correct. Expected 184, got 186
FAIL: Hand count after playing council_room was not correct. Expected 186, got 60
FAIL: Hand count after playing council_room was not correct. Expected 186, got 385
FAIL: Hand count after playing council_room was not correct. Expected 186, got 324
FAIL: Hand count after playing council_room was not correct. Expected 130, got 132
FAIL: Hand count after playing council_room was not correct. Expected 132, got 132
FAIL: Hand count after playing council_room was not correct. Expected 132, got 383
FAIL: Hand count after playing council_room was not correct. Expected 132, got 455
FAIL: Hand count after playing council_room was not correct. Expected 497, got 499
FAIL: Hand count after playing council_room was not correct. Expected 499, got 245
FAIL: Hand count after playing council_room was not correct. Expected 499, got 311
FAIL: Hand count after playing council_room was not correct. Expected 499, got 112
FAIL: Hand count after playing council_room was not correct. Expected 162, got 164
FAIL: Hand count after playing council_room was not correct. Expected 164, got 186
FAIL: Hand count after playing council_room was not correct. Expected 164, got 195
FAIL: Hand count after playing council_room was not correct. Expected 164, got 407
FAIL: Hand count after playing council_room was not correct. Expected 188, got 190
FAIL: Hand count after playing council_room was not correct. Expected 190, got 466
FAIL: Hand count after playing council_room was not correct. Expected 190, got 393
FAIL: Hand count after playing council_room was not correct. Expected 190, got 123
FAIL: Hand count after playing council_room was not correct. Expected 32, got 34
FAIL: Hand count after playing council_room was not correct. Expected 34, got 292
FAIL: Hand count after playing council_room was not correct. Expected 34, got 422
FAIL: Hand count after playing council_room was not correct. Expected 34, got 226
FAIL: Hand count after playing council_room was not correct. Expected 462, got 464
FAIL: Hand count after playing council_room was not correct. Expected 464, got 74
FAIL: Hand count after playing council_room was not correct. Expected 464, got 397
FAIL: Hand count after playing council_room was not correct. Expected 464, got 469
FAIL: Hand count after playing council_room was not correct. Expected 203, got 205
FAIL: Hand count after playing council_room was not correct. Expected 205, got 388
FAIL: Hand count after playing council_room was not correct. Expected 205, got 439
FAIL: Hand count after playing council_room was not correct. Expected 205, got 173
FAIL: Hand count after playing council_room was not correct. Expected 473, got 475
FAIL: Hand count after playing council_room was not correct. Expected 475, got 272
FAIL: Hand count after playing council_room was not correct. Expected 475, got 213
FAIL: Hand count after playing council_room was not correct. Expected 475, got 315
FAIL: Hand count after playing council_room was not correct. Expected 208, got 210
FAIL: Hand count after playing council_room was not correct. Expected 210, got 368
FAIL: Hand count after playing council_room was not correct. Expected 210, got 404
FAIL: Hand count after playing council_room was not correct. Expected 210, got 483
FAIL: Hand count after playing council_room was not correct. Expected 53, got 55
FAIL: Hand count after playing council_room was not correct. Expected 55, got 300
FAIL: Hand count after playing council_room was not correct. Expected 55, got 228
FAIL: Hand count after playing council_room was not correct. Expected 55, got 291
FAIL: Hand count after playing council_room was not correct. Expected 284, got 286
FAIL: Hand count after playing council_room was not correct. Expected 286, got 290
FAIL: Hand count after playing council_room was not correct. Expected 286, got 84
FAIL: Hand count after playing council_room was not correct. Expected 286, got 21
FAIL: Hand count after playing council_room was not correct. Expected 124, got 126
FAIL: Hand count after playing council_room was not correct. Expected 126, got 80
FAIL: Hand count after playing council_room was not correct. Expected 126, got 183
FAIL: Hand count after playing council_room was not correct. Expected 126, got 461
FAIL: Hand count after playing council_room was not correct. Expected 84, got 86
FAIL: Hand count after playing council_room was not correct. Expected 86, got 74
FAIL: Hand count after playing council_room was not correct. Expected 86, got 336
FAIL: Hand count after playing council_room was not correct. Expected 86, got 84
FAIL: Hand count after playing council_room was not correct. Expected 355, got 357
FAIL: Hand count after playing council_room was not correct. Expected 357, got 354
FAIL: Hand count after playing council_room was not correct. Expected 357, got 443
FAIL: Hand count after playing council_room was not correct. Expected 357, got 173
FAIL: Hand count after playing council_room was not correct. Expected 179, got 181
FAIL: Hand count after playing council_room was not correct. Expected 181, got 180
FAIL: Hand count after playing council_room was not correct. Expected 181, got 338
FAIL: Hand count after playing council_room was not correct. Expected 181, got 34
FAIL: Hand count after playing council_room was not correct. Expected 302, got 304
FAIL: Hand count after playing council_room was not correct. Expected 304, got 233
FAIL: Hand count after playing council_room was not correct. Expected 304, got 151
FAIL: Hand count after playing council_room was not correct. Expected 304, got 234
FAIL: Hand count after playing council_room was not correct. Expected 314, got 316
FAIL: Hand count after playing council_room was not correct. Expected 316, got 442
FAIL: Hand count after playing council_room was not correct. Expected 316, got 295
FAIL: Hand count after playing council_room was not correct. Expected 316, got 303
FAIL: Hand count after playing council_room was not correct. Expected 408, got 410
FAIL: Hand count after playing council_room was not correct. Expected 410, got 298
FAIL: Hand count after playing council_room was not correct. Expected 410, got 102
FAIL: Hand count after playing council_room was not correct. Expected 410, got 85
FAIL: Hand count after playing council_room was not correct. Expected 46, got 48
FAIL: Hand count after playing council_room was not correct. Expected 48, got 45
FAIL: Hand count after playing council_room was not correct. Expected 48, got 363
FAIL: Hand count after playing council_room was not correct. Expected 48, got 262
FAIL: Hand count after playing council_room was not correct. Expected 251, got 253
FAIL: Hand count after playing council_room was not correct. Expected 253, got 441
FAIL: Hand count after playing council_room was not correct. Expected 253, got 271
FAIL: Hand count after playing council_room was not correct. Expected 253, got 261
FAIL: Hand count after playing council_room was not correct. Expected 276, got 278
FAIL: Hand count after playing council_room was not correct. Expected 278, got 280
FAIL: Hand count after playing council_room was not correct. Expected 278, got 325
FAIL: Hand count after playing council_room was not correct. Expected 278, got 453
FAIL: Hand count after playing council_room was not correct. Expected 267, got 269
FAIL: Hand count after playing council_room was not correct. Expected 269, got 227
FAIL: Hand count after playing council_room was not correct. Expected 269, got 356
FAIL: Hand count after playing council_room was not correct. Expected 269, got 196
FAIL: Hand count after playing council_room was not correct. Expected 267, got 269
FAIL: Hand count after playing council_room was not correct. Expected 269, got 224
FAIL: Hand count after playing council_room was not correct. Expected 269, got 460
FAIL: Hand count after playing council_room was not correct. Expected 269, got 498
FAIL: Hand count after playing council_room was not correct. Expected 406, got 408
FAIL: Hand count after playing council_room was not correct. Expected 408, got 465
FAIL: Hand count after playing council_room was not correct. Expected 408, got 207
FAIL: Hand count after playing council_room was not correct. Expected 408, got 407
FAIL: Hand count after playing council_room was not correct. Expected 267, got 269
FAIL: Hand count after playing council_room was not correct. Expected 269, got 194
FAIL: Hand count after playing council_room was not correct. Expected 269, got 27
FAIL: Hand count after playing council_room was not correct. Expected 269, got 13
FAIL: Hand count after playing council_room was not correct. Expected 414, got 416
FAIL: Hand count after playing council_room was not correct. Expected 416, got 45
FAIL: Hand count after playing council_room was not correct. Expected 416, got 29
FAIL: Hand count after playing council_room was not correct. Expected 416, got 160
FAIL: Hand count after playing council_room was not correct. Expected 476, got 478
FAIL: Hand count after playing council_room was not correct. Expected 478, got 458
FAIL: Hand count after playing council_room was not correct. Expected 478, got 208
FAIL: Hand count after playing council_room was not correct. Expected 478, got 230
FAIL: Hand count after playing council_room was not correct. Expected 15, got 17
FAIL: Hand count after playing council_room was not correct. Expected 17, got 45
FAIL: Hand count after playing council_room was not correct. Expected 17, got 379
FAIL: Hand count after playing council_room was not correct. Expected 17, got 188
FAIL: Hand count after playing council_room was not correct. Expected 469, got 471
FAIL: Hand count after playing council_room was not correct. Expected 471, got 281
FAIL: Hand count after playing council_room was not correct. Expected 471, got 374
FAIL: Hand count after playing council_room was not correct. Expected 471, got 52
FAIL: Hand count after playing council_room was not correct. Expected 37, got 39
FAIL: Hand count after playing council_room was not correct. Expected 39, got 125
FAIL: Hand count after playing council_room was not correct. Expected 39, got 352
FAIL: Hand count after playing council_room was not correct. Expected 39, got 335
FAIL: Hand count after playing council_room was not correct. Expected 368, got 370
FAIL: Hand count after playing council_room was not correct. Expected 370, got 389
FAIL: Hand count after playing council_room was not correct. Expected 370, got 76
FAIL: Hand count after playing council_room was not correct. Expected 370, got 260
FAIL: Hand count after playing council_room was not correct. Expected 196, got 198
FAIL: Hand count after playing council_room was not correct. Expected 198, got 265
FAIL: Hand count after playing council_room was not correct. Expected 198, got 15
FAIL: Hand count after playing council_room was not correct. Expected 198, got 472
FAIL: Hand count after playing council_room was not correct. Expected 232, got 234
FAIL: Hand count after playing council_room was not correct. Expected 234, got 191
FAIL: Hand count after playing council_room was not correct. Expected 234, got 112
FAIL: Hand count after playing council_room was not correct. Expected 234, got 462
FAIL: Hand count after playing council_room was not correct. Expected 137, got 139
FAIL: Hand count after playing council_room was not correct. Expected 139, got 231
FAIL: Hand count after playing council_room was not correct. Expected 139, got 41
FAIL: Hand count after playing council_room was not correct. Expected 139, got 67
FAIL: Hand count after playing council_room was not correct. Expected 37, got 39
FAIL: Hand count after playing council_room was not correct. Expected 39, got 229
FAIL: Hand count after playing council_room was not correct. Expected 39, got 232
FAIL: Hand count after playing council_room was not correct. Expected 39, got 431
FAIL: Hand count after playing council_room was not correct. Expected 199, got 201
FAIL: Hand count after playing council_room was not correct. Expected 201, got 308
FAIL: Hand count after playing council_room was not correct. Expected 201, got 273
FAIL: Hand count after playing council_room was not correct. Expected 201, got 342
FAIL: Hand count after playing council_room was not correct. Expected 274, got 276
FAIL: Hand count after playing council_room was not correct. Expected 276, got 108
FAIL: Hand count after playing council_room was not correct. Expected 276, got 388
FAIL: Hand count after playing council_room was not correct. Expected 276, got 100
FAIL: Hand count after playing council_room was not correct. Expected 320, got 322
FAIL: Hand count after playing council_room was not correct. Expected 322, got 384
FAIL: Hand count after playing council_room was not correct. Expected 322, got 288
FAIL: Hand count after playing council_room was not correct. Expected 322, got 173
FAIL: Hand count after playing council_room was not correct. Expected 63, got 65
FAIL: Hand count after playing council_room was not correct. Expected 65, got 294
FAIL: Hand count after playing council_room was not correct. Expected 65, got 219
FAIL: Hand count after playing council_room was not correct. Expected 65, got 57
FAIL: Hand count after playing council_room was not correct. Expected 214, got 216
FAIL: Hand count after playing council_room was not correct. Expected 216, got 341
FAIL: Hand count after playing council_room was not correct. Expected 216, got 181
FAIL: Hand count after playing council_room was not correct. Expected 216, got 139
FAIL: Hand count after playing council_room was not correct. Expected 291, got 293
FAIL: Hand count after playing council_room was not correct. Expected 293, got 252
FAIL: Hand count after playing council_room was not correct. Expected 293, got 25
FAIL: Hand count after playing council_room was not correct. Expected 293, got 122
FAIL: Hand count after playing council_room was not correct. Expected 383, got 385
FAIL: Hand count after playing council_room was not correct. Expected 385, got 500
FAIL: Hand count after playing council_room was not correct. Expected 385, got 148
FAIL: Hand count after playing council_room was not correct. Expected 385, got 67
FAIL: Hand count after playing council_room was not correct. Expected 213, got 215
FAIL: Hand count after playing council_room was not correct. Expected 215, got 446
FAIL: Hand count after playing council_room was not correct. Expected 215, got 30
FAIL: Hand count after playing council_room was not correct. Expected 215, got 85
FAIL: Hand count after playing council_room was not correct. Expected 338, got 340
FAIL: Hand count after playing council_room was not correct. Expected 340, got 227
FAIL: Hand count after playing council_room was not correct. Expected 340, got 78
FAIL: Hand count after playing council_room was not correct. Expected 340, got 431
FAIL: Hand count after playing council_room was not correct. Expected 132, got 134
FAIL: Hand count after playing council_room was not correct. Expected 134, got 474
FAIL: Hand count after playing council_room was not correct. Expected 134, got 219
FAIL: Hand count after playing council_room was not correct. Expected 134, got 346
FAIL: Hand count after playing council_room was not correct. Expected 378, got 380
FAIL: Hand count after playing council_room was not correct. Expected 380, got 437
FAIL: Hand count after playing council_room was not correct. Expected 380, got 106
FAIL: Hand count after playing council_room was not correct. Expected 380, got 295
FAIL: Hand count after playing council_room was not correct. Expected 406, got 408
FAIL: Hand count after playing council_room was not correct. Expected 408, got 407
FAIL: Hand count after playing council_room was not correct. Expected 408, got 487
FAIL: Hand count after playing council_room was not correct. Expected 408, got 169
FAIL: Hand count after playing council_room was not correct. Expected 44, got 46
FAIL: Hand count after playing council_room was not correct. Expected 46, got 27
FAIL: Hand count after playing council_room was not correct. Expected 46, got 381
FAIL: Hand count after playing council_room was not correct. Expected 46, got 237
FAIL: Hand count after playing council_room was not correct. Expected 342, got 344
FAIL: Hand count after playing council_room was not correct. Expected 344, got 282
FAIL: Hand count after playing council_room was not correct. Expected 344, got 72
FAIL: Hand count after playing council_room was not correct. Expected 344, got 471
FAIL: Hand count after playing council_room was not correct. Expected 178, got 180
FAIL: Hand count after playing council_room was not correct. Expected 180, got 423
FAIL: Hand count after playing council_room was not correct. Expected 180, got 163
FAIL: Hand count after playing council_room was not correct. Expected 180, got 60
FAIL: Hand count after playing council_room was not correct. Expected 74, got 76
FAIL: Hand count after playing council_room was not correct. Expected 76, got 202
FAIL: Hand count after playing council_room was not correct. Expected 76, got 52
FAIL: Hand count after playing council_room was not correct. Expected 76, got 281
FAIL: Hand count after playing council_room was not correct. Expected 381, got 383
FAIL: Hand count after playing council_room was not correct. Expected 383, got 295
FAIL: Hand count after playing council_room was not correct. Expected 383, got 167
FAIL: Hand count after playing council_room was not correct. Expected 383, got 289
FAIL: Hand count after playing council_room was not correct. Expected 453, got 455
FAIL: Hand count after playing council_room was not correct. Expected 455, got 220
FAIL: Hand count after playing council_room was not correct. Expected 455, got 420
FAIL: Hand count after playing council_room was not correct. Expected 455, got 213
FAIL: Hand count after playing council_room was not correct. Expected 396, got 398
FAIL: Hand count after playing council_room was not correct. Expected 398, got 90
FAIL: Hand count after playing council_room was not correct. Expected 398, got 474
FAIL: Hand count after playing council_room was not correct. Expected 398, got 55
FAIL: Hand count after playing council_room was not correct. Expected 8, got 10
FAIL: Hand count after playing council_room was not correct. Expected 10, got 139
FAIL: Hand count after playing council_room was not correct. Expected 10, got 174
FAIL: Hand count after playing council_room was not correct. Expected 10, got 470
FAIL: Hand count after playing council_room was not correct. Expected 112, got 114
FAIL: Hand count after playing council_room was not correct. Expected 114, got 264
FAIL: Hand count after playing council_room was not correct. Expected 114, got 82
FAIL: Hand count after playing council_room was not correct. Expected 114, got 67
FAIL: Hand count after playing council_room was not correct. Expected 98, got 100
FAIL: Hand count after playing council_room was not correct. Expected 100, got 252
FAIL: Hand count after playing council_room was not correct. Expected 100, got 326
FAIL: Hand count after playing council_room was not correct. Expected 100, got 30
FAIL: Hand count after playing council_room was not correct. Expected 462, got 464
FAIL: Hand count after playing council_room was not correct. Expected 464, got 416
FAIL: Hand count after playing council_room was not correct. Expected 464, got 388
FAIL: Hand count after playing council_room was not correct. Expected 464, got 198
FAIL: Hand count after playing council_room was not correct. Expected 204, got 206
FAIL: Hand count after playing council_room was not correct. Expected 206, got 309
FAIL: Hand count after playing council_room was not correct. Expected 206, got 428
FAIL: Hand count after playing council_room was not correct. Expected 206, got 276
FAIL: Hand count after playing council_room was not correct. Expected 203, got 205
FAIL: Hand count after playing council_room was not correct. Expected 205, got 163
FAIL: Hand count after playing council_room was not correct. Expected 205, got 308
FAIL: Hand count after playing council_room was not correct. Expected 205, got 119
FAIL: Hand count after playing council_room was not correct. Expected 134, got 136
FAIL: Hand count after playing council_room was not correct. Expected 136, got 176
FAIL: Hand count after playing council_room was not correct. Expected 136, got 278
FAIL: Hand count after playing council_room was not correct. Expected 136, got 270
FAIL: Hand count after playing council_room was not correct. Expected 259, got 261
FAIL: Hand count after playing council_room was not correct. Expected 261, got 463
FAIL: Hand count after playing council_room was not correct. Expected 261, got 158
FAIL: Hand count after playing council_room was not correct. Expected 261, got 81
FAIL: Hand count after playing council_room was not correct. Expected 50, got 52
FAIL: Hand count after playing council_room was not correct. Expected 52, got 27
FAIL: Hand count after playing council_room was not correct. Expected 52, got 259
FAIL: Hand count after playing council_room was not correct. Expected 52, got 199
FAIL: Hand count after playing council_room was not correct. Expected 284, got 286
FAIL: Hand count after playing council_room was not correct. Expected 286, got 274
FAIL: Hand count after playing council_room was not correct. Expected 286, got 461
FAIL: Hand count after playing council_room was not correct. Expected 286, got 441
FAIL: Hand count after playing council_room was not correct. Expected 227, got 229
FAIL: Hand count after playing council_room was not correct. Expected 229, got 176
FAIL: Hand count after playing council_room was not correct. Expected 229, got 160
FAIL: Hand count after playing council_room was not correct. Expected 229, got 318
FAIL: Hand count after playing council_room was not correct. Expected 92, got 94
FAIL: Hand count after playing council_room was not correct. Expected 94, got 393
FAIL: Hand count after playing council_room was not correct. Expected 94, got 260
FAIL: Hand count after playing council_room was not correct. Expected 94, got 12
FAIL: Hand count after playing council_room was not correct. Expected 412, got 414
FAIL: Hand count after playing council_room was not correct. Expected 414, got 247
FAIL: Hand count after playing council_room was not correct. Expected 414, got 55
FAIL: Hand count after playing council_room was not correct. Expected 414, got 411
FAIL: Hand count after playing council_room was not correct. Expected 224, got 226
FAIL: Hand count after playing council_room was not correct. Expected 226, got 251
FAIL: Hand count after playing council_room was not correct. Expected 226, got 184
FAIL: Hand count after playing council_room was not correct. Expected 226, got 78
FAIL: Hand count after playing council_room was not correct. Expected 349, got 351
FAIL: Hand count after playing council_room was not correct. Expected 351, got 285
FAIL: Hand count after playing council_room was not correct. Expected 351, got 289
FAIL: Hand count after playing council_room was not correct. Expected 351, got 66
FAIL: Hand count after playing council_room was not correct. Expected 468, got 470
FAIL: Hand count after playing council_room was not correct. Expected 470, got 132
FAIL: Hand count after playing council_room was not correct. Expected 470, got 314
FAIL: Hand count after playing council_room was not correct. Expected 470, got 431
FAIL: Hand count after playing council_room was not correct. Expected 348, got 350
FAIL: Hand count after playing council_room was not correct. Expected 350, got 223
FAIL: Hand count after playing council_room was not correct. Expected 350, got 152
FAIL: Hand count after playing council_room was not correct. Expected 350, got 201
FAIL: Hand count after playing council_room was not correct. Expected 346, got 348
FAIL: Hand count after playing council_room was not correct. Expected 348, got 271
FAIL: Hand count after playing council_room was not correct. Expected 348, got 248
FAIL: Hand count after playing council_room was not correct. Expected 348, got 372
FAIL: Hand count after playing council_room was not correct. Expected 35, got 37
FAIL: Hand count after playing council_room was not correct. Expected 37, got 21
FAIL: Hand count after playing council_room was not correct. Expected 37, got 347
FAIL: Hand count after playing council_room was not correct. Expected 37, got 390
FAIL: Hand count after playing council_room was not correct. Expected 365, got 367
FAIL: Hand count after playing council_room was not correct. Expected 367, got 429
FAIL: Hand count after playing council_room was not correct. Expected 367, got 271
FAIL: Hand count after playing council_room was not correct. Expected 367, got 433
FAIL: Hand count after playing council_room was not correct. Expected 472, got 474
FAIL: Hand count after playing council_room was not correct. Expected 474, got 461
FAIL: Hand count after playing council_room was not correct. Expected 474, got 471
FAIL: Hand count after playing council_room was not correct. Expected 474, got 362
FAIL: Hand count after playing council_room was not correct. Expected 135, got 137
FAIL: Hand count after playing council_room was not correct. Expected 137, got 263
FAIL: Hand count after playing council_room was not correct. Expected 137, got 355
FAIL: Hand count after playing council_room was not correct. Expected 137, got 19
FAIL: Hand count after playing council_room was not correct. Expected 292, got 294
FAIL: Hand count after playing council_room was not correct. Expected 294, got 205
FAIL: Hand count after playing council_room was not correct. Expected 294, got 169
FAIL: Hand count after playing council_room was not correct. Expected 294, got 264
FAIL: Hand count after playing council_room was not correct. Expected 225, got 227
FAIL: Hand count after playing council_room was not correct. Expected 227, got 94
FAIL: Hand count after playing council_room was not correct. Expected 227, got 391
FAIL: Hand count after playing council_room was not correct. Expected 227, got 347
FAIL: Hand count after playing council_room was not correct. Expected 225, got 227
FAIL: Hand count after playing council_room was not correct. Expected 227, got 482
FAIL: Hand count after playing council_room was not correct. Expected 227, got 257
FAIL: Hand count after playing council_room was not correct. Expected 227, got 40
FAIL: Hand count after playing council_room was not correct. Expected 120, got 122
FAIL: Hand count after playing council_room was not correct. Expected 122, got 441
FAIL: Hand count after playing council_room was not correct. Expected 122, got 4
FAIL: Hand count after playing council_room was not correct. Expected 122, got 480
FAIL: Hand count after playing council_room was not correct. Expected 376, got 378
FAIL: Hand count after playing council_room was not correct. Expected 378, got 296
FAIL: Hand count after playing council_room was not correct. Expected 378, got 290
FAIL: Hand count after playing council_room was not correct. Expected 378, got 54
FAIL: Hand count after playing council_room was not correct. Expected 357, got 359
FAIL: Hand count after playing council_room was not correct. Expected 359, got 306
FAIL: Hand count after playing council_room was not correct. Expected 359, got 214
FAIL: Hand count after playing council_room was not correct. Expected 359, got 270
FAIL: Hand count after playing council_room was not correct. Expected 365, got 367
FAIL: Hand count after playing council_room was not correct. Expected 367, got 27
FAIL: Hand count after playing council_room was not correct. Expected 367, got 273
FAIL: Hand count after playing council_room was not correct. Expected 367, got 377
FAIL: Hand count after playing council_room was not correct. Expected 446, got 448
FAIL: Hand count after playing council_room was not correct. Expected 448, got 128
FAIL: Hand count after playing council_room was not correct. Expected 448, got 119
FAIL: Hand count after playing council_room was not correct. Expected 448, got 58
FAIL: Hand count after playing council_room was not correct. Expected 268, got 270
FAIL: Hand count after playing council_room was not correct. Expected 270, got 58
FAIL: Hand count after playing council_room was not correct. Expected 270, got 17
FAIL: Hand count after playing council_room was not correct. Expected 270, got 195
FAIL: Hand count after playing council_room was not correct. Expected 289, got 291
FAIL: Hand count after playing council_room was not correct. Expected 291, got 472
FAIL: Hand count after playing council_room was not correct. Expected 291, got 76
FAIL: Hand count after playing council_room was not correct. Expected 291, got 498
FAIL: Hand count after playing council_room was not correct. Expected 392, got 394
FAIL: Hand count after playing council_room was not correct. Expected 394, got 66
FAIL: Hand count after playing council_room was not correct. Expected 394, got 17
FAIL: Hand count after playing council_room was not correct. Expected 394, got 308
FAIL: Hand count after playing council_room was not correct. Expected 113, got 115
FAIL: Hand count after playing council_room was not correct. Expected 115, got 475
FAIL: Hand count after playing council_room was not correct. Expected 115, got 182
FAIL: Hand count after playing council_room was not correct. Expected 115, got 234
FAIL: Hand count after playing council_room was not correct. Expected 384, got 386
FAIL: Hand count after playing council_room was not correct. Expected 386, got 213
FAIL: Hand count after playing council_room was not correct. Expected 386, got 244
FAIL: Hand count after playing council_room was not correct. Expected 386, got 48
FAIL: Hand count after playing council_room was not correct. Expected 89, got 91
FAIL: Hand count after playing council_room was not correct. Expected 91, got 321
FAIL: Hand count after playing council_room was not correct. Expected 91, got 142
FAIL: Hand count after playing council_room was not correct. Expected 91, got 106
FAIL: Hand count after playing council_room was not correct. Expected 33, got 35
FAIL: Hand count after playing council_room was not correct. Expected 35, got 301
FAIL: Hand count after playing council_room was not correct. Expected 35, got 187
FAIL: Hand count after playing council_room was not correct. Expected 35, got 388
FAIL: Hand count after playing council_room was not correct. Expected 483, got 485
FAIL: Hand count after playing council_room was not correct. Expected 485, got 482
FAIL: Hand count after playing council_room was not correct. Expected 485, got 333
FAIL: Hand count after playing council_room was not correct. Expected 485, got 313
FAIL: Hand count after playing council_room was not correct. Expected 66, got 68
FAIL: Hand count after playing council_room was not correct. Expected 68, got 449
FAIL: Hand count after playing council_room was not correct. Expected 68, got 147
FAIL: Hand count after playing council_room was not correct. Expected 68, got 349
FAIL: Hand count after playing council_room was not correct. Expected 296, got 298
FAIL: Hand count after playing council_room was not correct. Expected 298, got 251
FAIL: Hand count after playing council_room was not correct. Expected 298, got 138
FAIL: Hand count after playing council_room was not correct. Expected 298, got 64
FAIL: Hand count after playing council_room was not correct. Expected 79, got 81
FAIL: Hand count after playing council_room was not correct. Expected 81, got 242
FAIL: Hand count after playing council_room was not correct. Expected 81, got 187
FAIL: Hand count after playing council_room was not correct. Expected 81, got 249
FAIL: Hand count after playing council_room was not correct. Expected 342, got 344
FAIL: Hand count after playing council_room was not correct. Expected 344, got 415
FAIL: Hand count after playing council_room was not correct. Expected 344, got 472
FAIL: Hand count after playing council_room was not correct. Expected 344, got 74
FAIL: Hand count after playing council_room was not correct. Expected 317, got 319
FAIL: Hand count after playing council_room was not correct. Expected 319, got 92
FAIL: Hand count after playing council_room was not correct. Expected 319, got 157
FAIL: Hand count after playing council_room was not correct. Expected 319, got 171
FAIL: Hand count after playing council_room was not correct. Expected 379, got 381
FAIL: Hand count after playing council_room was not correct. Expected 381, got 294
FAIL: Hand count after playing council_room was not correct. Expected 381, got 425
FAIL: Hand count after playing council_room was not correct. Expected 381, got 482
FAIL: Hand count after playing council_room was not correct. Expected 102, got 104
FAIL: Hand count after playing council_room was not correct. Expected 104, got 274
FAIL: Hand count after playing council_room was not correct. Expected 104, got 22
FAIL: Hand count after playing council_room was not correct. Expected 104, got 276
FAIL: Hand count after playing council_room was not correct. Expected 304, got 306
FAIL: Hand count after playing council_room was not correct. Expected 306, got 205
FAIL: Hand count after playing council_room was not correct. Expected 306, got 353
FAIL: Hand count after playing council_room was not correct. Expected 306, got 428
FAIL: Hand count after playing council_room was not correct. Expected 12, got 14
FAIL: Hand count after playing council_room was not correct. Expected 14, got 364
FAIL: Hand count after playing council_room was not correct. Expected 14, got 342
FAIL: Hand count after playing council_room was not correct. Expected 14, got 452
FAIL: Hand count after playing council_room was not correct. Expected 132, got 134
FAIL: Hand count after playing council_room was not correct. Expected 134, got 407
FAIL: Hand count after playing council_room was not correct. Expected 134, got 409
FAIL: Hand count after playing council_room was not correct. Expected 134, got 408
FAIL: Hand count after playing council_room was not correct. Expected 131, got 133
FAIL: Hand count after playing council_room was not correct. Expected 133, got 494
FAIL: Hand count after playing council_room was not correct. Expected 133, got 307
FAIL: Hand count after playing council_room was not correct. Expected 133, got 329
FAIL: Hand count after playing council_room was not correct. Expected 113, got 115
FAIL: Hand count after playing council_room was not correct. Expected 115, got 443
FAIL: Hand count after playing council_room was not correct. Expected 115, got 245
FAIL: Hand count after playing council_room was not correct. Expected 115, got 267
FAIL: Hand count after playing council_room was not correct. Expected 318, got 320
FAIL: Hand count after playing council_room was not correct. Expected 320, got 101
FAIL: Hand count after playing council_room was not correct. Expected 320, got 417
FAIL: Hand count after playing council_room was not correct. Expected 320, got 184
FAIL: Hand count after playing council_room was not correct. Expected 93, got 95
FAIL: Hand count after playing council_room was not correct. Expected 95, got 280
FAIL: Hand count after playing council_room was not correct. Expected 95, got 331
FAIL: Hand count after playing council_room was not correct. Expected 95, got 204
FAIL: Hand count after playing council_room was not correct. Expected 467, got 469
FAIL: Hand count after playing council_room was not correct. Expected 469, got 312
FAIL: Hand count after playing council_room was not correct. Expected 469, got 478
FAIL: Hand count after playing council_room was not correct. Expected 469, got 209
FAIL: Hand count after playing council_room was not correct. Expected 435, got 437
FAIL: Hand count after playing council_room was not correct. Expected 437, got 326
FAIL: Hand count after playing council_room was not correct. Expected 437, got 484
FAIL: Hand count after playing council_room was not correct. Expected 437, got 351
FAIL: Hand count after playing council_room was not correct. Expected 288, got 290
FAIL: Hand count after playing council_room was not correct. Expected 290, got 74
FAIL: Hand count after playing council_room was not correct. Expected 290, got 480
FAIL: Hand count after playing council_room was not correct. Expected 290, got 139
FAIL: Hand count after playing council_room was not correct. Expected 188, got 190
FAIL: Hand count after playing council_room was not correct. Expected 190, got 115
FAIL: Hand count after playing council_room was not correct. Expected 190, got 417
FAIL: Hand count after playing council_room was not correct. Expected 190, got 300
FAIL: Hand count after playing council_room was not correct. Expected 180, got 182
FAIL: Hand count after playing council_room was not correct. Expected 182, got 35
FAIL: Hand count after playing council_room was not correct. Expected 182, got 308
FAIL: Hand count after playing council_room was not correct. Expected 182, got 14
FAIL: Hand count after playing council_room was not correct. Expected 375, got 377
FAIL: Hand count after playing council_room was not correct. Expected 377, got 231
FAIL: Hand count after playing council_room was not correct. Expected 377, got 151
FAIL: Hand count after playing council_room was not correct. Expected 377, got 261
FAIL: Hand count after playing council_room was not correct. Expected 202, got 204
FAIL: Hand count after playing council_room was not correct. Expected 204, got 90
FAIL: Hand count after playing council_room was not correct. Expected 204, got 316
FAIL: Hand count after playing council_room was not correct. Expected 204, got 49
FAIL: Hand count after playing council_room was not correct. Expected 201, got 203
FAIL: Hand count after playing council_room was not correct. Expected 203, got 133
FAIL: Hand count after playing council_room was not correct. Expected 203, got 292
FAIL: Hand count after playing council_room was not correct. Expected 203, got 35
FAIL: Hand count after playing council_room was not correct. Expected 463, got 465
FAIL: Hand count after playing council_room was not correct. Expected 465, got 496
FAIL: Hand count after playing council_room was not correct. Expected 465, got 18
FAIL: Hand count after playing council_room was not correct. Expected 465, got 371
FAIL: Hand count after playing council_room was not correct. Expected 74, got 76
FAIL: Hand count after playing council_room was not correct. Expected 76, got 290
FAIL: Hand count after playing council_room was not correct. Expected 76, got 353
FAIL: Hand count after playing council_room was not correct. Expected 76, got 213
FAIL: Hand count after playing council_room was not correct. Expected 162, got 164
FAIL: Hand count after playing council_room was not correct. Expected 164, got 155
FAIL: Hand count after playing council_room was not correct. Expected 164, got 218
FAIL: Hand count after playing council_room was not correct. Expected 164, got 485
FAIL: Hand count after playing council_room was not correct. Expected 462, got 464
FAIL: Hand count after playing council_room was not correct. Expected 464, got 255
FAIL: Hand count after playing council_room was not correct. Expected 464, got 159
FAIL: Hand count after playing council_room was not correct. Expected 464, got 378
FAIL: Hand count after playing council_room was not correct. Expected 252, got 254
FAIL: Hand count after playing council_room was not correct. Expected 254, got 465
FAIL: Hand count after playing council_room was not correct. Expected 254, got 290
FAIL: Hand count after playing council_room was not correct. Expected 254, got 386
FAIL: Hand count after playing council_room was not correct. Expected 235, got 237
FAIL: Hand count after playing council_room was not correct. Expected 237, got 105
FAIL: Hand count after playing council_room was not correct. Expected 237, got 153
FAIL: Hand count after playing council_room was not correct. Expected 237, got 445
FAIL: Hand count after playing council_room was not correct. Expected 57, got 59
FAIL: Hand count after playing council_room was not correct. Expected 59, got 77
FAIL: Hand count after playing council_room was not correct. Expected 59, got 133
FAIL: Hand count after playing council_room was not correct. Expected 59, got 444
FAIL: Hand count after playing council_room was not correct. Expected 264, got 266
FAIL: Hand count after playing council_room was not correct. Expected 266, got 231
FAIL: Hand count after playing council_room was not correct. Expected 266, got 119
FAIL: Hand count after playing council_room was not correct. Expected 266, got 289
FAIL: Hand count after playing council_room was not correct. Expected 307, got 309
FAIL: Hand count after playing council_room was not correct. Expected 309, got 225
FAIL: Hand count after playing council_room was not correct. Expected 309, got 224
FAIL: Hand count after playing council_room was not correct. Expected 309, got 97
FAIL: Hand count after playing council_room was not correct. Expected 265, got 267
FAIL: Hand count after playing council_room was not correct. Expected 267, got 311
FAIL: Hand count after playing council_room was not correct. Expected 267, got 349
FAIL: Hand count after playing council_room was not correct. Expected 267, got 418
FAIL: Hand count after playing council_room was not correct. Expected 460, got 462
FAIL: Hand count after playing council_room was not correct. Expected 462, got 375
FAIL: Hand count after playing council_room was not correct. Expected 462, got 442
FAIL: Hand count after playing council_room was not correct. Expected 462, got 81
FAIL: Hand count after playing council_room was not correct. Expected 334, got 336
FAIL: Hand count after playing council_room was not correct. Expected 336, got 383
FAIL: Hand count after playing council_room was not correct. Expected 336, got 233
FAIL: Hand count after playing council_room was not correct. Expected 336, got 30
FAIL: Hand count after playing council_room was not correct. Expected 70, got 72
FAIL: Hand count after playing council_room was not correct. Expected 72, got 286
FAIL: Hand count after playing council_room was not correct. Expected 72, got 257
FAIL: Hand count after playing council_room was not correct. Expected 72, got 438
FAIL: Hand count after playing council_room was not correct. Expected 382, got 384
FAIL: Hand count after playing council_room was not correct. Expected 384, got 422
FAIL: Hand count after playing council_room was not correct. Expected 384, got 493
FAIL: Hand count after playing council_room was not correct. Expected 384, got 314
FAIL: Hand count after playing council_room was not correct. Expected 201, got 203
FAIL: Hand count after playing council_room was not correct. Expected 203, got 264
FAIL: Hand count after playing council_room was not correct. Expected 203, got 383
FAIL: Hand count after playing council_room was not correct. Expected 203, got 201
FAIL: Hand count after playing council_room was not correct. Expected 87, got 89
FAIL: Hand count after playing council_room was not correct. Expected 89, got 226
FAIL: Hand count after playing council_room was not correct. Expected 89, got 117
FAIL: Hand count after playing council_room was not correct. Expected 89, got 401
FAIL: Hand count after playing council_room was not correct. Expected 109, got 111
FAIL: Hand count after playing council_room was not correct. Expected 111, got 390
FAIL: Hand count after playing council_room was not correct. Expected 111, got 453
FAIL: Hand count after playing council_room was not correct. Expected 111, got 494
FAIL: Hand count after playing council_room was not correct. Expected 344, got 346
FAIL: Hand count after playing council_room was not correct. Expected 346, got 204
FAIL: Hand count after playing council_room was not correct. Expected 346, got 228
FAIL: Hand count after playing council_room was not correct. Expected 346, got 20
FAIL: Hand count after playing council_room was not correct. Expected 216, got 218
FAIL: Hand count after playing council_room was not correct. Expected 218, got 152
FAIL: Hand count after playing council_room was not correct. Expected 218, got 374
FAIL: Hand count after playing council_room was not correct. Expected 218, got 39
FAIL: Hand count after playing council_room was not correct. Expected 157, got 159
FAIL: Hand count after playing council_room was not correct. Expected 159, got 100
FAIL: Hand count after playing council_room was not correct. Expected 159, got 79
FAIL: Hand count after playing council_room was not correct. Expected 159, got 349
FAIL: Hand count after playing council_room was not correct. Expected 330, got 332
FAIL: Hand count after playing council_room was not correct. Expected 332, got 265
FAIL: Hand count after playing council_room was not correct. Expected 332, got 59
FAIL: Hand count after playing council_room was not correct. Expected 332, got 14
FAIL: Hand count after playing council_room was not correct. Expected 338, got 340
FAIL: Hand count after playing council_room was not correct. Expected 340, got 395
FAIL: Hand count after playing council_room was not correct. Expected 340, got 430
FAIL: Hand count after playing council_room was not correct. Expected 340, got 214
FAIL: Hand count after playing council_room was not correct. Expected 79, got 81
FAIL: Hand count after playing council_room was not correct. Expected 81, got 426
FAIL: Hand count after playing council_room was not correct. Expected 81, got 101
FAIL: Hand count after playing council_room was not correct. Expected 81, got 319
FAIL: Hand count after playing council_room was not correct. Expected 150, got 152
FAIL: Hand count after playing council_room was not correct. Expected 152, got 250
FAIL: Hand count after playing council_room was not correct. Expected 152, got 357
FAIL: Hand count after playing council_room was not correct. Expected 152, got 144
FAIL: Hand count after playing council_room was not correct. Expected 483, got 485
FAIL: Hand count after playing council_room was not correct. Expected 485, got 19
FAIL: Hand count after playing council_room was not correct. Expected 485, got 7
FAIL: Hand count after playing council_room was not correct. Expected 485, got 44
FAIL: Hand count after playing council_room was not correct. Expected 210, got 212
FAIL: Hand count after playing council_room was not correct. Expected 212, got 75
FAIL: Hand count after playing council_room was not correct. Expected 212, got 440
FAIL: Hand count after playing council_room was not correct. Expected 212, got 54
FAIL: Hand count after playing council_room was not correct. Expected 70, got 72
FAIL: Hand count after playing council_room was not correct. Expected 72, got 156
FAIL: Hand count after playing council_room was not correct. Expected 72, got 231
FAIL: Hand count after playing council_room was not correct. Expected 72, got 379
FAIL: Hand count after playing council_room was not correct. Expected 459, got 461
FAIL: Hand count after playing council_room was not correct. Expected 461, got 170
FAIL: Hand count after playing council_room was not correct. Expected 461, got 25
FAIL: Hand count after playing council_room was not correct. Expected 461, got 69
FAIL: Hand count after playing council_room was not correct. Expected 25, got 27
FAIL: Hand count after playing council_room was not correct. Expected 27, got 94
FAIL: Hand count after playing council_room was not correct. Expected 27, got 390
FAIL: Hand count after playing council_room was not correct. Expected 27, got 410
FAIL: Hand count after playing council_room was not correct. Expected 233, got 235
FAIL: Hand count after playing council_room was not correct. Expected 235, got 313
FAIL: Hand count after playing council_room was not correct. Expected 235, got 362
FAIL: Hand count after playing council_room was not correct. Expected 235, got 126
FAIL: Hand count after playing council_room was not correct. Expected 119, got 121
FAIL: Hand count after playing council_room was not correct. Expected 121, got 28
FAIL: Hand count after playing council_room was not correct. Expected 121, got 221
FAIL: Hand count after playing council_room was not correct. Expected 121, got 99
FAIL: Hand count after playing council_room was not correct. Expected 214, got 216
FAIL: Hand count after playing council_room was not correct. Expected 216, got 381
FAIL: Hand count after playing council_room was not correct. Expected 216, got 252
FAIL: Hand count after playing council_room was not correct. Expected 216, got 275
FAIL: Hand count after playing council_room was not correct. Expected 388, got 390
FAIL: Hand count after playing council_room was not correct. Expected 390, got 74
FAIL: Hand count after playing council_room was not correct. Expected 390, got 345
FAIL: Hand count after playing council_room was not correct. Expected 390, got 488
FAIL: Hand count after playing council_room was not correct. Expected 465, got 467
FAIL: Hand count after playing council_room was not correct. Expected 467, got 161
FAIL: Hand count after playing council_room was not correct. Expected 467, got 211
FAIL: Hand count after playing council_room was not correct. Expected 467, got 393
FAIL: Hand count after playing council_room was not correct. Expected 287, got 289
FAIL: Hand count after playing council_room was not correct. Expected 289, got 243
FAIL: Hand count after playing council_room was not correct. Expected 289, got 475
FAIL: Hand count after playing council_room was not correct. Expected 289, got 297
FAIL: Hand count after playing council_room was not correct. Expected 22, got 24
FAIL: Hand count after playing council_room was not correct. Expected 24, got 117
FAIL: Hand count after playing council_room was not correct. Expected 24, got 209
FAIL: Hand count after playing council_room was not correct. Expected 24, got 330
FAIL: Hand count after playing council_room was not correct. Expected 475, got 477
FAIL: Hand count after playing council_room was not correct. Expected 477, got 240
FAIL: Hand count after playing council_room was not correct. Expected 477, got 343
FAIL: Hand count after playing council_room was not correct. Expected 477, got 97
FAIL: Hand count after playing council_room was not correct. Expected 273, got 275
FAIL: Hand count after playing council_room was not correct. Expected 275, got 332
FAIL: Hand count after playing council_room was not correct. Expected 275, got 129
FAIL: Hand count after playing council_room was not correct. Expected 275, got 60
FAIL: Hand count after playing council_room was not correct. Expected 137, got 139
FAIL: Hand count after playing council_room was not correct. Expected 139, got 308
FAIL: Hand count after playing council_room was not correct. Expected 139, got 390
FAIL: Hand count after playing council_room was not correct. Expected 139, got 212
FAIL: Hand count after playing council_room was not correct. Expected 449, got 451
FAIL: Hand count after playing council_room was not correct. Expected 451, got 184
FAIL: Hand count after playing council_room was not correct. Expected 451, got 400
FAIL: Hand count after playing council_room was not correct. Expected 451, got 90
FAIL: Hand count after playing council_room was not correct. Expected 48, got 50
FAIL: Hand count after playing council_room was not correct. Expected 50, got 497
FAIL: Hand count after playing council_room was not correct. Expected 50, got 216
FAIL: Hand count after playing council_room was not correct. Expected 50, got 23
FAIL: Hand count after playing council_room was not correct. Expected 111, got 113
FAIL: Hand count after playing council_room was not correct. Expected 113, got 157
FAIL: Hand count after playing council_room was not correct. Expected 113, got 403
FAIL: Hand count after playing council_room was not correct. Expected 113, got 53
FAIL: Hand count after playing council_room was not correct. Expected 74, got 76
FAIL: Hand count after playing council_room was not correct. Expected 76, got 451
FAIL: Hand count after playing council_room was not correct. Expected 76, got 128
FAIL: Hand count after playing council_room was not correct. Expected 76, got 242
FAIL: Hand count after playing council_room was not correct. Expected 156, got 158
FAIL: Hand count after playing council_room was not correct. Expected 158, got 60
FAIL: Hand count after playing council_room was not correct. Expected 158, got 248
FAIL: Hand count after playing council_room was not correct. Expected 158, got 97
FAIL: Hand count after playing council_room was not correct. Expected 242, got 244
FAIL: Hand count after playing council_room was not correct. Expected 244, got 262
FAIL: Hand count after playing council_room was not correct. Expected 244, got 211
FAIL: Hand count after playing council_room was not correct. Expected 244, got 452
FAIL: Hand count after playing council_room was not correct. Expected 236, got 238
FAIL: Hand count after playing council_room was not correct. Expected 238, got 27
FAIL: Hand count after playing council_room was not correct. Expected 238, got 136
FAIL: Hand count after playing council_room was not correct. Expected 238, got 248
FAIL: Hand count after playing council_room was not correct. Expected 11, got 13
FAIL: Hand count after playing council_room was not correct. Expected 13, got 281
FAIL: Hand count after playing council_room was not correct. Expected 13, got 281
FAIL: Hand count after playing council_room was not correct. Expected 13, got 380
FAIL: Hand count after playing council_room was not correct. Expected 35, got 37
FAIL: Hand count after playing council_room was not correct. Expected 37, got 424
FAIL: Hand count after playing council_room was not correct. Expected 37, got 136
FAIL: Hand count after playing council_room was not correct. Expected 37, got 414
FAIL: Hand count after playing council_room was not correct. Expected 97, got 99
FAIL: Hand count after playing council_room was not correct. Expected 99, got 445
FAIL: Hand count after playing council_room was not correct. Expected 99, got 235
FAIL: Hand count after playing council_room was not correct. Expected 99, got 46
FAIL: Hand count after playing council_room was not correct. Expected 145, got 147
FAIL: Hand count after playing council_room was not correct. Expected 147, got 324
FAIL: Hand count after playing council_room was not correct. Expected 147, got 7
FAIL: Hand count after playing council_room was not correct. Expected 147, got 163
FAIL: Hand count after playing council_room was not correct. Expected 137, got 139
FAIL: Hand count after playing council_room was not correct. Expected 139, got 473
FAIL: Hand count after playing council_room was not correct. Expected 139, got 124
FAIL: Hand count after playing council_room was not correct. Expected 139, got 390
FAIL: Hand count after playing council_room was not correct. Expected 435, got 437
FAIL: Hand count after playing council_room was not correct. Expected 437, got 249
FAIL: Hand count after playing council_room was not correct. Expected 437, got 229
FAIL: Hand count after playing council_room was not correct. Expected 437, got 38
FAIL: Hand count after playing council_room was not correct. Expected 41, got 43
FAIL: Hand count after playing council_room was not correct. Expected 43, got 210
FAIL: Hand count after playing council_room was not correct. Expected 43, got 396
FAIL: Hand count after playing council_room was not correct. Expected 43, got 444
FAIL: Hand count after playing council_room was not correct. Expected 15, got 17
FAIL: Hand count after playing council_room was not correct. Expected 17, got 488
FAIL: Hand count after playing council_room was not correct. Expected 17, got 286
FAIL: Hand count after playing council_room was not correct. Expected 17, got 242
FAIL: Hand count after playing council_room was not correct. Expected 397, got 399
FAIL: Hand count after playing council_room was not correct. Expected 399, got 259
FAIL: Hand count after playing council_room was not correct. Expected 399, got 248
FAIL: Hand count after playing council_room was not correct. Expected 399, got 396
FAIL: Hand count after playing council_room was not correct. Expected 109, got 111
FAIL: Hand count after playing council_room was not correct. Expected 111, got 389
FAIL: Hand count after playing council_room was not correct. Expected 111, got 276
FAIL: Hand count after playing council_room was not correct. Expected 111, got 28
FAIL: Hand count after playing council_room was not correct. Expected 231, got 233
FAIL: Hand count after playing council_room was not correct. Expected 233, got 55
FAIL: Hand count after playing council_room was not correct. Expected 233, got 486
FAIL: Hand count after playing council_room was not correct. Expected 233, got 21
FAIL: Hand count after playing council_room was not correct. Expected 174, got 176
FAIL: Hand count after playing council_room was not correct. Expected 176, got 28
FAIL: Hand count after playing council_room was not correct. Expected 176, got 79
FAIL: Hand count after playing council_room was not correct. Expected 176, got 479
FAIL: Hand count after playing council_room was not correct. Expected 374, got 376
FAIL: Hand count after playing council_room was not correct. Expected 376, got 65
FAIL: Hand count after playing council_room was not correct. Expected 376, got 15
FAIL: Hand count after playing council_room was not correct. Expected 376, got 86
FAIL: Hand count after playing council_room was not correct. Expected 389, got 391
FAIL: Hand count after playing council_room was not correct. Expected 391, got 438
FAIL: Hand count after playing council_room was not correct. Expected 391, got 152
FAIL: Hand count after playing council_room was not correct. Expected 391, got 244
FAIL: Hand count after playing council_room was not correct. Expected 317, got 319
FAIL: Hand count after playing council_room was not correct. Expected 319, got 445
FAIL: Hand count after playing council_room was not correct. Expected 319, got 436
FAIL: Hand count after playing council_room was not correct. Expected 319, got 259
FAIL: Hand count after playing council_room was not correct. Expected 470, got 472
FAIL: Hand count after playing council_room was not correct. Expected 472, got 178
FAIL: Hand count after playing council_room was not correct. Expected 472, got 89
FAIL: Hand count after playing council_room was not correct. Expected 472, got 468
FAIL: Hand count after playing council_room was not correct. Expected 232, got 234
FAIL: Hand count after playing council_room was not correct. Expected 234, got 317
FAIL: Hand count after playing council_room was not correct. Expected 234, got 160
FAIL: Hand count after playing council_room was not correct. Expected 234, got 347
FAIL: Hand count after playing council_room was not correct. Expected 449, got 451
FAIL: Hand count after playing council_room was not correct. Expected 451, got 97
FAIL: Hand count after playing council_room was not correct. Expected 451, got 9
FAIL: Hand count after playing council_room was not correct. Expected 451, got 203
FAIL: Hand count after playing council_room was not correct. Expected 239, got 241
FAIL: Hand count after playing council_room was not correct. Expected 241, got 271
FAIL: Hand count after playing council_room was not correct. Expected 241, got 22
FAIL: Hand count after playing council_room was not correct. Expected 241, got 100
FAIL: Hand count after playing council_room was not correct. Expected 58, got 60
FAIL: Hand count after playing council_room was not correct. Expected 60, got 488
FAIL: Hand count after playing council_room was not correct. Expected 60, got 159
FAIL: Hand count after playing council_room was not correct. Expected 60, got 172
FAIL: Hand count after playing council_room was not correct. Expected 339, got 341
FAIL: Hand count after playing council_room was not correct. Expected 341, got 239
FAIL: Hand count after playing council_room was not correct. Expected 341, got 413
FAIL: Hand count after playing council_room was not correct. Expected 341, got 374
FAIL: Hand count after playing council_room was not correct. Expected 27, got 29
FAIL: Hand count after playing council_room was not correct. Expected 29, got 33
FAIL: Hand count after playing council_room was not correct. Expected 29, got 133
FAIL: Hand count after playing council_room was not correct. Expected 29, got 448
FAIL: Hand count after playing council_room was not correct. Expected 24, got 26
FAIL: Hand count after playing council_room was not correct. Expected 26, got 94
FAIL: Hand count after playing council_room was not correct. Expected 26, got 80
FAIL: Hand count after playing council_room was not correct. Expected 26, got 23
FAIL: Hand count after playing council_room was not correct. Expected 434, got 436
FAIL: Hand count after playing council_room was not correct. Expected 436, got 302
FAIL: Hand count after playing council_room was not correct. Expected 436, got 129
FAIL: Hand count after playing council_room was not correct. Expected 436, got 171
FAIL: Hand count after playing council_room was not correct. Expected 186, got 188
FAIL: Hand count after playing council_room was not correct. Expected 188, got 197
FAIL: Hand count after playing council_room was not correct. Expected 188, got 423
FAIL: Hand count after playing council_room was not correct. Expected 188, got 306
FAIL: Hand count after playing council_room was not correct. Expected 274, got 276
FAIL: Hand count after playing council_room was not correct. Expected 276, got 174
FAIL: Hand count after playing council_room was not correct. Expected 276, got 252
FAIL: Hand count after playing council_room was not correct. Expected 276, got 276
FAIL: Hand count after playing council_room was not correct. Expected 55, got 57
FAIL: Hand count after playing council_room was not correct. Expected 57, got 26
FAIL: Hand count after playing council_room was not correct. Expected 57, got 411
FAIL: Hand count after playing council_room was not correct. Expected 57, got 332
FAIL: Hand count after playing council_room was not correct. Expected 151, got 153
FAIL: Hand count after playing council_room was not correct. Expected 153, got 435
FAIL: Hand count after playing council_room was not correct. Expected 153, got 291
FAIL: Hand count after playing council_room was not correct. Expected 153, got 364
FAIL: Hand count after playing council_room was not correct. Expected 281, got 283
FAIL: Hand count after playing council_room was not correct. Expected 283, got 62
FAIL: Hand count after playing council_room was not correct. Expected 283, got 223
FAIL: Hand count after playing council_room was not correct. Expected 283, got 272
FAIL: Hand count after playing council_room was not correct. Expected 487, got 489
FAIL: Hand count after playing council_room was not correct. Expected 489, got 417
FAIL: Hand count after playing council_room was not correct. Expected 489, got 359
FAIL: Hand count after playing council_room was not correct. Expected 489, got 153
FAIL: Hand count after playing council_room was not correct. Expected 302, got 304
FAIL: Hand count after playing council_room was not correct. Expected 304, got 173
FAIL: Hand count after playing council_room was not correct. Expected 304, got 74
FAIL: Hand count after playing council_room was not correct. Expected 304, got 314
FAIL: Hand count after playing council_room was not correct. Expected 139, got 141
FAIL: Hand count after playing council_room was not correct. Expected 141, got 83
FAIL: Hand count after playing council_room was not correct. Expected 141, got 128
FAIL: Hand count after playing council_room was not correct. Expected 141, got 173
FAIL: Hand count after playing council_room was not correct. Expected 202, got 204
FAIL: Hand count after playing council_room was not correct. Expected 204, got 443
FAIL: Hand count after playing council_room was not correct. Expected 204, got 487
FAIL: Hand count after playing council_room was not correct. Expected 204, got 4
FAIL: Hand count after playing council_room was not correct. Expected 452, got 454
FAIL: Hand count after playing council_room was not correct. Expected 454, got 86
FAIL: Hand count after playing council_room was not correct. Expected 454, got 78
FAIL: Hand count after playing council_room was not correct. Expected 454, got 93
FAIL: Hand count after playing council_room was not correct. Expected 253, got 255
FAIL: Hand count after playing council_room was not correct. Expected 255, got 31
FAIL: Hand count after playing council_room was not correct. Expected 255, got 202
FAIL: Hand count after playing council_room was not correct. Expected 255, got 317
FAIL: Hand count after playing council_room was not correct. Expected 451, got 453
FAIL: Hand count after playing council_room was not correct. Expected 453, got 221
FAIL: Hand count after playing council_room was not correct. Expected 453, got 85
FAIL: Hand count after playing council_room was not correct. Expected 453, got 480
FAIL: Hand count after playing council_room was not correct. Expected 263, got 265
FAIL: Hand count after playing council_room was not correct. Expected 265, got 366
FAIL: Hand count after playing council_room was not correct. Expected 265, got 195
FAIL: Hand count after playing council_room was not correct. Expected 265, got 100
FAIL: Hand count after playing council_room was not correct. Expected 499, got 501
FAIL: Hand count after playing council_room was not correct. Expected 501, got 135
FAIL: Hand count after playing council_room was not correct. Expected 501, got 378
FAIL: Hand count after playing council_room was not correct. Expected 501, got 208
FAIL: Hand count after playing council_room was not correct. Expected 396, got 398
FAIL: Hand count after playing council_room was not correct. Expected 398, got 228
FAIL: Hand count after playing council_room was not correct. Expected 398, got 195
FAIL: Hand count after playing council_room was not correct. Expected 398, got 187
FAIL: Hand count after playing council_room was not correct. Expected 68, got 70
FAIL: Hand count after playing council_room was not correct. Expected 70, got 444
FAIL: Hand count after playing council_room was not correct. Expected 70, got 99
FAIL: Hand count after playing council_room was not correct. Expected 70, got 201
FAIL: Hand count after playing council_room was not correct. Expected 330, got 332
FAIL: Hand count after playing council_room was not correct. Expected 332, got 153
FAIL: Hand count after playing council_room was not correct. Expected 332, got 56
FAIL: Hand count after playing council_room was not correct. Expected 332, got 493
FAIL: Hand count after playing council_room was not correct. Expected 474, got 476
FAIL: Hand count after playing council_room was not correct. Expected 476, got 170
FAIL: Hand count after playing council_room was not correct. Expected 476, got 351
FAIL: Hand count after playing council_room was not correct. Expected 476, got 496
FAIL: Hand count after playing council_room was not correct. Expected 42, got 44
FAIL: Hand count after playing council_room was not correct. Expected 44, got 406
FAIL: Hand count after playing council_room was not correct. Expected 44, got 59
FAIL: Hand count after playing council_room was not correct. Expected 44, got 14
FAIL: Hand count after playing council_room was not correct. Expected 283, got 285
FAIL: Hand count after playing council_room was not correct. Expected 285, got 194
FAIL: Hand count after playing council_room was not correct. Expected 285, got 480
FAIL: Hand count after playing council_room was not correct. Expected 285, got 484
FAIL: Hand count after playing council_room was not correct. Expected 264, got 266
FAIL: Hand count after playing council_room was not correct. Expected 266, got 264
FAIL: Hand count after playing council_room was not correct. Expected 266, got 53
FAIL: Hand count after playing council_room was not correct. Expected 266, got 387
FAIL: Hand count after playing council_room was not correct. Expected 72, got 74
FAIL: Hand count after playing council_room was not correct. Expected 74, got 23
FAIL: Hand count after playing council_room was not correct. Expected 74, got 425
FAIL: Hand count after playing council_room was not correct. Expected 74, got 457
FAIL: Hand count after playing council_room was not correct. Expected 47, got 49
FAIL: Hand count after playing council_room was not correct. Expected 49, got 484
FAIL: Hand count after playing council_room was not correct. Expected 49, got 459
FAIL: Hand count after playing council_room was not correct. Expected 49, got 445
FAIL: Hand count after playing council_room was not correct. Expected 123, got 125
FAIL: Hand count after playing council_room was not correct. Expected 125, got 46
FAIL: Hand count after playing council_room was not correct. Expected 125, got 373
FAIL: Hand count after playing council_room was not correct. Expected 125, got 168
FAIL: Hand count after playing council_room was not correct. Expected 309, got 311
FAIL: Hand count after playing council_room was not correct. Expected 311, got 250
FAIL: Hand count after playing council_room was not correct. Expected 311, got 158
FAIL: Hand count after playing council_room was not correct. Expected 311, got 462
FAIL: Hand count after playing council_room was not correct. Expected 283, got 285
FAIL: Hand count after playing council_room was not correct. Expected 285, got 346
FAIL: Hand count after playing council_room was not correct. Expected 285, got 55
FAIL: Hand count after playing council_room was not correct. Expected 285, got 6
FAIL: Hand count after playing council_room was not correct. Expected 256, got 258
FAIL: Hand count after playing council_room was not correct. Expected 258, got 471
FAIL: Hand count after playing council_room was not correct. Expected 258, got 214
FAIL: Hand count after playing council_room was not correct. Expected 258, got 361
FAIL: Hand count after playing council_room was not correct. Expected 275, got 277
FAIL: Hand count after playing council_room was not correct. Expected 277, got 458
FAIL: Hand count after playing council_room was not correct. Expected 277, got 449
FAIL: Hand count after playing council_room was not correct. Expected 277, got 307
FAIL: Hand count after playing council_room was not correct. Expected 368, got 370
FAIL: Hand count after playing council_room was not correct. Expected 370, got 414
FAIL: Hand count after playing council_room was not correct. Expected 370, got 129
FAIL: Hand count after playing council_room was not correct. Expected 370, got 86
FAIL: Hand count after playing council_room was not correct. Expected 485, got 487
FAIL: Hand count after playing council_room was not correct. Expected 487, got 181
FAIL: Hand count after playing council_room was not correct. Expected 487, got 172
FAIL: Hand count after playing council_room was not correct. Expected 487, got 112
FAIL: Hand count after playing council_room was not correct. Expected 19, got 21
FAIL: Hand count after playing council_room was not correct. Expected 21, got 169
FAIL: Hand count after playing council_room was not correct. Expected 21, got 263
FAIL: Hand count after playing council_room was not correct. Expected 21, got 228
FAIL: Hand count after playing council_room was not correct. Expected 18, got 20
FAIL: Hand count after playing council_room was not correct. Expected 20, got 461
FAIL: Hand count after playing council_room was not correct. Expected 20, got 209
FAIL: Hand count after playing council_room was not correct. Expected 20, got 245
FAIL: Hand count after playing council_room was not correct. Expected 247, got 249
FAIL: Hand count after playing council_room was not correct. Expected 249, got 166
FAIL: Hand count after playing council_room was not correct. Expected 249, got 29
FAIL: Hand count after playing council_room was not correct. Expected 249, got 216
FAIL: Hand count after playing council_room was not correct. Expected 403, got 405
FAIL: Hand count after playing council_room was not correct. Expected 405, got 461
FAIL: Hand count after playing council_room was not correct. Expected 405, got 129
FAIL: Hand count after playing council_room was not correct. Expected 405, got 42
FAIL: Hand count after playing council_room was not correct. Expected 276, got 278
FAIL: Hand count after playing council_room was not correct. Expected 278, got 394
FAIL: Hand count after playing council_room was not correct. Expected 278, got 471
FAIL: Hand count after playing council_room was not correct. Expected 278, got 38
FAIL: Hand count after playing council_room was not correct. Expected 53, got 55
FAIL: Hand count after playing council_room was not correct. Expected 55, got 465
FAIL: Hand count after playing council_room was not correct. Expected 55, got 152
FAIL: Hand count after playing council_room was not correct. Expected 55, got 428
FAIL: Hand count after playing council_room was not correct. Expected 40, got 42
FAIL: Hand count after playing council_room was not correct. Expected 42, got 173
FAIL: Hand count after playing council_room was not correct. Expected 42, got 348
FAIL: Hand count after playing council_room was not correct. Expected 42, got 248
FAIL: Hand count after playing council_room was not correct. Expected 69, got 71
FAIL: Hand count after playing council_room was not correct. Expected 71, got 84
FAIL: Hand count after playing council_room was not correct. Expected 71, got 243
FAIL: Hand count after playing council_room was not correct. Expected 71, got 60
FAIL: Hand count after playing council_room was not correct. Expected 5, got 7
FAIL: Hand count after playing council_room was not correct. Expected 7, got 306
FAIL: Hand count after playing council_room was not correct. Expected 7, got 159
FAIL: Hand count after playing council_room was not correct. Expected 7, got 152
FAIL: Hand count after playing council_room was not correct. Expected 272, got 274
FAIL: Hand count after playing council_room was not correct. Expected 274, got 121
FAIL: Hand count after playing council_room was not correct. Expected 274, got 32
FAIL: Hand count after playing council_room was not correct. Expected 274, got 259
FAIL: Hand count after playing council_room was not correct. Expected 14, got 16
FAIL: Hand count after playing council_room was not correct. Expected 16, got 315
FAIL: Hand count after playing council_room was not correct. Expected 16, got 272
FAIL: Hand count after playing council_room was not correct. Expected 16, got 107
FAIL: Hand count after playing council_room was not correct. Expected 18, got 20
FAIL: Hand count after playing council_room was not correct. Expected 20, got 215
FAIL: Hand count after playing council_room was not correct. Expected 20, got 19
FAIL: Hand count after playing council_room was not correct. Expected 20, got 249
FAIL: Hand count after playing council_room was not correct. Expected 110, got 112
FAIL: Hand count after playing council_room was not correct. Expected 112, got 255
FAIL: Hand count after playing council_room was not correct. Expected 112, got 94
FAIL: Hand count after playing council_room was not correct. Expected 112, got 442
FAIL: Hand count after playing council_room was not correct. Expected 217, got 219
FAIL: Hand count after playing council_room was not correct. Expected 219, got 446
FAIL: Hand count after playing council_room was not correct. Expected 219, got 112
FAIL: Hand count after playing council_room was not correct. Expected 219, got 368
FAIL: Hand count after playing council_room was not correct. Expected 16, got 18
FAIL: Hand count after playing council_room was not correct. Expected 18, got 500
FAIL: Hand count after playing council_room was not correct. Expected 18, got 392
FAIL: Hand count after playing council_room was not correct. Expected 18, got 21
FAIL: Hand count after playing council_room was not correct. Expected 32, got 34
FAIL: Hand count after playing council_room was not correct. Expected 34, got 487
FAIL: Hand count after playing council_room was not correct. Expected 34, got 289
FAIL: Hand count after playing council_room was not correct. Expected 34, got 335
FAIL: Hand count after playing council_room was not correct. Expected 246, got 248
FAIL: Hand count after playing council_room was not correct. Expected 248, got 226
FAIL: Hand count after playing council_room was not correct. Expected 248, got 5
FAIL: Hand count after playing council_room was not correct. Expected 248, got 435
FAIL: Hand count after playing council_room was not correct. Expected 113, got 115
FAIL: Hand count after playing council_room was not correct. Expected 115, got 470
FAIL: Hand count after playing council_room was not correct. Expected 115, got 219
FAIL: Hand count after playing council_room was not correct. Expected 115, got 313
FAIL: Hand count after playing council_room was not correct. Expected 347, got 349
FAIL: Hand count after playing council_room was not correct. Expected 349, got 93
FAIL: Hand count after playing council_room was not correct. Expected 349, got 30
FAIL: Hand count after playing council_room was not correct. Expected 349, got 452
FAIL: Hand count after playing council_room was not correct. Expected 278, got 280
FAIL: Hand count after playing council_room was not correct. Expected 280, got 308
FAIL: Hand count after playing council_room was not correct. Expected 280, got 60
FAIL: Hand count after playing council_room was not correct. Expected 280, got 464
FAIL: Hand count after playing council_room was not correct. Expected 86, got 88
FAIL: Hand count after playing council_room was not correct. Expected 88, got 39
FAIL: Hand count after playing council_room was not correct. Expected 88, got 437
FAIL: Hand count after playing council_room was not correct. Expected 88, got 208
FAIL: Hand count after playing council_room was not correct. Expected 493, got 495
FAIL: Hand count after playing council_room was not correct. Expected 495, got 332
FAIL: Hand count after playing council_room was not correct. Expected 495, got 21
FAIL: Hand count after playing council_room was not correct. Expected 495, got 153
FAIL: Hand count after playing council_room was not correct. Expected 96, got 98
FAIL: Hand count after playing council_room was not correct. Expected 98, got 456
FAIL: Hand count after playing council_room was not correct. Expected 98, got 53
FAIL: Hand count after playing council_room was not correct. Expected 98, got 40
FAIL: Hand count after playing council_room was not correct. Expected 437, got 439
FAIL: Hand count after playing council_room was not correct. Expected 439, got 133
FAIL: Hand count after playing council_room was not correct. Expected 439, got 69
FAIL: Hand count after playing council_room was not correct. Expected 439, got 274
FAIL: Hand count after playing council_room was not correct. Expected 141, got 143
FAIL: Hand count after playing council_room was not correct. Expected 143, got 377
FAIL: Hand count after playing council_room was not correct. Expected 143, got 260
FAIL: Hand count after playing council_room was not correct. Expected 143, got 469
FAIL: Hand count after playing council_room was not correct. Expected 225, got 227
FAIL: Hand count after playing council_room was not correct. Expected 227, got 46
FAIL: Hand count after playing council_room was not correct. Expected 227, got 486
FAIL: Hand count after playing council_room was not correct. Expected 227, got 461
FAIL: Hand count after playing council_room was not correct. Expected 123, got 125
FAIL: Hand count after playing council_room was not correct. Expected 125, got 85
FAIL: Hand count after playing council_room was not correct. Expected 125, got 321
FAIL: Hand count after playing council_room was not correct. Expected 125, got 222
FAIL: Hand count after playing council_room was not correct. Expected 401, got 403
FAIL: Hand count after playing council_room was not correct. Expected 403, got 133
FAIL: Hand count after playing council_room was not correct. Expected 403, got 275
FAIL: Hand count after playing council_room was not correct. Expected 403, got 276
FAIL: Hand count after playing council_room was not correct. Expected 11, got 13
FAIL: Hand count after playing council_room was not correct. Expected 13, got 443
FAIL: Hand count after playing council_room was not correct. Expected 13, got 480
FAIL: Hand count after playing council_room was not correct. Expected 13, got 453
FAIL: Hand count after playing council_room was not correct. Expected 42, got 44
FAIL: Hand count after playing council_room was not correct. Expected 44, got 387
FAIL: Hand count after playing council_room was not correct. Expected 44, got 209
FAIL: Hand count after playing council_room was not correct. Expected 44, got 74
FAIL: Hand count after playing council_room was not correct. Expected 343, got 345
FAIL: Hand count after playing council_room was not correct. Expected 345, got 15
FAIL: Hand count after playing council_room was not correct. Expected 345, got 405
FAIL: Hand count after playing council_room was not correct. Expected 345, got 360
FAIL: Hand count after playing council_room was not correct. Expected 464, got 466
FAIL: Hand count after playing council_room was not correct. Expected 466, got 337
FAIL: Hand count after playing council_room was not correct. Expected 466, got 24
FAIL: Hand count after playing council_room was not correct. Expected 466, got 465
FAIL: Hand count after playing council_room was not correct. Expected 181, got 183
FAIL: Hand count after playing council_room was not correct. Expected 183, got 109
FAIL: Hand count after playing council_room was not correct. Expected 183, got 108
FAIL: Hand count after playing council_room was not correct. Expected 183, got 231
FAIL: Hand count after playing council_room was not correct. Expected 268, got 270
FAIL: Hand count after playing council_room was not correct. Expected 270, got 194
FAIL: Hand count after playing council_room was not correct. Expected 270, got 239
FAIL: Hand count after playing council_room was not correct. Expected 270, got 244
FAIL: Hand count after playing council_room was not correct. Expected 495, got 497
FAIL: Hand count after playing council_room was not correct. Expected 497, got 154
FAIL: Hand count after playing council_room was not correct. Expected 497, got 365
FAIL: Hand count after playing council_room was not correct. Expected 497, got 497
FAIL: Hand count after playing council_room was not correct. Expected 242, got 244
FAIL: Hand count after playing council_room was not correct. Expected 244, got 254
FAIL: Hand count after playing council_room was not correct. Expected 244, got 209
FAIL: Hand count after playing council_room was not correct. Expected 244, got 265
FAIL: Hand count after playing council_room was not correct. Expected 5, got 7
FAIL: Hand count after playing council_room was not correct. Expected 7, got 224
FAIL: Hand count after playing council_room was not correct. Expected 7, got 312
FAIL: Hand count after playing council_room was not correct. Expected 7, got 417
FAIL: Hand count after playing council_room was not correct. Expected 153, got 155
FAIL: Hand count after playing council_room was not correct. Expected 155, got 227
FAIL: Hand count after playing council_room was not correct. Expected 155, got 318
FAIL: Hand count after playing council_room was not correct. Expected 155, got 109
FAIL: Hand count after playing council_room was not correct. Expected 351, got 353
FAIL: Hand count after playing council_room was not correct. Expected 353, got 101
FAIL: Hand count after playing council_room was not correct. Expected 353, got 297
FAIL: Hand count after playing council_room was not correct. Expected 353, got 373
FAIL: Hand count after playing council_room was not correct. Expected 465, got 467
FAIL: Hand count after playing council_room was not correct. Expected 467, got 341
FAIL: Hand count after playing council_room was not correct. Expected 467, got 44
FAIL: Hand count after playing council_room was not correct. Expected 467, got 76
FAIL: Hand count after playing council_room was not correct. Expected 469, got 471
FAIL: Hand count after playing council_room was not correct. Expected 471, got 124
FAIL: Hand count after playing council_room was not correct. Expected 471, got 128
FAIL: Hand count after playing council_room was not correct. Expected 471, got 124
FAIL: Hand count after playing council_room was not correct. Expected 176, got 178
FAIL: Hand count after playing council_room was not correct. Expected 178, got 286
FAIL: Hand count after playing council_room was not correct. Expected 178, got 289
FAIL: Hand count after playing council_room was not correct. Expected 178, got 350
FAIL: Hand count after playing council_room was not correct. Expected 13, got 15
FAIL: Hand count after playing council_room was not correct. Expected 15, got 373
FAIL: Hand count after playing council_room was not correct. Expected 15, got 393
FAIL: Hand count after playing council_room was not correct. Expected 15, got 453
FAIL: Hand count after playing council_room was not correct. Expected 400, got 402
FAIL: Hand count after playing council_room was not correct. Expected 402, got 494
FAIL: Hand count after playing council_room was not correct. Expected 402, got 184
FAIL: Hand count after playing council_room was not correct. Expected 402, got 442
FAIL: Hand count after playing council_room was not correct. Expected 491, got 493
FAIL: Hand count after playing council_room was not correct. Expected 493, got 82
FAIL: Hand count after playing council_room was not correct. Expected 493, got 121
FAIL: Hand count after playing council_room was not correct. Expected 493, got 189
FAIL: Hand count after playing council_room was not correct. Expected 391, got 393
FAIL: Hand count after playing council_room was not correct. Expected 393, got 26
FAIL: Hand count after playing council_room was not correct. Expected 393, got 246
FAIL: Hand count after playing council_room was not correct. Expected 393, got 194
FAIL: Hand count after playing council_room was not correct. Expected 499, got 501
FAIL: Hand count after playing council_room was not correct. Expected 501, got 348
FAIL: Hand count after playing council_room was not correct. Expected 501, got 494
FAIL: Hand count after playing council_room was not correct. Expected 501, got 369
FAIL: Hand count after playing council_room was not correct. Expected 226, got 228
FAIL: Hand count after playing council_room was not correct. Expected 228, got 363
FAIL: Hand count after playing council_room was not correct. Expected 228, got 168
FAIL: Hand count after playing council_room was not correct. Expected 228, got 189
FAIL: Hand count after playing council_room was not correct. Expected 22, got 24
FAIL: Hand count after playing council_room was not correct. Expected 24, got 130
FAIL: Hand count after playing council_room was not correct. Expected 24, got 404
FAIL: Hand count after playing council_room was not correct. Expected 24, got 221
FAIL: Hand count after playing council_room was not correct. Expected 255, got 257
FAIL: Hand count after playing council_room was not correct. Expected 257, got 408
FAIL: Hand count after playing council_room was not correct. Expected 257, got 190
FAIL: Hand count after playing council_room was not correct. Expected 257, got 466
FAIL: Hand count after playing council_room was not correct. Expected 361, got 363
FAIL: Hand count after playing council_room was not correct. Expected 363, got 20
FAIL: Hand count after playing council_room was not correct. Expected 363, got 376
FAIL: Hand count after playing council_room was not correct. Expected 363, got 326
FAIL: Hand count after playing council_room was not correct. Expected 87, got 89
FAIL: Hand count after playing council_room was not correct. Expected 89, got 202
FAIL: Hand count after playing council_room was not correct. Expected 89, got 416
FAIL: Hand count after playing council_room was not correct. Expected 89, got 215
FAIL: Hand count after playing council_room was not correct. Expected 84, got 86
FAIL: Hand count after playing council_room was not correct. Expected 86, got 409
FAIL: Hand count after playing council_room was not correct. Expected 86, got 258
FAIL: Hand count after playing council_room was not correct. Expected 86, got 260
FAIL: Hand count after playing council_room was not correct. Expected 101, got 103
FAIL: Hand count after playing council_room was not correct. Expected 103, got 171
FAIL: Hand count after playing council_room was not correct. Expected 103, got 314
FAIL: Hand count after playing council_room was not correct. Expected 103, got 450
FAIL: Hand count after playing council_room was not correct. Expected 468, got 470
FAIL: Hand count after playing council_room was not correct. Expected 470, got 64
FAIL: Hand count after playing council_room was not correct. Expected 470, got 219
FAIL: Hand count after playing council_room was not correct. Expected 470, got 117
FAIL: Hand count after playing council_room was not correct. Expected 456, got 458
FAIL: Hand count after playing council_room was not correct. Expected 458, got 77
FAIL: Hand count after playing council_room was not correct. Expected 458, got 403
FAIL: Hand count after playing council_room was not correct. Expected 458, got 146
FAIL: Hand count after playing council_room was not correct. Expected 364, got 366
FAIL: Hand count after playing council_room was not correct. Expected 366, got 332
FAIL: Hand count after playing council_room was not correct. Expected 366, got 146
FAIL: Hand count after playing council_room was not correct. Expected 366, got 438
FAIL: Hand count after playing council_room was not correct. Expected 198, got 200
FAIL: Hand count after playing council_room was not correct. Expected 200, got 292
FAIL: Hand count after playing council_room was not correct. Expected 200, got 151
FAIL: Hand count after playing council_room was not correct. Expected 200, got 12
FAIL: Hand count after playing council_room was not correct. Expected 225, got 227
FAIL: Hand count after playing council_room was not correct. Expected 227, got 229
FAIL: Hand count after playing council_room was not correct. Expected 227, got 132
FAIL: Hand count after playing council_room was not correct. Expected 227, got 44
FAIL: Hand count after playing council_room was not correct. Expected 52, got 54
FAIL: Hand count after playing council_room was not correct. Expected 54, got 464
FAIL: Hand count after playing council_room was not correct. Expected 54, got 9
FAIL: Hand count after playing council_room was not correct. Expected 54, got 98
FAIL: Hand count after playing council_room was not correct. Expected 359, got 361
FAIL: Hand count after playing council_room was not correct. Expected 361, got 326
FAIL: Hand count after playing council_room was not correct. Expected 361, got 414
FAIL: Hand count after playing council_room was not correct. Expected 361, got 246
FAIL: Hand count after playing council_room was not correct. Expected 371, got 373
FAIL: Hand count after playing council_room was not correct. Expected 373, got 231
FAIL: Hand count after playing council_room was not correct. Expected 373, got 1
FAIL: Hand count after playing council_room was not correct. Expected 373, got 426
FAIL: Hand count after playing council_room was not correct. Expected 45, got 47
FAIL: Hand count after playing council_room was not correct. Expected 47, got 252
FAIL: Hand count after playing council_room was not correct. Expected 47, got 264
FAIL: Hand count after playing council_room was not correct. Expected 47, got 235
FAIL: Hand count after playing council_room was not correct. Expected 70, got 72
FAIL: Hand count after playing council_room was not correct. Expected 72, got 29
FAIL: Hand count after playing council_room was not correct. Expected 72, got 43
FAIL: Hand count after playing council_room was not correct. Expected 72, got 250
FAIL: Hand count after playing council_room was not correct. Expected 390, got 392
FAIL: Hand count after playing council_room was not correct. Expected 392, got 335
FAIL: Hand count after playing council_room was not correct. Expected 392, got 289
FAIL: Hand count after playing council_room was not correct. Expected 392, got 134
FAIL: Hand count after playing council_room was not correct. Expected 120, got 122
FAIL: Hand count after playing council_room was not correct. Expected 122, got 395
FAIL: Hand count after playing council_room was not correct. Expected 122, got 216
FAIL: Hand count after playing council_room was not correct. Expected 122, got 420
FAIL: Hand count after playing council_room was not correct. Expected 239, got 241
FAIL: Hand count after playing council_room was not correct. Expected 241, got 325
FAIL: Hand count after playing council_room was not correct. Expected 241, got 477
FAIL: Hand count after playing council_room was not correct. Expected 241, got 249
FAIL: Hand count after playing council_room was not correct. Expected 297, got 299
FAIL: Hand count after playing council_room was not correct. Expected 299, got 331
FAIL: Hand count after playing council_room was not correct. Expected 299, got 294
FAIL: Hand count after playing council_room was not correct. Expected 299, got 308
FAIL: Hand count after playing council_room was not correct. Expected 204, got 206
FAIL: Hand count after playing council_room was not correct. Expected 206, got 455
FAIL: Hand count after playing council_room was not correct. Expected 206, got 276
FAIL: Hand count after playing council_room was not correct. Expected 206, got 423
FAIL: Hand count after playing council_room was not correct. Expected 199, got 201
FAIL: Hand count after playing council_room was not correct. Expected 201, got 435
FAIL: Hand count after playing council_room was not correct. Expected 201, got 103
FAIL: Hand count after playing council_room was not correct. Expected 201, got 77
FAIL: Hand count after playing council_room was not correct. Expected 17, got 19
FAIL: Hand count after playing council_room was not correct. Expected 19, got 465
FAIL: Hand count after playing council_room was not correct. Expected 19, got 315
FAIL: Hand count after playing council_room was not correct. Expected 19, got 81
FAIL: Hand count after playing council_room was not correct. Expected 188, got 190
FAIL: Hand count after playing council_room was not correct. Expected 190, got 152
FAIL: Hand count after playing council_room was not correct. Expected 190, got 261
FAIL: Hand count after playing council_room was not correct. Expected 190, got 416
FAIL: Hand count after playing council_room was not correct. Expected 313, got 315
FAIL: Hand count after playing council_room was not correct. Expected 315, got 423
FAIL: Hand count after playing council_room was not correct. Expected 315, got 317
FAIL: Hand count after playing council_room was not correct. Expected 315, got 480
FAIL: Hand count after playing council_room was not correct. Expected 184, got 186
FAIL: Hand count after playing council_room was not correct. Expected 186, got 240
FAIL: Hand count after playing council_room was not correct. Expected 186, got 309
FAIL: Hand count after playing council_room was not correct. Expected 186, got 441
FAIL: Hand count after playing council_room was not correct. Expected 38, got 40
FAIL: Hand count after playing council_room was not correct. Expected 40, got 369
FAIL: Hand count after playing council_room was not correct. Expected 40, got 263
FAIL: Hand count after playing council_room was not correct. Expected 40, got 343
FAIL: Hand count after playing council_room was not correct. Expected 56, got 58
FAIL: Hand count after playing council_room was not correct. Expected 58, got 200
FAIL: Hand count after playing council_room was not correct. Expected 58, got 291
FAIL: Hand count after playing council_room was not correct. Expected 58, got 306
FAIL: Hand count after playing council_room was not correct. Expected 286, got 288
FAIL: Hand count after playing council_room was not correct. Expected 288, got 202
FAIL: Hand count after playing council_room was not correct. Expected 288, got 420
FAIL: Hand count after playing council_room was not correct. Expected 288, got 252
FAIL: Hand count after playing council_room was not correct. Expected 418, got 420
FAIL: Hand count after playing council_room was not correct. Expected 420, got 321
FAIL: Hand count after playing council_room was not correct. Expected 420, got 346
FAIL: Hand count after playing council_room was not correct. Expected 420, got 114
FAIL: Hand count after playing council_room was not correct. Expected 452, got 454
FAIL: Hand count after playing council_room was not correct. Expected 454, got 496
FAIL: Hand count after playing council_room was not correct. Expected 454, got 143
FAIL: Hand count after playing council_room was not correct. Expected 454, got 133
FAIL: Hand count after playing council_room was not correct. Expected 456, got 458
FAIL: Hand count after playing council_room was not correct. Expected 458, got 192
FAIL: Hand count after playing council_room was not correct. Expected 458, got 294
FAIL: Hand count after playing council_room was not correct. Expected 458, got 198
FAIL: Hand count after playing council_room was not correct. Expected 194, got 196
FAIL: Hand count after playing council_room was not correct. Expected 196, got 51
FAIL: Hand count after playing council_room was not correct. Expected 196, got 165
FAIL: Hand count after playing council_room was not correct. Expected 196, got 364
FAIL: Hand count after playing council_room was not correct. Expected 283, got 285
FAIL: Hand count after playing council_room was not correct. Expected 285, got 307
FAIL: Hand count after playing council_room was not correct. Expected 285, got 124
FAIL: Hand count after playing council_room was not correct. Expected 285, got 363
FAIL: Hand count after playing council_room was not correct. Expected 380, got 382
FAIL: Hand count after playing council_room was not correct. Expected 382, got 26
FAIL: Hand count after playing council_room was not correct. Expected 382, got 334
FAIL: Hand count after playing council_room was not correct. Expected 382, got 185
FAIL: Hand count after playing council_room was not correct. Expected 435, got 437
FAIL: Hand count after playing council_room was not correct. Expected 437, got 84
FAIL: Hand count after playing council_room was not correct. Expected 437, got 136
FAIL: Hand count after playing council_room was not correct. Expected 437, got 251
FAIL: Hand count after playing council_room was not correct. Expected 40, got 42
FAIL: Hand count after playing council_room was not correct. Expected 42, got 468
FAIL: Hand count after playing council_room was not correct. Expected 42, got 495
FAIL: Hand count after playing council_room was not correct. Expected 42, got 386
FAIL: Hand count after playing council_room was not correct. Expected 49, got 51
FAIL: Hand count after playing council_room was not correct. Expected 51, got 145
FAIL: Hand count after playing council_room was not correct. Expected 51, got 381
FAIL: Hand count after playing council_room was not correct. Expected 51, got 378
FAIL: Hand count after playing council_room was not correct. Expected 380, got 382
FAIL: Hand count after playing council_room was not correct. Expected 382, got 142
FAIL: Hand count after playing council_room was not correct. Expected 382, got 40
FAIL: Hand count after playing council_room was not correct. Expected 382, got 195
FAIL: Hand count after playing council_room was not correct. Expected 24, got 26
FAIL: Hand count after playing council_room was not correct. Expected 26, got 369
FAIL: Hand count after playing council_room was not correct. Expected 26, got 444
FAIL: Hand count after playing council_room was not correct. Expected 26, got 321
FAIL: Hand count after playing council_room was not correct. Expected 231, got 233
FAIL: Hand count after playing council_room was not correct. Expected 233, got 412
FAIL: Hand count after playing council_room was not correct. Expected 233, got 241
FAIL: Hand count after playing council_room was not correct. Expected 233, got 331
FAIL: Hand count after playing council_room was not correct. Expected 410, got 412
FAIL: Hand count after playing council_room was not correct. Expected 412, got 51
FAIL: Hand count after playing council_room was not correct. Expected 412, got 168
FAIL: Hand count after playing council_room was not correct. Expected 412, got 436
FAIL: Hand count after playing council_room was not correct. Expected 434, got 436
FAIL: Hand count after playing council_room was not correct. Expected 436, got 262
FAIL: Hand count after playing council_room was not correct. Expected 436, got 168
FAIL: Hand count after playing council_room was not correct. Expected 436, got 469
FAIL: Hand count after playing council_room was not correct. Expected 224, got 226
FAIL: Hand count after playing council_room was not correct. Expected 226, got 364
FAIL: Hand count after playing council_room was not correct. Expected 226, got 446
FAIL: Hand count after playing council_room was not correct. Expected 226, got 187
FAIL: Hand count after playing council_room was not correct. Expected 199, got 201
FAIL: Hand count after playing council_room was not correct. Expected 201, got 253
FAIL: Hand count after playing council_room was not correct. Expected 201, got 94
FAIL: Hand count after playing council_room was not correct. Expected 201, got 269
FAIL: Hand count after playing council_room was not correct. Expected 411, got 413
FAIL: Hand count after playing council_room was not correct. Expected 413, got 352
FAIL: Hand count after playing council_room was not correct. Expected 413, got 294
FAIL: Hand count after playing council_room was not correct. Expected 413, got 228
FAIL: Hand count after playing council_room was not correct. Expected 467, got 469
FAIL: Hand count after playing council_room was not correct. Expected 469, got 364
FAIL: Hand count after playing council_room was not correct. Expected 469, got 415
FAIL: Hand count after playing council_room was not correct. Expected 469, got 190
FAIL: Hand count after playing council_room was not correct. Expected 371, got 373
FAIL: Hand count after playing council_room was not correct. Expected 373, got 297
FAIL: Hand count after playing council_room was not correct. Expected 373, got 39
FAIL: Hand count after playing council_room was not correct. Expected 373, got 350
FAIL: Hand count after playing council_room was not correct. Expected 260, got 262
FAIL: Hand count after playing council_room was not correct. Expected 262, got 215
FAIL: Hand count after playing council_room was not correct. Expected 262, got 106
FAIL: Hand count after playing council_room was not correct. Expected 262, got 200
FAIL: Hand count after playing council_room was not correct. Expected 38, got 40
FAIL: Hand count after playing council_room was not correct. Expected 40, got 362
FAIL: Hand count after playing council_room was not correct. Expected 40, got 369
FAIL: Hand count after playing council_room was not correct. Expected 40, got 443
FAIL: Hand count after playing council_room was not correct. Expected 23, got 25
FAIL: Hand count after playing council_room was not correct. Expected 25, got 36
FAIL: Hand count after playing council_room was not correct. Expected 25, got 184
FAIL: Hand count after playing council_room was not correct. Expected 25, got 230
FAIL: Hand count after playing council_room was not correct. Expected 270, got 272
FAIL: Hand count after playing council_room was not correct. Expected 272, got 259
FAIL: Hand count after playing council_room was not correct. Expected 272, got 223
FAIL: Hand count after playing council_room was not correct. Expected 272, got 133
FAIL: Hand count after playing council_room was not correct. Expected 464, got 466
FAIL: Hand count after playing council_room was not correct. Expected 466, got 394
FAIL: Hand count after playing council_room was not correct. Expected 466, got 453
FAIL: Hand count after playing council_room was not correct. Expected 466, got 364
FAIL: Hand count after playing council_room was not correct. Expected 170, got 172
FAIL: Hand count after playing council_room was not correct. Expected 172, got 470
FAIL: Hand count after playing council_room was not correct. Expected 172, got 200
FAIL: Hand count after playing council_room was not correct. Expected 172, got 217
FAIL: Hand count after playing council_room was not correct. Expected 462, got 464
FAIL: Hand count after playing council_room was not correct. Expected 464, got 330
FAIL: Hand count after playing council_room was not correct. Expected 464, got 409
FAIL: Hand count after playing council_room was not correct. Expected 464, got 12
FAIL: Hand count after playing council_room was not correct. Expected 339, got 341
FAIL: Hand count after playing council_room was not correct. Expected 341, got 176
FAIL: Hand count after playing council_room was not correct. Expected 341, got 328
FAIL: Hand count after playing council_room was not correct. Expected 341, got 69
FAIL: Hand count after playing council_room was not correct. Expected 323, got 325
FAIL: Hand count after playing council_room was not correct. Expected 325, got 366
FAIL: Hand count after playing council_room was not correct. Expected 325, got 284
FAIL: Hand count after playing council_room was not correct. Expected 325, got 383
FAIL: Hand count after playing council_room was not correct. Expected 334, got 336
FAIL: Hand count after playing council_room was not correct. Expected 336, got 326
FAIL: Hand count after playing council_room was not correct. Expected 336, got 486
FAIL: Hand count after playing council_room was not correct. Expected 336, got 478
FAIL: Hand count after playing council_room was not correct. Expected 102, got 104
FAIL: Hand count after playing council_room was not correct. Expected 104, got 101
FAIL: Hand count after playing council_room was not correct. Expected 104, got 350
FAIL: Hand count after playing council_room was not correct. Expected 104, got 336
FAIL: Hand count after playing council_room was not correct. Expected 272, got 274
FAIL: Hand count after playing council_room was not correct. Expected 274, got 240
FAIL: Hand count after playing council_room was not correct. Expected 274, got 110
FAIL: Hand count after playing council_room was not correct. Expected 274, got 270
FAIL: Hand count after playing council_room was not correct. Expected 424, got 426
FAIL: Hand count after playing council_room was not correct. Expected 426, got 440
FAIL: Hand count after playing council_room was not correct. Expected 426, got 224
FAIL: Hand count after playing council_room was not correct. Expected 426, got 474
FAIL: Hand count after playing council_room was not correct. Expected 329, got 331
FAIL: Hand count after playing council_room was not correct. Expected 331, got 227
FAIL: Hand count after playing council_room was not correct. Expected 331, got 189
FAIL: Hand count after playing council_room was not correct. Expected 331, got 384
FAIL: Hand count after playing council_room was not correct. Expected 292, got 294
FAIL: Hand count after playing council_room was not correct. Expected 294, got 190
FAIL: Hand count after playing council_room was not correct. Expected 294, got 73
FAIL: Hand count after playing council_room was not correct. Expected 294, got 427
FAIL: Hand count after playing council_room was not correct. Expected 25, got 27
FAIL: Hand count after playing council_room was not correct. Expected 27, got 197
FAIL: Hand count after playing council_room was not correct. Expected 27, got 22
FAIL: Hand count after playing council_room was not correct. Expected 27, got 124
FAIL: Hand count after playing council_room was not correct. Expected 138, got 140
FAIL: Hand count after playing council_room was not correct. Expected 140, got 428
FAIL: Hand count after playing council_room was not correct. Expected 140, got 465
FAIL: Hand count after playing council_room was not correct. Expected 140, got 391
FAIL: Hand count after playing council_room was not correct. Expected 341, got 343
FAIL: Hand count after playing council_room was not correct. Expected 343, got 313
FAIL: Hand count after playing council_room was not correct. Expected 343, got 422
FAIL: Hand count after playing council_room was not correct. Expected 343, got 130
FAIL: Hand count after playing council_room was not correct. Expected 363, got 365
FAIL: Hand count after playing council_room was not correct. Expected 365, got 118
FAIL: Hand count after playing council_room was not correct. Expected 365, got 468
FAIL: Hand count after playing council_room was not correct. Expected 365, got 313
FAIL: Hand count after playing council_room was not correct. Expected 287, got 289
FAIL: Hand count after playing council_room was not correct. Expected 289, got 240
FAIL: Hand count after playing council_room was not correct. Expected 289, got 21
FAIL: Hand count after playing council_room was not correct. Expected 289, got 358
FAIL: Hand count after playing council_room was not correct. Expected 226, got 228
FAIL: Hand count after playing council_room was not correct. Expected 228, got 392
FAIL: Hand count after playing council_room was not correct. Expected 228, got 258
FAIL: Hand count after playing council_room was not correct. Expected 228, got 488
FAIL: Hand count after playing council_room was not correct. Expected 35, got 37
FAIL: Hand count after playing council_room was not correct. Expected 37, got 336
FAIL: Hand count after playing council_room was not correct. Expected 37, got 178
FAIL: Hand count after playing council_room was not correct. Expected 37, got 262
FAIL: Hand count after playing council_room was not correct. Expected 141, got 143
FAIL: Hand count after playing council_room was not correct. Expected 143, got 179
FAIL: Hand count after playing council_room was not correct. Expected 143, got 81
FAIL: Hand count after playing council_room was not correct. Expected 143, got 159
FAIL: Hand count after playing council_room was not correct. Expected 297, got 299
FAIL: Hand count after playing council_room was not correct. Expected 299, got 215
FAIL: Hand count after playing council_room was not correct. Expected 299, got 158
FAIL: Hand count after playing council_room was not correct. Expected 299, got 289
FAIL: Hand count after playing council_room was not correct. Expected 218, got 220
FAIL: Hand count after playing council_room was not correct. Expected 220, got 175
FAIL: Hand count after playing council_room was not correct. Expected 220, got 446
FAIL: Hand count after playing council_room was not correct. Expected 220, got 482
FAIL: Hand count after playing council_room was not correct. Expected 186, got 188
FAIL: Hand count after playing council_room was not correct. Expected 188, got 25
FAIL: Hand count after playing council_room was not correct. Expected 188, got 168
FAIL: Hand count after playing council_room was not correct. Expected 188, got 407
FAIL: Hand count after playing council_room was not correct. Expected 365, got 367
FAIL: Hand count after playing council_room was not correct. Expected 367, got 53
FAIL: Hand count after playing council_room was not correct. Expected 367, got 171
FAIL: Hand count after playing council_room was not correct. Expected 367, got 124
FAIL: Hand count after playing council_room was not correct. Expected 107, got 109
FAIL: Hand count after playing council_room was not correct. Expected 109, got 356
FAIL: Hand count after playing council_room was not correct. Expected 109, got 291
FAIL: Hand count after playing council_room was not correct. Expected 109, got 126
FAIL: Hand count after playing council_room was not correct. Expected 301, got 303
FAIL: Hand count after playing council_room was not correct. Expected 303, got 14
FAIL: Hand count after playing council_room was not correct. Expected 303, got 458
FAIL: Hand count after playing council_room was not correct. Expected 303, got 296
FAIL: Hand count after playing council_room was not correct. Expected 326, got 328
FAIL: Hand count after playing council_room was not correct. Expected 328, got 28
FAIL: Hand count after playing council_room was not correct. Expected 328, got 32
FAIL: Hand count after playing council_room was not correct. Expected 328, got 406
FAIL: Hand count after playing council_room was not correct. Expected 26, got 28
FAIL: Hand count after playing council_room was not correct. Expected 28, got 247
FAIL: Hand count after playing council_room was not correct. Expected 28, got 113
FAIL: Hand count after playing council_room was not correct. Expected 28, got 359
FAIL: Hand count after playing council_room was not correct. Expected 468, got 470
FAIL: Hand count after playing council_room was not correct. Expected 470, got 230
FAIL: Hand count after playing council_room was not correct. Expected 470, got 366
FAIL: Hand count after playing council_room was not correct. Expected 470, got 144
FAIL: Hand count after playing council_room was not correct. Expected 201, got 203
FAIL: Hand count after playing council_room was not correct. Expected 203, got 417
FAIL: Hand count after playing council_room was not correct. Expected 203, got 127
FAIL: Hand count after playing council_room was not correct. Expected 203, got 111
FAIL: Hand count after playing council_room was not correct. Expected 355, got 357
FAIL: Hand count after playing council_room was not correct. Expected 357, got 308
FAIL: Hand count after playing council_room was not correct. Expected 357, got 439
FAIL: Hand count after playing council_room was not correct. Expected 357, got 214
FAIL: Hand count after playing council_room was not correct. Expected 125, got 127
FAIL: Hand count after playing council_room was not correct. Expected 127, got 478
FAIL: Hand count after playing council_room was not correct. Expected 127, got 70
FAIL: Hand count after playing council_room was not correct. Expected 127, got 22
FAIL: Hand count after playing council_room was not correct. Expected 363, got 365
FAIL: Hand count after playing council_room was not correct. Expected 365, got 415
FAIL: Hand count after playing council_room was not correct. Expected 365, got 260
FAIL: Hand count after playing council_room was not correct. Expected 365, got 110
FAIL: Hand count after playing council_room was not correct. Expected 58, got 60
FAIL: Hand count after playing council_room was not correct. Expected 60, got 64
FAIL: Hand count after playing council_room was not correct. Expected 60, got 178
FAIL: Hand count after playing council_room was not correct. Expected 60, got 458
FAIL: Hand count after playing council_room was not correct. Expected 184, got 186
FAIL: Hand count after playing council_room was not correct. Expected 186, got 1
FAIL: Hand count after playing council_room was not correct. Expected 186, got 454
FAIL: Hand count after playing council_room was not correct. Expected 186, got 328
FAIL: Hand count after playing council_room was not correct. Expected 118, got 120
FAIL: Hand count after playing council_room was not correct. Expected 120, got 402
FAIL: Hand count after playing council_room was not correct. Expected 120, got 331
FAIL: Hand count after playing council_room was not correct. Expected 120, got 248
FAIL: Hand count after playing council_room was not correct. Expected 234, got 236
FAIL: Hand count after playing council_room was not correct. Expected 236, got 99
FAIL: Hand count after playing council_room was not correct. Expected 236, got 6
FAIL: Hand count after playing council_room was not correct. Expected 236, got 292
FAIL: Hand count after playing council_room was not correct. Expected 23, got 25
FAIL: Hand count after playing council_room was not correct. Expected 25, got 341
FAIL: Hand count after playing council_room was not correct. Expected 25, got 2
FAIL: Hand count after playing council_room was not correct. Expected 25, got 226
FAIL: Hand count after playing council_room was not correct. Expected 282, got 284
FAIL: Hand count after playing council_room was not correct. Expected 284, got 479
FAIL: Hand count after playing council_room was not correct. Expected 284, got 461
FAIL: Hand count after playing council_room was not correct. Expected 284, got 17
FAIL: Hand count after playing council_room was not correct. Expected 435, got 437
FAIL: Hand count after playing council_room was not correct. Expected 437, got 265
FAIL: Hand count after playing council_room was not correct. Expected 437, got 146
FAIL: Hand count after playing council_room was not correct. Expected 437, got 417
FAIL: Hand count after playing council_room was not correct. Expected 204, got 206
FAIL: Hand count after playing council_room was not correct. Expected 206, got 300
FAIL: Hand count after playing council_room was not correct. Expected 206, got 329
FAIL: Hand count after playing council_room was not correct. Expected 206, got 176
FAIL: Hand count after playing council_room was not correct. Expected 386, got 388
FAIL: Hand count after playing council_room was not correct. Expected 388, got 118
FAIL: Hand count after playing council_room was not correct. Expected 388, got 426
FAIL: Hand count after playing council_room was not correct. Expected 388, got 28
FAIL: Hand count after playing council_room was not correct. Expected 200, got 202
FAIL: Hand count after playing council_room was not correct. Expected 202, got 272
FAIL: Hand count after playing council_room was not correct. Expected 202, got 348
FAIL: Hand count after playing council_room was not correct. Expected 202, got 165
FAIL: Hand count after playing council_room was not correct. Expected 51, got 53
FAIL: Hand count after playing council_room was not correct. Expected 53, got 305
FAIL: Hand count after playing council_room was not correct. Expected 53, got 237
FAIL: Hand count after playing council_room was not correct. Expected 53, got 495
FAIL: Hand count after playing council_room was not correct. Expected 131, got 133
FAIL: Hand count after playing council_room was not correct. Expected 133, got 356
FAIL: Hand count after playing council_room was not correct. Expected 133, got 286
FAIL: Hand count after playing council_room was not correct. Expected 133, got 254
FAIL: Hand count after playing council_room was not correct. Expected 268, got 270
FAIL: Hand count after playing council_room was not correct. Expected 270, got 1
FAIL: Hand count after playing council_room was not correct. Expected 270, got 444
FAIL: Hand count after playing council_room was not correct. Expected 270, got 486
FAIL: Hand count after playing council_room was not correct. Expected 179, got 181
FAIL: Hand count after playing council_room was not correct. Expected 181, got 43
FAIL: Hand count after playing council_room was not correct. Expected 181, got 108
FAIL: Hand count after playing council_room was not correct. Expected 181, got 30
FAIL: Hand count after playing council_room was not correct. Expected 38, got 40
FAIL: Hand count after playing council_room was not correct. Expected 40, got 197
FAIL: Hand count after playing council_room was not correct. Expected 40, got 221
FAIL: Hand count after playing council_room was not correct. Expected 40, got 214
FAIL: Hand count after playing council_room was not correct. Expected 492, got 494
FAIL: Hand count after playing council_room was not correct. Expected 494, got 240
FAIL: Hand count after playing council_room was not correct. Expected 494, got 278
FAIL: Hand count after playing council_room was not correct. Expected 494, got 177
FAIL: Hand count after playing council_room was not correct. Expected 139, got 141
FAIL: Hand count after playing council_room was not correct. Expected 141, got 136
FAIL: Hand count after playing council_room was not correct. Expected 141, got 410
FAIL: Hand count after playing council_room was not correct. Expected 141, got 485
FAIL: Hand count after playing council_room was not correct. Expected 109, got 111
FAIL: Hand count after playing council_room was not correct. Expected 111, got 469
FAIL: Hand count after playing council_room was not correct. Expected 111, got 407
FAIL: Hand count after playing council_room was not correct. Expected 111, got 340
FAIL: Hand count after playing council_room was not correct. Expected 112, got 114
FAIL: Hand count after playing council_room was not correct. Expected 114, got 192
FAIL: Hand count after playing council_room was not correct. Expected 114, got 84
FAIL: Hand count after playing council_room was not correct. Expected 114, got 89
FAIL: Hand count after playing council_room was not correct. Expected 135, got 137
FAIL: Hand count after playing council_room was not correct. Expected 137, got 318
FAIL: Hand count after playing council_room was not correct. Expected 137, got 231
FAIL: Hand count after playing council_room was not correct. Expected 137, got 89
FAIL: Hand count after playing council_room was not correct. Expected 75, got 77
FAIL: Hand count after playing council_room was not correct. Expected 77, got 457
FAIL: Hand count after playing council_room was not correct. Expected 77, got 123
FAIL: Hand count after playing council_room was not correct. Expected 77, got 281
FAIL: Hand count after playing council_room was not correct. Expected 119, got 121
FAIL: Hand count after playing council_room was not correct. Expected 121, got 330
FAIL: Hand count after playing council_room was not correct. Expected 121, got 339
FAIL: Hand count after playing council_room was not correct. Expected 121, got 498
FAIL: Hand count after playing council_room was not correct. Expected 364, got 366
FAIL: Hand count after playing council_room was not correct. Expected 366, got 16
FAIL: Hand count after playing council_room was not correct. Expected 366, got 127
FAIL: Hand count after playing council_room was not correct. Expected 366, got 479
FAIL: Hand count after playing council_room was not correct. Expected 115, got 117
FAIL: Hand count after playing council_room was not correct. Expected 117, got 43
FAIL: Hand count after playing council_room was not correct. Expected 117, got 289
FAIL: Hand count after playing council_room was not correct. Expected 117, got 59
FAIL: Hand count after playing council_room was not correct. Expected 221, got 223
FAIL: Hand count after playing council_room was not correct. Expected 223, got 283
FAIL: Hand count after playing council_room was not correct. Expected 223, got 106
FAIL: Hand count after playing council_room was not correct. Expected 223, got 493
FAIL: Hand count after playing council_room was not correct. Expected 488, got 490
FAIL: Hand count after playing council_room was not correct. Expected 490, got 319
FAIL: Hand count after playing council_room was not correct. Expected 490, got 215
FAIL: Hand count after playing council_room was not correct. Expected 490, got 20
FAIL: Hand count after playing council_room was not correct. Expected 42, got 44
FAIL: Hand count after playing council_room was not correct. Expected 44, got 238
FAIL: Hand count after playing council_room was not correct. Expected 44, got 113
FAIL: Hand count after playing council_room was not correct. Expected 44, got 16
FAIL: Hand count after playing council_room was not correct. Expected 122, got 124
FAIL: Hand count after playing council_room was not correct. Expected 124, got 385
FAIL: Hand count after playing council_room was not correct. Expected 124, got 421
FAIL: Hand count after playing council_room was not correct. Expected 124, got 458
FAIL: Hand count after playing council_room was not correct. Expected 316, got 318
FAIL: Hand count after playing council_room was not correct. Expected 318, got 473
FAIL: Hand count after playing council_room was not correct. Expected 318, got 200
FAIL: Hand count after playing council_room was not correct. Expected 318, got 376
FAIL: Hand count after playing council_room was not correct. Expected 481, got 483
FAIL: Hand count after playing council_room was not correct. Expected 483, got 84
FAIL: Hand count after playing council_room was not correct. Expected 483, got 194
FAIL: Hand count after playing council_room was not correct. Expected 483, got 11
FAIL: Hand count after playing council_room was not correct. Expected 238, got 240
FAIL: Hand count after playing council_room was not correct. Expected 240, got 429
FAIL: Hand count after playing council_room was not correct. Expected 240, got 326
FAIL: Hand count after playing council_room was not correct. Expected 240, got 7
FAIL: Hand count after playing council_room was not correct. Expected 473, got 475
FAIL: Hand count after playing council_room was not correct. Expected 475, got 299
FAIL: Hand count after playing council_room was not correct. Expected 475, got 104
FAIL: Hand count after playing council_room was not correct. Expected 475, got 1
FAIL: Hand count after playing council_room was not correct. Expected 39, got 41
FAIL: Hand count after playing council_room was not correct. Expected 41, got 108
FAIL: Hand count after playing council_room was not correct. Expected 41, got 485
FAIL: Hand count after playing council_room was not correct. Expected 41, got 330
FAIL: Hand count after playing council_room was not correct. Expected 433, got 435
FAIL: Hand count after playing council_room was not correct. Expected 435, got 267
FAIL: Hand count after playing council_room was not correct. Expected 435, got 233
FAIL: Hand count after playing council_room was not correct. Expected 435, got 413
FAIL: Hand count after playing council_room was not correct. Expected 172, got 174
FAIL: Hand count after playing council_room was not correct. Expected 174, got 101
FAIL: Hand count after playing council_room was not correct. Expected 174, got 369
FAIL: Hand count after playing council_room was not correct. Expected 174, got 222
FAIL: Hand count after playing council_room was not correct. Expected 290, got 292
FAIL: Hand count after playing council_room was not correct. Expected 292, got 234
FAIL: Hand count after playing council_room was not correct. Expected 292, got 487
FAIL: Hand count after playing council_room was not correct. Expected 292, got 363
FAIL: Hand count after playing council_room was not correct. Expected 87, got 89
FAIL: Hand count after playing council_room was not correct. Expected 89, got 131
FAIL: Hand count after playing council_room was not correct. Expected 89, got 296
FAIL: Hand count after playing council_room was not correct. Expected 89, got 182
FAIL: Hand count after playing council_room was not correct. Expected 198, got 200
FAIL: Hand count after playing council_room was not correct. Expected 200, got 208
FAIL: Hand count after playing council_room was not correct. Expected 200, got 262
FAIL: Hand count after playing council_room was not correct. Expected 200, got 271
FAIL: Hand count after playing council_room was not correct. Expected 378, got 380
FAIL: Hand count after playing council_room was not correct. Expected 380, got 50
FAIL: Hand count after playing council_room was not correct. Expected 380, got 136
FAIL: Hand count after playing council_room was not correct. Expected 380, got 419
FAIL: Hand count after playing council_room was not correct. Expected 263, got 265
FAIL: Hand count after playing council_room was not correct. Expected 265, got 320
FAIL: Hand count after playing council_room was not correct. Expected 265, got 180
FAIL: Hand count after playing council_room was not correct. Expected 265, got 50
FAIL: Hand count after playing council_room was not correct. Expected 141, got 143
FAIL: Hand count after playing council_room was not correct. Expected 143, got 39
FAIL: Hand count after playing council_room was not correct. Expected 143, got 375
FAIL: Hand count after playing council_room was not correct. Expected 143, got 399
FAIL: Hand count after playing council_room was not correct. Expected 491, got 493
FAIL: Hand count after playing council_room was not correct. Expected 493, got 326
FAIL: Hand count after playing council_room was not correct. Expected 493, got 226
FAIL: Hand count after playing council_room was not correct. Expected 493, got 356
FAIL: Hand count after playing council_room was not correct. Expected 428, got 430
FAIL: Hand count after playing council_room was not correct. Expected 430, got 366
FAIL: Hand count after playing council_room was not correct. Expected 430, got 335
FAIL: Hand count after playing council_room was not correct. Expected 430, got 149
FAIL: Hand count after playing council_room was not correct. Expected 471, got 473
FAIL: Hand count after playing council_room was not correct. Expected 473, got 344
FAIL: Hand count after playing council_room was not correct. Expected 473, got 279
FAIL: Hand count after playing council_room was not correct. Expected 473, got 358
FAIL: Hand count after playing council_room was not correct. Expected 182, got 184
FAIL: Hand count after playing council_room was not correct. Expected 184, got 247
FAIL: Hand count after playing council_room was not correct. Expected 184, got 3
FAIL: Hand count after playing council_room was not correct. Expected 184, got 230
FAIL: Hand count after playing council_room was not correct. Expected 203, got 205
FAIL: Hand count after playing council_room was not correct. Expected 205, got 484
FAIL: Hand count after playing council_room was not correct. Expected 205, got 137
FAIL: Hand count after playing council_room was not correct. Expected 205, got 372
FAIL: Hand count after playing council_room was not correct. Expected 499, got 501
FAIL: Hand count after playing council_room was not correct. Expected 501, got 260
FAIL: Hand count after playing council_room was not correct. Expected 501, got 80
FAIL: Hand count after playing council_room was not correct. Expected 501, got 108
FAIL: Hand count after playing council_room was not correct. Expected 126, got 128
FAIL: Hand count after playing council_room was not correct. Expected 128, got 286
FAIL: Hand count after playing council_room was not correct. Expected 128, got 363
FAIL: Hand count after playing council_room was not correct. Expected 128, got 20
FAIL: Hand count after playing council_room was not correct. Expected 473, got 475
FAIL: Hand count after playing council_room was not correct. Expected 475, got 101
FAIL: Hand count after playing council_room was not correct. Expected 475, got 254
FAIL: Hand count after playing council_room was not correct. Expected 475, got 18
FAIL: Hand count after playing council_room was not correct. Expected 494, got 496
FAIL: Hand count after playing council_room was not correct. Expected 496, got 496
FAIL: Hand count after playing council_room was not correct. Expected 496, got 238
FAIL: Hand count after playing council_room was not correct. Expected 496, got 424
FAIL: Hand count after playing council_room was not correct. Expected 311, got 313
FAIL: Hand count after playing council_room was not correct. Expected 313, got 227
FAIL: Hand count after playing council_room was not correct. Expected 313, got 49
FAIL: Hand count after playing council_room was not correct. Expected 313, got 308
FAIL: Hand count after playing council_room was not correct. Expected 381, got 383
FAIL: Hand count after playing council_room was not correct. Expected 383, got 437
FAIL: Hand count after playing council_room was not correct. Expected 383, got 287
FAIL: Hand count after playing council_room was not correct. Expected 383, got 188
FAIL: Hand count after playing council_room was not correct. Expected 478, got 480
FAIL: Hand count after playing council_room was not correct. Expected 480, got 225
FAIL: Hand count after playing council_room was not correct. Expected 480, got 414
FAIL: Hand count after playing council_room was not correct. Expected 480, got 405
FAIL: Hand count after playing council_room was not correct. Expected 424, got 426
FAIL: Hand count after playing council_room was not correct. Expected 426, got 76
FAIL: Hand count after playing council_room was not correct. Expected 426, got 22
FAIL: Hand count after playing council_room was not correct. Expected 426, got 376
FAIL: Hand count after playing council_room was not correct. Expected 349, got 351
FAIL: Hand count after playing council_room was not correct. Expected 351, got 206
FAIL: Hand count after playing council_room was not correct. Expected 351, got 91
FAIL: Hand count after playing council_room was not correct. Expected 351, got 453
FAIL: Hand count after playing council_room was not correct. Expected 54, got 56
FAIL: Hand count after playing council_room was not correct. Expected 56, got 474
FAIL: Hand count after playing council_room was not correct. Expected 56, got 263
FAIL: Hand count after playing council_room was not correct. Expected 56, got 333
FAIL: Hand count after playing council_room was not correct. Expected 335, got 337
FAIL: Hand count after playing council_room was not correct. Expected 337, got 112
FAIL: Hand count after playing council_room was not correct. Expected 337, got 327
FAIL: Hand count after playing council_room was not correct. Expected 337, got 449
FAIL: Hand count after playing council_room was not correct. Expected 182, got 184
FAIL: Hand count after playing council_room was not correct. Expected 184, got 174
FAIL: Hand count after playing council_room was not correct. Expected 184, got 136
FAIL: Hand count after playing council_room was not correct. Expected 184, got 351
FAIL: Hand count after playing council_room was not correct. Expected 92, got 94
FAIL: Hand count after playing council_room was not correct. Expected 94, got 140
FAIL: Hand count after playing council_room was not correct. Expected 94, got 330
FAIL: Hand count after playing council_room was not correct. Expected 94, got 425
FAIL: Hand count after playing council_room was not correct. Expected 249, got 251
FAIL: Hand count after playing council_room was not correct. Expected 251, got 462
FAIL: Hand count after playing council_room was not correct. Expected 251, got 371
FAIL: Hand count after playing council_room was not correct. Expected 251, got 67
FAIL: Hand count after playing council_room was not correct. Expected 467, got 469
FAIL: Hand count after playing council_room was not correct. Expected 469, got 384
FAIL: Hand count after playing council_room was not correct. Expected 469, got 277
FAIL: Hand count after playing council_room was not correct. Expected 469, got 84
FAIL: Hand count after playing council_room was not correct. Expected 277, got 279
FAIL: Hand count after playing council_room was not correct. Expected 279, got 356
FAIL: Hand count after playing council_room was not correct. Expected 279, got 454
FAIL: Hand count after playing council_room was not correct. Expected 279, got 201
FAIL: Hand count after playing council_room was not correct. Expected 453, got 455
FAIL: Hand count after playing council_room was not correct. Expected 455, got 34
FAIL: Hand count after playing council_room was not correct. Expected 455, got 99
FAIL: Hand count after playing council_room was not correct. Expected 455, got 88
FAIL: Hand count after playing council_room was not correct. Expected 108, got 110
FAIL: Hand count after playing council_room was not correct. Expected 110, got 390
FAIL: Hand count after playing council_room was not correct. Expected 110, got 99
FAIL: Hand count after playing council_room was not correct. Expected 110, got 399
FAIL: Hand count after playing council_room was not correct. Expected 398, got 400
FAIL: Hand count after playing council_room was not correct. Expected 400, got 395
FAIL: Hand count after playing council_room was not correct. Expected 400, got 268
FAIL: Hand count after playing council_room was not correct. Expected 400, got 181
FAIL: Hand count after playing council_room was not correct. Expected 177, got 179
FAIL: Hand count after playing council_room was not correct. Expected 179, got 77
FAIL: Hand count after playing council_room was not correct. Expected 179, got 178
FAIL: Hand count after playing council_room was not correct. Expected 179, got 241
FAIL: Hand count after playing council_room was not correct. Expected 137, got 139
FAIL: Hand count after playing council_room was not correct. Expected 139, got 49
FAIL: Hand count after playing council_room was not correct. Expected 139, got 7
FAIL: Hand count after playing council_room was not correct. Expected 139, got 49
FAIL: Hand count after playing council_room was not correct. Expected 122, got 124
FAIL: Hand count after playing council_room was not correct. Expected 124, got 222
FAIL: Hand count after playing council_room was not correct. Expected 124, got 466
FAIL: Hand count after playing council_room was not correct. Expected 124, got 386
FAIL: Hand count after playing council_room was not correct. Expected 248, got 250
FAIL: Hand count after playing council_room was not correct. Expected 250, got 392
FAIL: Hand count after playing council_room was not correct. Expected 250, got 347
FAIL: Hand count after playing council_room was not correct. Expected 250, got 137
FAIL: Hand count after playing council_room was not correct. Expected 257, got 259
FAIL: Hand count after playing council_room was not correct. Expected 259, got 297
FAIL: Hand count after playing council_room was not correct. Expected 259, got 165
FAIL: Hand count after playing council_room was not correct. Expected 259, got 311
FAIL: Hand count after playing council_room was not correct. Expected 251, got 253
FAIL: Hand count after playing council_room was not correct. Expected 253, got 111
FAIL: Hand count after playing council_room was not correct. Expected 253, got 404
FAIL: Hand count after playing council_room was not correct. Expected 253, got 249
FAIL: Hand count after playing council_room was not correct. Expected 492, got 494
FAIL: Hand count after playing council_room was not correct. Expected 494, got 302
FAIL: Hand count after playing council_room was not correct. Expected 494, got 334
FAIL: Hand count after playing council_room was not correct. Expected 494, got 195
FAIL: Hand count after playing council_room was not correct. Expected 412, got 414
FAIL: Hand count after playing council_room was not correct. Expected 414, got 21
FAIL: Hand count after playing council_room was not correct. Expected 414, got 40
FAIL: Hand count after playing council_room was not correct. Expected 414, got 265
FAIL: Hand count after playing council_room was not correct. Expected 85, got 87
FAIL: Hand count after playing council_room was not correct. Expected 87, got 446
FAIL: Hand count after playing council_room was not correct. Expected 87, got 70
FAIL: Hand count after playing council_room was not correct. Expected 87, got 491
FAIL: Hand count after playing council_room was not correct. Expected 294, got 296
FAIL: Hand count after playing council_room was not correct. Expected 296, got 2
FAIL: Hand count after playing council_room was not correct. Expected 296, got 81
FAIL: Hand count after playing council_room was not correct. Expected 296, got 493
FAIL: Hand count after playing council_room was not correct. Expected 491, got 493
FAIL: Hand count after playing council_room was not correct. Expected 493, got 438
FAIL: Hand count after playing council_room was not correct. Expected 493, got 231
FAIL: Hand count after playing council_room was not correct. Expected 493, got 335
FAIL: Hand count after playing council_room was not correct. Expected 312, got 314
FAIL: Hand count after playing council_room was not correct. Expected 314, got 94
FAIL: Hand count after playing council_room was not correct. Expected 314, got 297
FAIL: Hand count after playing council_room was not correct. Expected 314, got 229
FAIL: Hand count after playing council_room was not correct. Expected 464, got 466
FAIL: Hand count after playing council_room was not correct. Expected 466, got 395
FAIL: Hand count after playing council_room was not correct. Expected 466, got 101
FAIL: Hand count after playing council_room was not correct. Expected 466, got 196
FAIL: Hand count after playing council_room was not correct. Expected 174, got 176
FAIL: Hand count after playing council_room was not correct. Expected 176, got 317
FAIL: Hand count after playing council_room was not correct. Expected 176, got 500
FAIL: Hand count after playing council_room was not correct. Expected 176, got 310
FAIL: Hand count after playing council_room was not correct. Expected 135, got 137
FAIL: Hand count after playing council_room was not correct. Expected 137, got 277
FAIL: Hand count after playing council_room was not correct. Expected 137, got 359
FAIL: Hand count after playing council_room was not correct. Expected 137, got 82
FAIL: Hand count after playing council_room was not correct. Expected 241, got 243
FAIL: Hand count after playing council_room was not correct. Expected 243, got 445
FAIL: Hand count after playing council_room was not correct. Expected 243, got 194
FAIL: Hand count after playing council_room was not correct. Expected 243, got 427
FAIL: Hand count after playing council_room was not correct. Expected 400, got 402
FAIL: Hand count after playing council_room was not correct. Expected 402, got 37
FAIL: Hand count after playing council_room was not correct. Expected 402, got 153
FAIL: Hand count after playing council_room was not correct. Expected 402, got 13
FAIL: Hand count after playing council_room was not correct. Expected 401, got 403
FAIL: Hand count after playing council_room was not correct. Expected 403, got 340
FAIL: Hand count after playing council_room was not correct. Expected 403, got 120
FAIL: Hand count after playing council_room was not correct. Expected 403, got 75
FAIL: Hand count after playing council_room was not correct. Expected 385, got 387
FAIL: Hand count after playing council_room was not correct. Expected 387, got 17
FAIL: Hand count after playing council_room was not correct. Expected 387, got 391
FAIL: Hand count after playing council_room was not correct. Expected 387, got 471
FAIL: Hand count after playing council_room was not correct. Expected 197, got 199
FAIL: Hand count after playing council_room was not correct. Expected 199, got 367
FAIL: Hand count after playing council_room was not correct. Expected 199, got 306
FAIL: Hand count after playing council_room was not correct. Expected 199, got 128
FAIL: Hand count after playing council_room was not correct. Expected 66, got 68
FAIL: Hand count after playing council_room was not correct. Expected 68, got 3
FAIL: Hand count after playing council_room was not correct. Expected 68, got 390
FAIL: Hand count after playing council_room was not correct. Expected 68, got 138
FAIL: Hand count after playing council_room was not correct. Expected 372, got 374
FAIL: Hand count after playing council_room was not correct. Expected 374, got 499
FAIL: Hand count after playing council_room was not correct. Expected 374, got 147
FAIL: Hand count after playing council_room was not correct. Expected 374, got 158
FAIL: Hand count after playing council_room was not correct. Expected 399, got 401
FAIL: Hand count after playing council_room was not correct. Expected 401, got 46
FAIL: Hand count after playing council_room was not correct. Expected 401, got 399
FAIL: Hand count after playing council_room was not correct. Expected 401, got 41
FAIL: Hand count after playing council_room was not correct. Expected 240, got 242
FAIL: Hand count after playing council_room was not correct. Expected 242, got 235
FAIL: Hand count after playing council_room was not correct. Expected 242, got 396
FAIL: Hand count after playing council_room was not correct. Expected 242, got 76
FAIL: Hand count after playing council_room was not correct. Expected 334, got 336
FAIL: Hand count after playing council_room was not correct. Expected 336, got 460
FAIL: Hand count after playing council_room was not correct. Expected 336, got 210
FAIL: Hand count after playing council_room was not correct. Expected 336, got 101
FAIL: Hand count after playing council_room was not correct. Expected 162, got 164
FAIL: Hand count after playing council_room was not correct. Expected 164, got 232
FAIL: Hand count after playing council_room was not correct. Expected 164, got 430
FAIL: Hand count after playing council_room was not correct. Expected 164, got 129
FAIL: Hand count after playing council_room was not correct. Expected 107, got 109
FAIL: Hand count after playing council_room was not correct. Expected 109, got 26
FAIL: Hand count after playing council_room was not correct. Expected 109, got 190
FAIL: Hand count after playing council_room was not correct. Expected 109, got 458
FAIL: Hand count after playing council_room was not correct. Expected 474, got 476
FAIL: Hand count after playing council_room was not correct. Expected 476, got 493
FAIL: Hand count after playing council_room was not correct. Expected 476, got 33
FAIL: Hand count after playing council_room was not correct. Expected 476, got 395
FAIL: Hand count after playing council_room was not correct. Expected 499, got 501
FAIL: Hand count after playing council_room was not correct. Expected 501, got 435
FAIL: Hand count after playing council_room was not correct. Expected 501, got 386
FAIL: Hand count after playing council_room was not correct. Expected 501, got 37
FAIL: Hand count after playing council_room was not correct. Expected 492, got 494
FAIL: Hand count after playing council_room was not correct. Expected 494, got 444
FAIL: Hand count after playing council_room was not correct. Expected 494, got 209
FAIL: Hand count after playing council_room was not correct. Expected 494, got 359
FAIL: Hand count after playing council_room was not correct. Expected 207, got 209
FAIL: Hand count after playing council_room was not correct. Expected 209, got 375
FAIL: Hand count after playing council_room was not correct. Expected 209, got 80
FAIL: Hand count after playing council_room was not correct. Expected 209, got 363
FAIL: Hand count after playing council_room was not correct. Expected 294, got 296
FAIL: Hand count after playing council_room was not correct. Expected 296, got 439
FAIL: Hand count after playing council_room was not correct. Expected 296, got 477
FAIL: Hand count after playing council_room was not correct. Expected 296, got 64
FAIL: Hand count after playing council_room was not correct. Expected 470, got 472
FAIL: Hand count after playing council_room was not correct. Expected 472, got 127
FAIL: Hand count after playing council_room was not correct. Expected 472, got 381
FAIL: Hand count after playing council_room was not correct. Expected 472, got 22
FAIL: Hand count after playing council_room was not correct. Expected 43, got 45
FAIL: Hand count after playing council_room was not correct. Expected 45, got 274
FAIL: Hand count after playing council_room was not correct. Expected 45, got 249
FAIL: Hand count after playing council_room was not correct. Expected 45, got 308
FAIL: Hand count after playing council_room was not correct. Expected 247, got 249
FAIL: Hand count after playing council_room was not correct. Expected 249, got 103
FAIL: Hand count after playing council_room was not correct. Expected 249, got 17
FAIL: Hand count after playing council_room was not correct. Expected 249, got 243
FAIL: Hand count after playing council_room was not correct. Expected 49, got 51
FAIL: Hand count after playing council_room was not correct. Expected 51, got 174
FAIL: Hand count after playing council_room was not correct. Expected 51, got 318
FAIL: Hand count after playing council_room was not correct. Expected 51, got 30
FAIL: Hand count after playing council_room was not correct. Expected 283, got 285
FAIL: Hand count after playing council_room was not correct. Expected 285, got 359
FAIL: Hand count after playing council_room was not correct. Expected 285, got 414
FAIL: Hand count after playing council_room was not correct. Expected 285, got 438
FAIL: Hand count after playing council_room was not correct. Expected 453, got 455
FAIL: Hand count after playing council_room was not correct. Expected 455, got 172
FAIL: Hand count after playing council_room was not correct. Expected 455, got 77
FAIL: Hand count after playing council_room was not correct. Expected 455, got 305
FAIL: Hand count after playing council_room was not correct. Expected 323, got 325
FAIL: Hand count after playing council_room was not correct. Expected 325, got 223
FAIL: Hand count after playing council_room was not correct. Expected 325, got 282
FAIL: Hand count after playing council_room was not correct. Expected 325, got 203
FAIL: Hand count after playing council_room was not correct. Expected 167, got 169
FAIL: Hand count after playing council_room was not correct. Expected 169, got 265
FAIL: Hand count after playing council_room was not correct. Expected 169, got 472
FAIL: Hand count after playing council_room was not correct. Expected 169, got 341
FAIL: Hand count after playing council_room was not correct. Expected 8, got 10
FAIL: Hand count after playing council_room was not correct. Expected 10, got 95
FAIL: Hand count after playing council_room was not correct. Expected 10, got 264
FAIL: Hand count after playing council_room was not correct. Expected 10, got 143
FAIL: Hand count after playing council_room was not correct. Expected 35, got 37
FAIL: Hand count after playing council_room was not correct. Expected 37, got 112
FAIL: Hand count after playing council_room was not correct. Expected 37, got 321
FAIL: Hand count after playing council_room was not correct. Expected 37, got 120
FAIL: Hand count after playing council_room was not correct. Expected 403, got 405
FAIL: Hand count after playing council_room was not correct. Expected 405, got 475
FAIL: Hand count after playing council_room was not correct. Expected 405, got 233
FAIL: Hand count after playing council_room was not correct. Expected 405, got 286
FAIL: Hand count after playing council_room was not correct. Expected 383, got 385
FAIL: Hand count after playing council_room was not correct. Expected 385, got 359
FAIL: Hand count after playing council_room was not correct. Expected 385, got 468
FAIL: Hand count after playing council_room was not correct. Expected 385, got 494
FAIL: Hand count after playing council_room was not correct. Expected 253, got 255
FAIL: Hand count after playing council_room was not correct. Expected 255, got 492
FAIL: Hand count after playing council_room was not correct. Expected 255, got 418
FAIL: Hand count after playing council_room was not correct. Expected 255, got 262
FAIL: Hand count after playing council_room was not correct. Expected 173, got 175
FAIL: Hand count after playing council_room was not correct. Expected 175, got 19
FAIL: Hand count after playing council_room was not correct. Expected 175, got 309
FAIL: Hand count after playing council_room was not correct. Expected 175, got 127
FAIL: Hand count after playing council_room was not correct. Expected 379, got 381
FAIL: Hand count after playing council_room was not correct. Expected 381, got 364
FAIL: Hand count after playing council_room was not correct. Expected 381, got 8
FAIL: Hand count after playing council_room was not correct. Expected 381, got 281
FAIL: Hand count after playing council_room was not correct. Expected 99, got 101
FAIL: Hand count after playing council_room was not correct. Expected 101, got 386
FAIL: Hand count after playing council_room was not correct. Expected 101, got 384
FAIL: Hand count after playing council_room was not correct. Expected 101, got 450
FAIL: Hand count after playing council_room was not correct. Expected 315, got 317
FAIL: Hand count after playing council_room was not correct. Expected 317, got 434
FAIL: Hand count after playing council_room was not correct. Expected 317, got 221
FAIL: Hand count after playing council_room was not correct. Expected 317, got 195
FAIL: Hand count after playing council_room was not correct. Expected 37, got 39
FAIL: Hand count after playing council_room was not correct. Expected 39, got 418
FAIL: Hand count after playing council_room was not correct. Expected 39, got 40
FAIL: Hand count after playing council_room was not correct. Expected 39, got 193
FAIL: Hand count after playing council_room was not correct. Expected 358, got 360
FAIL: Hand count after playing council_room was not correct. Expected 360, got 164
FAIL: Hand count after playing council_room was not correct. Expected 360, got 289
FAIL: Hand count after playing council_room was not correct. Expected 360, got 133
FAIL: Hand count after playing council_room was not correct. Expected 335, got 337
FAIL: Hand count after playing council_room was not correct. Expected 337, got 118
FAIL: Hand count after playing council_room was not correct. Expected 337, got 201
FAIL: Hand count after playing council_room was not correct. Expected 337, got 450
FAIL: Hand count after playing council_room was not correct. Expected 225, got 227
FAIL: Hand count after playing council_room was not correct. Expected 227, got 445
FAIL: Hand count after playing council_room was not correct. Expected 227, got 210
FAIL: Hand count after playing council_room was not correct. Expected 227, got 103
FAIL: Hand count after playing council_room was not correct. Expected 210, got 212
FAIL: Hand count after playing council_room was not correct. Expected 212, got 245
FAIL: Hand count after playing council_room was not correct. Expected 212, got 299
FAIL: Hand count after playing council_room was not correct. Expected 212, got 318
FAIL: Hand count after playing council_room was not correct. Expected 120, got 122
FAIL: Hand count after playing council_room was not correct. Expected 122, got 496
FAIL: Hand count after playing council_room was not correct. Expected 122, got 370
FAIL: Hand count after playing council_room was not correct. Expected 122, got 23
FAIL: Hand count after playing council_room was not correct. Expected 498, got 500
FAIL: Hand count after playing council_room was not correct. Expected 500, got 110
FAIL: Hand count after playing council_room was not correct. Expected 500, got 461
FAIL: Hand count after playing council_room was not correct. Expected 500, got 293
FAIL: Hand count after playing council_room was not correct. Expected 211, got 213
FAIL: Hand count after playing council_room was not correct. Expected 213, got 54
FAIL: Hand count after playing council_room was not correct. Expected 213, got 26
FAIL: Hand count after playing council_room was not correct. Expected 213, got 36
FAIL: Hand count after playing council_room was not correct. Expected 285, got 287
FAIL: Hand count after playing council_room was not correct. Expected 287, got 308
FAIL: Hand count after playing council_room was not correct. Expected 287, got 356
FAIL: Hand count after playing council_room was not correct. Expected 287, got 86
FAIL: Hand count after playing council_room was not correct. Expected 77, got 79
FAIL: Hand count after playing council_room was not correct. Expected 79, got 143
FAIL: Hand count after playing council_room was not correct. Expected 79, got 385
FAIL: Hand count after playing council_room was not correct. Expected 79, got 282
FAIL: Hand count after playing council_room was not correct. Expected 60, got 62
FAIL: Hand count after playing council_room was not correct. Expected 62, got 437
FAIL: Hand count after playing council_room was not correct. Expected 62, got 432
FAIL: Hand count after playing council_room was not correct. Expected 62, got 136
FAIL: Hand count after playing council_room was not correct. Expected 81, got 83
FAIL: Hand count after playing council_room was not correct. Expected 83, got 87
FAIL: Hand count after playing council_room was not correct. Expected 83, got 206
FAIL: Hand count after playing council_room was not correct. Expected 83, got 211
FAIL: Hand count after playing council_room was not correct. Expected 99, got 101
FAIL: Hand count after playing council_room was not correct. Expected 101, got 369
FAIL: Hand count after playing council_room was not correct. Expected 101, got 118
FAIL: Hand count after playing council_room was not correct. Expected 101, got 425
FAIL: Hand count after playing council_room was not correct. Expected 296, got 298
FAIL: Hand count after playing council_room was not correct. Expected 298, got 408
FAIL: Hand count after playing council_room was not correct. Expected 298, got 186
FAIL: Hand count after playing council_room was not correct. Expected 298, got 116
FAIL: Hand count after playing council_room was not correct. Expected 312, got 314
FAIL: Hand count after playing council_room was not correct. Expected 314, got 117
FAIL: Hand count after playing council_room was not correct. Expected 314, got 160
FAIL: Hand count after playing council_room was not correct. Expected 314, got 441
FAIL: Hand count after playing council_room was not correct. Expected 480, got 482
FAIL: Hand count after playing council_room was not correct. Expected 482, got 179
FAIL: Hand count after playing council_room was not correct. Expected 482, got 264
FAIL: Hand count after playing council_room was not correct. Expected 482, got 229
FAIL: Hand count after playing council_room was not correct. Expected 88, got 90
FAIL: Hand count after playing council_room was not correct. Expected 90, got 440
FAIL: Hand count after playing council_room was not correct. Expected 90, got 303
FAIL: Hand count after playing council_room was not correct. Expected 90, got 373
FAIL: Hand count after playing council_room was not correct. Expected 296, got 298
FAIL: Hand count after playing council_room was not correct. Expected 298, got 157
FAIL: Hand count after playing council_room was not correct. Expected 298, got 392
FAIL: Hand count after playing council_room was not correct. Expected 298, got 236
FAIL: Hand count after playing council_room was not correct. Expected 428, got 430
FAIL: Hand count after playing council_room was not correct. Expected 430, got 353
FAIL: Hand count after playing council_room was not correct. Expected 430, got 339
FAIL: Hand count after playing council_room was not correct. Expected 430, got 39
FAIL: Hand count after playing council_room was not correct. Expected 42, got 44
FAIL: Hand count after playing council_room was not correct. Expected 44, got 371
FAIL: Hand count after playing council_room was not correct. Expected 44, got 92
FAIL: Hand count after playing council_room was not correct. Expected 44, got 181
FAIL: Hand count after playing council_room was not correct. Expected 454, got 456
FAIL: Hand count after playing council_room was not correct. Expected 456, got 73
FAIL: Hand count after playing council_room was not correct. Expected 456, got 130
FAIL: Hand count after playing council_room was not correct. Expected 456, got 361
FAIL: Hand count after playing council_room was not correct. Expected 48, got 50
FAIL: Hand count after playing council_room was not correct. Expected 50, got 35
FAIL: Hand count after playing council_room was not correct. Expected 50, got 477
FAIL: Hand count after playing council_room was not correct. Expected 50, got 224
FAIL: Hand count after playing council_room was not correct. Expected 256, got 258
FAIL: Hand count after playing council_room was not correct. Expected 258, got 19
FAIL: Hand count after playing council_room was not correct. Expected 258, got 7
FAIL: Hand count after playing council_room was not correct. Expected 258, got 352
FAIL: Hand count after playing council_room was not correct. Expected 332, got 334
FAIL: Hand count after playing council_room was not correct. Expected 334, got 227
FAIL: Hand count after playing council_room was not correct. Expected 334, got 466
FAIL: Hand count after playing council_room was not correct. Expected 334, got 394
FAIL: Hand count after playing council_room was not correct. Expected 369, got 371
FAIL: Hand count after playing council_room was not correct. Expected 371, got 305
FAIL: Hand count after playing council_room was not correct. Expected 371, got 52
FAIL: Hand count after playing council_room was not correct. Expected 371, got 317
FAIL: Hand count after playing council_room was not correct. Expected 347, got 349
FAIL: Hand count after playing council_room was not correct. Expected 349, got 402
FAIL: Hand count after playing council_room was not correct. Expected 349, got 496
FAIL: Hand count after playing council_room was not correct. Expected 349, got 39
FAIL: Hand count after playing council_room was not correct. Expected 225, got 227
FAIL: Hand count after playing council_room was not correct. Expected 227, got 126
FAIL: Hand count after playing council_room was not correct. Expected 227, got 231
FAIL: Hand count after playing council_room was not correct. Expected 227, got 56
FAIL: Hand count after playing council_room was not correct. Expected 411, got 413
FAIL: Hand count after playing council_room was not correct. Expected 413, got 462
FAIL: Hand count after playing council_room was not correct. Expected 413, got 481
FAIL: Hand count after playing council_room was not correct. Expected 413, got 356
FAIL: Hand count after playing council_room was not correct. Expected 119, got 121
FAIL: Hand count after playing council_room was not correct. Expected 121, got 271
FAIL: Hand count after playing council_room was not correct. Expected 121, got 101
FAIL: Hand count after playing council_room was not correct. Expected 121, got 250
FAIL: Hand count after playing council_room was not correct. Expected 112, got 114
FAIL: Hand count after playing council_room was not correct. Expected 114, got 252
FAIL: Hand count after playing council_room was not correct. Expected 114, got 318
FAIL: Hand count after playing council_room was not correct. Expected 114, got 247
FAIL: Hand count after playing council_room was not correct. Expected 156, got 158
FAIL: Hand count after playing council_room was not correct. Expected 158, got 347
FAIL: Hand count after playing council_room was not correct. Expected 158, got 67
FAIL: Hand count after playing council_room was not correct. Expected 158, got 436
FAIL: Hand count after playing council_room was not correct. Expected 403, got 405
FAIL: Hand count after playing council_room was not correct. Expected 405, got 127
FAIL: Hand count after playing council_room was not correct. Expected 405, got 12
FAIL: Hand count after playing council_room was not correct. Expected 405, got 266
FAIL: Hand count after playing council_room was not correct. Expected 35, got 37
FAIL: Hand count after playing council_room was not correct. Expected 37, got 210
FAIL: Hand count after playing council_room was not correct. Expected 37, got 341
FAIL: Hand count after playing council_room was not correct. Expected 37, got 145
FAIL: Hand count after playing council_room was not correct. Expected 119, got 121
FAIL: Hand count after playing council_room was not correct. Expected 121, got 316
FAIL: Hand count after playing council_room was not correct. Expected 121, got 389
FAIL: Hand count after playing council_room was not correct. Expected 121, got 109
FAIL: Hand count after playing council_room was not correct. Expected 111, got 113
FAIL: Hand count after playing council_room was not correct. Expected 113, got 413
FAIL: Hand count after playing council_room was not correct. Expected 113, got 308
FAIL: Hand count after playing council_room was not correct. Expected 113, got 382
FAIL: Hand count after playing council_room was not correct. Expected 45, got 47
FAIL: Hand count after playing council_room was not correct. Expected 47, got 9
FAIL: Hand count after playing council_room was not correct. Expected 47, got 248
FAIL: Hand count after playing council_room was not correct. Expected 47, got 226
FAIL: Hand count after playing council_room was not correct. Expected 114, got 116
FAIL: Hand count after playing council_room was not correct. Expected 116, got 415
FAIL: Hand count after playing council_room was not correct. Expected 116, got 96
FAIL: Hand count after playing council_room was not correct. Expected 116, got 460
FAIL: Hand count after playing council_room was not correct. Expected 324, got 326
FAIL: Hand count after playing council_room was not correct. Expected 326, got 429
FAIL: Hand count after playing council_room was not correct. Expected 326, got 298
FAIL: Hand count after playing council_room was not correct. Expected 326, got 291
FAIL: Hand count after playing council_room was not correct. Expected 154, got 156
FAIL: Hand count after playing council_room was not correct. Expected 156, got 33
FAIL: Hand count after playing council_room was not correct. Expected 156, got 340
FAIL: Hand count after playing council_room was not correct. Expected 156, got 2
FAIL: Hand count after playing council_room was not correct. Expected 402, got 404
FAIL: Hand count after playing council_room was not correct. Expected 404, got 95
FAIL: Hand count after playing council_room was not correct. Expected 404, got 162
FAIL: Hand count after playing council_room was not correct. Expected 404, got 366
FAIL: Hand count after playing council_room was not correct. Expected 395, got 397
FAIL: Hand count after playing council_room was not correct. Expected 397, got 32
FAIL: Hand count after playing council_room was not correct. Expected 397, got 66
FAIL: Hand count after playing council_room was not correct. Expected 397, got 266
FAIL: Hand count after playing council_room was not correct. Expected 465, got 467
FAIL: Hand count after playing council_room was not correct. Expected 467, got 234
FAIL: Hand count after playing council_room was not correct. Expected 467, got 338
FAIL: Hand count after playing council_room was not correct. Expected 467, got 4
FAIL: Hand count after playing council_room was not correct. Expected 308, got 310
FAIL: Hand count after playing council_room was not correct. Expected 310, got 478
FAIL: Hand count after playing council_room was not correct. Expected 310, got 276
FAIL: Hand count after playing council_room was not correct. Expected 310, got 101
FAIL: Hand count after playing council_room was not correct. Expected 25, got 27
FAIL: Hand count after playing council_room was not correct. Expected 27, got 251
FAIL: Hand count after playing council_room was not correct. Expected 27, got 463
FAIL: Hand count after playing council_room was not correct. Expected 27, got 316
FAIL: Hand count after playing council_room was not correct. Expected 450, got 452
FAIL: Hand count after playing council_room was not correct. Expected 452, got 146
FAIL: Hand count after playing council_room was not correct. Expected 452, got 443
FAIL: Hand count after playing council_room was not correct. Expected 452, got 193
FAIL: Hand count after playing council_room was not correct. Expected 171, got 173
FAIL: Hand count after playing council_room was not correct. Expected 173, got 437
FAIL: Hand count after playing council_room was not correct. Expected 173, got 406
FAIL: Hand count after playing council_room was not correct. Expected 173, got 149
FAIL: Hand count after playing council_room was not correct. Expected 129, got 131
FAIL: Hand count after playing council_room was not correct. Expected 131, got 86
FAIL: Hand count after playing council_room was not correct. Expected 131, got 484
FAIL: Hand count after playing council_room was not correct. Expected 131, got 414
FAIL: Hand count after playing council_room was not correct. Expected 93, got 95
FAIL: Hand count after playing council_room was not correct. Expected 95, got 274
FAIL: Hand count after playing council_room was not correct. Expected 95, got 163
FAIL: Hand count after playing council_room was not correct. Expected 95, got 29
FAIL: Hand count after playing council_room was not correct. Expected 19, got 21
FAIL: Hand count after playing council_room was not correct. Expected 21, got 102
FAIL: Hand count after playing council_room was not correct. Expected 21, got 211
FAIL: Hand count after playing council_room was not correct. Expected 21, got 91
FAIL: Hand count after playing council_room was not correct. Expected 403, got 405
FAIL: Hand count after playing council_room was not correct. Expected 405, got 360
FAIL: Hand count after playing council_room was not correct. Expected 405, got 488
FAIL: Hand count after playing council_room was not correct. Expected 405, got 308
FAIL: Hand count after playing council_room was not correct. Expected 127, got 129
FAIL: Hand count after playing council_room was not correct. Expected 129, got 412
FAIL: Hand count after playing council_room was not correct. Expected 129, got 481
FAIL: Hand count after playing council_room was not correct. Expected 129, got 299
FAIL: Hand count after playing council_room was not correct. Expected 432, got 434
FAIL: Hand count after playing council_room was not correct. Expected 434, got 175
FAIL: Hand count after playing council_room was not correct. Expected 434, got 488
FAIL: Hand count after playing council_room was not correct. Expected 434, got 163
FAIL: Hand count after playing council_room was not correct. Expected 446, got 448
FAIL: Hand count after playing council_room was not correct. Expected 448, got 472
FAIL: Hand count after playing council_room was not correct. Expected 448, got 347
FAIL: Hand count after playing council_room was not correct. Expected 448, got 423
FAIL: Hand count after playing council_room was not correct. Expected 372, got 374
FAIL: Hand count after playing council_room was not correct. Expected 374, got 492
FAIL: Hand count after playing council_room was not correct. Expected 374, got 467
FAIL: Hand count after playing council_room was not correct. Expected 374, got 97
FAIL: Hand count after playing council_room was not correct. Expected 309, got 311
FAIL: Hand count after playing council_room was not correct. Expected 311, got 346
FAIL: Hand count after playing council_room was not correct. Expected 311, got 210
FAIL: Hand count after playing council_room was not correct. Expected 311, got 498
FAIL: Hand count after playing council_room was not correct. Expected 68, got 70
FAIL: Hand count after playing council_room was not correct. Expected 70, got 168
FAIL: Hand count after playing council_room was not correct. Expected 70, got 278
FAIL: Hand count after playing council_room was not correct. Expected 70, got 331
FAIL: Hand count after playing council_room was not correct. Expected 51, got 53
FAIL: Hand count after playing council_room was not correct. Expected 53, got 467
FAIL: Hand count after playing council_room was not correct. Expected 53, got 118
FAIL: Hand count after playing council_room was not correct. Expected 53, got 297
FAIL: Hand count after playing council_room was not correct. Expected 248, got 250
FAIL: Hand count after playing council_room was not correct. Expected 250, got 404
FAIL: Hand count after playing council_room was not correct. Expected 250, got 113
FAIL: Hand count after playing council_room was not correct. Expected 250, got 232
FAIL: Hand count after playing council_room was not correct. Expected 471, got 473
FAIL: Hand count after playing council_room was not correct. Expected 473, got 205
FAIL: Hand count after playing council_room was not correct. Expected 473, got 89
FAIL: Hand count after playing council_room was not correct. Expected 473, got 323
FAIL: Hand count after playing council_room was not correct. Expected 22, got 24
FAIL: Hand count after playing council_room was not correct. Expected 24, got 130
FAIL: Hand count after playing council_room was not correct. Expected 24, got 453
FAIL: Hand count after playing council_room was not correct. Expected 24, got 188
FAIL: Hand count after playing council_room was not correct. Expected 449, got 451
FAIL: Hand count after playing council_room was not correct. Expected 451, got 251
FAIL: Hand count after playing council_room was not correct. Expected 451, got 181
FAIL: Hand count after playing council_room was not correct. Expected 451, got 254
FAIL: Hand count after playing council_room was not correct. Expected 493, got 495
FAIL: Hand count after playing council_room was not correct. Expected 495, got 236
FAIL: Hand count after playing council_room was not correct. Expected 495, got 307
FAIL: Hand count after playing council_room was not correct. Expected 495, got 328
FAIL: Hand count after playing council_room was not correct. Expected 262, got 264
FAIL: Hand count after playing council_room was not correct. Expected 264, got 212
FAIL: Hand count after playing council_room was not correct. Expected 264, got 204
FAIL: Hand count after playing council_room was not correct. Expected 264, got 436
FAIL: Hand count after playing council_room was not correct. Expected 292, got 294
FAIL: Hand count after playing council_room was not correct. Expected 294, got 162
FAIL: Hand count after playing council_room was not correct. Expected 294, got 390
FAIL: Hand count after playing council_room was not correct. Expected 294, got 143
FAIL: Hand count after playing council_room was not correct. Expected 180, got 182
FAIL: Hand count after playing council_room was not correct. Expected 182, got 428
FAIL: Hand count after playing council_room was not correct. Expected 182, got 235
FAIL: Hand count after playing council_room was not correct. Expected 182, got 420
FAIL: Hand count after playing council_room was not correct. Expected 35, got 37
FAIL: Hand count after playing council_room was not correct. Expected 37, got 33
FAIL: Hand count after playing council_room was not correct. Expected 37, got 93
FAIL: Hand count after playing council_room was not correct. Expected 37, got 98
FAIL: Hand count after playing council_room was not correct. Expected 285, got 287
FAIL: Hand count after playing council_room was not correct. Expected 287, got 194
FAIL: Hand count after playing council_room was not correct. Expected 287, got 327
FAIL: Hand count after playing council_room was not correct. Expected 287, got 354
FAIL: Hand count after playing council_room was not correct. Expected 215, got 217
FAIL: Hand count after playing council_room was not correct. Expected 217, got 4
FAIL: Hand count after playing council_room was not correct. Expected 217, got 179
FAIL: Hand count after playing council_room was not correct. Expected 217, got 284
FAIL: Hand count after playing council_room was not correct. Expected 15, got 17
FAIL: Hand count after playing council_room was not correct. Expected 17, got 370
FAIL: Hand count after playing council_room was not correct. Expected 17, got 316
FAIL: Hand count after playing council_room was not correct. Expected 17, got 179
FAIL: Hand count after playing council_room was not correct. Expected 262, got 264
FAIL: Hand count after playing council_room was not correct. Expected 264, got 350
FAIL: Hand count after playing council_room was not correct. Expected 264, got 358
FAIL: Hand count after playing council_room was not correct. Expected 264, got 200
FAIL: Hand count after playing council_room was not correct. Expected 275, got 277
FAIL: Hand count after playing council_room was not correct. Expected 277, got 481
FAIL: Hand count after playing council_room was not correct. Expected 277, got 277
FAIL: Hand count after playing council_room was not correct. Expected 277, got 248
FAIL: Hand count after playing council_room was not correct. Expected 387, got 389
FAIL: Hand count after playing council_room was not correct. Expected 389, got 186
FAIL: Hand count after playing council_room was not correct. Expected 389, got 354
FAIL: Hand count after playing council_room was not correct. Expected 389, got 172
FAIL: Hand count after playing council_room was not correct. Expected 471, got 473
FAIL: Hand count after playing council_room was not correct. Expected 473, got 110
FAIL: Hand count after playing council_room was not correct. Expected 473, got 325
FAIL: Hand count after playing council_room was not correct. Expected 473, got 14
FAIL: Hand count after playing council_room was not correct. Expected 306, got 308
FAIL: Hand count after playing council_room was not correct. Expected 308, got 483
FAIL: Hand count after playing council_room was not correct. Expected 308, got 433
FAIL: Hand count after playing council_room was not correct. Expected 308, got 157
FAIL: Hand count after playing council_room was not correct. Expected 55, got 57
FAIL: Hand count after playing council_room was not correct. Expected 57, got 68
FAIL: Hand count after playing council_room was not correct. Expected 57, got 87
FAIL: Hand count after playing council_room was not correct. Expected 57, got 212
FAIL: Hand count after playing council_room was not correct. Expected 272, got 274
FAIL: Hand count after playing council_room was not correct. Expected 274, got 80
FAIL: Hand count after playing council_room was not correct. Expected 274, got 409
FAIL: Hand count after playing council_room was not correct. Expected 274, got 401
FAIL: Hand count after playing council_room was not correct. Expected 93, got 95
FAIL: Hand count after playing council_room was not correct. Expected 95, got 205
FAIL: Hand count after playing council_room was not correct. Expected 95, got 96
FAIL: Hand count after playing council_room was not correct. Expected 95, got 325
FAIL: Hand count after playing council_room was not correct. Expected 436, got 438
FAIL: Hand count after playing council_room was not correct. Expected 438, got 74
FAIL: Hand count after playing council_room was not correct. Expected 438, got 474
FAIL: Hand count after playing council_room was not correct. Expected 438, got 396
FAIL: Hand count after playing council_room was not correct. Expected 492, got 494
FAIL: Hand count after playing council_room was not correct. Expected 494, got 375
FAIL: Hand count after playing council_room was not correct. Expected 494, got 49
FAIL: Hand count after playing council_room was not correct. Expected 494, got 16
FAIL: Hand count after playing council_room was not correct. Expected 184, got 186
FAIL: Hand count after playing council_room was not correct. Expected 186, got 458
FAIL: Hand count after playing council_room was not correct. Expected 186, got 171
FAIL: Hand count after playing council_room was not correct. Expected 186, got 161
FAIL: Hand count after playing council_room was not correct. Expected 16, got 18
FAIL: Hand count after playing council_room was not correct. Expected 18, got 333
FAIL: Hand count after playing council_room was not correct. Expected 18, got 343
FAIL: Hand count after playing council_room was not correct. Expected 18, got 499
FAIL: Hand count after playing council_room was not correct. Expected 347, got 349
FAIL: Hand count after playing council_room was not correct. Expected 349, got 315
FAIL: Hand count after playing council_room was not correct. Expected 349, got 222
FAIL: Hand count after playing council_room was not correct. Expected 349, got 457
FAIL: Hand count after playing council_room was not correct. Expected 95, got 97
FAIL: Hand count after playing council_room was not correct. Expected 97, got 487
FAIL: Hand count after playing council_room was not correct. Expected 97, got 84
FAIL: Hand count after playing council_room was not correct. Expected 97, got 285
FAIL: Hand count after playing council_room was not correct. Expected 392, got 394
FAIL: Hand count after playing council_room was not correct. Expected 394, got 289
FAIL: Hand count after playing council_room was not correct. Expected 394, got 356
FAIL: Hand count after playing council_room was not correct. Expected 394, got 442
FAIL: Hand count after playing council_room was not correct. Expected 72, got 74
FAIL: Hand count after playing council_room was not correct. Expected 74, got 38
FAIL: Hand count after playing council_room was not correct. Expected 74, got 195
FAIL: Hand count after playing council_room was not correct. Expected 74, got 91
FAIL: Hand count after playing council_room was not correct. Expected 365, got 367
FAIL: Hand count after playing council_room was not correct. Expected 367, got 301
FAIL: Hand count after playing council_room was not correct. Expected 367, got 493
FAIL: Hand count after playing council_room was not correct. Expected 367, got 249
FAIL: Hand count after playing council_room was not correct. Expected 276, got 278
FAIL: Hand count after playing council_room was not correct. Expected 278, got 112
FAIL: Hand count after playing council_room was not correct. Expected 278, got 10
FAIL: Hand count after playing council_room was not correct. Expected 278, got 453
FAIL: Hand count after playing council_room was not correct. Expected 214, got 216
FAIL: Hand count after playing council_room was not correct. Expected 216, got 403
FAIL: Hand count after playing council_room was not correct. Expected 216, got 119
FAIL: Hand count after playing council_room was not correct. Expected 216, got 59
FAIL: Hand count after playing council_room was not correct. Expected 287, got 289
FAIL: Hand count after playing council_room was not correct. Expected 289, got 154
FAIL: Hand count after playing council_room was not correct. Expected 289, got 195
FAIL: Hand count after playing council_room was not correct. Expected 289, got 227
FAIL: Hand count after playing council_room was not correct. Expected 247, got 249
FAIL: Hand count after playing council_room was not correct. Expected 249, got 196
FAIL: Hand count after playing council_room was not correct. Expected 249, got 272
FAIL: Hand count after playing council_room was not correct. Expected 249, got 181
FAIL: Hand count after playing council_room was not correct. Expected 212, got 214
FAIL: Hand count after playing council_room was not correct. Expected 214, got 55
FAIL: Hand count after playing council_room was not correct. Expected 214, got 345
FAIL: Hand count after playing council_room was not correct. Expected 214, got 176
FAIL: Hand count after playing council_room was not correct. Expected 312, got 314
FAIL: Hand count after playing council_room was not correct. Expected 314, got 441
FAIL: Hand count after playing council_room was not correct. Expected 314, got 208
FAIL: Hand count after playing council_room was not correct. Expected 314, got 414
FAIL: Hand count after playing council_room was not correct. Expected 172, got 174
FAIL: Hand count after playing council_room was not correct. Expected 174, got 440
FAIL: Hand count after playing council_room was not correct. Expected 174, got 431
FAIL: Hand count after playing council_room was not correct. Expected 174, got 62
FAIL: Hand count after playing council_room was not correct. Expected 462, got 464
FAIL: Hand count after playing council_room was not correct. Expected 464, got 343
FAIL: Hand count after playing council_room was not correct. Expected 464, got 361
FAIL: Hand count after playing council_room was not correct. Expected 464, got 356
FAIL: Hand count after playing council_room was not correct. Expected 322, got 324
FAIL: Hand count after playing council_room was not correct. Expected 324, got 471
FAIL: Hand count after playing council_room was not correct. Expected 324, got 353
FAIL: Hand count after playing council_room was not correct. Expected 324, got 450
FAIL: Hand count after playing council_room was not correct. Expected 110, got 112
FAIL: Hand count after playing council_room was not correct. Expected 112, got 261
FAIL: Hand count after playing council_room was not correct. Expected 112, got 271
FAIL: Hand count after playing council_room was not correct. Expected 112, got 425
FAIL: Hand count after playing council_room was not correct. Expected 474, got 476
FAIL: Hand count after playing council_room was not correct. Expected 476, got 195
FAIL: Hand count after playing council_room was not correct. Expected 476, got 60
FAIL: Hand count after playing council_room was not correct. Expected 476, got 257
FAIL: Hand count after playing council_room was not correct. Expected 429, got 431
FAIL: Hand count after playing council_room was not correct. Expected 431, got 340
FAIL: Hand count after playing council_room was not correct. Expected 431, got 281
FAIL: Hand count after playing council_room was not correct. Expected 431, got 42
FAIL: Hand count after playing council_room was not correct. Expected 452, got 454
FAIL: Hand count after playing council_room was not correct. Expected 454, got 163
FAIL: Hand count after playing council_room was not correct. Expected 454, got 244
FAIL: Hand count after playing council_room was not correct. Expected 454, got 146
FAIL: Hand count after playing council_room was not correct. Expected 366, got 368
FAIL: Hand count after playing council_room was not correct. Expected 368, got 222
FAIL: Hand count after playing council_room was not correct. Expected 368, got 93
FAIL: Hand count after playing council_room was not correct. Expected 368, got 102
FAIL: Hand count after playing council_room was not correct. Expected 225, got 227
FAIL: Hand count after playing council_room was not correct. Expected 227, got 11
FAIL: Hand count after playing council_room was not correct. Expected 227, got 68
FAIL: Hand count after playing council_room was not correct. Expected 227, got 378
FAIL: Hand count after playing council_room was not correct. Expected 435, got 437
FAIL: Hand count after playing council_room was not correct. Expected 437, got 37
FAIL: Hand count after playing council_room was not correct. Expected 437, got 35
FAIL: Hand count after playing council_room was not correct. Expected 437, got 19
FAIL: Hand count after playing council_room was not correct. Expected 164, got 166
FAIL: Hand count after playing council_room was not correct. Expected 166, got 74
FAIL: Hand count after playing council_room was not correct. Expected 166, got 253
FAIL: Hand count after playing council_room was not correct. Expected 166, got 416
FAIL: Hand count after playing council_room was not correct. Expected 179, got 181
FAIL: Hand count after playing council_room was not correct. Expected 181, got 276
FAIL: Hand count after playing council_room was not correct. Expected 181, got 106
FAIL: Hand count after playing council_room was not correct. Expected 181, got 167
FAIL: Hand count after playing council_room was not correct. Expected 395, got 397
FAIL: Hand count after playing council_room was not correct. Expected 397, got 129
FAIL: Hand count after playing council_room was not correct. Expected 397, got 140
FAIL: Hand count after playing council_room was not correct. Expected 397, got 351
FAIL: Hand count after playing council_room was not correct. Expected 49, got 51
FAIL: Hand count after playing council_room was not correct. Expected 51, got 246
FAIL: Hand count after playing council_room was not correct. Expected 51, got 122
FAIL: Hand count after playing council_room was not correct. Expected 51, got 406
FAIL: Hand count after playing council_room was not correct. Expected 103, got 105
FAIL: Hand count after playing council_room was not correct. Expected 105, got 204
FAIL: Hand count after playing council_room was not correct. Expected 105, got 337
FAIL: Hand count after playing council_room was not correct. Expected 105, got 45
FAIL: Hand count after playing council_room was not correct. Expected 191, got 193
FAIL: Hand count after playing council_room was not correct. Expected 193, got 3
FAIL: Hand count after playing council_room was not correct. Expected 193, got 275
FAIL: Hand count after playing council_room was not correct. Expected 193, got 426
FAIL: Hand count after playing council_room was not correct. Expected 476, got 478
FAIL: Hand count after playing council_room was not correct. Expected 478, got 162
FAIL: Hand count after playing council_room was not correct. Expected 478, got 320
FAIL: Hand count after playing council_room was not correct. Expected 478, got 117
FAIL: Hand count after playing council_room was not correct. Expected 396, got 398
FAIL: Hand count after playing council_room was not correct. Expected 398, got 56
FAIL: Hand count after playing council_room was not correct. Expected 398, got 196
FAIL: Hand count after playing council_room was not correct. Expected 398, got 459
FAIL: Hand count after playing council_room was not correct. Expected 270, got 272
FAIL: Hand count after playing council_room was not correct. Expected 272, got 237
FAIL: Hand count after playing council_room was not correct. Expected 272, got 184
FAIL: Hand count after playing council_room was not correct. Expected 272, got 182
FAIL: Hand count after playing council_room was not correct. Expected 31, got 33
FAIL: Hand count after playing council_room was not correct. Expected 33, got 434
FAIL: Hand count after playing council_room was not correct. Expected 33, got 116
FAIL: Hand count after playing council_room was not correct. Expected 33, got 310
FAIL: Hand count after playing council_room was not correct. Expected 49, got 51
FAIL: Hand count after playing council_room was not correct. Expected 51, got 307
FAIL: Hand count after playing council_room was not correct. Expected 51, got 270
FAIL: Hand count after playing council_room was not correct. Expected 51, got 414
FAIL: Hand count after playing council_room was not correct. Expected 144, got 146
FAIL: Hand count after playing council_room was not correct. Expected 146, got 290
FAIL: Hand count after playing council_room was not correct. Expected 146, got 391
FAIL: Hand count after playing council_room was not correct. Expected 146, got 382
FAIL: Hand count after playing council_room was not correct. Expected 257, got 259
FAIL: Hand count after playing council_room was not correct. Expected 259, got 365
FAIL: Hand count after playing council_room was not correct. Expected 259, got 421
FAIL: Hand count after playing council_room was not correct. Expected 259, got 311
FAIL: Hand count after playing council_room was not correct. Expected 143, got 145
FAIL: Hand count after playing council_room was not correct. Expected 145, got 171
FAIL: Hand count after playing council_room was not correct. Expected 145, got 52
FAIL: Hand count after playing council_room was not correct. Expected 145, got 26
FAIL: Hand count after playing council_room was not correct. Expected 429, got 431
FAIL: Hand count after playing council_room was not correct. Expected 431, got 192
FAIL: Hand count after playing council_room was not correct. Expected 431, got 162
FAIL: Hand count after playing council_room was not correct. Expected 431, got 232
FAIL: Hand count after playing council_room was not correct. Expected 161, got 163
FAIL: Hand count after playing council_room was not correct. Expected 163, got 13
FAIL: Hand count after playing council_room was not correct. Expected 163, got 470
FAIL: Hand count after playing council_room was not correct. Expected 163, got 317
FAIL: Hand count after playing council_room was not correct. Expected 375, got 377
FAIL: Hand count after playing council_room was not correct. Expected 377, got 50
FAIL: Hand count after playing council_room was not correct. Expected 377, got 20
FAIL: Hand count after playing council_room was not correct. Expected 377, got 89
FAIL: Hand count after playing council_room was not correct. Expected 24, got 26
FAIL: Hand count after playing council_room was not correct. Expected 26, got 78
FAIL: Hand count after playing council_room was not correct. Expected 26, got 45
FAIL: Hand count after playing council_room was not correct. Expected 26, got 70
FAIL: Hand count after playing council_room was not correct. Expected 29, got 31
FAIL: Hand count after playing council_room was not correct. Expected 31, got 238
FAIL: Hand count after playing council_room was not correct. Expected 31, got 103
FAIL: Hand count after playing council_room was not correct. Expected 31, got 416
FAIL: Hand count after playing council_room was not correct. Expected 363, got 365
FAIL: Hand count after playing council_room was not correct. Expected 365, got 291
FAIL: Hand count after playing council_room was not correct. Expected 365, got 350
FAIL: Hand count after playing council_room was not correct. Expected 365, got 228
FAIL: Hand count after playing council_room was not correct. Expected 19, got 21
FAIL: Hand count after playing council_room was not correct. Expected 21, got 458
FAIL: Hand count after playing council_room was not correct. Expected 21, got 59
FAIL: Hand count after playing council_room was not correct. Expected 21, got 72
FAIL: Hand count after playing council_room was not correct. Expected 238, got 240
FAIL: Hand count after playing council_room was not correct. Expected 240, got 87
FAIL: Hand count after playing council_room was not correct. Expected 240, got 353
FAIL: Hand count after playing council_room was not correct. Expected 240, got 411
FAIL: Hand count after playing council_room was not correct. Expected 404, got 406
FAIL: Hand count after playing council_room was not correct. Expected 406, got 113
FAIL: Hand count after playing council_room was not correct. Expected 406, got 219
FAIL: Hand count after playing council_room was not correct. Expected 406, got 108
FAIL: Hand count after playing council_room was not correct. Expected 445, got 447
FAIL: Hand count after playing council_room was not correct. Expected 447, got 449
FAIL: Hand count after playing council_room was not correct. Expected 447, got 319
FAIL: Hand count after playing council_room was not correct. Expected 447, got 227
FAIL: Hand count after playing council_room was not correct. Expected 82, got 84
FAIL: Hand count after playing council_room was not correct. Expected 84, got 292
FAIL: Hand count after playing council_room was not correct. Expected 84, got 247
FAIL: Hand count after playing council_room was not correct. Expected 84, got 378
FAIL: Hand count after playing council_room was not correct. Expected 106, got 108
FAIL: Hand count after playing council_room was not correct. Expected 108, got 116
FAIL: Hand count after playing council_room was not correct. Expected 108, got 122
FAIL: Hand count after playing council_room was not correct. Expected 108, got 448
FAIL: Hand count after playing council_room was not correct. Expected 473, got 475
FAIL: Hand count after playing council_room was not correct. Expected 475, got 199
FAIL: Hand count after playing council_room was not correct. Expected 475, got 305
FAIL: Hand count after playing council_room was not correct. Expected 475, got 30
FAIL: Hand count after playing council_room was not correct. Expected 195, got 197
FAIL: Hand count after playing council_room was not correct. Expected 197, got 147
FAIL: Hand count after playing council_room was not correct. Expected 197, got 361
FAIL: Hand count after playing council_room was not correct. Expected 197, got 73
FAIL: Hand count after playing council_room was not correct. Expected 169, got 171
FAIL: Hand count after playing council_room was not correct. Expected 171, got 19
FAIL: Hand count after playing council_room was not correct. Expected 171, got 398
FAIL: Hand count after playing council_room was not correct. Expected 171, got 8
FAIL: Hand count after playing council_room was not correct. Expected 105, got 107
FAIL: Hand count after playing council_room was not correct. Expected 107, got 162
FAIL: Hand count after playing council_room was not correct. Expected 107, got 210
FAIL: Hand count after playing council_room was not correct. Expected 107, got 415
FAIL: Hand count after playing council_room was not correct. Expected 481, got 483
FAIL: Hand count after playing council_room was not correct. Expected 483, got 154
FAIL: Hand count after playing council_room was not correct. Expected 483, got 388
FAIL: Hand count after playing council_room was not correct. Expected 483, got 21
FAIL: Hand count after playing council_room was not correct. Expected 306, got 308
FAIL: Hand count after playing council_room was not correct. Expected 308, got 369
FAIL: Hand count after playing council_room was not correct. Expected 308, got 258
FAIL: Hand count after playing council_room was not correct. Expected 308, got 410
FAIL: Hand count after playing council_room was not correct. Expected 441, got 443
FAIL: Hand count after playing council_room was not correct. Expected 443, got 235
FAIL: Hand count after playing council_room was not correct. Expected 443, got 484
FAIL: Hand count after playing council_room was not correct. Expected 443, got 101
FAIL: Hand count after playing council_room was not correct. Expected 295, got 297
FAIL: Hand count after playing council_room was not correct. Expected 297, got 367
FAIL: Hand count after playing council_room was not correct. Expected 297, got 166
FAIL: Hand count after playing council_room was not correct. Expected 297, got 464
FAIL: Hand count after playing council_room was not correct. Expected 88, got 90
FAIL: Hand count after playing council_room was not correct. Expected 90, got 383
FAIL: Hand count after playing council_room was not correct. Expected 90, got 284
FAIL: Hand count after playing council_room was not correct. Expected 90, got 34
FAIL: Hand count after playing council_room was not correct. Expected 154, got 156
FAIL: Hand count after playing council_room was not correct. Expected 156, got 328
FAIL: Hand count after playing council_room was not correct. Expected 156, got 490
FAIL: Hand count after playing council_room was not correct. Expected 156, got 287
FAIL: Hand count after playing council_room was not correct. Expected 16, got 18
FAIL: Hand count after playing council_room was not correct. Expected 18, got 347
FAIL: Hand count after playing council_room was not correct. Expected 18, got 93
FAIL: Hand count after playing council_room was not correct. Expected 18, got 307
FAIL: Hand count after playing council_room was not correct. Expected 32, got 34
FAIL: Hand count after playing council_room was not correct. Expected 34, got 148
FAIL: Hand count after playing council_room was not correct. Expected 34, got 28
FAIL: Hand count after playing council_room was not correct. Expected 34, got 208
FAIL: Hand count after playing council_room was not correct. Expected 168, got 170
FAIL: Hand count after playing council_room was not correct. Expected 170, got 75
FAIL: Hand count after playing council_room was not correct. Expected 170, got 295
FAIL: Hand count after playing council_room was not correct. Expected 170, got 238
FAIL: Hand count after playing council_room was not correct. Expected 251, got 253
FAIL: Hand count after playing council_room was not correct. Expected 253, got 345
FAIL: Hand count after playing council_room was not correct. Expected 253, got 454
FAIL: Hand count after playing council_room was not correct. Expected 253, got 436
FAIL: Hand count after playing council_room was not correct. Expected 54, got 56
FAIL: Hand count after playing council_room was not correct. Expected 56, got 9
FAIL: Hand count after playing council_room was not correct. Expected 56, got 204
FAIL: Hand count after playing council_room was not correct. Expected 56, got 169
FAIL: Hand count after playing council_room was not correct. Expected 173, got 175
FAIL: Hand count after playing council_room was not correct. Expected 175, got 256
FAIL: Hand count after playing council_room was not correct. Expected 175, got 443
FAIL: Hand count after playing council_room was not correct. Expected 175, got 72
FAIL: Hand count after playing council_room was not correct. Expected 215, got 217
FAIL: Hand count after playing council_room was not correct. Expected 217, got 468
FAIL: Hand count after playing council_room was not correct. Expected 217, got 198
FAIL: Hand count after playing council_room was not correct. Expected 217, got 154
FAIL: Hand count after playing council_room was not correct. Expected 13, got 15
FAIL: Hand count after playing council_room was not correct. Expected 15, got 434
FAIL: Hand count after playing council_room was not correct. Expected 15, got 48
FAIL: Hand count after playing council_room was not correct. Expected 15, got 39
FAIL: Hand count after playing council_room was not correct. Expected 470, got 472
FAIL: Hand count after playing council_room was not correct. Expected 472, got 47
FAIL: Hand count after playing council_room was not correct. Expected 472, got 473
FAIL: Hand count after playing council_room was not correct. Expected 472, got 408
FAIL: Hand count after playing council_room was not correct. Expected 9, got 11
FAIL: Hand count after playing council_room was not correct. Expected 11, got 297
FAIL: Hand count after playing council_room was not correct. Expected 11, got 467
FAIL: Hand count after playing council_room was not correct. Expected 11, got 253
FAIL: Hand count after playing council_room was not correct. Expected 173, got 175
FAIL: Hand count after playing council_room was not correct. Expected 175, got 87
FAIL: Hand count after playing council_room was not correct. Expected 175, got 403
FAIL: Hand count after playing council_room was not correct. Expected 175, got 40
FAIL: Hand count after playing council_room was not correct. Expected 117, got 119
FAIL: Hand count after playing council_room was not correct. Expected 119, got 202
FAIL: Hand count after playing council_room was not correct. Expected 119, got 221
FAIL: Hand count after playing council_room was not correct. Expected 119, got 245
FAIL: Hand count after playing council_room was not correct. Expected 174, got 176
FAIL: Hand count after playing council_room was not correct. Expected 176, got 328
FAIL: Hand count after playing council_room was not correct. Expected 176, got 335
FAIL: Hand count after playing council_room was not correct. Expected 176, got 406
FAIL: Hand count after playing council_room was not correct. Expected 297, got 299
FAIL: Hand count after playing council_room was not correct. Expected 299, got 424
FAIL: Hand count after playing council_room was not correct. Expected 299, got 350
FAIL: Hand count after playing council_room was not correct. Expected 299, got 339
FAIL: Hand count after playing council_room was not correct. Expected 443, got 445
FAIL: Hand count after playing council_room was not correct. Expected 445, got 147
FAIL: Hand count after playing council_room was not correct. Expected 445, got 343
FAIL: Hand count after playing council_room was not correct. Expected 445, got 373
FAIL: Hand count after playing council_room was not correct. Expected 423, got 425
FAIL: Hand count after playing council_room was not correct. Expected 425, got 50
FAIL: Hand count after playing council_room was not correct. Expected 425, got 445
FAIL: Hand count after playing council_room was not correct. Expected 425, got 100
FAIL: Hand count after playing council_room was not correct. Expected 122, got 124
FAIL: Hand count after playing council_room was not correct. Expected 124, got 19
FAIL: Hand count after playing council_room was not correct. Expected 124, got 250
FAIL: Hand count after playing council_room was not correct. Expected 124, got 251
FAIL: Hand count after playing council_room was not correct. Expected 65, got 67
FAIL: Hand count after playing council_room was not correct. Expected 67, got 283
FAIL: Hand count after playing council_room was not correct. Expected 67, got 30
FAIL: Hand count after playing council_room was not correct. Expected 67, got 403
FAIL: Hand count after playing council_room was not correct. Expected 117, got 119
FAIL: Hand count after playing council_room was not correct. Expected 119, got 194
FAIL: Hand count after playing council_room was not correct. Expected 119, got 470
FAIL: Hand count after playing council_room was not correct. Expected 119, got 437
FAIL: Hand count after playing council_room was not correct. Expected 407, got 409
FAIL: Hand count after playing council_room was not correct. Expected 409, got 131
FAIL: Hand count after playing council_room was not correct. Expected 409, got 434
FAIL: Hand count after playing council_room was not correct. Expected 409, got 370
FAIL: Hand count after playing council_room was not correct. Expected 385, got 387
FAIL: Hand count after playing council_room was not correct. Expected 387, got 462
FAIL: Hand count after playing council_room was not correct. Expected 387, got 130
FAIL: Hand count after playing council_room was not correct. Expected 387, got 382
FAIL: Hand count after playing council_room was not correct. Expected 292, got 294
FAIL: Hand count after playing council_room was not correct. Expected 294, got 140
FAIL: Hand count after playing council_room was not correct. Expected 294, got 494
FAIL: Hand count after playing council_room was not correct. Expected 294, got 470
FAIL: Hand count after playing council_room was not correct. Expected 342, got 344
FAIL: Hand count after playing council_room was not correct. Expected 344, got 473
FAIL: Hand count after playing council_room was not correct. Expected 344, got 243
FAIL: Hand count after playing council_room was not correct. Expected 344, got 300
FAIL: Hand count after playing council_room was not correct. Expected 392, got 394
FAIL: Hand count after playing council_room was not correct. Expected 394, got 287
FAIL: Hand count after playing council_room was not correct. Expected 394, got 287
FAIL: Hand count after playing council_room was not correct. Expected 394, got 236
FAIL: Hand count after playing council_room was not correct. Expected 405, got 407
FAIL: Hand count after playing council_room was not correct. Expected 407, got 101
FAIL: Hand count after playing council_room was not correct. Expected 407, got 266
FAIL: Hand count after playing council_room was not correct. Expected 407, got 127
FAIL: Hand count after playing council_room was not correct. Expected 126, got 128
FAIL: Hand count after playing council_room was not correct. Expected 128, got 333
FAIL: Hand count after playing council_room was not correct. Expected 128, got 121
FAIL: Hand count after playing council_room was not correct. Expected 128, got 436
FAIL: Hand count after playing council_room was not correct. Expected 147, got 149
FAIL: Hand count after playing council_room was not correct. Expected 149, got 302
FAIL: Hand count after playing council_room was not correct. Expected 149, got 133
FAIL: Hand count after playing council_room was not correct. Expected 149, got 59
FAIL: Hand count after playing council_room was not correct. Expected 234, got 236
FAIL: Hand count after playing council_room was not correct. Expected 236, got 145
FAIL: Hand count after playing council_room was not correct. Expected 236, got 319
FAIL: Hand count after playing council_room was not correct. Expected 236, got 44
FAIL: Hand count after playing council_room was not correct. Expected 380, got 382
FAIL: Hand count after playing council_room was not correct. Expected 382, got 274
FAIL: Hand count after playing council_room was not correct. Expected 382, got 339
FAIL: Hand count after playing council_room was not correct. Expected 382, got 240
FAIL: Hand count after playing council_room was not correct. Expected 115, got 117
FAIL: Hand count after playing council_room was not correct. Expected 117, got 176
FAIL: Hand count after playing council_room was not correct. Expected 117, got 496
FAIL: Hand count after playing council_room was not correct. Expected 117, got 409
FAIL: Hand count after playing council_room was not correct. Expected 382, got 384
FAIL: Hand count after playing council_room was not correct. Expected 384, got 58
FAIL: Hand count after playing council_room was not correct. Expected 384, got 97
FAIL: Hand count after playing council_room was not correct. Expected 384, got 494
FAIL: Hand count after playing council_room was not correct. Expected 433, got 435
FAIL: Hand count after playing council_room was not correct. Expected 435, got 478
FAIL: Hand count after playing council_room was not correct. Expected 435, got 169
FAIL: Hand count after playing council_room was not correct. Expected 435, got 477
FAIL: Hand count after playing council_room was not correct. Expected 111, got 113
FAIL: Hand count after playing council_room was not correct. Expected 113, got 76
FAIL: Hand count after playing council_room was not correct. Expected 113, got 17
FAIL: Hand count after playing council_room was not correct. Expected 113, got 267
FAIL: Hand count after playing council_room was not correct. Expected 441, got 443
FAIL: Hand count after playing council_room was not correct. Expected 443, got 127
FAIL: Hand count after playing council_room was not correct. Expected 443, got 183
FAIL: Hand count after playing council_room was not correct. Expected 443, got 210
FAIL: Hand count after playing council_room was not correct. Expected 179, got 181
FAIL: Hand count after playing council_room was not correct. Expected 181, got 71
FAIL: Hand count after playing council_room was not correct. Expected 181, got 37
FAIL: Hand count after playing council_room was not correct. Expected 181, got 81
FAIL: Hand count after playing council_room was not correct. Expected 448, got 450
FAIL: Hand count after playing council_room was not correct. Expected 450, got 464
FAIL: Hand count after playing council_room was not correct. Expected 450, got 374
FAIL: Hand count after playing council_room was not correct. Expected 450, got 68
FAIL: Hand count after playing council_room was not correct. Expected 455, got 457
FAIL: Hand count after playing council_room was not correct. Expected 457, got 300
FAIL: Hand count after playing council_room was not correct. Expected 457, got 216
FAIL: Hand count after playing council_room was not correct. Expected 457, got 497
FAIL: Hand count after playing council_room was not correct. Expected 221, got 223
FAIL: Hand count after playing council_room was not correct. Expected 223, got 484
FAIL: Hand count after playing council_room was not correct. Expected 223, got 427
FAIL: Hand count after playing council_room was not correct. Expected 223, got 127
FAIL: Hand count after playing council_room was not correct. Expected 430, got 432
FAIL: Hand count after playing council_room was not correct. Expected 432, got 384
FAIL: Hand count after playing council_room was not correct. Expected 432, got 362
FAIL: Hand count after playing council_room was not correct. Expected 432, got 145
FAIL: Hand count after playing council_room was not correct. Expected 339, got 341
FAIL: Hand count after playing council_room was not correct. Expected 341, got 472
FAIL: Hand count after playing council_room was not correct. Expected 341, got 351
FAIL: Hand count after playing council_room was not correct. Expected 341, got 186
FAIL: Hand count after playing council_room was not correct. Expected 328, got 330
FAIL: Hand count after playing council_room was not correct. Expected 330, got 394
FAIL: Hand count after playing council_room was not correct. Expected 330, got 3
FAIL: Hand count after playing council_room was not correct. Expected 330, got 347
FAIL: Hand count after playing council_room was not correct. Expected 320, got 322
FAIL: Hand count after playing council_room was not correct. Expected 322, got 287
FAIL: Hand count after playing council_room was not correct. Expected 322, got 258
FAIL: Hand count after playing council_room was not correct. Expected 322, got 90
FAIL: Hand count after playing council_room was not correct. Expected 407, got 409
FAIL: Hand count after playing council_room was not correct. Expected 409, got 476
FAIL: Hand count after playing council_room was not correct. Expected 409, got 276
FAIL: Hand count after playing council_room was not correct. Expected 409, got 150
FAIL: Hand count after playing council_room was not correct. Expected 37, got 39
FAIL: Hand count after playing council_room was not correct. Expected 39, got 204
FAIL: Hand count after playing council_room was not correct. Expected 39, got 4
FAIL: Hand count after playing council_room was not correct. Expected 39, got 401
FAIL: Hand count after playing council_room was not correct. Expected 238, got 240
FAIL: Hand count after playing council_room was not correct. Expected 240, got 352
FAIL: Hand count after playing council_room was not correct. Expected 240, got 468
FAIL: Hand count after playing council_room was not correct. Expected 240, got 106
FAIL: Hand count after playing council_room was not correct. Expected 102, got 104
FAIL: Hand count after playing council_room was not correct. Expected 104, got 130
FAIL: Hand count after playing council_room was not correct. Expected 104, got 373
FAIL: Hand count after playing council_room was not correct. Expected 104, got 26
FAIL: Hand count after playing council_room was not correct. Expected 464, got 466
FAIL: Hand count after playing council_room was not correct. Expected 466, got 165
FAIL: Hand count after playing council_room was not correct. Expected 466, got 70
FAIL: Hand count after playing council_room was not correct. Expected 466, got 312
FAIL: Hand count after playing council_room was not correct. Expected 488, got 490
FAIL: Hand count after playing council_room was not correct. Expected 490, got 338
FAIL: Hand count after playing council_room was not correct. Expected 490, got 491
FAIL: Hand count after playing council_room was not correct. Expected 490, got 395
FAIL: Hand count after playing council_room was not correct. Expected 14, got 16
FAIL: Hand count after playing council_room was not correct. Expected 16, got 384
FAIL: Hand count after playing council_room was not correct. Expected 16, got 203
FAIL: Hand count after playing council_room was not correct. Expected 16, got 423
FAIL: Hand count after playing council_room was not correct. Expected 325, got 327
FAIL: Hand count after playing council_room was not correct. Expected 327, got 500
FAIL: Hand count after playing council_room was not correct. Expected 327, got 389
FAIL: Hand count after playing council_room was not correct. Expected 327, got 424
FAIL: Hand count after playing council_room was not correct. Expected 83, got 85
FAIL: Hand count after playing council_room was not correct. Expected 85, got 486
FAIL: Hand count after playing council_room was not correct. Expected 85, got 373
FAIL: Hand count after playing council_room was not correct. Expected 85, got 222
FAIL: Hand count after playing council_room was not correct. Expected 490, got 492
FAIL: Hand count after playing council_room was not correct. Expected 492, got 222
FAIL: Hand count after playing council_room was not correct. Expected 492, got 498
FAIL: Hand count after playing council_room was not correct. Expected 492, got 173
FAIL: Hand count after playing council_room was not correct. Expected 180, got 182
FAIL: Hand count after playing council_room was not correct. Expected 182, got 9
FAIL: Hand count after playing council_room was not correct. Expected 182, got 149
FAIL: Hand count after playing council_room was not correct. Expected 182, got 405
FAIL: Hand count after playing council_room was not correct. Expected 52, got 54
FAIL: Hand count after playing council_room was not correct. Expected 54, got 353
FAIL: Hand count after playing council_room was not correct. Expected 54, got 426
FAIL: Hand count after playing council_room was not correct. Expected 54, got 264
FAIL: Hand count after playing council_room was not correct. Expected 425, got 427
FAIL: Hand count after playing council_room was not correct. Expected 427, got 442
FAIL: Hand count after playing council_room was not correct. Expected 427, got 78
FAIL: Hand count after playing council_room was not correct. Expected 427, got 405
FAIL: Hand count after playing council_room was not correct. Expected 22, got 24
FAIL: Hand count after playing council_room was not correct. Expected 24, got 162
FAIL: Hand count after playing council_room was not correct. Expected 24, got 480
FAIL: Hand count after playing council_room was not correct. Expected 24, got 119
FAIL: Hand count after playing council_room was not correct. Expected 306, got 308
FAIL: Hand count after playing council_room was not correct. Expected 308, got 100
FAIL: Hand count after playing council_room was not correct. Expected 308, got 56
FAIL: Hand count after playing council_room was not correct. Expected 308, got 458
FAIL: Hand count after playing council_room was not correct. Expected 322, got 324
FAIL: Hand count after playing council_room was not correct. Expected 324, got 287
FAIL: Hand count after playing council_room was not correct. Expected 324, got 54
FAIL: Hand count after playing council_room was not correct. Expected 324, got 261
FAIL: Hand count after playing council_room was not correct. Expected 420, got 422
FAIL: Hand count after playing council_room was not correct. Expected 422, got 6
FAIL: Hand count after playing council_room was not correct. Expected 422, got 293
FAIL: Hand count after playing council_room was not correct. Expected 422, got 136
FAIL: Hand count after playing council_room was not correct. Expected 30, got 32
FAIL: Hand count after playing council_room was not correct. Expected 32, got 111
FAIL: Hand count after playing council_room was not correct. Expected 32, got 78
FAIL: Hand count after playing council_room was not correct. Expected 32, got 458
FAIL: Hand count after playing council_room was not correct. Expected 55, got 57
FAIL: Hand count after playing council_room was not correct. Expected 57, got 203
FAIL: Hand count after playing council_room was not correct. Expected 57, got 59
FAIL: Hand count after playing council_room was not correct. Expected 57, got 72
FAIL: Hand count after playing council_room was not correct. Expected 29, got 31
FAIL: Hand count after playing council_room was not correct. Expected 31, got 233
FAIL: Hand count after playing council_room was not correct. Expected 31, got 389
FAIL: Hand count after playing council_room was not correct. Expected 31, got 248
FAIL: Hand count after playing council_room was not correct. Expected 200, got 202
FAIL: Hand count after playing council_room was not correct. Expected 202, got 227
FAIL: Hand count after playing council_room was not correct. Expected 202, got 291
FAIL: Hand count after playing council_room was not correct. Expected 202, got 79
FAIL: Hand count after playing council_room was not correct. Expected 373, got 375
FAIL: Hand count after playing council_room was not correct. Expected 375, got 105
FAIL: Hand count after playing council_room was not correct. Expected 375, got 406
FAIL: Hand count after playing council_room was not correct. Expected 375, got 349
FAIL: Hand count after playing council_room was not correct. Expected 66, got 68
FAIL: Hand count after playing council_room was not correct. Expected 68, got 8
FAIL: Hand count after playing council_room was not correct. Expected 68, got 84
FAIL: Hand count after playing council_room was not correct. Expected 68, got 62
FAIL: Hand count after playing council_room was not correct. Expected 494, got 496
FAIL: Hand count after playing council_room was not correct. Expected 496, got 64
FAIL: Hand count after playing council_room was not correct. Expected 496, got 31
FAIL: Hand count after playing council_room was not correct. Expected 496, got 494
FAIL: Hand count after playing council_room was not correct. Expected 356, got 358
FAIL: Hand count after playing council_room was not correct. Expected 358, got 477
FAIL: Hand count after playing council_room was not correct. Expected 358, got 340
FAIL: Hand count after playing council_room was not correct. Expected 358, got 456
FAIL: Hand count after playing council_room was not correct. Expected 258, got 260
FAIL: Hand count after playing council_room was not correct. Expected 260, got 18
FAIL: Hand count after playing council_room was not correct. Expected 260, got 35
FAIL: Hand count after playing council_room was not correct. Expected 260, got 164
FAIL: Hand count after playing council_room was not correct. Expected 74, got 76
FAIL: Hand count after playing council_room was not correct. Expected 76, got 381
FAIL: Hand count after playing council_room was not correct. Expected 76, got 305
FAIL: Hand count after playing council_room was not correct. Expected 76, got 247
FAIL: Hand count after playing council_room was not correct. Expected 121, got 123
FAIL: Hand count after playing council_room was not correct. Expected 123, got 278
FAIL: Hand count after playing council_room was not correct. Expected 123, got 101
FAIL: Hand count after playing council_room was not correct. Expected 123, got 296
FAIL: Hand count after playing council_room was not correct. Expected 16, got 18
FAIL: Hand count after playing council_room was not correct. Expected 18, got 127
FAIL: Hand count after playing council_room was not correct. Expected 18, got 22
FAIL: Hand count after playing council_room was not correct. Expected 18, got 306
FAIL: Hand count after playing council_room was not correct. Expected 331, got 333
FAIL: Hand count after playing council_room was not correct. Expected 333, got 383
FAIL: Hand count after playing council_room was not correct. Expected 333, got 253
FAIL: Hand count after playing council_room was not correct. Expected 333, got 376
FAIL: Hand count after playing council_room was not correct. Expected 179, got 181
FAIL: Hand count after playing council_room was not correct. Expected 181, got 79
FAIL: Hand count after playing council_room was not correct. Expected 181, got 326
FAIL: Hand count after playing council_room was not correct. Expected 181, got 327
FAIL: Hand count after playing council_room was not correct. Expected 62, got 64
FAIL: Hand count after playing council_room was not correct. Expected 64, got 363
FAIL: Hand count after playing council_room was not correct. Expected 64, got 496
FAIL: Hand count after playing council_room was not correct. Expected 64, got 426
FAIL: Hand count after playing council_room was not correct. Expected 184, got 186
FAIL: Hand count after playing council_room was not correct. Expected 186, got 142
FAIL: Hand count after playing council_room was not correct. Expected 186, got 233
FAIL: Hand count after playing council_room was not correct. Expected 186, got 418
FAIL: Hand count after playing council_room was not correct. Expected 112, got 114
FAIL: Hand count after playing council_room was not correct. Expected 114, got 452
FAIL: Hand count after playing council_room was not correct. Expected 114, got 1
FAIL: Hand count after playing council_room was not correct. Expected 114, got 463
FAIL: Hand count after playing council_room was not correct. Expected 176, got 178
FAIL: Hand count after playing council_room was not correct. Expected 178, got 28
FAIL: Hand count after playing council_room was not correct. Expected 178, got 103
FAIL: Hand count after playing council_room was not correct. Expected 178, got 483
FAIL: Hand count after playing council_room was not correct. Expected 380, got 382
FAIL: Hand count after playing council_room was not correct. Expected 382, got 332
FAIL: Hand count after playing council_room was not correct. Expected 382, got 15
FAIL: Hand count after playing council_room was not correct. Expected 382, got 29
FAIL: Hand count after playing council_room was not correct. Expected 381, got 383
FAIL: Hand count after playing council_room was not correct. Expected 383, got 470
FAIL: Hand count after playing council_room was not correct. Expected 383, got 196
FAIL: Hand count after playing council_room was not correct. Expected 383, got 301
FAIL: Hand count after playing council_room was not correct. Expected 443, got 445
FAIL: Hand count after playing council_room was not correct. Expected 445, got 143
FAIL: Hand count after playing council_room was not correct. Expected 445, got 98
FAIL: Hand count after playing council_room was not correct. Expected 445, got 336
FAIL: Hand count after playing council_room was not correct. Expected 25, got 27
FAIL: Hand count after playing council_room was not correct. Expected 27, got 83
FAIL: Hand count after playing council_room was not correct. Expected 27, got 276
FAIL: Hand count after playing council_room was not correct. Expected 27, got 290
FAIL: Hand count after playing council_room was not correct. Expected 359, got 361
FAIL: Hand count after playing council_room was not correct. Expected 361, got 231
FAIL: Hand count after playing council_room was not correct. Expected 361, got 185
FAIL: Hand count after playing council_room was not correct. Expected 361, got 316
FAIL: Hand count after playing council_room was not correct. Expected 136, got 138
FAIL: Hand count after playing council_room was not correct. Expected 138, got 92
FAIL: Hand count after playing council_room was not correct. Expected 138, got 103
FAIL: Hand count after playing council_room was not correct. Expected 138, got 98
FAIL: Hand count after playing council_room was not correct. Expected 88, got 90
FAIL: Hand count after playing council_room was not correct. Expected 90, got 30
FAIL: Hand count after playing council_room was not correct. Expected 90, got 296
FAIL: Hand count after playing council_room was not correct. Expected 90, got 78
FAIL: Hand count after playing council_room was not correct. Expected 491, got 493
FAIL: Hand count after playing council_room was not correct. Expected 493, got 102
FAIL: Hand count after playing council_room was not correct. Expected 493, got 411
FAIL: Hand count after playing council_room was not correct. Expected 493, got 166
FAIL: Hand count after playing council_room was not correct. Expected 183, got 185
FAIL: Hand count after playing council_room was not correct. Expected 185, got 146
FAIL: Hand count after playing council_room was not correct. Expected 185, got 131
FAIL: Hand count after playing council_room was not correct. Expected 185, got 220
FAIL: Hand count after playing council_room was not correct. Expected 85, got 87
FAIL: Hand count after playing council_room was not correct. Expected 87, got 198
FAIL: Hand count after playing council_room was not correct. Expected 87, got 29
FAIL: Hand count after playing council_room was not correct. Expected 87, got 424
FAIL: Hand count after playing council_room was not correct. Expected 29, got 31
FAIL: Hand count after playing council_room was not correct. Expected 31, got 459
FAIL: Hand count after playing council_room was not correct. Expected 31, got 249
FAIL: Hand count after playing council_room was not correct. Expected 31, got 109
FAIL: Hand count after playing council_room was not correct. Expected 257, got 259
FAIL: Hand count after playing council_room was not correct. Expected 259, got 210
FAIL: Hand count after playing council_room was not correct. Expected 259, got 315
FAIL: Hand count after playing council_room was not correct. Expected 259, got 298
FAIL: Hand count after playing council_room was not correct. Expected 442, got 444
FAIL: Hand count after playing council_room was not correct. Expected 444, got 71
FAIL: Hand count after playing council_room was not correct. Expected 444, got 74
FAIL: Hand count after playing council_room was not correct. Expected 444, got 488
FAIL: Hand count after playing council_room was not correct. Expected 68, got 70
FAIL: Hand count after playing council_room was not correct. Expected 70, got 138
FAIL: Hand count after playing council_room was not correct. Expected 70, got 490
FAIL: Hand count after playing council_room was not correct. Expected 70, got 276
FAIL: Hand count after playing council_room was not correct. Expected 451, got 453
FAIL: Hand count after playing council_room was not correct. Expected 453, got 432
FAIL: Hand count after playing council_room was not correct. Expected 453, got 480
FAIL: Hand count after playing council_room was not correct. Expected 453, got 24
FAIL: Hand count after playing council_room was not correct. Expected 194, got 196
FAIL: Hand count after playing council_room was not correct. Expected 196, got 69
FAIL: Hand count after playing council_room was not correct. Expected 196, got 352
FAIL: Hand count after playing council_room was not correct. Expected 196, got 444
FAIL: Hand count after playing council_room was not correct. Expected 333, got 335
FAIL: Hand count after playing council_room was not correct. Expected 335, got 361
FAIL: Hand count after playing council_room was not correct. Expected 335, got 360
FAIL: Hand count after playing council_room was not correct. Expected 335, got 174
FAIL: Hand count after playing council_room was not correct. Expected 30, got 32
FAIL: Hand count after playing council_room was not correct. Expected 32, got 208
FAIL: Hand count after playing council_room was not correct. Expected 32, got 212
FAIL: Hand count after playing council_room was not correct. Expected 32, got 344
FAIL: Hand count after playing council_room was not correct. Expected 109, got 111
FAIL: Hand count after playing council_room was not correct. Expected 111, got 30
FAIL: Hand count after playing council_room was not correct. Expected 111, got 122
FAIL: Hand count after playing council_room was not correct. Expected 111, got 375
FAIL: Hand count after playing council_room was not correct. Expected 495, got 497
FAIL: Hand count after playing council_room was not correct. Expected 497, got 454
FAIL: Hand count after playing council_room was not correct. Expected 497, got 298
FAIL: Hand count after playing council_room was not correct. Expected 497, got 212
FAIL: Hand count after playing council_room was not correct. Expected 109, got 111
FAIL: Hand count after playing council_room was not correct. Expected 111, got 421
FAIL: Hand count after playing council_room was not correct. Expected 111, got 17
FAIL: Hand count after playing council_room was not correct. Expected 111, got 434
FAIL: Hand count after playing council_room was not correct. Expected 465, got 467
FAIL: Hand count after playing council_room was not correct. Expected 467, got 205
FAIL: Hand count after playing council_room was not correct. Expected 467, got 274
FAIL: Hand count after playing council_room was not correct. Expected 467, got 3
FAIL: Hand count after playing council_room was not correct. Expected 371, got 373
FAIL: Hand count after playing council_room was not correct. Expected 373, got 475
FAIL: Hand count after playing council_room was not correct. Expected 373, got 235
FAIL: Hand count after playing council_room was not correct. Expected 373, got 395
FAIL: Hand count after playing council_room was not correct. Expected 232, got 234
FAIL: Hand count after playing council_room was not correct. Expected 234, got 21
FAIL: Hand count after playing council_room was not correct. Expected 234, got 148
FAIL: Hand count after playing council_room was not correct. Expected 234, got 32
FAIL: Hand count after playing council_room was not correct. Expected 7, got 9
FAIL: Hand count after playing council_room was not correct. Expected 9, got 372
FAIL: Hand count after playing council_room was not correct. Expected 9, got 42
FAIL: Hand count after playing council_room was not correct. Expected 9, got 23
FAIL: Hand count after playing council_room was not correct. Expected 407, got 409
FAIL: Hand count after playing council_room was not correct. Expected 409, got 377
FAIL: Hand count after playing council_room was not correct. Expected 409, got 70
FAIL: Hand count after playing council_room was not correct. Expected 409, got 248
FAIL: Hand count after playing council_room was not correct. Expected 191, got 193
FAIL: Hand count after playing council_room was not correct. Expected 193, got 135
FAIL: Hand count after playing council_room was not correct. Expected 193, got 56
FAIL: Hand count after playing council_room was not correct. Expected 193, got 255
FAIL: Hand count after playing council_room was not correct. Expected 208, got 210
FAIL: Hand count after playing council_room was not correct. Expected 210, got 499
FAIL: Hand count after playing council_room was not correct. Expected 210, got 464
FAIL: Hand count after playing council_room was not correct. Expected 210, got 92
FAIL: Hand count after playing council_room was not correct. Expected 215, got 217
FAIL: Hand count after playing council_room was not correct. Expected 217, got 122
FAIL: Hand count after playing council_room was not correct. Expected 217, got 476
FAIL: Hand count after playing council_room was not correct. Expected 217, got 60
FAIL: Hand count after playing council_room was not correct. Expected 497, got 499
FAIL: Hand count after playing council_room was not correct. Expected 499, got 150
FAIL: Hand count after playing council_room was not correct. Expected 499, got 196
FAIL: Hand count after playing council_room was not correct. Expected 499, got 99
FAIL: Hand count after playing council_room was not correct. Expected 400, got 402
FAIL: Hand count after playing council_room was not correct. Expected 402, got 134
FAIL: Hand count after playing council_room was not correct. Expected 402, got 120
FAIL: Hand count after playing council_room was not correct. Expected 402, got 263
FAIL: Hand count after playing council_room was not correct. Expected 465, got 467
FAIL: Hand count after playing council_room was not correct. Expected 467, got 73
FAIL: Hand count after playing council_room was not correct. Expected 467, got 32
FAIL: Hand count after playing council_room was not correct. Expected 467, got 497
FAIL: Hand count after playing council_room was not correct. Expected 421, got 423
FAIL: Hand count after playing council_room was not correct. Expected 423, got 345
FAIL: Hand count after playing council_room was not correct. Expected 423, got 139
FAIL: Hand count after playing council_room was not correct. Expected 423, got 313
FAIL: Hand count after playing council_room was not correct. Expected 40, got 42
FAIL: Hand count after playing council_room was not correct. Expected 42, got 356
FAIL: Hand count after playing council_room was not correct. Expected 42, got 310
FAIL: Hand count after playing council_room was not correct. Expected 42, got 89
FAIL: Hand count after playing council_room was not correct. Expected 90, got 92
FAIL: Hand count after playing council_room was not correct. Expected 92, got 9
FAIL: Hand count after playing council_room was not correct. Expected 92, got 486
FAIL: Hand count after playing council_room was not correct. Expected 92, got 62
FAIL: Hand count after playing council_room was not correct. Expected 261, got 263
FAIL: Hand count after playing council_room was not correct. Expected 263, got 407
FAIL: Hand count after playing council_room was not correct. Expected 263, got 71
FAIL: Hand count after playing council_room was not correct. Expected 263, got 443
FAIL: Hand count after playing council_room was not correct. Expected 266, got 268
FAIL: Hand count after playing council_room was not correct. Expected 268, got 465
FAIL: Hand count after playing council_room was not correct. Expected 268, got 146
FAIL: Hand count after playing council_room was not correct. Expected 268, got 166
FAIL: Hand count after playing council_room was not correct. Expected 322, got 324
FAIL: Hand count after playing council_room was not correct. Expected 324, got 41
FAIL: Hand count after playing council_room was not correct. Expected 324, got 326
FAIL: Hand count after playing council_room was not correct. Expected 324, got 8
FAIL: Hand count after playing council_room was not correct. Expected 409, got 411
FAIL: Hand count after playing council_room was not correct. Expected 411, got 364
FAIL: Hand count after playing council_room was not correct. Expected 411, got 467
FAIL: Hand count after playing council_room was not correct. Expected 411, got 416
FAIL: Hand count after playing council_room was not correct. Expected 481, got 483
FAIL: Hand count after playing council_room was not correct. Expected 483, got 500
FAIL: Hand count after playing council_room was not correct. Expected 483, got 21
FAIL: Hand count after playing council_room was not correct. Expected 483, got 231
FAIL: Hand count after playing council_room was not correct. Expected 176, got 178
FAIL: Hand count after playing council_room was not correct. Expected 178, got 4
FAIL: Hand count after playing council_room was not correct. Expected 178, got 401
FAIL: Hand count after playing council_room was not correct. Expected 178, got 240
FAIL: Hand count after playing council_room was not correct. Expected 318, got 320
FAIL: Hand count after playing council_room was not correct. Expected 320, got 223
FAIL: Hand count after playing council_room was not correct. Expected 320, got 495
FAIL: Hand count after playing council_room was not correct. Expected 320, got 257
FAIL: Hand count after playing council_room was not correct. Expected 115, got 117
FAIL: Hand count after playing council_room was not correct. Expected 117, got 324
FAIL: Hand count after playing council_room was not correct. Expected 117, got 279
FAIL: Hand count after playing council_room was not correct. Expected 117, got 62
FAIL: Hand count after playing council_room was not correct. Expected 435, got 437
FAIL: Hand count after playing council_room was not correct. Expected 437, got 458
FAIL: Hand count after playing council_room was not correct. Expected 437, got 344
FAIL: Hand count after playing council_room was not correct. Expected 437, got 436
FAIL: Hand count after playing council_room was not correct. Expected 174, got 176
FAIL: Hand count after playing council_room was not correct. Expected 176, got 400
FAIL: Hand count after playing council_room was not correct. Expected 176, got 229
FAIL: Hand count after playing council_room was not correct. Expected 176, got 149
FAIL: Hand count after playing council_room was not correct. Expected 191, got 193
FAIL: Hand count after playing council_room was not correct. Expected 193, got 156
FAIL: Hand count after playing council_room was not correct. Expected 193, got 452
FAIL: Hand count after playing council_room was not correct. Expected 193, got 168
FAIL: Hand count after playing council_room was not correct. Expected 76, got 78
FAIL: Hand count after playing council_room was not correct. Expected 78, got 232
FAIL: Hand count after playing council_room was not correct. Expected 78, got 192
FAIL: Hand count after playing council_room was not correct. Expected 78, got 229
FAIL: Hand count after playing council_room was not correct. Expected 225, got 227
FAIL: Hand count after playing council_room was not correct. Expected 227, got 132
FAIL: Hand count after playing council_room was not correct. Expected 227, got 424
FAIL: Hand count after playing council_room was not correct. Expected 227, got 495
FAIL: Hand count after playing council_room was not correct. Expected 163, got 165
FAIL: Hand count after playing council_room was not correct. Expected 165, got 318
FAIL: Hand count after playing council_room was not correct. Expected 165, got 288
FAIL: Hand count after playing council_room was not correct. Expected 165, got 472
FAIL: Hand count after playing council_room was not correct. Expected 216, got 218
FAIL: Hand count after playing council_room was not correct. Expected 218, got 420
FAIL: Hand count after playing council_room was not correct. Expected 218, got 327
FAIL: Hand count after playing council_room was not correct. Expected 218, got 401
FAIL: Hand count after playing council_room was not correct. Expected 58, got 60
FAIL: Hand count after playing council_room was not correct. Expected 60, got 370
FAIL: Hand count after playing council_room was not correct. Expected 60, got 227
FAIL: Hand count after playing council_room was not correct. Expected 60, got 270
FAIL: Hand count after playing council_room was not correct. Expected 248, got 250
FAIL: Hand count after playing council_room was not correct. Expected 250, got 441
FAIL: Hand count after playing council_room was not correct. Expected 250, got 77
FAIL: Hand count after playing council_room was not correct. Expected 250, got 234
FAIL: Hand count after playing council_room was not correct. Expected 31, got 33
FAIL: Hand count after playing council_room was not correct. Expected 33, got 430
FAIL: Hand count after playing council_room was not correct. Expected 33, got 352
FAIL: Hand count after playing council_room was not correct. Expected 33, got 234
FAIL: Hand count after playing council_room was not correct. Expected 422, got 424
FAIL: Hand count after playing council_room was not correct. Expected 424, got 189
FAIL: Hand count after playing council_room was not correct. Expected 424, got 300
FAIL: Hand count after playing council_room was not correct. Expected 424, got 426
FAIL: Hand count after playing council_room was not correct. Expected 474, got 476
FAIL: Hand count after playing council_room was not correct. Expected 476, got 300
FAIL: Hand count after playing council_room was not correct. Expected 476, got 312
FAIL: Hand count after playing council_room was not correct. Expected 476, got 205
FAIL: Hand count after playing council_room was not correct. Expected 397, got 399
FAIL: Hand count after playing council_room was not correct. Expected 399, got 142
FAIL: Hand count after playing council_room was not correct. Expected 399, got 354
FAIL: Hand count after playing council_room was not correct. Expected 399, got 371
FAIL: Hand count after playing council_room was not correct. Expected 260, got 262
FAIL: Hand count after playing council_room was not correct. Expected 262, got 415
FAIL: Hand count after playing council_room was not correct. Expected 262, got 429
FAIL: Hand count after playing council_room was not correct. Expected 262, got 75
FAIL: Hand count after playing council_room was not correct. Expected 20, got 22
FAIL: Hand count after playing council_room was not correct. Expected 22, got 442
FAIL: Hand count after playing council_room was not correct. Expected 22, got 374
FAIL: Hand count after playing council_room was not correct. Expected 22, got 2
FAIL: Hand count after playing council_room was not correct. Expected 25, got 27
FAIL: Hand count after playing council_room was not correct. Expected 27, got 61
FAIL: Hand count after playing council_room was not correct. Expected 27, got 466
FAIL: Hand count after playing council_room was not correct. Expected 27, got 283
FAIL: Hand count after playing council_room was not correct. Expected 323, got 325
FAIL: Hand count after playing council_room was not correct. Expected 325, got 144
FAIL: Hand count after playing council_room was not correct. Expected 325, got 325
FAIL: Hand count after playing council_room was not correct. Expected 325, got 479
FAIL: Hand count after playing council_room was not correct. Expected 325, got 327
FAIL: Hand count after playing council_room was not correct. Expected 327, got 239
FAIL: Hand count after playing council_room was not correct. Expected 327, got 418
FAIL: Hand count after playing council_room was not correct. Expected 327, got 167
FAIL: Hand count after playing council_room was not correct. Expected 444, got 446
FAIL: Hand count after playing council_room was not correct. Expected 446, got 105
FAIL: Hand count after playing council_room was not correct. Expected 446, got 169
FAIL: Hand count after playing council_room was not correct. Expected 446, got 395
FAIL: Hand count after playing council_room was not correct. Expected 415, got 417
FAIL: Hand count after playing council_room was not correct. Expected 417, got 182
FAIL: Hand count after playing council_room was not correct. Expected 417, got 192
FAIL: Hand count after playing council_room was not correct. Expected 417, got 100
FAIL: Hand count after playing council_room was not correct. Expected 234, got 236
FAIL: Hand count after playing council_room was not correct. Expected 236, got 106
FAIL: Hand count after playing council_room was not correct. Expected 236, got 483
FAIL: Hand count after playing council_room was not correct. Expected 236, got 205
FAIL: Hand count after playing council_room was not correct. Expected 64, got 66
FAIL: Hand count after playing council_room was not correct. Expected 66, got 180
FAIL: Hand count after playing council_room was not correct. Expected 66, got 414
FAIL: Hand count after playing council_room was not correct. Expected 66, got 120
FAIL: Hand count after playing council_room was not correct. Expected 53, got 55
FAIL: Hand count after playing council_room was not correct. Expected 55, got 394
FAIL: Hand count after playing council_room was not correct. Expected 55, got 344
FAIL: Hand count after playing council_room was not correct. Expected 55, got 369
FAIL: Hand count after playing council_room was not correct. Expected 112, got 114
FAIL: Hand count after playing council_room was not correct. Expected 114, got 400
FAIL: Hand count after playing council_room was not correct. Expected 114, got 335
FAIL: Hand count after playing council_room was not correct. Expected 114, got 142
FAIL: Hand count after playing council_room was not correct. Expected 448, got 450
FAIL: Hand count after playing council_room was not correct. Expected 450, got 324
FAIL: Hand count after playing council_room was not correct. Expected 450, got 380
FAIL: Hand count after playing council_room was not correct. Expected 450, got 26
FAIL: Hand count after playing council_room was not correct. Expected 296, got 298
FAIL: Hand count after playing council_room was not correct. Expected 298, got 12
FAIL: Hand count after playing council_room was not correct. Expected 298, got 12
FAIL: Hand count after playing council_room was not correct. Expected 298, got 180
FAIL: Hand count after playing council_room was not correct. Expected 227, got 229
FAIL: Hand count after playing council_room was not correct. Expected 229, got 70
FAIL: Hand count after playing council_room was not correct. Expected 229, got 434
FAIL: Hand count after playing council_room was not correct. Expected 229, got 36
FAIL: Hand count after playing council_room was not correct. Expected 222, got 224
FAIL: Hand count after playing council_room was not correct. Expected 224, got 496
FAIL: Hand count after playing council_room was not correct. Expected 224, got 312
FAIL: Hand count after playing council_room was not correct. Expected 224, got 92
FAIL: Hand count after playing council_room was not correct. Expected 58, got 60
FAIL: Hand count after playing council_room was not correct. Expected 60, got 27
FAIL: Hand count after playing council_room was not correct. Expected 60, got 53
FAIL: Hand count after playing council_room was not correct. Expected 60, got 473
FAIL: Hand count after playing council_room was not correct. Expected 275, got 277
FAIL: Hand count after playing council_room was not correct. Expected 277, got 212
FAIL: Hand count after playing council_room was not correct. Expected 277, got 286
FAIL: Hand count after playing council_room was not correct. Expected 277, got 272
FAIL: Hand count after playing council_room was not correct. Expected 309, got 311
FAIL: Hand count after playing council_room was not correct. Expected 311, got 172
FAIL: Hand count after playing council_room was not correct. Expected 311, got 135
FAIL: Hand count after playing council_room was not correct. Expected 311, got 102
FAIL: Hand count after playing council_room was not correct. Expected 277, got 279
FAIL: Hand count after playing council_room was not correct. Expected 279, got 190
FAIL: Hand count after playing council_room was not correct. Expected 279, got 45
FAIL: Hand count after playing council_room was not correct. Expected 279, got 309
FAIL: Hand count after playing council_room was not correct. Expected 314, got 316
FAIL: Hand count after playing council_room was not correct. Expected 316, got 54
FAIL: Hand count after playing council_room was not correct. Expected 316, got 402
FAIL: Hand count after playing council_room was not correct. Expected 316, got 147
FAIL: Hand count after playing council_room was not correct. Expected 456, got 458
FAIL: Hand count after playing council_room was not correct. Expected 458, got 368
FAIL: Hand count after playing council_room was not correct. Expected 458, got 287
FAIL: Hand count after playing council_room was not correct. Expected 458, got 362
FAIL: Hand count after playing council_room was not correct. Expected 297, got 299
FAIL: Hand count after playing council_room was not correct. Expected 299, got 327
FAIL: Hand count after playing council_room was not correct. Expected 299, got 109
FAIL: Hand count after playing council_room was not correct. Expected 299, got 336
FAIL: Hand count after playing council_room was not correct. Expected 228, got 230
FAIL: Hand count after playing council_room was not correct. Expected 230, got 112
FAIL: Hand count after playing council_room was not correct. Expected 230, got 474
FAIL: Hand count after playing council_room was not correct. Expected 230, got 235
FAIL: Hand count after playing council_room was not correct. Expected 181, got 183
FAIL: Hand count after playing council_room was not correct. Expected 183, got 95
FAIL: Hand count after playing council_room was not correct. Expected 183, got 455
FAIL: Hand count after playing council_room was not correct. Expected 183, got 240
FAIL: Hand count after playing council_room was not correct. Expected 173, got 175
FAIL: Hand count after playing council_room was not correct. Expected 175, got 314
FAIL: Hand count after playing council_room was not correct. Expected 175, got 291
FAIL: Hand count after playing council_room was not correct. Expected 175, got 422
FAIL: Hand count after playing council_room was not correct. Expected 91, got 93
FAIL: Hand count after playing council_room was not correct. Expected 93, got 228
FAIL: Hand count after playing council_room was not correct. Expected 93, got 129
FAIL: Hand count after playing council_room was not correct. Expected 93, got 418
FAIL: Hand count after playing council_room was not correct. Expected 227, got 229
FAIL: Hand count after playing council_room was not correct. Expected 229, got 433
FAIL: Hand count after playing council_room was not correct. Expected 229, got 457
FAIL: Hand count after playing council_room was not correct. Expected 229, got 434
FAIL: Hand count after playing council_room was not correct. Expected 440, got 442
FAIL: Hand count after playing council_room was not correct. Expected 442, got 376
FAIL: Hand count after playing council_room was not correct. Expected 442, got 89
FAIL: Hand count after playing council_room was not correct. Expected 442, got 71
FAIL: Hand count after playing council_room was not correct. Expected 202, got 204
FAIL: Hand count after playing council_room was not correct. Expected 204, got 498
FAIL: Hand count after playing council_room was not correct. Expected 204, got 270
FAIL: Hand count after playing council_room was not correct. Expected 204, got 500
FAIL: Hand count after playing council_room was not correct. Expected 34, got 36
FAIL: Hand count after playing council_room was not correct. Expected 36, got 87
FAIL: Hand count after playing council_room was not correct. Expected 36, got 155
FAIL: Hand count after playing council_room was not correct. Expected 36, got 155
FAIL: Hand count after playing council_room was not correct. Expected 138, got 140
FAIL: Hand count after playing council_room was not correct. Expected 140, got 123
FAIL: Hand count after playing council_room was not correct. Expected 140, got 214
FAIL: Hand count after playing council_room was not correct. Expected 140, got 13
FAIL: Hand count after playing council_room was not correct. Expected 164, got 166
FAIL: Hand count after playing council_room was not correct. Expected 166, got 371
FAIL: Hand count after playing council_room was not correct. Expected 166, got 367
FAIL: Hand count after playing council_room was not correct. Expected 166, got 156
FAIL: Hand count after playing council_room was not correct. Expected 242, got 244
FAIL: Hand count after playing council_room was not correct. Expected 244, got 496
FAIL: Hand count after playing council_room was not correct. Expected 244, got 471
FAIL: Hand count after playing council_room was not correct. Expected 244, got 425
FAIL: Hand count after playing council_room was not correct. Expected 190, got 192
FAIL: Hand count after playing council_room was not correct. Expected 192, got 288
FAIL: Hand count after playing council_room was not correct. Expected 192, got 356
FAIL: Hand count after playing council_room was not correct. Expected 192, got 300
FAIL: Hand count after playing council_room was not correct. Expected 174, got 176
FAIL: Hand count after playing council_room was not correct. Expected 176, got 44
FAIL: Hand count after playing council_room was not correct. Expected 176, got 17
FAIL: Hand count after playing council_room was not correct. Expected 176, got 419
FAIL: Hand count after playing council_room was not correct. Expected 182, got 184
FAIL: Hand count after playing council_room was not correct. Expected 184, got 138
FAIL: Hand count after playing council_room was not correct. Expected 184, got 457
FAIL: Hand count after playing council_room was not correct. Expected 184, got 491
FAIL: Hand count after playing council_room was not correct. Expected 190, got 192
FAIL: Hand count after playing council_room was not correct. Expected 192, got 384
FAIL: Hand count after playing council_room was not correct. Expected 192, got 394
FAIL: Hand count after playing council_room was not correct. Expected 192, got 174
FAIL: Hand count after playing council_room was not correct. Expected 224, got 226
FAIL: Hand count after playing council_room was not correct. Expected 226, got 179
FAIL: Hand count after playing council_room was not correct. Expected 226, got 467
FAIL: Hand count after playing council_room was not correct. Expected 226, got 85
FAIL: Hand count after playing council_room was not correct. Expected 290, got 292
FAIL: Hand count after playing council_room was not correct. Expected 292, got 266
FAIL: Hand count after playing council_room was not correct. Expected 292, got 76
FAIL: Hand count after playing council_room was not correct. Expected 292, got 336
FAIL: Hand count after playing council_room was not correct. Expected 234, got 236
FAIL: Hand count after playing council_room was not correct. Expected 236, got 34
FAIL: Hand count after playing council_room was not correct. Expected 236, got 180
FAIL: Hand count after playing council_room was not correct. Expected 236, got 178
FAIL: Hand count after playing council_room was not correct. Expected 63, got 65
FAIL: Hand count after playing council_room was not correct. Expected 65, got 466
FAIL: Hand count after playing council_room was not correct. Expected 65, got 38
FAIL: Hand count after playing council_room was not correct. Expected 65, got 386
FAIL: Hand count after playing council_room was not correct. Expected 438, got 440
FAIL: Hand count after playing council_room was not correct. Expected 440, got 299
FAIL: Hand count after playing council_room was not correct. Expected 440, got 352
FAIL: Hand count after playing council_room was not correct. Expected 440, got 74
FAIL: Hand count after playing council_room was not correct. Expected 254, got 256
FAIL: Hand count after playing council_room was not correct. Expected 256, got 441
FAIL: Hand count after playing council_room was not correct. Expected 256, got 243
FAIL: Hand count after playing council_room was not correct. Expected 256, got 284
FAIL: Hand count after playing council_room was not correct. Expected 210, got 212
FAIL: Hand count after playing council_room was not correct. Expected 212, got 351
FAIL: Hand count after playing council_room was not correct. Expected 212, got 272
FAIL: Hand count after playing council_room was not correct. Expected 212, got 275
FAIL: Hand count after playing council_room was not correct. Expected 433, got 435
FAIL: Hand count after playing council_room was not correct. Expected 435, got 284
FAIL: Hand count after playing council_room was not correct. Expected 435, got 426
FAIL: Hand count after playing council_room was not correct. Expected 435, got 68
FAIL: Hand count after playing council_room was not correct. Expected 105, got 107
FAIL: Hand count after playing council_room was not correct. Expected 107, got 212
FAIL: Hand count after playing council_room was not correct. Expected 107, got 117
FAIL: Hand count after playing council_room was not correct. Expected 107, got 46
FAIL: Hand count after playing council_room was not correct. Expected 334, got 336
FAIL: Hand count after playing council_room was not correct. Expected 336, got 199
FAIL: Hand count after playing council_room was not correct. Expected 336, got 43
FAIL: Hand count after playing council_room was not correct. Expected 336, got 427
FAIL: Hand count after playing council_room was not correct. Expected 149, got 151
FAIL: Hand count after playing council_room was not correct. Expected 151, got 492
FAIL: Hand count after playing council_room was not correct. Expected 151, got 384
FAIL: Hand count after playing council_room was not correct. Expected 151, got 406
FAIL: Hand count after playing council_room was not correct. Expected 179, got 181
FAIL: Hand count after playing council_room was not correct. Expected 181, got 164
FAIL: Hand count after playing council_room was not correct. Expected 181, got 170
FAIL: Hand count after playing council_room was not correct. Expected 181, got 489
FAIL: Hand count after playing council_room was not correct. Expected 464, got 466
FAIL: Hand count after playing council_room was not correct. Expected 466, got 111
FAIL: Hand count after playing council_room was not correct. Expected 466, got 72
FAIL: Hand count after playing council_room was not correct. Expected 466, got 463
FAIL: Hand count after playing council_room was not correct. Expected 231, got 233
FAIL: Hand count after playing council_room was not correct. Expected 233, got 88
FAIL: Hand count after playing council_room was not correct. Expected 233, got 357
FAIL: Hand count after playing council_room was not correct. Expected 233, got 239
FAIL: Hand count after playing council_room was not correct. Expected 69, got 71
FAIL: Hand count after playing council_room was not correct. Expected 71, got 55
FAIL: Hand count after playing council_room was not correct. Expected 71, got 16
FAIL: Hand count after playing council_room was not correct. Expected 71, got 236
FAIL: Hand count after playing council_room was not correct. Expected 340, got 342
FAIL: Hand count after playing council_room was not correct. Expected 342, got 484
FAIL: Hand count after playing council_room was not correct. Expected 342, got 472
FAIL: Hand count after playing council_room was not correct. Expected 342, got 294
FAIL: Hand count after playing council_room was not correct. Expected 210, got 212
FAIL: Hand count after playing council_room was not correct. Expected 212, got 235
FAIL: Hand count after playing council_room was not correct. Expected 212, got 57
FAIL: Hand count after playing council_room was not correct. Expected 212, got 298
FAIL: Hand count after playing council_room was not correct. Expected 62, got 64
FAIL: Hand count after playing council_room was not correct. Expected 64, got 4
FAIL: Hand count after playing council_room was not correct. Expected 64, got 30
FAIL: Hand count after playing council_room was not correct. Expected 64, got 418
FAIL: Hand count after playing council_room was not correct. Expected 342, got 344
FAIL: Hand count after playing council_room was not correct. Expected 344, got 475
FAIL: Hand count after playing council_room was not correct. Expected 344, got 37
FAIL: Hand count after playing council_room was not correct. Expected 344, got 66
FAIL: Hand count after playing council_room was not correct. Expected 19, got 21
FAIL: Hand count after playing council_room was not correct. Expected 21, got 320
FAIL: Hand count after playing council_room was not correct. Expected 21, got 15
FAIL: Hand count after playing council_room was not correct. Expected 21, got 212
FAIL: Hand count after playing council_room was not correct. Expected 366, got 368
FAIL: Hand count after playing council_room was not correct. Expected 368, got 327
FAIL: Hand count after playing council_room was not correct. Expected 368, got 372
FAIL: Hand count after playing council_room was not correct. Expected 368, got 69
FAIL: Hand count after playing council_room was not correct. Expected 428, got 430
FAIL: Hand count after playing council_room was not correct. Expected 430, got 488
FAIL: Hand count after playing council_room was not correct. Expected 430, got 348
FAIL: Hand count after playing council_room was not correct. Expected 430, got 473
FAIL: Hand count after playing council_room was not correct. Expected 151, got 153
FAIL: Hand count after playing council_room was not correct. Expected 153, got 336
FAIL: Hand count after playing council_room was not correct. Expected 153, got 27
FAIL: Hand count after playing council_room was not correct. Expected 153, got 397
FAIL: Hand count after playing council_room was not correct. Expected 468, got 470
FAIL: Hand count after playing council_room was not correct. Expected 470, got 300
FAIL: Hand count after playing council_room was not correct. Expected 470, got 323
FAIL: Hand count after playing council_room was not correct. Expected 470, got 223
FAIL: Hand count after playing council_room was not correct. Expected 363, got 365
FAIL: Hand count after playing council_room was not correct. Expected 365, got 384
FAIL: Hand count after playing council_room was not correct. Expected 365, got 115
FAIL: Hand count after playing council_room was not correct. Expected 365, got 365
FAIL: Hand count after playing council_room was not correct. Expected 102, got 104
FAIL: Hand count after playing council_room was not correct. Expected 104, got 26
FAIL: Hand count after playing council_room was not correct. Expected 104, got 228
FAIL: Hand count after playing council_room was not correct. Expected 104, got 431
FAIL: Hand count after playing council_room was not correct. Expected 404, got 406
FAIL: Hand count after playing council_room was not correct. Expected 406, got 306
FAIL: Hand count after playing council_room was not correct. Expected 406, got 137
FAIL: Hand count after playing council_room was not correct. Expected 406, got 16
FAIL: Hand count after playing council_room was not correct. Expected 102, got 104
FAIL: Hand count after playing council_room was not correct. Expected 104, got 236
FAIL: Hand count after playing council_room was not correct. Expected 104, got 314
FAIL: Hand count after playing council_room was not correct. Expected 104, got 142
FAIL: Hand count after playing council_room was not correct. Expected 403, got 405
FAIL: Hand count after playing council_room was not correct. Expected 405, got 399
FAIL: Hand count after playing council_room was not correct. Expected 405, got 9
FAIL: Hand count after playing council_room was not correct. Expected 405, got 111
FAIL: Hand count after playing council_room was not correct. Expected 427, got 429
FAIL: Hand count after playing council_room was not correct. Expected 429, got 325
FAIL: Hand count after playing council_room was not correct. Expected 429, got 59
FAIL: Hand count after playing council_room was not correct. Expected 429, got 154
FAIL: Hand count after playing council_room was not correct. Expected 436, got 438
FAIL: Hand count after playing council_room was not correct. Expected 438, got 187
FAIL: Hand count after playing council_room was not correct. Expected 438, got 148
FAIL: Hand count after playing council_room was not correct. Expected 438, got 202
FAIL: Hand count after playing council_room was not correct. Expected 370, got 372
FAIL: Hand count after playing council_room was not correct. Expected 372, got 228
FAIL: Hand count after playing council_room was not correct. Expected 372, got 66
FAIL: Hand count after playing council_room was not correct. Expected 372, got 7
FAIL: Hand count after playing council_room was not correct. Expected 119, got 121
FAIL: Hand count after playing council_room was not correct. Expected 121, got 339
FAIL: Hand count after playing council_room was not correct. Expected 121, got 118
FAIL: Hand count after playing council_room was not correct. Expected 121, got 484
FAIL: Hand count after playing council_room was not correct. Expected 475, got 477
FAIL: Hand count after playing council_room was not correct. Expected 477, got 8
FAIL: Hand count after playing council_room was not correct. Expected 477, got 246
FAIL: Hand count after playing council_room was not correct. Expected 477, got 241
FAIL: Hand count after playing council_room was not correct. Expected 114, got 116
FAIL: Hand count after playing council_room was not correct. Expected 116, got 309
FAIL: Hand count after playing council_room was not correct. Expected 116, got 220
FAIL: Hand count after playing council_room was not correct. Expected 116, got 230
FAIL: Hand count after playing council_room was not correct. Expected 367, got 369
FAIL: Hand count after playing council_room was not correct. Expected 369, got 141
FAIL: Hand count after playing council_room was not correct. Expected 369, got 282
FAIL: Hand count after playing council_room was not correct. Expected 369, got 138
FAIL: Hand count after playing council_room was not correct. Expected 244, got 246
FAIL: Hand count after playing council_room was not correct. Expected 246, got 230
FAIL: Hand count after playing council_room was not correct. Expected 246, got 326
FAIL: Hand count after playing council_room was not correct. Expected 246, got 445
FAIL: Hand count after playing council_room was not correct. Expected 321, got 323
FAIL: Hand count after playing council_room was not correct. Expected 323, got 44
FAIL: Hand count after playing council_room was not correct. Expected 323, got 174
FAIL: Hand count after playing council_room was not correct. Expected 323, got 158
FAIL: Hand count after playing council_room was not correct. Expected 326, got 328
FAIL: Hand count after playing council_room was not correct. Expected 328, got 386
FAIL: Hand count after playing council_room was not correct. Expected 328, got 242
FAIL: Hand count after playing council_room was not correct. Expected 328, got 86
FAIL: Hand count after playing council_room was not correct. Expected 57, got 59
FAIL: Hand count after playing council_room was not correct. Expected 59, got 254
FAIL: Hand count after playing council_room was not correct. Expected 59, got 118
FAIL: Hand count after playing council_room was not correct. Expected 59, got 59
FAIL: Hand count after playing council_room was not correct. Expected 166, got 168
FAIL: Hand count after playing council_room was not correct. Expected 168, got 307
FAIL: Hand count after playing council_room was not correct. Expected 168, got 466
FAIL: Hand count after playing council_room was not correct. Expected 168, got 127
FAIL: Hand count after playing council_room was not correct. Expected 166, got 168
FAIL: Hand count after playing council_room was not correct. Expected 168, got 181
FAIL: Hand count after playing council_room was not correct. Expected 168, got 177
FAIL: Hand count after playing council_room was not correct. Expected 168, got 430
FAIL: Hand count after playing council_room was not correct. Expected 12, got 14
FAIL: Hand count after playing council_room was not correct. Expected 14, got 89
FAIL: Hand count after playing council_room was not correct. Expected 14, got 128
FAIL: Hand count after playing council_room was not correct. Expected 14, got 215
FAIL: Hand count after playing council_room was not correct. Expected 239, got 241
FAIL: Hand count after playing council_room was not correct. Expected 241, got 350
FAIL: Hand count after playing council_room was not correct. Expected 241, got 31
FAIL: Hand count after playing council_room was not correct. Expected 241, got 303
FAIL: Hand count after playing council_room was not correct. Expected 389, got 391
FAIL: Hand count after playing council_room was not correct. Expected 391, got 374
FAIL: Hand count after playing council_room was not correct. Expected 391, got 31
FAIL: Hand count after playing council_room was not correct. Expected 391, got 409
FAIL: Hand count after playing council_room was not correct. Expected 351, got 353
FAIL: Hand count after playing council_room was not correct. Expected 353, got 413
FAIL: Hand count after playing council_room was not correct. Expected 353, got 419
FAIL: Hand count after playing council_room was not correct. Expected 353, got 249
FAIL: Hand count after playing council_room was not correct. Expected 441, got 443
FAIL: Hand count after playing council_room was not correct. Expected 443, got 370
FAIL: Hand count after playing council_room was not correct. Expected 443, got 262
FAIL: Hand count after playing council_room was not correct. Expected 443, got 272
FAIL: Hand count after playing council_room was not correct. Expected 117, got 119
FAIL: Hand count after playing council_room was not correct. Expected 119, got 437
FAIL: Hand count after playing council_room was not correct. Expected 119, got 128
FAIL: Hand count after playing council_room was not correct. Expected 119, got 33
FAIL: Hand count after playing council_room was not correct. Expected 248, got 250
FAIL: Hand count after playing council_room was not correct. Expected 250, got 94
FAIL: Hand count after playing council_room was not correct. Expected 250, got 309
FAIL: Hand count after playing council_room was not correct. Expected 250, got 51
FAIL: Hand count after playing council_room was not correct. Expected 351, got 353
FAIL: Hand count after playing council_room was not correct. Expected 353, got 137
FAIL: Hand count after playing council_room was not correct. Expected 353, got 477
FAIL: Hand count after playing council_room was not correct. Expected 353, got 17
FAIL: Hand count after playing council_room was not correct. Expected 196, got 198
FAIL: Hand count after playing council_room was not correct. Expected 198, got 179
FAIL: Hand count after playing council_room was not correct. Expected 198, got 110
FAIL: Hand count after playing council_room was not correct. Expected 198, got 403
FAIL: Hand count after playing council_room was not correct. Expected 444, got 446
FAIL: Hand count after playing council_room was not correct. Expected 446, got 493
FAIL: Hand count after playing council_room was not correct. Expected 446, got 82
FAIL: Hand count after playing council_room was not correct. Expected 446, got 15
FAIL: Hand count after playing council_room was not correct. Expected 261, got 263
FAIL: Hand count after playing council_room was not correct. Expected 263, got 178
FAIL: Hand count after playing council_room was not correct. Expected 263, got 285
FAIL: Hand count after playing council_room was not correct. Expected 263, got 226
FAIL: Hand count after playing council_room was not correct. Expected 118, got 120
FAIL: Hand count after playing council_room was not correct. Expected 120, got 10
FAIL: Hand count after playing council_room was not correct. Expected 120, got 437
FAIL: Hand count after playing council_room was not correct. Expected 120, got 174
FAIL: Hand count after playing council_room was not correct. Expected 39, got 41
FAIL: Hand count after playing council_room was not correct. Expected 41, got 128
FAIL: Hand count after playing council_room was not correct. Expected 41, got 325
FAIL: Hand count after playing council_room was not correct. Expected 41, got 337
FAIL: Hand count after playing council_room was not correct. Expected 296, got 298
FAIL: Hand count after playing council_room was not correct. Expected 298, got 132
FAIL: Hand count after playing council_room was not correct. Expected 298, got 257
FAIL: Hand count after playing council_room was not correct. Expected 298, got 256
FAIL: Hand count after playing council_room was not correct. Expected 481, got 483
FAIL: Hand count after playing council_room was not correct. Expected 483, got 331
FAIL: Hand count after playing council_room was not correct. Expected 483, got 269
FAIL: Hand count after playing council_room was not correct. Expected 483, got 307
FAIL: Hand count after playing council_room was not correct. Expected 489, got 491
FAIL: Hand count after playing council_room was not correct. Expected 491, got 247
FAIL: Hand count after playing council_room was not correct. Expected 491, got 445
FAIL: Hand count after playing council_room was not correct. Expected 491, got 251
FAIL: Hand count after playing council_room was not correct. Expected 181, got 183
FAIL: Hand count after playing council_room was not correct. Expected 183, got 250
FAIL: Hand count after playing council_room was not correct. Expected 183, got 171
FAIL: Hand count after playing council_room was not correct. Expected 183, got 444
FAIL: Hand count after playing council_room was not correct. Expected 325, got 327
FAIL: Hand count after playing council_room was not correct. Expected 327, got 43
FAIL: Hand count after playing council_room was not correct. Expected 327, got 182
FAIL: Hand count after playing council_room was not correct. Expected 327, got 461
FAIL: Hand count after playing council_room was not correct. Expected 329, got 331
FAIL: Hand count after playing council_room was not correct. Expected 331, got 244
FAIL: Hand count after playing council_room was not correct. Expected 331, got 13
FAIL: Hand count after playing council_room was not correct. Expected 331, got 61
FAIL: Hand count after playing council_room was not correct. Expected 324, got 326
FAIL: Hand count after playing council_room was not correct. Expected 326, got 172
FAIL: Hand count after playing council_room was not correct. Expected 326, got 478
FAIL: Hand count after playing council_room was not correct. Expected 326, got 167
FAIL: Hand count after playing council_room was not correct. Expected 480, got 482
FAIL: Hand count after playing council_room was not correct. Expected 482, got 323
FAIL: Hand count after playing council_room was not correct. Expected 482, got 211
FAIL: Hand count after playing council_room was not correct. Expected 482, got 60
FAIL: Hand count after playing council_room was not correct. Expected 408, got 410
FAIL: Hand count after playing council_room was not correct. Expected 410, got 289
FAIL: Hand count after playing council_room was not correct. Expected 410, got 202
FAIL: Hand count after playing council_room was not correct. Expected 410, got 171
FAIL: Hand count after playing council_room was not correct. Expected 239, got 241
FAIL: Hand count after playing council_room was not correct. Expected 241, got 15
FAIL: Hand count after playing council_room was not correct. Expected 241, got 440
FAIL: Hand count after playing council_room was not correct. Expected 241, got 458
FAIL: Hand count after playing council_room was not correct. Expected 311, got 313
FAIL: Hand count after playing council_room was not correct. Expected 313, got 397
FAIL: Hand count after playing council_room was not correct. Expected 313, got 356
FAIL: Hand count after playing council_room was not correct. Expected 313, got 273
FAIL: Hand count after playing council_room was not correct. Expected 338, got 340
FAIL: Hand count after playing council_room was not correct. Expected 340, got 136
FAIL: Hand count after playing council_room was not correct. Expected 340, got 351
FAIL: Hand count after playing council_room was not correct. Expected 340, got 356
FAIL: Hand count after playing council_room was not correct. Expected 11, got 13
FAIL: Hand count after playing council_room was not correct. Expected 13, got 78
FAIL: Hand count after playing council_room was not correct. Expected 13, got 368
FAIL: Hand count after playing council_room was not correct. Expected 13, got 461
FAIL: Hand count after playing council_room was not correct. Expected 254, got 256
FAIL: Hand count after playing council_room was not correct. Expected 256, got 474
FAIL: Hand count after playing council_room was not correct. Expected 256, got 355
FAIL: Hand count after playing council_room was not correct. Expected 256, got 376
FAIL: Hand count after playing council_room was not correct. Expected 223, got 225
FAIL: Hand count after playing council_room was not correct. Expected 225, got 162
FAIL: Hand count after playing council_room was not correct. Expected 225, got 197
FAIL: Hand count after playing council_room was not correct. Expected 225, got 261
FAIL: Hand count after playing council_room was not correct. Expected 315, got 317
FAIL: Hand count after playing council_room was not correct. Expected 317, got 430
FAIL: Hand count after playing council_room was not correct. Expected 317, got 75
FAIL: Hand count after playing council_room was not correct. Expected 317, got 150
FAIL: Hand count after playing council_room was not correct. Expected 490, got 492
FAIL: Hand count after playing council_room was not correct. Expected 492, got 61
FAIL: Hand count after playing council_room was not correct. Expected 492, got 287
FAIL: Hand count after playing council_room was not correct. Expected 492, got 372
FAIL: Hand count after playing council_room was not correct. Expected 59, got 61
FAIL: Hand count after playing council_room was not correct. Expected 61, got 31
FAIL: Hand count after playing council_room was not correct. Expected 61, got 297
FAIL: Hand count after playing council_room was not correct. Expected 61, got 247
FAIL: Hand count after playing council_room was not correct. Expected 146, got 148
FAIL: Hand count after playing council_room was not correct. Expected 148, got 191
FAIL: Hand count after playing council_room was not correct. Expected 148, got 247
FAIL: Hand count after playing council_room was not correct. Expected 148, got 333
FAIL: Hand count after playing council_room was not correct. Expected 127, got 129
FAIL: Hand count after playing council_room was not correct. Expected 129, got 202
FAIL: Hand count after playing council_room was not correct. Expected 129, got 386
FAIL: Hand count after playing council_room was not correct. Expected 129, got 91
FAIL: Hand count after playing council_room was not correct. Expected 351, got 353
FAIL: Hand count after playing council_room was not correct. Expected 353, got 298
FAIL: Hand count after playing council_room was not correct. Expected 353, got 295
FAIL: Hand count after playing council_room was not correct. Expected 353, got 273
FAIL: Hand count after playing council_room was not correct. Expected 209, got 211
FAIL: Hand count after playing council_room was not correct. Expected 211, got 228
FAIL: Hand count after playing council_room was not correct. Expected 211, got 492
FAIL: Hand count after playing council_room was not correct. Expected 211, got 138
FAIL: Hand count after playing council_room was not correct. Expected 178, got 180
FAIL: Hand count after playing council_room was not correct. Expected 180, got 274
FAIL: Hand count after playing council_room was not correct. Expected 180, got 366
FAIL: Hand count after playing council_room was not correct. Expected 180, got 298
FAIL: Hand count after playing council_room was not correct. Expected 4, got 6
FAIL: Hand count after playing council_room was not correct. Expected 6, got 180
FAIL: Hand count after playing council_room was not correct. Expected 6, got 320
FAIL: Hand count after playing council_room was not correct. Expected 6, got 402
FAIL: Hand count after playing council_room was not correct. Expected 124, got 126
FAIL: Hand count after playing council_room was not correct. Expected 126, got 39
FAIL: Hand count after playing council_room was not correct. Expected 126, got 136
FAIL: Hand count after playing council_room was not correct. Expected 126, got 15
FAIL: Hand count after playing council_room was not correct. Expected 229, got 231
FAIL: Hand count after playing council_room was not correct. Expected 231, got 344
FAIL: Hand count after playing council_room was not correct. Expected 231, got 368
FAIL: Hand count after playing council_room was not correct. Expected 231, got 411
FAIL: Hand count after playing council_room was not correct. Expected 263, got 265
FAIL: Hand count after playing council_room was not correct. Expected 265, got 106
FAIL: Hand count after playing council_room was not correct. Expected 265, got 264
FAIL: Hand count after playing council_room was not correct. Expected 265, got 467
FAIL: Hand count after playing council_room was not correct. Expected 153, got 155
FAIL: Hand count after playing council_room was not correct. Expected 155, got 268
FAIL: Hand count after playing council_room was not correct. Expected 155, got 83
FAIL: Hand count after playing council_room was not correct. Expected 155, got 240
FAIL: Hand count after playing council_room was not correct. Expected 484, got 486
FAIL: Hand count after playing council_room was not correct. Expected 486, got 281
FAIL: Hand count after playing council_room was not correct. Expected 486, got 252
FAIL: Hand count after playing council_room was not correct. Expected 486, got 490
FAIL: Hand count after playing council_room was not correct. Expected 40, got 42
FAIL: Hand count after playing council_room was not correct. Expected 42, got 55
FAIL: Hand count after playing council_room was not correct. Expected 42, got 499
FAIL: Hand count after playing council_room was not correct. Expected 42, got 318
FAIL: Hand count after playing council_room was not correct. Expected 154, got 156
FAIL: Hand count after playing council_room was not correct. Expected 156, got 51
FAIL: Hand count after playing council_room was not correct. Expected 156, got 325
FAIL: Hand count after playing council_room was not correct. Expected 156, got 341
FAIL: Hand count after playing council_room was not correct. Expected 180, got 182
FAIL: Hand count after playing council_room was not correct. Expected 182, got 374
FAIL: Hand count after playing council_room was not correct. Expected 182, got 181
FAIL: Hand count after playing council_room was not correct. Expected 182, got 99
FAIL: Hand count after playing council_room was not correct. Expected 335, got 337
FAIL: Hand count after playing council_room was not correct. Expected 337, got 38
FAIL: Hand count after playing council_room was not correct. Expected 337, got 366
FAIL: Hand count after playing council_room was not correct. Expected 337, got 321
FAIL: Hand count after playing council_room was not correct. Expected 243, got 245
FAIL: Hand count after playing council_room was not correct. Expected 245, got 472
FAIL: Hand count after playing council_room was not correct. Expected 245, got 444
FAIL: Hand count after playing council_room was not correct. Expected 245, got 463
FAIL: Hand count after playing council_room was not correct. Expected 88, got 90
FAIL: Hand count after playing council_room was not correct. Expected 90, got 95
FAIL: Hand count after playing council_room was not correct. Expected 90, got 294
FAIL: Hand count after playing council_room was not correct. Expected 90, got 258
FAIL: Hand count after playing council_room was not correct. Expected 61, got 63
FAIL: Hand count after playing council_room was not correct. Expected 63, got 243
FAIL: Hand count after playing council_room was not correct. Expected 63, got 257
FAIL: Hand count after playing council_room was not correct. Expected 63, got 289
FAIL: Hand count after playing council_room was not correct. Expected 52, got 54
FAIL: Hand count after playing council_room was not correct. Expected 54, got 79
FAIL: Hand count after playing council_room was not correct. Expected 54, got 409
FAIL: Hand count after playing council_room was not correct. Expected 54, got 241
FAIL: Hand count after playing council_room was not correct. Expected 313, got 315
FAIL: Hand count after playing council_room was not correct. Expected 315, got 389
FAIL: Hand count after playing council_room was not correct. Expected 315, got 232
FAIL: Hand count after playing council_room was not correct. Expected 315, got 341
FAIL: Hand count after playing council_room was not correct. Expected 294, got 296
FAIL: Hand count after playing council_room was not correct. Expected 296, got 280
FAIL: Hand count after playing council_room was not correct. Expected 296, got 424
FAIL: Hand count after playing council_room was not correct. Expected 296, got 470
FAIL: Hand count after playing council_room was not correct. Expected 387, got 389
FAIL: Hand count after playing council_room was not correct. Expected 389, got 266
FAIL: Hand count after playing council_room was not correct. Expected 389, got 478
FAIL: Hand count after playing council_room was not correct. Expected 389, got 424
FAIL: Hand count after playing council_room was not correct. Expected 144, got 146
FAIL: Hand count after playing council_room was not correct. Expected 146, got 450
FAIL: Hand count after playing council_room was not correct. Expected 146, got 269
FAIL: Hand count after playing council_room was not correct. Expected 146, got 165
FAIL: Hand count after playing council_room was not correct. Expected 227, got 229
FAIL: Hand count after playing council_room was not correct. Expected 229, got 202
FAIL: Hand count after playing council_room was not correct. Expected 229, got 94
FAIL: Hand count after playing council_room was not correct. Expected 229, got 145
FAIL: Hand count after playing council_room was not correct. Expected 309, got 311
FAIL: Hand count after playing council_room was not correct. Expected 311, got 144
FAIL: Hand count after playing council_room was not correct. Expected 311, got 439
FAIL: Hand count after playing council_room was not correct. Expected 311, got 342
FAIL: Hand count after playing council_room was not correct. Expected 107, got 109
FAIL: Hand count after playing council_room was not correct. Expected 109, got 282
FAIL: Hand count after playing council_room was not correct. Expected 109, got 318
FAIL: Hand count after playing council_room was not correct. Expected 109, got 243
FAIL: Hand count after playing council_room was not correct. Expected 347, got 349
FAIL: Hand count after playing council_room was not correct. Expected 349, got 182
FAIL: Hand count after playing council_room was not correct. Expected 349, got 378
FAIL: Hand count after playing council_room was not correct. Expected 349, got 308
FAIL: Hand count after playing council_room was not correct. Expected 180, got 182
FAIL: Hand count after playing council_room was not correct. Expected 182, got 481
FAIL: Hand count after playing council_room was not correct. Expected 182, got 158
FAIL: Hand count after playing council_room was not correct. Expected 182, got 182
FAIL: Hand count after playing council_room was not correct. Expected 212, got 214
FAIL: Hand count after playing council_room was not correct. Expected 214, got 2
FAIL: Hand count after playing council_room was not correct. Expected 214, got 112
FAIL: Hand count after playing council_room was not correct. Expected 214, got 275
FAIL: Hand count after playing council_room was not correct. Expected 259, got 261
FAIL: Hand count after playing council_room was not correct. Expected 261, got 293
FAIL: Hand count after playing council_room was not correct. Expected 261, got 291
FAIL: Hand count after playing council_room was not correct. Expected 261, got 458
FAIL: Hand count after playing council_room was not correct. Expected 32, got 34
FAIL: Hand count after playing council_room was not correct. Expected 34, got 276
FAIL: Hand count after playing council_room was not correct. Expected 34, got 469
FAIL: Hand count after playing council_room was not correct. Expected 34, got 89
FAIL: Hand count after playing council_room was not correct. Expected 174, got 176
FAIL: Hand count after playing council_room was not correct. Expected 176, got 50
FAIL: Hand count after playing council_room was not correct. Expected 176, got 326
FAIL: Hand count after playing council_room was not correct. Expected 176, got 225
FAIL: Hand count after playing council_room was not correct. Expected 427, got 429
FAIL: Hand count after playing council_room was not correct. Expected 429, got 491
FAIL: Hand count after playing council_room was not correct. Expected 429, got 294
FAIL: Hand count after playing council_room was not correct. Expected 429, got 327
FAIL: Hand count after playing council_room was not correct. Expected 479, got 481
FAIL: Hand count after playing council_room was not correct. Expected 481, got 186
FAIL: Hand count after playing council_room was not correct. Expected 481, got 289
FAIL: Hand count after playing council_room was not correct. Expected 481, got 275
FAIL: Hand count after playing council_room was not correct. Expected 266, got 268
FAIL: Hand count after playing council_room was not correct. Expected 268, got 446
FAIL: Hand count after playing council_room was not correct. Expected 268, got 229
FAIL: Hand count after playing council_room was not correct. Expected 268, got 363
FAIL: Hand count after playing council_room was not correct. Expected 362, got 364
FAIL: Hand count after playing council_room was not correct. Expected 364, got 284
FAIL: Hand count after playing council_room was not correct. Expected 364, got 492
FAIL: Hand count after playing council_room was not correct. Expected 364, got 46
FAIL: Hand count after playing council_room was not correct. Expected 36, got 38
FAIL: Hand count after playing council_room was not correct. Expected 38, got 371
FAIL: Hand count after playing council_room was not correct. Expected 38, got 476
FAIL: Hand count after playing council_room was not correct. Expected 38, got 250
FAIL: Hand count after playing council_room was not correct. Expected 73, got 75
FAIL: Hand count after playing council_room was not correct. Expected 75, got 236
FAIL: Hand count after playing council_room was not correct. Expected 75, got 358
FAIL: Hand count after playing council_room was not correct. Expected 75, got 151
FAIL: Hand count after playing council_room was not correct. Expected 292, got 294
FAIL: Hand count after playing council_room was not correct. Expected 294, got 206
FAIL: Hand count after playing council_room was not correct. Expected 294, got 7
FAIL: Hand count after playing council_room was not correct. Expected 294, got 108
FAIL: Hand count after playing council_room was not correct. Expected 264, got 266
FAIL: Hand count after playing council_room was not correct. Expected 266, got 414
FAIL: Hand count after playing council_room was not correct. Expected 266, got 307
FAIL: Hand count after playing council_room was not correct. Expected 266, got 221
FAIL: Hand count after playing council_room was not correct. Expected 428, got 430
FAIL: Hand count after playing council_room was not correct. Expected 430, got 135
FAIL: Hand count after playing council_room was not correct. Expected 430, got 194
FAIL: Hand count after playing council_room was not correct. Expected 430, got 132
FAIL: Hand count after playing council_room was not correct. Expected 14, got 16
FAIL: Hand count after playing council_room was not correct. Expected 16, got 116
FAIL: Hand count after playing council_room was not correct. Expected 16, got 180
FAIL: Hand count after playing council_room was not correct. Expected 16, got 238
FAIL: Hand count after playing council_room was not correct. Expected 369, got 371
FAIL: Hand count after playing council_room was not correct. Expected 371, got 340
FAIL: Hand count after playing council_room was not correct. Expected 371, got 415
FAIL: Hand count after playing council_room was not correct. Expected 371, got 245
FAIL: Hand count after playing council_room was not correct. Expected 178, got 180
FAIL: Hand count after playing council_room was not correct. Expected 180, got 212
FAIL: Hand count after playing council_room was not correct. Expected 180, got 256
FAIL: Hand count after playing council_room was not correct. Expected 180, got 417
FAIL: Hand count after playing council_room was not correct. Expected 63, got 65
FAIL: Hand count after playing council_room was not correct. Expected 65, got 194
FAIL: Hand count after playing council_room was not correct. Expected 65, got 476
FAIL: Hand count after playing council_room was not correct. Expected 65, got 486
FAIL: Hand count after playing council_room was not correct. Expected 108, got 110
FAIL: Hand count after playing council_room was not correct. Expected 110, got 3
FAIL: Hand count after playing council_room was not correct. Expected 110, got 54
FAIL: Hand count after playing council_room was not correct. Expected 110, got 132
FAIL: Hand count after playing council_room was not correct. Expected 282, got 284
FAIL: Hand count after playing council_room was not correct. Expected 284, got 249
FAIL: Hand count after playing council_room was not correct. Expected 284, got 327
FAIL: Hand count after playing council_room was not correct. Expected 284, got 420
FAIL: Hand count after playing council_room was not correct. Expected 387, got 389
FAIL: Hand count after playing council_room was not correct. Expected 389, got 372
FAIL: Hand count after playing council_room was not correct. Expected 389, got 192
FAIL: Hand count after playing council_room was not correct. Expected 389, got 185
FAIL: Hand count after playing council_room was not correct. Expected 273, got 275
FAIL: Hand count after playing council_room was not correct. Expected 275, got 423
FAIL: Hand count after playing council_room was not correct. Expected 275, got 229
FAIL: Hand count after playing council_room was not correct. Expected 275, got 455
FAIL: Hand count after playing council_room was not correct. Expected 74, got 76
FAIL: Hand count after playing council_room was not correct. Expected 76, got 460
FAIL: Hand count after playing council_room was not correct. Expected 76, got 368
FAIL: Hand count after playing council_room was not correct. Expected 76, got 395
FAIL: Hand count after playing council_room was not correct. Expected 84, got 86
FAIL: Hand count after playing council_room was not correct. Expected 86, got 245
FAIL: Hand count after playing council_room was not correct. Expected 86, got 304
FAIL: Hand count after playing council_room was not correct. Expected 86, got 200
FAIL: Hand count after playing council_room was not correct. Expected 332, got 334
FAIL: Hand count after playing council_room was not correct. Expected 334, got 258
FAIL: Hand count after playing council_room was not correct. Expected 334, got 22
FAIL: Hand count after playing council_room was not correct. Expected 334, got 231
FAIL: Hand count after playing council_room was not correct. Expected 146, got 148
FAIL: Hand count after playing council_room was not correct. Expected 148, got 216
FAIL: Hand count after playing council_room was not correct. Expected 148, got 247
FAIL: Hand count after playing council_room was not correct. Expected 148, got 310
FAIL: Hand count after playing council_room was not correct. Expected 337, got 339
FAIL: Hand count after playing council_room was not correct. Expected 339, got 417
FAIL: Hand count after playing council_room was not correct. Expected 339, got 209
FAIL: Hand count after playing council_room was not correct. Expected 339, got 342
FAIL: Hand count after playing council_room was not correct. Expected 282, got 284
FAIL: Hand count after playing council_room was not correct. Expected 284, got 433
FAIL: Hand count after playing council_room was not correct. Expected 284, got 454
FAIL: Hand count after playing council_room was not correct. Expected 284, got 154
FAIL: Hand count after playing council_room was not correct. Expected 494, got 496
FAIL: Hand count after playing council_room was not correct. Expected 496, got 87
FAIL: Hand count after playing council_room was not correct. Expected 496, got 327
FAIL: Hand count after playing council_room was not correct. Expected 496, got 297
FAIL: Hand count after playing council_room was not correct. Expected 254, got 256
FAIL: Hand count after playing council_room was not correct. Expected 256, got 169
FAIL: Hand count after playing council_room was not correct. Expected 256, got 292
FAIL: Hand count after playing council_room was not correct. Expected 256, got 177
FAIL: Hand count after playing council_room was not correct. Expected 213, got 215
FAIL: Hand count after playing council_room was not correct. Expected 215, got 154
FAIL: Hand count after playing council_room was not correct. Expected 215, got 353
FAIL: Hand count after playing council_room was not correct. Expected 215, got 230
FAIL: Hand count after playing council_room was not correct. Expected 346, got 348
FAIL: Hand count after playing council_room was not correct. Expected 348, got 161
FAIL: Hand count after playing council_room was not correct. Expected 348, got 323
FAIL: Hand count after playing council_room was not correct. Expected 348, got 351
FAIL: Hand count after playing council_room was not correct. Expected 116, got 118
FAIL: Hand count after playing council_room was not correct. Expected 118, got 323
FAIL: Hand count after playing council_room was not correct. Expected 118, got 205
FAIL: Hand count after playing council_room was not correct. Expected 118, got 163
FAIL: Hand count after playing council_room was not correct. Expected 102, got 104
FAIL: Hand count after playing council_room was not correct. Expected 104, got 304
FAIL: Hand count after playing council_room was not correct. Expected 104, got 165
FAIL: Hand count after playing council_room was not correct. Expected 104, got 291
FAIL: Hand count after playing council_room was not correct. Expected 121, got 123
FAIL: Hand count after playing council_room was not correct. Expected 123, got 302
FAIL: Hand count after playing council_room was not correct. Expected 123, got 430
FAIL: Hand count after playing council_room was not correct. Expected 123, got 85
FAIL: Hand count after playing council_room was not correct. Expected 190, got 192
FAIL: Hand count after playing council_room was not correct. Expected 192, got 171
FAIL: Hand count after playing council_room was not correct. Expected 192, got 135
FAIL: Hand count after playing council_room was not correct. Expected 192, got 90
FAIL: Hand count after playing council_room was not correct. Expected 219, got 221
FAIL: Hand count after playing council_room was not correct. Expected 221, got 377
FAIL: Hand count after playing council_room was not correct. Expected 221, got 322
FAIL: Hand count after playing council_room was not correct. Expected 221, got 291
FAIL: Hand count after playing council_room was not correct. Expected 232, got 234
FAIL: Hand count after playing council_room was not correct. Expected 234, got 77
FAIL: Hand count after playing council_room was not correct. Expected 234, got 467
FAIL: Hand count after playing council_room was not correct. Expected 234, got 269
FAIL: Hand count after playing council_room was not correct. Expected 338, got 340
FAIL: Hand count after playing council_room was not correct. Expected 340, got 467
FAIL: Hand count after playing council_room was not correct. Expected 340, got 217
FAIL: Hand count after playing council_room was not correct. Expected 340, got 480
FAIL: Hand count after playing council_room was not correct. Expected 343, got 345
FAIL: Hand count after playing council_room was not correct. Expected 345, got 63
FAIL: Hand count after playing council_room was not correct. Expected 345, got 306
FAIL: Hand count after playing council_room was not correct. Expected 345, got 248
FAIL: Hand count after playing council_room was not correct. Expected 321, got 323
FAIL: Hand count after playing council_room was not correct. Expected 323, got 65
FAIL: Hand count after playing council_room was not correct. Expected 323, got 1
FAIL: Hand count after playing council_room was not correct. Expected 323, got 40
FAIL: Hand count after playing council_room was not correct. Expected 476, got 478
FAIL: Hand count after playing council_room was not correct. Expected 478, got 253
FAIL: Hand count after playing council_room was not correct. Expected 478, got 428
FAIL: Hand count after playing council_room was not correct. Expected 478, got 38
FAIL: Hand count after playing council_room was not correct. Expected 293, got 295
FAIL: Hand count after playing council_room was not correct. Expected 295, got 156
FAIL: Hand count after playing council_room was not correct. Expected 295, got 107
FAIL: Hand count after playing council_room was not correct. Expected 295, got 152
FAIL: Hand count after playing council_room was not correct. Expected 249, got 251
FAIL: Hand count after playing council_room was not correct. Expected 251, got 470
FAIL: Hand count after playing council_room was not correct. Expected 251, got 11
FAIL: Hand count after playing council_room was not correct. Expected 251, got 416
FAIL: Hand count after playing council_room was not correct. Expected 393, got 395
FAIL: Hand count after playing council_room was not correct. Expected 395, got 438
FAIL: Hand count after playing council_room was not correct. Expected 395, got 498
FAIL: Hand count after playing council_room was not correct. Expected 395, got 451
FAIL: Hand count after playing council_room was not correct. Expected 252, got 254
FAIL: Hand count after playing council_room was not correct. Expected 254, got 7
FAIL: Hand count after playing council_room was not correct. Expected 254, got 360
FAIL: Hand count after playing council_room was not correct. Expected 254, got 326
FAIL: Hand count after playing council_room was not correct. Expected 410, got 412
FAIL: Hand count after playing council_room was not correct. Expected 412, got 184
FAIL: Hand count after playing council_room was not correct. Expected 412, got 58
FAIL: Hand count after playing council_room was not correct. Expected 412, got 480
FAIL: Hand count after playing council_room was not correct. Expected 416, got 418
FAIL: Hand count after playing council_room was not correct. Expected 418, got 147
FAIL: Hand count after playing council_room was not correct. Expected 418, got 340
FAIL: Hand count after playing council_room was not correct. Expected 418, got 265
FAIL: Hand count after playing council_room was not correct. Expected 80, got 82
FAIL: Hand count after playing council_room was not correct. Expected 82, got 319
FAIL: Hand count after playing council_room was not correct. Expected 82, got 339
FAIL: Hand count after playing council_room was not correct. Expected 82, got 305
FAIL: Hand count after playing council_room was not correct. Expected 229, got 231
FAIL: Hand count after playing council_room was not correct. Expected 231, got 421
FAIL: Hand count after playing council_room was not correct. Expected 231, got 307
FAIL: Hand count after playing council_room was not correct. Expected 231, got 300
FAIL: Hand count after playing council_room was not correct. Expected 34, got 36
FAIL: Hand count after playing council_room was not correct. Expected 36, got 76
FAIL: Hand count after playing council_room was not correct. Expected 36, got 485
FAIL: Hand count after playing council_room was not correct. Expected 36, got 473
FAIL: Hand count after playing council_room was not correct. Expected 236, got 238
FAIL: Hand count after playing council_room was not correct. Expected 238, got 496
FAIL: Hand count after playing council_room was not correct. Expected 238, got 488
FAIL: Hand count after playing council_room was not correct. Expected 238, got 120
FAIL: Hand count after playing council_room was not correct. Expected 490, got 492
FAIL: Hand count after playing council_room was not correct. Expected 492, got 120
FAIL: Hand count after playing council_room was not correct. Expected 492, got 291
FAIL: Hand count after playing council_room was not correct. Expected 492, got 264
FAIL: Hand count after playing council_room was not correct. Expected 415, got 417
FAIL: Hand count after playing council_room was not correct. Expected 417, got 133
FAIL: Hand count after playing council_room was not correct. Expected 417, got 35
FAIL: Hand count after playing council_room was not correct. Expected 417, got 395
FAIL: Hand count after playing council_room was not correct. Expected 85, got 87
FAIL: Hand count after playing council_room was not correct. Expected 87, got 116
FAIL: Hand count after playing council_room was not correct. Expected 87, got 225
FAIL: Hand count after playing council_room was not correct. Expected 87, got 278
FAIL: Hand count after playing council_room was not correct. Expected 24, got 26
FAIL: Hand count after playing council_room was not correct. Expected 26, got 185
FAIL: Hand count after playing council_room was not correct. Expected 26, got 117
FAIL: Hand count after playing council_room was not correct. Expected 26, got 384
FAIL: Hand count after playing council_room was not correct. Expected 434, got 436
FAIL: Hand count after playing council_room was not correct. Expected 436, got 338
FAIL: Hand count after playing council_room was not correct. Expected 436, got 308
FAIL: Hand count after playing council_room was not correct. Expected 436, got 26
FAIL: Hand count after playing council_room was not correct. Expected 441, got 443
FAIL: Hand count after playing council_room was not correct. Expected 443, got 299
FAIL: Hand count after playing council_room was not correct. Expected 443, got 295
FAIL: Hand count after playing council_room was not correct. Expected 443, got 327
FAIL: Hand count after playing council_room was not correct. Expected 235, got 237
FAIL: Hand count after playing council_room was not correct. Expected 237, got 485
FAIL: Hand count after playing council_room was not correct. Expected 237, got 301
FAIL: Hand count after playing council_room was not correct. Expected 237, got 205
FAIL: Hand count after playing council_room was not correct. Expected 479, got 481
FAIL: Hand count after playing council_room was not correct. Expected 481, got 143
FAIL: Hand count after playing council_room was not correct. Expected 481, got 304
FAIL: Hand count after playing council_room was not correct. Expected 481, got 242
FAIL: Hand count after playing council_room was not correct. Expected 348, got 350
FAIL: Hand count after playing council_room was not correct. Expected 350, got 382
FAIL: Hand count after playing council_room was not correct. Expected 350, got 60
FAIL: Hand count after playing council_room was not correct. Expected 350, got 194
FAIL: Hand count after playing council_room was not correct. Expected 444, got 446
FAIL: Hand count after playing council_room was not correct. Expected 446, got 321
FAIL: Hand count after playing council_room was not correct. Expected 446, got 18
FAIL: Hand count after playing council_room was not correct. Expected 446, got 121
FAIL: Hand count after playing council_room was not correct. Expected 59, got 61
FAIL: Hand count after playing council_room was not correct. Expected 61, got 34
FAIL: Hand count after playing council_room was not correct. Expected 61, got 500
FAIL: Hand count after playing council_room was not correct. Expected 61, got 310
FAIL: Hand count after playing council_room was not correct. Expected 403, got 405
FAIL: Hand count after playing council_room was not correct. Expected 405, got 34
FAIL: Hand count after playing council_room was not correct. Expected 405, got 478
FAIL: Hand count after playing council_room was not correct. Expected 405, got 261
FAIL: Hand count after playing council_room was not correct. Expected 191, got 193
FAIL: Hand count after playing council_room was not correct. Expected 193, got 394
FAIL: Hand count after playing council_room was not correct. Expected 193, got 448
FAIL: Hand count after playing council_room was not correct. Expected 193, got 327
FAIL: Hand count after playing council_room was not correct. Expected 203, got 205
FAIL: Hand count after playing council_room was not correct. Expected 205, got 24
FAIL: Hand count after playing council_room was not correct. Expected 205, got 373
FAIL: Hand count after playing council_room was not correct. Expected 205, got 399
FAIL: Hand count after playing council_room was not correct. Expected 459, got 461
FAIL: Hand count after playing council_room was not correct. Expected 461, got 408
FAIL: Hand count after playing council_room was not correct. Expected 461, got 362
FAIL: Hand count after playing council_room was not correct. Expected 461, got 58
FAIL: Hand count after playing council_room was not correct. Expected 410, got 412
FAIL: Hand count after playing council_room was not correct. Expected 412, got 132
FAIL: Hand count after playing council_room was not correct. Expected 412, got 162
FAIL: Hand count after playing council_room was not correct. Expected 412, got 234
FAIL: Hand count after playing council_room was not correct. Expected 163, got 165
FAIL: Hand count after playing council_room was not correct. Expected 165, got 375
FAIL: Hand count after playing council_room was not correct. Expected 165, got 372
FAIL: Hand count after playing council_room was not correct. Expected 165, got 454
FAIL: Hand count after playing council_room was not correct. Expected 103, got 105
FAIL: Hand count after playing council_room was not correct. Expected 105, got 334
FAIL: Hand count after playing council_room was not correct. Expected 105, got 305
FAIL: Hand count after playing council_room was not correct. Expected 105, got 458
FAIL: Hand count after playing council_room was not correct. Expected 217, got 219
FAIL: Hand count after playing council_room was not correct. Expected 219, got 45
FAIL: Hand count after playing council_room was not correct. Expected 219, got 393
FAIL: Hand count after playing council_room was not correct. Expected 219, got 326
FAIL: Hand count after playing council_room was not correct. Expected 104, got 106
FAIL: Hand count after playing council_room was not correct. Expected 106, got 25
FAIL: Hand count after playing council_room was not correct. Expected 106, got 233
FAIL: Hand count after playing council_room was not correct. Expected 106, got 63
FAIL: Hand count after playing council_room was not correct. Expected 466, got 468
FAIL: Hand count after playing council_room was not correct. Expected 468, got 87
FAIL: Hand count after playing council_room was not correct. Expected 468, got 419
FAIL: Hand count after playing council_room was not correct. Expected 468, got 199
FAIL: Hand count after playing council_room was not correct. Expected 320, got 322
FAIL: Hand count after playing council_room was not correct. Expected 322, got 263
FAIL: Hand count after playing council_room was not correct. Expected 322, got 21
FAIL: Hand count after playing council_room was not correct. Expected 322, got 234
FAIL: Hand count after playing council_room was not correct. Expected 466, got 468
FAIL: Hand count after playing council_room was not correct. Expected 468, got 166
FAIL: Hand count after playing council_room was not correct. Expected 468, got 414
FAIL: Hand count after playing council_room was not correct. Expected 468, got 480
FAIL: Hand count after playing council_room was not correct. Expected 485, got 487
FAIL: Hand count after playing council_room was not correct. Expected 487, got 396
FAIL: Hand count after playing council_room was not correct. Expected 487, got 239
FAIL: Hand count after playing council_room was not correct. Expected 487, got 218
FAIL: Hand count after playing council_room was not correct. Expected 187, got 189
FAIL: Hand count after playing council_room was not correct. Expected 189, got 416
FAIL: Hand count after playing council_room was not correct. Expected 189, got 220
FAIL: Hand count after playing council_room was not correct. Expected 189, got 320
FAIL: Hand count after playing council_room was not correct. Expected 97, got 99
FAIL: Hand count after playing council_room was not correct. Expected 99, got 461
FAIL: Hand count after playing council_room was not correct. Expected 99, got 371
FAIL: Hand count after playing council_room was not correct. Expected 99, got 140
FAIL: Hand count after playing council_room was not correct. Expected 326, got 328
FAIL: Hand count after playing council_room was not correct. Expected 328, got 18
FAIL: Hand count after playing council_room was not correct. Expected 328, got 233
FAIL: Hand count after playing council_room was not correct. Expected 328, got 52
FAIL: Hand count after playing council_room was not correct. Expected 161, got 163
FAIL: Hand count after playing council_room was not correct. Expected 163, got 267
FAIL: Hand count after playing council_room was not correct. Expected 163, got 168
FAIL: Hand count after playing council_room was not correct. Expected 163, got 163
FAIL: Hand count after playing council_room was not correct. Expected 8, got 10
FAIL: Hand count after playing council_room was not correct. Expected 10, got 239
FAIL: Hand count after playing council_room was not correct. Expected 10, got 258
FAIL: Hand count after playing council_room was not correct. Expected 10, got 391
FAIL: Hand count after playing council_room was not correct. Expected 389, got 391
FAIL: Hand count after playing council_room was not correct. Expected 391, got 320
FAIL: Hand count after playing council_room was not correct. Expected 391, got 393
FAIL: Hand count after playing council_room was not correct. Expected 391, got 28
FAIL: Hand count after playing council_room was not correct. Expected 446, got 448
FAIL: Hand count after playing council_room was not correct. Expected 448, got 93
FAIL: Hand count after playing council_room was not correct. Expected 448, got 199
FAIL: Hand count after playing council_room was not correct. Expected 448, got 361
FAIL: Hand count after playing council_room was not correct. Expected 222, got 224
FAIL: Hand count after playing council_room was not correct. Expected 224, got 458
FAIL: Hand count after playing council_room was not correct. Expected 224, got 244
FAIL: Hand count after playing council_room was not correct. Expected 224, got 363
FAIL: Hand count after playing council_room was not correct. Expected 133, got 135
FAIL: Hand count after playing council_room was not correct. Expected 135, got 493
FAIL: Hand count after playing council_room was not correct. Expected 135, got 55
FAIL: Hand count after playing council_room was not correct. Expected 135, got 156
FAIL: Hand count after playing council_room was not correct. Expected 325, got 327
FAIL: Hand count after playing council_room was not correct. Expected 327, got 253
FAIL: Hand count after playing council_room was not correct. Expected 327, got 65
FAIL: Hand count after playing council_room was not correct. Expected 327, got 303
FAIL: Hand count after playing council_room was not correct. Expected 47, got 49
FAIL: Hand count after playing council_room was not correct. Expected 49, got 471
FAIL: Hand count after playing council_room was not correct. Expected 49, got 315
FAIL: Hand count after playing council_room was not correct. Expected 49, got 106
FAIL: Hand count after playing council_room was not correct. Expected 58, got 60
FAIL: Hand count after playing council_room was not correct. Expected 60, got 393
FAIL: Hand count after playing council_room was not correct. Expected 60, got 394
FAIL: Hand count after playing council_room was not correct. Expected 60, got 209
FAIL: Hand count after playing council_room was not correct. Expected 447, got 449
FAIL: Hand count after playing council_room was not correct. Expected 449, got 91
FAIL: Hand count after playing council_room was not correct. Expected 449, got 27
FAIL: Hand count after playing council_room was not correct. Expected 449, got 78
FAIL: Hand count after playing council_room was not correct. Expected 417, got 419
FAIL: Hand count after playing council_room was not correct. Expected 419, got 21
FAIL: Hand count after playing council_room was not correct. Expected 419, got 226
FAIL: Hand count after playing council_room was not correct. Expected 419, got 324
FAIL: Hand count after playing council_room was not correct. Expected 175, got 177
FAIL: Hand count after playing council_room was not correct. Expected 177, got 456
FAIL: Hand count after playing council_room was not correct. Expected 177, got 77
FAIL: Hand count after playing council_room was not correct. Expected 177, got 71
FAIL: Hand count after playing council_room was not correct. Expected 22, got 24
FAIL: Hand count after playing council_room was not correct. Expected 24, got 182
FAIL: Hand count after playing council_room was not correct. Expected 24, got 258
FAIL: Hand count after playing council_room was not correct. Expected 24, got 73
FAIL: Hand count after playing council_room was not correct. Expected 78, got 80
FAIL: Hand count after playing council_room was not correct. Expected 80, got 2
FAIL: Hand count after playing council_room was not correct. Expected 80, got 213
FAIL: Hand count after playing council_room was not correct. Expected 80, got 443
FAIL: Hand count after playing council_room was not correct. Expected 320, got 322
FAIL: Hand count after playing council_room was not correct. Expected 322, got 31
FAIL: Hand count after playing council_room was not correct. Expected 322, got 314
FAIL: Hand count after playing council_room was not correct. Expected 322, got 11
FAIL: Hand count after playing council_room was not correct. Expected 130, got 132
FAIL: Hand count after playing council_room was not correct. Expected 132, got 336
FAIL: Hand count after playing council_room was not correct. Expected 132, got 85
FAIL: Hand count after playing council_room was not correct. Expected 132, got 149
FAIL: Hand count after playing council_room was not correct. Expected 74, got 76
FAIL: Hand count after playing council_room was not correct. Expected 76, got 257
FAIL: Hand count after playing council_room was not correct. Expected 76, got 446
FAIL: Hand count after playing council_room was not correct. Expected 76, got 146
FAIL: Hand count after playing council_room was not correct. Expected 215, got 217
FAIL: Hand count after playing council_room was not correct. Expected 217, got 110
FAIL: Hand count after playing council_room was not correct. Expected 217, got 121
FAIL: Hand count after playing council_room was not correct. Expected 217, got 278
FAIL: Hand count after playing council_room was not correct. Expected 235, got 237
FAIL: Hand count after playing council_room was not correct. Expected 237, got 85
FAIL: Hand count after playing council_room was not correct. Expected 237, got 118
FAIL: Hand count after playing council_room was not correct. Expected 237, got 36
FAIL: Hand count after playing council_room was not correct. Expected 208, got 210
FAIL: Hand count after playing council_room was not correct. Expected 210, got 225
FAIL: Hand count after playing council_room was not correct. Expected 210, got 136
FAIL: Hand count after playing council_room was not correct. Expected 210, got 204
FAIL: Hand count after playing council_room was not correct. Expected 456, got 458
FAIL: Hand count after playing council_room was not correct. Expected 458, got 209
FAIL: Hand count after playing council_room was not correct. Expected 458, got 439
FAIL: Hand count after playing council_room was not correct. Expected 458, got 345
FAIL: Hand count after playing council_room was not correct. Expected 322, got 324
FAIL: Hand count after playing council_room was not correct. Expected 324, got 371
FAIL: Hand count after playing council_room was not correct. Expected 324, got 263
FAIL: Hand count after playing council_room was not correct. Expected 324, got 358
FAIL: Hand count after playing council_room was not correct. Expected 399, got 401
FAIL: Hand count after playing council_room was not correct. Expected 401, got 266
FAIL: Hand count after playing council_room was not correct. Expected 401, got 232
FAIL: Hand count after playing council_room was not correct. Expected 401, got 265
FAIL: Hand count after playing council_room was not correct. Expected 226, got 228
FAIL: Hand count after playing council_room was not correct. Expected 228, got 205
FAIL: Hand count after playing council_room was not correct. Expected 228, got 424
FAIL: Hand count after playing council_room was not correct. Expected 228, got 117
FAIL: Hand count after playing council_room was not correct. Expected 249, got 251
FAIL: Hand count after playing council_room was not correct. Expected 251, got 417
FAIL: Hand count after playing council_room was not correct. Expected 251, got 219
FAIL: Hand count after playing council_room was not correct. Expected 251, got 370
FAIL: Hand count after playing council_room was not correct. Expected 344, got 346
FAIL: Hand count after playing council_room was not correct. Expected 346, got 260
FAIL: Hand count after playing council_room was not correct. Expected 346, got 12
FAIL: Hand count after playing council_room was not correct. Expected 346, got 275
FAIL: Hand count after playing council_room was not correct. Expected 388, got 390
FAIL: Hand count after playing council_room was not correct. Expected 390, got 350
FAIL: Hand count after playing council_room was not correct. Expected 390, got 122
FAIL: Hand count after playing council_room was not correct. Expected 390, got 153
FAIL: Hand count after playing council_room was not correct. Expected 379, got 381
FAIL: Hand count after playing council_room was not correct. Expected 381, got 136
FAIL: Hand count after playing council_room was not correct. Expected 381, got 429
FAIL: Hand count after playing council_room was not correct. Expected 381, got 498
FAIL: Hand count after playing council_room was not correct. Expected 399, got 401
FAIL: Hand count after playing council_room was not correct. Expected 401, got 291
FAIL: Hand count after playing council_room was not correct. Expected 401, got 383
FAIL: Hand count after playing council_room was not correct. Expected 401, got 374
FAIL: Hand count after playing council_room was not correct. Expected 302, got 304
FAIL: Hand count after playing council_room was not correct. Expected 304, got 135
FAIL: Hand count after playing council_room was not correct. Expected 304, got 34
FAIL: Hand count after playing council_room was not correct. Expected 304, got 270
FAIL: Hand count after playing council_room was not correct. Expected 318, got 320
FAIL: Hand count after playing council_room was not correct. Expected 320, got 233
FAIL: Hand count after playing council_room was not correct. Expected 320, got 351
FAIL: Hand count after playing council_room was not correct. Expected 320, got 264
FAIL: Hand count after playing council_room was not correct. Expected 341, got 343
FAIL: Hand count after playing council_room was not correct. Expected 343, got 255
FAIL: Hand count after playing council_room was not correct. Expected 343, got 219
FAIL: Hand count after playing council_room was not correct. Expected 343, got 372
FAIL: Hand count after playing council_room was not correct. Expected 468, got 470
FAIL: Hand count after playing council_room was not correct. Expected 470, got 198
FAIL: Hand count after playing council_room was not correct. Expected 470, got 196
FAIL: Hand count after playing council_room was not correct. Expected 470, got 364
FAIL: Hand count after playing council_room was not correct. Expected 169, got 171
FAIL: Hand count after playing council_room was not correct. Expected 171, got 38
FAIL: Hand count after playing council_room was not correct. Expected 171, got 197
FAIL: Hand count after playing council_room was not correct. Expected 171, got 404
FAIL: Hand count after playing council_room was not correct. Expected 296, got 298
FAIL: Hand count after playing council_room was not correct. Expected 298, got 322
FAIL: Hand count after playing council_room was not correct. Expected 298, got 115
FAIL: Hand count after playing council_room was not correct. Expected 298, got 70
FAIL: Hand count after playing council_room was not correct. Expected 493, got 495
FAIL: Hand count after playing council_room was not correct. Expected 495, got 22
FAIL: Hand count after playing council_room was not correct. Expected 495, got 103
FAIL: Hand count after playing council_room was not correct. Expected 495, got 76
FAIL: Hand count after playing council_room was not correct. Expected 449, got 451
FAIL: Hand count after playing council_room was not correct. Expected 451, got 37
FAIL: Hand count after playing council_room was not correct. Expected 451, got 461
FAIL: Hand count after playing council_room was not correct. Expected 451, got 134
FAIL: Hand count after playing council_room was not correct. Expected 244, got 246
FAIL: Hand count after playing council_room was not correct. Expected 246, got 19
FAIL: Hand count after playing council_room was not correct. Expected 246, got 37
FAIL: Hand count after playing council_room was not correct. Expected 246, got 263
FAIL: Hand count after playing council_room was not correct. Expected 346, got 348
FAIL: Hand count after playing council_room was not correct. Expected 348, got 450
FAIL: Hand count after playing council_room was not correct. Expected 348, got 119
FAIL: Hand count after playing council_room was not correct. Expected 348, got 154
FAIL: Hand count after playing council_room was not correct. Expected 384, got 386
FAIL: Hand count after playing council_room was not correct. Expected 386, got 419
FAIL: Hand count after playing council_room was not correct. Expected 386, got 49
FAIL: Hand count after playing council_room was not correct. Expected 386, got 346
FAIL: Hand count after playing council_room was not correct. Expected 88, got 90
FAIL: Hand count after playing council_room was not correct. Expected 90, got 241
FAIL: Hand count after playing council_room was not correct. Expected 90, got 126
FAIL: Hand count after playing council_room was not correct. Expected 90, got 303
FAIL: Hand count after playing council_room was not correct. Expected 84, got 86
FAIL: Hand count after playing council_room was not correct. Expected 86, got 350
FAIL: Hand count after playing council_room was not correct. Expected 86, got 352
FAIL: Hand count after playing council_room was not correct. Expected 86, got 134
FAIL: Hand count after playing council_room was not correct. Expected 64, got 66
FAIL: Hand count after playing council_room was not correct. Expected 66, got 206
FAIL: Hand count after playing council_room was not correct. Expected 66, got 147
FAIL: Hand count after playing council_room was not correct. Expected 66, got 466
FAIL: Hand count after playing council_room was not correct. Expected 301, got 303
FAIL: Hand count after playing council_room was not correct. Expected 303, got 453
FAIL: Hand count after playing council_room was not correct. Expected 303, got 159
FAIL: Hand count after playing council_room was not correct. Expected 303, got 114
FAIL: Hand count after playing council_room was not correct. Expected 312, got 314
FAIL: Hand count after playing council_room was not correct. Expected 314, got 46
FAIL: Hand count after playing council_room was not correct. Expected 314, got 485
FAIL: Hand count after playing council_room was not correct. Expected 314, got 310
FAIL: Hand count after playing council_room was not correct. Expected 110, got 112
FAIL: Hand count after playing council_room was not correct. Expected 112, got 229
FAIL: Hand count after playing council_room was not correct. Expected 112, got 430
FAIL: Hand count after playing council_room was not correct. Expected 112, got 247
FAIL: Hand count after playing council_room was not correct. Expected 284, got 286
FAIL: Hand count after playing council_room was not correct. Expected 286, got 487
FAIL: Hand count after playing council_room was not correct. Expected 286, got 304
FAIL: Hand count after playing council_room was not correct. Expected 286, got 156
FAIL: Hand count after playing council_room was not correct. Expected 418, got 420
FAIL: Hand count after playing council_room was not correct. Expected 420, got 144
FAIL: Hand count after playing council_room was not correct. Expected 420, got 79
FAIL: Hand count after playing council_room was not correct. Expected 420, got 422
FAIL: Hand count after playing council_room was not correct. Expected 42, got 44
FAIL: Hand count after playing council_room was not correct. Expected 44, got 163
FAIL: Hand count after playing council_room was not correct. Expected 44, got 488
FAIL: Hand count after playing council_room was not correct. Expected 44, got 418
FAIL: Hand count after playing council_room was not correct. Expected 222, got 224
FAIL: Hand count after playing council_room was not correct. Expected 224, got 298
FAIL: Hand count after playing council_room was not correct. Expected 224, got 46
FAIL: Hand count after playing council_room was not correct. Expected 224, got 130
FAIL: Hand count after playing council_room was not correct. Expected 228, got 230
FAIL: Hand count after playing council_room was not correct. Expected 230, got 489
FAIL: Hand count after playing council_room was not correct. Expected 230, got 234
FAIL: Hand count after playing council_room was not correct. Expected 230, got 121
FAIL: Hand count after playing council_room was not correct. Expected 100, got 102
FAIL: Hand count after playing council_room was not correct. Expected 102, got 213
FAIL: Hand count after playing council_room was not correct. Expected 102, got 356
FAIL: Hand count after playing council_room was not correct. Expected 102, got 444
FAIL: Hand count after playing council_room was not correct. Expected 334, got 336
FAIL: Hand count after playing council_room was not correct. Expected 336, got 13
FAIL: Hand count after playing council_room was not correct. Expected 336, got 263
FAIL: Hand count after playing council_room was not correct. Expected 336, got 102
FAIL: Hand count after playing council_room was not correct. Expected 344, got 346
FAIL: Hand count after playing council_room was not correct. Expected 346, got 129
FAIL: Hand count after playing council_room was not correct. Expected 346, got 46
FAIL: Hand count after playing council_room was not correct. Expected 346, got 267
FAIL: Hand count after playing council_room was not correct. Expected 230, got 232
FAIL: Hand count after playing council_room was not correct. Expected 232, got 91
FAIL: Hand count after playing council_room was not correct. Expected 232, got 252
FAIL: Hand count after playing council_room was not correct. Expected 232, got 318
FAIL: Hand count after playing council_room was not correct. Expected 23, got 25
FAIL: Hand count after playing council_room was not correct. Expected 25, got 175
FAIL: Hand count after playing council_room was not correct. Expected 25, got 150
FAIL: Hand count after playing council_room was not correct. Expected 25, got 162
FAIL: Hand count after playing council_room was not correct. Expected 91, got 93
FAIL: Hand count after playing council_room was not correct. Expected 93, got 35
FAIL: Hand count after playing council_room was not correct. Expected 93, got 101
FAIL: Hand count after playing council_room was not correct. Expected 93, got 348
FAIL: Hand count after playing council_room was not correct. Expected 244, got 246
FAIL: Hand count after playing council_room was not correct. Expected 246, got 178
FAIL: Hand count after playing council_room was not correct. Expected 246, got 1
FAIL: Hand count after playing council_room was not correct. Expected 246, got 297
FAIL: Hand count after playing council_room was not correct. Expected 305, got 307
FAIL: Hand count after playing council_room was not correct. Expected 307, got 7
FAIL: Hand count after playing council_room was not correct. Expected 307, got 326
FAIL: Hand count after playing council_room was not correct. Expected 307, got 375
FAIL: Hand count after playing council_room was not correct. Expected 59, got 61
FAIL: Hand count after playing council_room was not correct. Expected 61, got 156
FAIL: Hand count after playing council_room was not correct. Expected 61, got 367
FAIL: Hand count after playing council_room was not correct. Expected 61, got 354
FAIL: Hand count after playing council_room was not correct. Expected 496, got 498
FAIL: Hand count after playing council_room was not correct. Expected 498, got 256
FAIL: Hand count after playing council_room was not correct. Expected 498, got 173
FAIL: Hand count after playing council_room was not correct. Expected 498, got 32
FAIL: Hand count after playing council_room was not correct. Expected 44, got 46
FAIL: Hand count after playing council_room was not correct. Expected 46, got 391
FAIL: Hand count after playing council_room was not correct. Expected 46, got 171
FAIL: Hand count after playing council_room was not correct. Expected 46, got 326
FAIL: Hand count after playing council_room was not correct. Expected 436, got 438
FAIL: Hand count after playing council_room was not correct. Expected 438, got 268
FAIL: Hand count after playing council_room was not correct. Expected 438, got 418
FAIL: Hand count after playing council_room was not correct. Expected 438, got 227
FAIL: Hand count after playing council_room was not correct. Expected 462, got 464
FAIL: Hand count after playing council_room was not correct. Expected 464, got 491
FAIL: Hand count after playing council_room was not correct. Expected 464, got 92
FAIL: Hand count after playing council_room was not correct. Expected 464, got 50
FAIL: Hand count after playing council_room was not correct. Expected 57, got 59
FAIL: Hand count after playing council_room was not correct. Expected 59, got 207
FAIL: Hand count after playing council_room was not correct. Expected 59, got 275
FAIL: Hand count after playing council_room was not correct. Expected 59, got 388
FAIL: Hand count after playing council_room was not correct. Expected 469, got 471
FAIL: Hand count after playing council_room was not correct. Expected 471, got 214
FAIL: Hand count after playing council_room was not correct. Expected 471, got 72
FAIL: Hand count after playing council_room was not correct. Expected 471, got 246
FAIL: Hand count after playing council_room was not correct. Expected 474, got 476
FAIL: Hand count after playing council_room was not correct. Expected 476, got 494
FAIL: Hand count after playing council_room was not correct. Expected 476, got 345
FAIL: Hand count after playing council_room was not correct. Expected 476, got 417
FAIL: Hand count after playing council_room was not correct. Expected 248, got 250
FAIL: Hand count after playing council_room was not correct. Expected 250, got 437
FAIL: Hand count after playing council_room was not correct. Expected 250, got 430
FAIL: Hand count after playing council_room was not correct. Expected 250, got 150
FAIL: Hand count after playing council_room was not correct. Expected 395, got 397
FAIL: Hand count after playing council_room was not correct. Expected 397, got 137
FAIL: Hand count after playing council_room was not correct. Expected 397, got 249
FAIL: Hand count after playing council_room was not correct. Expected 397, got 376
FAIL: Hand count after playing council_room was not correct. Expected 494, got 496
FAIL: Hand count after playing council_room was not correct. Expected 496, got 362
FAIL: Hand count after playing council_room was not correct. Expected 496, got 158
FAIL: Hand count after playing council_room was not correct. Expected 496, got 160
FAIL: Hand count after playing council_room was not correct. Expected 158, got 160
FAIL: Hand count after playing council_room was not correct. Expected 160, got 61
FAIL: Hand count after playing council_room was not correct. Expected 160, got 307
FAIL: Hand count after playing council_room was not correct. Expected 160, got 411
FAIL: Hand count after playing council_room was not correct. Expected 257, got 259
FAIL: Hand count after playing council_room was not correct. Expected 259, got 135
FAIL: Hand count after playing council_room was not correct. Expected 259, got 93
FAIL: Hand count after playing council_room was not correct. Expected 259, got 439
FAIL: Hand count after playing council_room was not correct. Expected 31, got 33
FAIL: Hand count after playing council_room was not correct. Expected 33, got 182
FAIL: Hand count after playing council_room was not correct. Expected 33, got 110
FAIL: Hand count after playing council_room was not correct. Expected 33, got 28
FAIL: Hand count after playing council_room was not correct. Expected 80, got 82
FAIL: Hand count after playing council_room was not correct. Expected 82, got 274
FAIL: Hand count after playing council_room was not correct. Expected 82, got 440
FAIL: Hand count after playing council_room was not correct. Expected 82, got 266
FAIL: Hand count after playing council_room was not correct. Expected 26, got 28
FAIL: Hand count after playing council_room was not correct. Expected 28, got 169
FAIL: Hand count after playing council_room was not correct. Expected 28, got 335
FAIL: Hand count after playing council_room was not correct. Expected 28, got 448
FAIL: Hand count after playing council_room was not correct. Expected 427, got 429
FAIL: Hand count after playing council_room was not correct. Expected 429, got 56
FAIL: Hand count after playing council_room was not correct. Expected 429, got 80
FAIL: Hand count after playing council_room was not correct. Expected 429, got 79
FAIL: Hand count after playing council_room was not correct. Expected 248, got 250
FAIL: Hand count after playing council_room was not correct. Expected 250, got 10
FAIL: Hand count after playing council_room was not correct. Expected 250, got 275
FAIL: Hand count after playing council_room was not correct. Expected 250, got 213
FAIL: Hand count after playing council_room was not correct. Expected 102, got 104
FAIL: Hand count after playing council_room was not correct. Expected 104, got 209
FAIL: Hand count after playing council_room was not correct. Expected 104, got 328
FAIL: Hand count after playing council_room was not correct. Expected 104, got 321
FAIL: Hand count after playing council_room was not correct. Expected 354, got 356
FAIL: Hand count after playing council_room was not correct. Expected 356, got 464
FAIL: Hand count after playing council_room was not correct. Expected 356, got 459
FAIL: Hand count after playing council_room was not correct. Expected 356, got 361
FAIL: Hand count after playing council_room was not correct. Expected 61, got 63
FAIL: Hand count after playing council_room was not correct. Expected 63, got 396
FAIL: Hand count after playing council_room was not correct. Expected 63, got 159
FAIL: Hand count after playing council_room was not correct. Expected 63, got 142
FAIL: Hand count after playing council_room was not correct. Expected 434, got 436
FAIL: Hand count after playing council_room was not correct. Expected 436, got 271
FAIL: Hand count after playing council_room was not correct. Expected 436, got 202
FAIL: Hand count after playing council_room was not correct. Expected 436, got 158
FAIL: Hand count after playing council_room was not correct. Expected 44, got 46
FAIL: Hand count after playing council_room was not correct. Expected 46, got 323
FAIL: Hand count after playing council_room was not correct. Expected 46, got 75
FAIL: Hand count after playing council_room was not correct. Expected 46, got 213
FAIL: Hand count after playing council_room was not correct. Expected 385, got 387
FAIL: Hand count after playing council_room was not correct. Expected 387, got 124
FAIL: Hand count after playing council_room was not correct. Expected 387, got 486
FAIL: Hand count after playing council_room was not correct. Expected 387, got 125
FAIL: Hand count after playing council_room was not correct. Expected 385, got 387
FAIL: Hand count after playing council_room was not correct. Expected 387, got 470
FAIL: Hand count after playing council_room was not correct. Expected 387, got 193
FAIL: Hand count after playing council_room was not correct. Expected 387, got 241
FAIL: Hand count after playing council_room was not correct. Expected 46, got 48
FAIL: Hand count after playing council_room was not correct. Expected 48, got 155
FAIL: Hand count after playing council_room was not correct. Expected 48, got 213
FAIL: Hand count after playing council_room was not correct. Expected 48, got 19
FAIL: Hand count after playing council_room was not correct. Expected 154, got 156
FAIL: Hand count after playing council_room was not correct. Expected 156, got 403
FAIL: Hand count after playing council_room was not correct. Expected 156, got 314
FAIL: Hand count after playing council_room was not correct. Expected 156, got 483
FAIL: Hand count after playing council_room was not correct. Expected 8, got 10
FAIL: Hand count after playing council_room was not correct. Expected 10, got 439
FAIL: Hand count after playing council_room was not correct. Expected 10, got 498
FAIL: Hand count after playing council_room was not correct. Expected 10, got 419
FAIL: Hand count after playing council_room was not correct. Expected 266, got 268
FAIL: Hand count after playing council_room was not correct. Expected 268, got 137
FAIL: Hand count after playing council_room was not correct. Expected 268, got 352
FAIL: Hand count after playing council_room was not correct. Expected 268, got 492
FAIL: Hand count after playing council_room was not correct. Expected 151, got 153
FAIL: Hand count after playing council_room was not correct. Expected 153, got 352
FAIL: Hand count after playing council_room was not correct. Expected 153, got 40
FAIL: Hand count after playing council_room was not correct. Expected 153, got 111
FAIL: Hand count after playing council_room was not correct. Expected 310, got 312
FAIL: Hand count after playing council_room was not correct. Expected 312, got 44
FAIL: Hand count after playing council_room was not correct. Expected 312, got 368
FAIL: Hand count after playing council_room was not correct. Expected 312, got 232
FAIL: Hand count after playing council_room was not correct. Expected 244, got 246
FAIL: Hand count after playing council_room was not correct. Expected 246, got 463
FAIL: Hand count after playing council_room was not correct. Expected 246, got 51
FAIL: Hand count after playing council_room was not correct. Expected 246, got 431
FAIL: Hand count after playing council_room was not correct. Expected 9, got 11
FAIL: Hand count after playing council_room was not correct. Expected 11, got 314
FAIL: Hand count after playing council_room was not correct. Expected 11, got 459
FAIL: Hand count after playing council_room was not correct. Expected 11, got 218
FAIL: Hand count after playing council_room was not correct. Expected 102, got 104
FAIL: Hand count after playing council_room was not correct. Expected 104, got 131
FAIL: Hand count after playing council_room was not correct. Expected 104, got 149
FAIL: Hand count after playing council_room was not correct. Expected 104, got 162
FAIL: Hand count after playing council_room was not correct. Expected 88, got 90
FAIL: Hand count after playing council_room was not correct. Expected 90, got 139
FAIL: Hand count after playing council_room was not correct. Expected 90, got 351
FAIL: Hand count after playing council_room was not correct. Expected 90, got 353
FAIL: Hand count after playing council_room was not correct. Expected 439, got 441
FAIL: Hand count after playing council_room was not correct. Expected 441, got 173
FAIL: Hand count after playing council_room was not correct. Expected 441, got 274
FAIL: Hand count after playing council_room was not correct. Expected 441, got 344
FAIL: Hand count after playing council_room was not correct. Expected 480, got 482
FAIL: Hand count after playing council_room was not correct. Expected 482, got 181
FAIL: Hand count after playing council_room was not correct. Expected 482, got 434
FAIL: Hand count after playing council_room was not correct. Expected 482, got 83
FAIL: Hand count after playing council_room was not correct. Expected 331, got 333
FAIL: Hand count after playing council_room was not correct. Expected 333, got 494
FAIL: Hand count after playing council_room was not correct. Expected 333, got 327
FAIL: Hand count after playing council_room was not correct. Expected 333, got 428
FAIL: Hand count after playing council_room was not correct. Expected 474, got 476
FAIL: Hand count after playing council_room was not correct. Expected 476, got 190
FAIL: Hand count after playing council_room was not correct. Expected 476, got 54
FAIL: Hand count after playing council_room was not correct. Expected 476, got 249
FAIL: Hand count after playing council_room was not correct. Expected 145, got 147
FAIL: Hand count after playing council_room was not correct. Expected 147, got 162
FAIL: Hand count after playing council_room was not correct. Expected 147, got 460
FAIL: Hand count after playing council_room was not correct. Expected 147, got 232
FAIL: Hand count after playing council_room was not correct. Expected 260, got 262
FAIL: Hand count after playing council_room was not correct. Expected 262, got 441
FAIL: Hand count after playing council_room was not correct. Expected 262, got 322
FAIL: Hand count after playing council_room was not correct. Expected 262, got 40
FAIL: Hand count after playing council_room was not correct. Expected 58, got 60
FAIL: Hand count after playing council_room was not correct. Expected 60, got 490
FAIL: Hand count after playing council_room was not correct. Expected 60, got 42
FAIL: Hand count after playing council_room was not correct. Expected 60, got 410
FAIL: Hand count after playing council_room was not correct. Expected 342, got 344
FAIL: Hand count after playing council_room was not correct. Expected 344, got 392
FAIL: Hand count after playing council_room was not correct. Expected 344, got 263
FAIL: Hand count after playing council_room was not correct. Expected 344, got 209
FAIL: Hand count after playing council_room was not correct. Expected 32, got 34
FAIL: Hand count after playing council_room was not correct. Expected 34, got 410
FAIL: Hand count after playing council_room was not correct. Expected 34, got 383
FAIL: Hand count after playing council_room was not correct. Expected 34, got 34
FAIL: Hand count after playing council_room was not correct. Expected 296, got 298
FAIL: Hand count after playing council_room was not correct. Expected 298, got 391
FAIL: Hand count after playing council_room was not correct. Expected 298, got 294
FAIL: Hand count after playing council_room was not correct. Expected 298, got 388
FAIL: Hand count after playing council_room was not correct. Expected 375, got 377
FAIL: Hand count after playing council_room was not correct. Expected 377, got 352
FAIL: Hand count after playing council_room was not correct. Expected 377, got 84
FAIL: Hand count after playing council_room was not correct. Expected 377, got 437
FAIL: Hand count after playing council_room was not correct. Expected 306, got 308
FAIL: Hand count after playing council_room was not correct. Expected 308, got 438
FAIL: Hand count after playing council_room was not correct. Expected 308, got 244
FAIL: Hand count after playing council_room was not correct. Expected 308, got 62
FAIL: Hand count after playing council_room was not correct. Expected 458, got 460
FAIL: Hand count after playing council_room was not correct. Expected 460, got 301
FAIL: Hand count after playing council_room was not correct. Expected 460, got 78
FAIL: Hand count after playing council_room was not correct. Expected 460, got 471
FAIL: Hand count after playing council_room was not correct. Expected 415, got 417
FAIL: Hand count after playing council_room was not correct. Expected 417, got 269
FAIL: Hand count after playing council_room was not correct. Expected 417, got 427
FAIL: Hand count after playing council_room was not correct. Expected 417, got 373
FAIL: Hand count after playing council_room was not correct. Expected 362, got 364
FAIL: Hand count after playing council_room was not correct. Expected 364, got 231
FAIL: Hand count after playing council_room was not correct. Expected 364, got 388
FAIL: Hand count after playing council_room was not correct. Expected 364, got 312
FAIL: Hand count after playing council_room was not correct. Expected 371, got 373
FAIL: Hand count after playing council_room was not correct. Expected 373, got 27
FAIL: Hand count after playing council_room was not correct. Expected 373, got 391
FAIL: Hand count after playing council_room was not correct. Expected 373, got 293
FAIL: Hand count after playing council_room was not correct. Expected 385, got 387
FAIL: Hand count after playing council_room was not correct. Expected 387, got 236
FAIL: Hand count after playing council_room was not correct. Expected 387, got 18
FAIL: Hand count after playing council_room was not correct. Expected 387, got 279
FAIL: Hand count after playing council_room was not correct. Expected 490, got 492
FAIL: Hand count after playing council_room was not correct. Expected 492, got 295
FAIL: Hand count after playing council_room was not correct. Expected 492, got 59
FAIL: Hand count after playing council_room was not correct. Expected 492, got 251
FAIL: Hand count after playing council_room was not correct. Expected 302, got 304
FAIL: Hand count after playing council_room was not correct. Expected 304, got 93
FAIL: Hand count after playing council_room was not correct. Expected 304, got 142
FAIL: Hand count after playing council_room was not correct. Expected 304, got 176
FAIL: Hand count after playing council_room was not correct. Expected 95, got 97
FAIL: Hand count after playing council_room was not correct. Expected 97, got 175
FAIL: Hand count after playing council_room was not correct. Expected 97, got 22
FAIL: Hand count after playing council_room was not correct. Expected 97, got 421
FAIL: Hand count after playing council_room was not correct. Expected 342, got 344
FAIL: Hand count after playing council_room was not correct. Expected 344, got 328
FAIL: Hand count after playing council_room was not correct. Expected 344, got 149
FAIL: Hand count after playing council_room was not correct. Expected 344, got 260
FAIL: Hand count after playing council_room was not correct. Expected 42, got 44
FAIL: Hand count after playing council_room was not correct. Expected 44, got 288
FAIL: Hand count after playing council_room was not correct. Expected 44, got 32
FAIL: Hand count after playing council_room was not correct. Expected 44, got 141
FAIL: Hand count after playing council_room was not correct. Expected 64, got 66
FAIL: Hand count after playing council_room was not correct. Expected 66, got 430
FAIL: Hand count after playing council_room was not correct. Expected 66, got 215
FAIL: Hand count after playing council_room was not correct. Expected 66, got 345
FAIL: Hand count after playing council_room was not correct. Expected 165, got 167
FAIL: Hand count after playing council_room was not correct. Expected 167, got 460
FAIL: Hand count after playing council_room was not correct. Expected 167, got 257
FAIL: Hand count after playing council_room was not correct. Expected 167, got 414
FAIL: Hand count after playing council_room was not correct. Expected 253, got 255
FAIL: Hand count after playing council_room was not correct. Expected 255, got 230
FAIL: Hand count after playing council_room was not correct. Expected 255, got 450
FAIL: Hand count after playing council_room was not correct. Expected 255, got 399
FAIL: Hand count after playing council_room was not correct. Expected 371, got 373
FAIL: Hand count after playing council_room was not correct. Expected 373, got 195
FAIL: Hand count after playing council_room was not correct. Expected 373, got 350
FAIL: Hand count after playing council_room was not correct. Expected 373, got 234
FAIL: Hand count after playing council_room was not correct. Expected 183, got 185
FAIL: Hand count after playing council_room was not correct. Expected 185, got 78
FAIL: Hand count after playing council_room was not correct. Expected 185, got 135
FAIL: Hand count after playing council_room was not correct. Expected 185, got 347
FAIL: Hand count after playing council_room was not correct. Expected 176, got 178
FAIL: Hand count after playing council_room was not correct. Expected 178, got 412
FAIL: Hand count after playing council_room was not correct. Expected 178, got 391
FAIL: Hand count after playing council_room was not correct. Expected 178, got 449
FAIL: Hand count after playing council_room was not correct. Expected 95, got 97
FAIL: Hand count after playing council_room was not correct. Expected 97, got 462
FAIL: Hand count after playing council_room was not correct. Expected 97, got 343
FAIL: Hand count after playing council_room was not correct. Expected 97, got 393
FAIL: Hand count after playing council_room was not correct. Expected 329, got 331
FAIL: Hand count after playing council_room was not correct. Expected 331, got 487
FAIL: Hand count after playing council_room was not correct. Expected 331, got 325
FAIL: Hand count after playing council_room was not correct. Expected 331, got 3
FAIL: Hand count after playing council_room was not correct. Expected 369, got 371
FAIL: Hand count after playing council_room was not correct. Expected 371, got 99
FAIL: Hand count after playing council_room was not correct. Expected 371, got 194
FAIL: Hand count after playing council_room was not correct. Expected 371, got 32
FAIL: Hand count after playing council_room was not correct. Expected 371, got 373
FAIL: Hand count after playing council_room was not correct. Expected 373, got 317
FAIL: Hand count after playing council_room was not correct. Expected 373, got 431
FAIL: Hand count after playing council_room was not correct. Expected 373, got 153
FAIL: Hand count after playing council_room was not correct. Expected 93, got 95
FAIL: Hand count after playing council_room was not correct. Expected 95, got 467
FAIL: Hand count after playing council_room was not correct. Expected 95, got 171
FAIL: Hand count after playing council_room was not correct. Expected 95, got 156
FAIL: Hand count after playing council_room was not correct. Expected 235, got 237
FAIL: Hand count after playing council_room was not correct. Expected 237, got 18
FAIL: Hand count after playing council_room was not correct. Expected 237, got 173
FAIL: Hand count after playing council_room was not correct. Expected 237, got 90
FAIL: Hand count after playing council_room was not correct. Expected 46, got 48
FAIL: Hand count after playing council_room was not correct. Expected 48, got 101
FAIL: Hand count after playing council_room was not correct. Expected 48, got 470
FAIL: Hand count after playing council_room was not correct. Expected 48, got 94
FAIL: Hand count after playing council_room was not correct. Expected 301, got 303
FAIL: Hand count after playing council_room was not correct. Expected 303, got 65
FAIL: Hand count after playing council_room was not correct. Expected 303, got 32
FAIL: Hand count after playing council_room was not correct. Expected 303, got 50
FAIL: Hand count after playing council_room was not correct. Expected 123, got 125
FAIL: Hand count after playing council_room was not correct. Expected 125, got 110
FAIL: Hand count after playing council_room was not correct. Expected 125, got 348
FAIL: Hand count after playing council_room was not correct. Expected 125, got 127
FAIL: Hand count after playing council_room was not correct. Expected 107, got 109
FAIL: Hand count after playing council_room was not correct. Expected 109, got 323
FAIL: Hand count after playing council_room was not correct. Expected 109, got 215
FAIL: Hand count after playing council_room was not correct. Expected 109, got 106
FAIL: Hand count after playing council_room was not correct. Expected 467, got 469
FAIL: Hand count after playing council_room was not correct. Expected 469, got 10
FAIL: Hand count after playing council_room was not correct. Expected 469, got 442
FAIL: Hand count after playing council_room was not correct. Expected 469, got 415
FAIL: Hand count after playing council_room was not correct. Expected 306, got 308
FAIL: Hand count after playing council_room was not correct. Expected 308, got 476
FAIL: Hand count after playing council_room was not correct. Expected 308, got 131
FAIL: Hand count after playing council_room was not correct. Expected 308, got 7
FAIL: Hand count after playing council_room was not correct. Expected 132, got 134
FAIL: Hand count after playing council_room was not correct. Expected 134, got 209
FAIL: Hand count after playing council_room was not correct. Expected 134, got 457
FAIL: Hand count after playing council_room was not correct. Expected 134, got 333
FAIL: Hand count after playing council_room was not correct. Expected 22, got 24
FAIL: Hand count after playing council_room was not correct. Expected 24, got 204
FAIL: Hand count after playing council_room was not correct. Expected 24, got 354
FAIL: Hand count after playing council_room was not correct. Expected 24, got 203
FAIL: Hand count after playing council_room was not correct. Expected 262, got 264
FAIL: Hand count after playing council_room was not correct. Expected 264, got 251
FAIL: Hand count after playing council_room was not correct. Expected 264, got 36
FAIL: Hand count after playing council_room was not correct. Expected 264, got 192
FAIL: Hand count after playing council_room was not correct. Expected 98, got 100
FAIL: Hand count after playing council_room was not correct. Expected 100, got 156
FAIL: Hand count after playing council_room was not correct. Expected 100, got 256
FAIL: Hand count after playing council_room was not correct. Expected 100, got 285
FAIL: Hand count after playing council_room was not correct. Expected 377, got 379
FAIL: Hand count after playing council_room was not correct. Expected 379, got 271
FAIL: Hand count after playing council_room was not correct. Expected 379, got 227
FAIL: Hand count after playing council_room was not correct. Expected 379, got 63
FAIL: Hand count after playing council_room was not correct. Expected 146, got 148
FAIL: Hand count after playing council_room was not correct. Expected 148, got 434
FAIL: Hand count after playing council_room was not correct. Expected 148, got 52
FAIL: Hand count after playing council_room was not correct. Expected 148, got 443
FAIL: Hand count after playing council_room was not correct. Expected 257, got 259
FAIL: Hand count after playing council_room was not correct. Expected 259, got 374
FAIL: Hand count after playing council_room was not correct. Expected 259, got 66
FAIL: Hand count after playing council_room was not correct. Expected 259, got 148
FAIL: Hand count after playing council_room was not correct. Expected 433, got 435
FAIL: Hand count after playing council_room was not correct. Expected 435, got 411
FAIL: Hand count after playing council_room was not correct. Expected 435, got 271
FAIL: Hand count after playing council_room was not correct. Expected 435, got 140
FAIL: Hand count after playing council_room was not correct. Expected 495, got 497
FAIL: Hand count after playing council_room was not correct. Expected 497, got 484
FAIL: Hand count after playing council_room was not correct. Expected 497, got 240
FAIL: Hand count after playing council_room was not correct. Expected 497, got 257
FAIL: Hand count after playing council_room was not correct. Expected 148, got 150
FAIL: Hand count after playing council_room was not correct. Expected 150, got 242
FAIL: Hand count after playing council_room was not correct. Expected 150, got 446
FAIL: Hand count after playing council_room was not correct. Expected 150, got 476
FAIL: Hand count after playing council_room was not correct. Expected 388, got 390
FAIL: Hand count after playing council_room was not correct. Expected 390, got 101
FAIL: Hand count after playing council_room was not correct. Expected 390, got 299
FAIL: Hand count after playing council_room was not correct. Expected 390, got 85
FAIL: Hand count after playing council_room was not correct. Expected 418, got 420
FAIL: Hand count after playing council_room was not correct. Expected 420, got 421
FAIL: Hand count after playing council_room was not correct. Expected 420, got 426
FAIL: Hand count after playing council_room was not correct. Expected 420, got 386
FAIL: Hand count after playing council_room was not correct. Expected 36, got 38
FAIL: Hand count after playing council_room was not correct. Expected 38, got 459
FAIL: Hand count after playing council_room was not correct. Expected 38, got 16
FAIL: Hand count after playing council_room was not correct. Expected 38, got 390
FAIL: Hand count after playing council_room was not correct. Expected 10, got 12
FAIL: Hand count after playing council_room was not correct. Expected 12, got 359
FAIL: Hand count after playing council_room was not correct. Expected 12, got 207
FAIL: Hand count after playing council_room was not correct. Expected 12, got 195
FAIL: Hand count after playing council_room was not correct. Expected 408, got 410
FAIL: Hand count after playing council_room was not correct. Expected 410, got 463
FAIL: Hand count after playing council_room was not correct. Expected 410, got 85
FAIL: Hand count after playing council_room was not correct. Expected 410, got 87
FAIL: Hand count after playing council_room was not correct. Expected 38, got 40
FAIL: Hand count after playing council_room was not correct. Expected 40, got 91
FAIL: Hand count after playing council_room was not correct. Expected 40, got 127
FAIL: Hand count after playing council_room was not correct. Expected 40, got 243
FAIL: Hand count after playing council_room was not correct. Expected 41, got 43
FAIL: Hand count after playing council_room was not correct. Expected 43, got 133
FAIL: Hand count after playing council_room was not correct. Expected 43, got 89
FAIL: Hand count after playing council_room was not correct. Expected 43, got 145
FAIL: Hand count after playing council_room was not correct. Expected 491, got 493
FAIL: Hand count after playing council_room was not correct. Expected 493, got 32
FAIL: Hand count after playing council_room was not correct. Expected 493, got 82
FAIL: Hand count after playing council_room was not correct. Expected 493, got 111
FAIL: Hand count after playing council_room was not correct. Expected 117, got 119
FAIL: Hand count after playing council_room was not correct. Expected 119, got 488
FAIL: Hand count after playing council_room was not correct. Expected 119, got 236
FAIL: Hand count after playing council_room was not correct. Expected 119, got 275
FAIL: Hand count after playing council_room was not correct. Expected 239, got 241
FAIL: Hand count after playing council_room was not correct. Expected 241, got 485
FAIL: Hand count after playing council_room was not correct. Expected 241, got 441
FAIL: Hand count after playing council_room was not correct. Expected 241, got 411
FAIL: Hand count after playing council_room was not correct. Expected 468, got 470
FAIL: Hand count after playing council_room was not correct. Expected 470, got 186
FAIL: Hand count after playing council_room was not correct. Expected 470, got 68
FAIL: Hand count after playing council_room was not correct. Expected 470, got 77
FAIL: Hand count after playing council_room was not correct. Expected 428, got 430
FAIL: Hand count after playing council_room was not correct. Expected 430, got 183
FAIL: Hand count after playing council_room was not correct. Expected 430, got 271
FAIL: Hand count after playing council_room was not correct. Expected 430, got 349
FAIL: Hand count after playing council_room was not correct. Expected 423, got 425
FAIL: Hand count after playing council_room was not correct. Expected 425, got 342
FAIL: Hand count after playing council_room was not correct. Expected 425, got 288
FAIL: Hand count after playing council_room was not correct. Expected 425, got 169
FAIL: Hand count after playing council_room was not correct. Expected 145, got 147
FAIL: Hand count after playing council_room was not correct. Expected 147, got 157
FAIL: Hand count after playing council_room was not correct. Expected 147, got 357
FAIL: Hand count after playing council_room was not correct. Expected 147, got 17
FAIL: Hand count after playing council_room was not correct. Expected 270, got 272
FAIL: Hand count after playing council_room was not correct. Expected 272, got 497
FAIL: Hand count after playing council_room was not correct. Expected 272, got 73
FAIL: Hand count after playing council_room was not correct. Expected 272, got 310
FAIL: Hand count after playing council_room was not correct. Expected 77, got 79
FAIL: Hand count after playing council_room was not correct. Expected 79, got 53
FAIL: Hand count after playing council_room was not correct. Expected 79, got 158
FAIL: Hand count after playing council_room was not correct. Expected 79, got 426
FAIL: Hand count after playing council_room was not correct. Expected 373, got 375
FAIL: Hand count after playing council_room was not correct. Expected 375, got 384
FAIL: Hand count after playing council_room was not correct. Expected 375, got 352
FAIL: Hand count after playing council_room was not correct. Expected 375, got 126
FAIL: Hand count after playing council_room was not correct. Expected 476, got 478
FAIL: Hand count after playing council_room was not correct. Expected 478, got 65
FAIL: Hand count after playing council_room was not correct. Expected 478, got 445
FAIL: Hand count after playing council_room was not correct. Expected 478, got 468
FAIL: Hand count after playing council_room was not correct. Expected 104, got 106
FAIL: Hand count after playing council_room was not correct. Expected 106, got 162
FAIL: Hand count after playing council_room was not correct. Expected 106, got 265
FAIL: Hand count after playing council_room was not correct. Expected 106, got 2
FAIL: Hand count after playing council_room was not correct. Expected 393, got 395
FAIL: Hand count after playing council_room was not correct. Expected 395, got 118
FAIL: Hand count after playing council_room was not correct. Expected 395, got 86
FAIL: Hand count after playing council_room was not correct. Expected 395, got 231
FAIL: Hand count after playing council_room was not correct. Expected 498, got 500
FAIL: Hand count after playing council_room was not correct. Expected 500, got 102
FAIL: Hand count after playing council_room was not correct. Expected 500, got 330
FAIL: Hand count after playing council_room was not correct. Expected 500, got 122
FAIL: Hand count after playing council_room was not correct. Expected 423, got 425
FAIL: Hand count after playing council_room was not correct. Expected 425, got 397
FAIL: Hand count after playing council_room was not correct. Expected 425, got 237
FAIL: Hand count after playing council_room was not correct. Expected 425, got 489
FAIL: Hand count after playing council_room was not correct. Expected 224, got 226
FAIL: Hand count after playing council_room was not correct. Expected 226, got 35
FAIL: Hand count after playing council_room was not correct. Expected 226, got 27
FAIL: Hand count after playing council_room was not correct. Expected 226, got 245
FAIL: Hand count after playing council_room was not correct. Expected 164, got 166
FAIL: Hand count after playing council_room was not correct. Expected 166, got 188
FAIL: Hand count after playing council_room was not correct. Expected 166, got 241
FAIL: Hand count after playing council_room was not correct. Expected 166, got 201
FAIL: Hand count after playing council_room was not correct. Expected 242, got 244
FAIL: Hand count after playing council_room was not correct. Expected 244, got 11
FAIL: Hand count after playing council_room was not correct. Expected 244, got 422
FAIL: Hand count after playing council_room was not correct. Expected 244, got 352
FAIL: Hand count after playing council_room was not correct. Expected 32, got 34
FAIL: Hand count after playing council_room was not correct. Expected 34, got 148
FAIL: Hand count after playing council_room was not correct. Expected 34, got 389
FAIL: Hand count after playing council_room was not correct. Expected 34, got 236
FAIL: Hand count after playing council_room was not correct. Expected 229, got 231
FAIL: Hand count after playing council_room was not correct. Expected 231, got 266
FAIL: Hand count after playing council_room was not correct. Expected 231, got 196
FAIL: Hand count after playing council_room was not correct. Expected 231, got 161
FAIL: Hand count after playing council_room was not correct. Expected 461, got 463
FAIL: Hand count after playing council_room was not correct. Expected 463, got 404
FAIL: Hand count after playing council_room was not correct. Expected 463, got 73
FAIL: Hand count after playing council_room was not correct. Expected 463, got 290
FAIL: Hand count after playing council_room was not correct. Expected 175, got 177
FAIL: Hand count after playing council_room was not correct. Expected 177, got 457
FAIL: Hand count after playing council_room was not correct. Expected 177, got 6
FAIL: Hand count after playing council_room was not correct. Expected 177, got 331
FAIL: Hand count after playing council_room was not correct. Expected 441, got 443
FAIL: Hand count after playing council_room was not correct. Expected 443, got 255
FAIL: Hand count after playing council_room was not correct. Expected 443, got 281
FAIL: Hand count after playing council_room was not correct. Expected 443, got 289
FAIL: Hand count after playing council_room was not correct. Expected 279, got 281
FAIL: Hand count after playing council_room was not correct. Expected 281, got 400
FAIL: Hand count after playing council_room was not correct. Expected 281, got 83
FAIL: Hand count after playing council_room was not correct. Expected 281, got 79
FAIL: Hand count after playing council_room was not correct. Expected 280, got 282
FAIL: Hand count after playing council_room was not correct. Expected 282, got 280
FAIL: Hand count after playing council_room was not correct. Expected 282, got 389
FAIL: Hand count after playing council_room was not correct. Expected 282, got 196
FAIL: Hand count after playing council_room was not correct. Expected 205, got 207
FAIL: Hand count after playing council_room was not correct. Expected 207, got 89
FAIL: Hand count after playing council_room was not correct. Expected 207, got 161
FAIL: Hand count after playing council_room was not correct. Expected 207, got 151
FAIL: Hand count after playing council_room was not correct. Expected 64, got 66
FAIL: Hand count after playing council_room was not correct. Expected 66, got 374
FAIL: Hand count after playing council_room was not correct. Expected 66, got 203
FAIL: Hand count after playing council_room was not correct. Expected 66, got 176
FAIL: Hand count after playing council_room was not correct. Expected 214, got 216
FAIL: Hand count after playing council_room was not correct. Expected 216, got 111
FAIL: Hand count after playing council_room was not correct. Expected 216, got 476
FAIL: Hand count after playing council_room was not correct. Expected 216, got 464
FAIL: Hand count after playing council_room was not correct. Expected 225, got 227
FAIL: Hand count after playing council_room was not correct. Expected 227, got 343
FAIL: Hand count after playing council_room was not correct. Expected 227, got 296
FAIL: Hand count after playing council_room was not correct. Expected 227, got 433
FAIL: Hand count after playing council_room was not correct. Expected 429, got 431
FAIL: Hand count after playing council_room was not correct. Expected 431, got 409
FAIL: Hand count after playing council_room was not correct. Expected 431, got 132
FAIL: Hand count after playing council_room was not correct. Expected 431, got 295
FAIL: Hand count after playing council_room was not correct. Expected 184, got 186
FAIL: Hand count after playing council_room was not correct. Expected 186, got 246
FAIL: Hand count after playing council_room was not correct. Expected 186, got 409
FAIL: Hand count after playing council_room was not correct. Expected 186, got 382
FAIL: Hand count after playing council_room was not correct. Expected 499, got 501
FAIL: Hand count after playing council_room was not correct. Expected 501, got 272
FAIL: Hand count after playing council_room was not correct. Expected 501, got 456
FAIL: Hand count after playing council_room was not correct. Expected 501, got 206
FAIL: Hand count after playing council_room was not correct. Expected 431, got 433
FAIL: Hand count after playing council_room was not correct. Expected 433, got 296
FAIL: Hand count after playing council_room was not correct. Expected 433, got 90
FAIL: Hand count after playing council_room was not correct. Expected 433, got 166
FAIL: Hand count after playing council_room was not correct. Expected 404, got 406
FAIL: Hand count after playing council_room was not correct. Expected 406, got 361
FAIL: Hand count after playing council_room was not correct. Expected 406, got 102
FAIL: Hand count after playing council_room was not correct. Expected 406, got 404
FAIL: Hand count after playing council_room was not correct. Expected 438, got 440
FAIL: Hand count after playing council_room was not correct. Expected 440, got 366
FAIL: Hand count after playing council_room was not correct. Expected 440, got 1
FAIL: Hand count after playing council_room was not correct. Expected 440, got 50
FAIL: Hand count after playing council_room was not correct. Expected 140, got 142
FAIL: Hand count after playing council_room was not correct. Expected 142, got 223
FAIL: Hand count after playing council_room was not correct. Expected 142, got 500
FAIL: Hand count after playing council_room was not correct. Expected 142, got 285
FAIL: Hand count after playing council_room was not correct. Expected 410, got 412
FAIL: Hand count after playing council_room was not correct. Expected 412, got 121
FAIL: Hand count after playing council_room was not correct. Expected 412, got 176
FAIL: Hand count after playing council_room was not correct. Expected 412, got 111
FAIL: Hand count after playing council_room was not correct. Expected 184, got 186
FAIL: Hand count after playing council_room was not correct. Expected 186, got 81
FAIL: Hand count after playing council_room was not correct. Expected 186, got 154
FAIL: Hand count after playing council_room was not correct. Expected 186, got 4
FAIL: Hand count after playing council_room was not correct. Expected 307, got 309
FAIL: Hand count after playing council_room was not correct. Expected 309, got 112
FAIL: Hand count after playing council_room was not correct. Expected 309, got 18
FAIL: Hand count after playing council_room was not correct. Expected 309, got 57
FAIL: Hand count after playing council_room was not correct. Expected 413, got 415
FAIL: Hand count after playing council_room was not correct. Expected 415, got 114
FAIL: Hand count after playing council_room was not correct. Expected 415, got 87
FAIL: Hand count after playing council_room was not correct. Expected 415, got 217
FAIL: Hand count after playing council_room was not correct. Expected 380, got 382
FAIL: Hand count after playing council_room was not correct. Expected 382, got 193
FAIL: Hand count after playing council_room was not correct. Expected 382, got 190
FAIL: Hand count after playing council_room was not correct. Expected 382, got 389
FAIL: Hand count after playing council_room was not correct. Expected 381, got 383
FAIL: Hand count after playing council_room was not correct. Expected 383, got 2
FAIL: Hand count after playing council_room was not correct. Expected 383, got 261
FAIL: Hand count after playing council_room was not correct. Expected 383, got 90
FAIL: Hand count after playing council_room was not correct. Expected 361, got 363
FAIL: Hand count after playing council_room was not correct. Expected 363, got 9
FAIL: Hand count after playing council_room was not correct. Expected 363, got 140
FAIL: Hand count after playing council_room was not correct. Expected 363, got 21
FAIL: Hand count after playing council_room was not correct. Expected 362, got 364
FAIL: Hand count after playing council_room was not correct. Expected 364, got 305
FAIL: Hand count after playing council_room was not correct. Expected 364, got 176
FAIL: Hand count after playing council_room was not correct. Expected 364, got 408
FAIL: Hand count after playing council_room was not correct. Expected 125, got 127
FAIL: Hand count after playing council_room was not correct. Expected 127, got 393
FAIL: Hand count after playing council_room was not correct. Expected 127, got 46
FAIL: Hand count after playing council_room was not correct. Expected 127, got 179
FAIL: Hand count after playing council_room was not correct. Expected 138, got 140
FAIL: Hand count after playing council_room was not correct. Expected 140, got 443
FAIL: Hand count after playing council_room was not correct. Expected 140, got 107
FAIL: Hand count after playing council_room was not correct. Expected 140, got 69
File 'dominion.c'
Lines executed:34.05% of 561
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:7
        -:    0:Programs:7
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
       30:    8:int compare(const void* a, const void* b) {
       30:    9:  if (*(int*)a > *(int*)b)
    #####:   10:    return 1;
       30:   11:  if (*(int*)a < *(int*)b)
        8:   12:    return -1;
       22:   13:  return 0;
        -:   14:}
        -:   15:
    #####:   16:struct gameState* newGame() {
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
        -:   19:}
        -:   20:
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
        -:   35:}
        -:   36:
        1:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;
        -:   43:  //set up random number generator
        1:   44:  SelectStream(1);
        1:   45:  PutSeed((long)randomSeed);
        -:   46:
        -:   47:  //check number of players
        1:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
        1:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
       11:   57:  for (i = 0; i < 10; i++)
        -:   58:    {
      110:   59:      for (j = 0; j < 10; j++)
        -:   60:        {
      100:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
        1:   73:  if (numPlayers == 2)
        -:   74:    {
        1:   75:      state->supplyCount[curse] = 10;
        -:   76:    }
    #####:   77:  else if (numPlayers == 3)
        -:   78:    {
    #####:   79:      state->supplyCount[curse] = 20;
        -:   80:    }
        -:   81:  else
        -:   82:    {
    #####:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
        1:   87:  if (numPlayers == 2)
        -:   88:    {
        1:   89:      state->supplyCount[estate] = 8;
        1:   90:      state->supplyCount[duchy] = 8;
        1:   91:      state->supplyCount[province] = 8;
        -:   92:    }
        -:   93:  else
        -:   94:    {
    #####:   95:      state->supplyCount[estate] = 12;
    #####:   96:      state->supplyCount[duchy] = 12;
    #####:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
        1:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
        1:  102:  state->supplyCount[silver] = 40;
        1:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
       21:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
        -:  107:    {
      165:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
        -:  109:	{
      155:  110:	  if (kingdomCards[j] == i)
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
       10:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
        -:  114:		{
    #####:  115:		  if (numPlayers == 2){
    #####:  116:		    state->supplyCount[i] = 8;
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
        -:  119:		}
        -:  120:	      else
        -:  121:		{
       10:  122:		  state->supplyCount[i] = 10;
        -:  123:		}
       10:  124:	      break;
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
      145:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
        3:  138:  for (i = 0; i < numPlayers; i++)
        -:  139:    {
        2:  140:      state->deckCount[i] = 0;
        8:  141:      for (j = 0; j < 3; j++)
        -:  142:	{
        6:  143:	  state->deck[i][j] = estate;
        6:  144:	  state->deckCount[i]++;
        -:  145:	}
       16:  146:      for (j = 3; j < 10; j++)
        -:  147:	{
       14:  148:	  state->deck[i][j] = copper;
       14:  149:	  state->deckCount[i]++;
        -:  150:	}
        -:  151:    }
        -:  152:
        -:  153:  //shuffle player decks
        3:  154:  for (i = 0; i < numPlayers; i++)
        -:  155:    {
        2:  156:      if ( shuffle(i, state) < 0 )
        -:  157:	{
    #####:  158:	  return -1;
        -:  159:	}
        -:  160:    }
        -:  161:
        -:  162:  //draw player hands
        3:  163:  for (i = 0; i < numPlayers; i++)
        -:  164:    {
        -:  165:      //initialize hand size to zero
        2:  166:      state->handCount[i] = 0;
        2:  167:      state->discardCount[i] = 0;
        -:  168:      //draw 5 cards
        -:  169:      // for (j = 0; j < 5; j++)
        -:  170:      //	{
        -:  171:      //	  drawCard(i, state);
        -:  172:      //	}
        -:  173:    }
        -:  174:
        -:  175:  //set embargo tokens to 0 for all supply piles
       28:  176:  for (i = 0; i <= treasure_map; i++)
        -:  177:    {
       27:  178:      state->embargoTokens[i] = 0;
        -:  179:    }
        -:  180:
        -:  181:  //initialize first player's turn
        1:  182:  state->outpostPlayed = 0;
        1:  183:  state->phase = 0;
        1:  184:  state->numActions = 1;
        1:  185:  state->numBuys = 1;
        1:  186:  state->playedCardCount = 0;
        1:  187:  state->whoseTurn = 0;
        1:  188:  state->handCount[state->whoseTurn] = 0;
        -:  189:  //int it; move to top
        -:  190:
        -:  191:  //Moved draw cards to here, only drawing at the start of a turn
        6:  192:  for (it = 0; it < 5; it++){
        5:  193:    drawCard(state->whoseTurn, state);
        -:  194:  }
        -:  195:
        1:  196:  updateCoins(state->whoseTurn, state, 0);
        -:  197:
        1:  198:  return 0;
        -:  199:}
        -:  200:
        2:  201:int shuffle(int player, struct gameState *state) {
        -:  202:
        -:  203:
        -:  204:  int newDeck[MAX_DECK];
        2:  205:  int newDeckPos = 0;
        -:  206:  int card;
        -:  207:  int i;
        -:  208:
        2:  209:  if (state->deckCount[player] < 1)
    #####:  210:    return -1;
        2:  211:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare);
        -:  212:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  213:
       24:  214:  while (state->deckCount[player] > 0) {
       20:  215:    card = floor(Random() * state->deckCount[player]);
       20:  216:    newDeck[newDeckPos] = state->deck[player][card];
       20:  217:    newDeckPos++;
       72:  218:    for (i = card; i < state->deckCount[player]-1; i++) {
       52:  219:      state->deck[player][i] = state->deck[player][i+1];
        -:  220:    }
       20:  221:    state->deckCount[player]--;
        -:  222:  }
       22:  223:  for (i = 0; i < newDeckPos; i++) {
       20:  224:    state->deck[player][i] = newDeck[i];
       20:  225:    state->deckCount[player]++;
        -:  226:  }
        -:  227:
        2:  228:  return 0;
        -:  229:}
        -:  230:
    #####:  231:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state)
        -:  232:{
        -:  233:  int card;
    #####:  234:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  235:
        -:  236:  //check if it is the right phase
    #####:  237:  if (state->phase != 0)
        -:  238:    {
    #####:  239:      return -1;
        -:  240:    }
        -:  241:
        -:  242:  //check if player has enough actions
    #####:  243:  if ( state->numActions < 1 )
        -:  244:    {
    #####:  245:      return -1;
        -:  246:    }
        -:  247:
        -:  248:  //get card played
    #####:  249:  card = handCard(handPos, state);
        -:  250:
        -:  251:  //check if selected card is an action
    #####:  252:  if ( card < adventurer || card > treasure_map )
        -:  253:    {
    #####:  254:      return -1;
        -:  255:    }
        -:  256:
        -:  257:  //play card
    #####:  258:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
        -:  259:    {
    #####:  260:      return -1;
        -:  261:    }
        -:  262:
        -:  263:  //reduce number of actions
    #####:  264:  state->numActions--;
        -:  265:
        -:  266:  //update coins (Treasure cards may be added with card draws)
    #####:  267:  updateCoins(state->whoseTurn, state, coin_bonus);
        -:  268:
    #####:  269:  return 0;
        -:  270:}
        -:  271:
    #####:  272:int buyCard(int supplyPos, struct gameState *state) {
        -:  273:  int who;
        -:  274:  if (DEBUG){
        -:  275:    printf("Entering buyCard...\n");
        -:  276:  }
        -:  277:
        -:  278:  // I don't know what to do about the phase thing.
        -:  279:
    #####:  280:  who = state->whoseTurn;
        -:  281:
    #####:  282:  if (state->numBuys < 1){
        -:  283:    if (DEBUG)
        -:  284:      printf("You do not have any buys left\n");
    #####:  285:    return -1;
    #####:  286:  } else if (supplyCount(supplyPos, state) <1){
        -:  287:    if (DEBUG)
        -:  288:      printf("There are not any of that type of card left\n");
    #####:  289:    return -1;
    #####:  290:  } else if (state->coins < getCost(supplyPos)){
        -:  291:    if (DEBUG)
        -:  292:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  293:    return -1;
        -:  294:  } else {
    #####:  295:    state->phase=1;
        -:  296:    //state->supplyCount[supplyPos]--;
    #####:  297:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  298:
    #####:  299:    state->coins = (state->coins) - (getCost(supplyPos));
    #####:  300:    state->numBuys--;
        -:  301:    if (DEBUG)
        -:  302:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  303:  }
        -:  304:
        -:  305:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  306:  //state->discardCount[who]++;
        -:  307:
    #####:  308:  return 0;
        -:  309:}
        -:  310:
       12:  311:int numHandCards(struct gameState *state) {
       12:  312:  return state->handCount[ whoseTurn(state) ];
        -:  313:}
        -:  314:
    #####:  315:int handCard(int handPos, struct gameState *state) {
    #####:  316:  int currentPlayer = whoseTurn(state);
    #####:  317:  return state->hand[currentPlayer][handPos];
        -:  318:}
        -:  319:
    #####:  320:int supplyCount(int card, struct gameState *state) {
    #####:  321:  return state->supplyCount[card];
        -:  322:}
        -:  323:
    #####:  324:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  325:  int i;
    #####:  326:  int count = 0;
        -:  327:
    #####:  328:  for (i = 0; i < state->deckCount[player]; i++)
        -:  329:    {
    #####:  330:      if (state->deck[player][i] == card) count++;
        -:  331:    }
        -:  332:
    #####:  333:  for (i = 0; i < state->handCount[player]; i++)
        -:  334:    {
    #####:  335:      if (state->hand[player][i] == card) count++;
        -:  336:    }
        -:  337:
    #####:  338:  for (i = 0; i < state->discardCount[player]; i++)
        -:  339:    {
    #####:  340:      if (state->discard[player][i] == card) count++;
        -:  341:    }
        -:  342:
    #####:  343:  return count;
        -:  344:}
        -:  345:
     6013:  346:int whoseTurn(struct gameState *state) {
     6013:  347:  return state->whoseTurn;
        -:  348:}
        -:  349:
    #####:  350:int endTurn(struct gameState *state) {
        -:  351:  int k;
        -:  352:  int i;
    #####:  353:  int currentPlayer = whoseTurn(state);
        -:  354:
        -:  355:  //Discard hand
    #####:  356:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    #####:  357:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  358:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  359:  }
    #####:  360:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  361:
        -:  362:  //Code for determining the player
    #####:  363:  if (currentPlayer < (state->numPlayers - 1)){
    #####:  364:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  365:  }
        -:  366:  else{
    #####:  367:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  368:  }
        -:  369:
    #####:  370:  state->outpostPlayed = 0;
    #####:  371:  state->phase = 0;
    #####:  372:  state->numActions = 1;
    #####:  373:  state->coins = 0;
    #####:  374:  state->numBuys = 1;
    #####:  375:  state->playedCardCount = 0;
    #####:  376:  state->handCount[state->whoseTurn] = 0;
        -:  377:
        -:  378:  //int k; move to top
        -:  379:  //Next player draws hand
    #####:  380:  for (k = 0; k < 5; k++){
    #####:  381:    drawCard(state->whoseTurn, state);//Draw a card
        -:  382:  }
        -:  383:
        -:  384:  //Update money
    #####:  385:  updateCoins(state->whoseTurn, state , 0);
        -:  386:
    #####:  387:  return 0;
        -:  388:}
        -:  389:
     1002:  390:int isGameOver(struct gameState *state) {
        -:  391:  int i;
        -:  392:  int j;
        -:  393:
        -:  394:  //if stack of Province cards is empty, the game ends
     1002:  395:  if (state->supplyCount[province] == 0)
        -:  396:    {
      109:  397:      return 1;
        -:  398:    }
        -:  399:
        -:  400:  //if three supply pile are at 0, the game ends
      893:  401:  j = 0;
    23218:  402:  for (i = 0; i < 25; i++)
        -:  403:    {
    22325:  404:      if (state->supplyCount[i] == 0)
        -:  405:	{
     2676:  406:	  j++;
        -:  407:	}
        -:  408:    }
      893:  409:  if ( j >= 3)
        -:  410:    {
      892:  411:      return 1;
        -:  412:    }
        -:  413:
        1:  414:  return 0;
        -:  415:}
        -:  416:
        4:  417:int scoreFor (int player, struct gameState *state) {
        -:  418:
        -:  419:  int i;
        4:  420:  int score = 0;
        -:  421:  //score from hand
       16:  422:  for (i = 0; i < state->handCount[player]; i++)
        -:  423:    {
       12:  424:      if (state->hand[player][i] == curse) { score = score - 1; };
       12:  425:      if (state->hand[player][i] == estate) { score = score + 1; };
       12:  426:      if (state->hand[player][i] == duchy) { score = score + 3; };
       12:  427:      if (state->hand[player][i] == province) { score = score + 6; };
       12:  428:      if (state->hand[player][i] == great_hall) { score = score + 1; };
       12:  429:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  430:    }
        -:  431:
        -:  432:  //score from discard
        4:  433:  for (i = 0; i < state->discardCount[player]; i++)
        -:  434:    {
    #####:  435:      if (state->discard[player][i] == curse) { score = score - 1; };
    #####:  436:      if (state->discard[player][i] == estate) { score = score + 1; };
    #####:  437:      if (state->discard[player][i] == duchy) { score = score + 3; };
    #####:  438:      if (state->discard[player][i] == province) { score = score + 6; };
    #####:  439:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    #####:  440:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  441:    }
        -:  442:
        -:  443:  //score from deck
        4:  444:  for (i = 0; i < state->discardCount[player]; i++)
        -:  445:    {
    #####:  446:      if (state->deck[player][i] == curse) { score = score - 1; };
    #####:  447:      if (state->deck[player][i] == estate) { score = score + 1; };
    #####:  448:      if (state->deck[player][i] == duchy) { score = score + 3; };
    #####:  449:      if (state->deck[player][i] == province) { score = score + 6; };
    #####:  450:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    #####:  451:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  452:    }
        -:  453:
        4:  454:  return score;
        -:  455:}
        -:  456:
    #####:  457:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  458:  int i;
        -:  459:  int j;
        -:  460:  int highScore;
        -:  461:  int currentPlayer;
        -:  462:
        -:  463:  //get score for each player
    #####:  464:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  465:    {
        -:  466:      //set unused player scores to -9999
    #####:  467:      if (i >= state->numPlayers)
        -:  468:	{
    #####:  469:	  players[i] = -9999;
        -:  470:	}
        -:  471:      else
        -:  472:	{
    #####:  473:	  players[i] = scoreFor (i, state);
        -:  474:	}
        -:  475:    }
        -:  476:
        -:  477:  //find highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  480:    {
    #####:  481:      if (players[i] > players[j])
        -:  482:	{
    #####:  483:	  j = i;
        -:  484:	}
        -:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //add 1 to players who had less turns
    #####:  489:  currentPlayer = whoseTurn(state);
    #####:  490:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  491:    {
    #####:  492:      if ( players[i] == highScore && i > currentPlayer )
        -:  493:	{
    #####:  494:	  players[i]++;
        -:  495:	}
        -:  496:    }
        -:  497:
        -:  498:  //find new highest score
    #####:  499:  j = 0;
    #####:  500:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  501:    {
    #####:  502:      if ( players[i] > players[j] )
        -:  503:	{
    #####:  504:	  j = i;
        -:  505:	}
        -:  506:    }
    #####:  507:  highScore = players[j];
        -:  508:
        -:  509:  //set winners in array to 1 and rest to 0
    #####:  510:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  511:    {
    #####:  512:      if ( players[i] == highScore )
        -:  513:	{
    #####:  514:	  players[i] = 1;
        -:  515:	}
        -:  516:      else
        -:  517:	{
    #####:  518:	  players[i] = 0;
        -:  519:	}
        -:  520:    }
        -:  521:
    #####:  522:  return 0;
        -:  523:}
        -:  524:
    22007:  525:int drawCard(int player, struct gameState *state)
        -:  526:{	int count;
        -:  527:  int deckCounter;
    22007:  528:  if (state->deckCount[player] <= 0){//Deck is empty
        -:  529:
        -:  530:    //Step 1 Shuffle the discard pile back into a deck
        -:  531:    int i;
        -:  532:    //Move discard to deck
    #####:  533:    for (i = 0; i < state->discardCount[player];i++){
    #####:  534:      state->deck[player][i] = state->discard[player][i];
    #####:  535:      state->discard[player][i] = -1;
        -:  536:    }
        -:  537:
    #####:  538:    state->deckCount[player] = state->discardCount[player];
    #####:  539:    state->discardCount[player] = 0;//Reset discard
        -:  540:
        -:  541:    //Shufffle the deck
    #####:  542:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
        -:  543:
        -:  544:    if (DEBUG){//Debug statements
        -:  545:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  546:    }
        -:  547:
    #####:  548:    state->discardCount[player] = 0;
        -:  549:
        -:  550:    //Step 2 Draw Card
    #####:  551:    count = state->handCount[player];//Get current player's hand count
        -:  552:
        -:  553:    if (DEBUG){//Debug statements
        -:  554:      printf("Current hand count: %d\n", count);
        -:  555:    }
        -:  556:
    #####:  557:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  558:
    #####:  559:    if (deckCounter == 0)
    #####:  560:      return -1;
        -:  561:
    #####:  562:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    #####:  563:    state->deckCount[player]--;
    #####:  564:    state->handCount[player]++;//Increment hand count
        -:  565:  }
        -:  566:
        -:  567:  else{
    22007:  568:    int count = state->handCount[player];//Get current hand count for player
        -:  569:    int deckCounter;
        -:  570:    if (DEBUG){//Debug statements
        -:  571:      printf("Current hand count: %d\n", count);
        -:  572:    }
        -:  573:
    22007:  574:    deckCounter = state->deckCount[player];//Create holder for the deck count
    22007:  575:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
    22007:  576:    state->deckCount[player]--;
    22007:  577:    state->handCount[player]++;//Increment hand count
        -:  578:  }
        -:  579:
    22007:  580:  return 0;
        -:  581:}
        -:  582:
       35:  583:int getCost(int cardNumber)
        -:  584:{
       35:  585:  switch( cardNumber )
        -:  586:    {
        -:  587:    case curse:
        1:  588:      return 0;
        -:  589:    case estate:
        1:  590:      return 2;
        -:  591:    case duchy:
        1:  592:      return 5;
        -:  593:    case province:
        1:  594:      return 8;
        -:  595:    case copper:
        1:  596:      return 0;
        -:  597:    case silver:
        1:  598:      return 3;
        -:  599:    case gold:
        1:  600:      return 6;
        -:  601:    case adventurer:
        1:  602:      return 6;
        -:  603:    case council_room:
        1:  604:      return 5;
        -:  605:    case feast:
        1:  606:      return 4;
        -:  607:    case gardens:
        1:  608:      return 4;
        -:  609:    case mine:
        1:  610:      return 5;
        -:  611:    case remodel:
        1:  612:      return 4;
        -:  613:    case smithy:
        1:  614:      return 4;
        -:  615:    case village:
        1:  616:      return 3;
        -:  617:    case baron:
        1:  618:      return 4;
        -:  619:    case great_hall:
        1:  620:      return 3;
        -:  621:    case minion:
        1:  622:      return 5;
        -:  623:    case steward:
        1:  624:      return 3;
        -:  625:    case tribute:
        1:  626:      return 5;
        -:  627:    case ambassador:
        1:  628:      return 3;
        -:  629:    case cutpurse:
        1:  630:      return 4;
        -:  631:    case embargo:
        1:  632:      return 2;
        -:  633:    case outpost:
        1:  634:      return 5;
        -:  635:    case salvager:
        1:  636:      return 4;
        -:  637:    case sea_hag:
        1:  638:      return 4;
        -:  639:    case treasure_map:
        1:  640:      return 4;
        -:  641:    }
        -:  642:
        8:  643:  return -1;
        -:  644:}
        -:  645:
        1:  646:void adventurer_action (int drawntreasure, struct gameState *state, int currentPlayer, int cardDrawn, int temphand[MAX_HAND], int z) {
        4:  647:    while(drawntreasure<2){
        2:  648:        if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
    #####:  649:            shuffle(currentPlayer, state);
        -:  650:        }
        2:  651:        drawCard(currentPlayer, state);
        2:  652:        cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
        2:  653:        if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
        2:  654:          drawntreasure++;
        -:  655:        else{
    #####:  656:          temphand[z]=cardDrawn;
    #####:  657:          state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
        -:  658:        }
        -:  659:  }
        2:  660:  while(z-1>=0){
    #####:  661:      state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    #####:  662:      z=z-1;
        -:  663:  }
        1:  664:}
        -:  665:
     4000:  666:void smithy_action (int currentPlayer, struct gameState *state, int i, int handPos) {
        -:  667:  //+3 Cards
    16000:  668:  for (i = 0; i < 3; i++) {
    12000:  669:    drawCard(currentPlayer, state);
        -:  670:  }
        -:  671:
        -:  672:  //discard card from hand
     4000:  673:  discardCard(handPos, currentPlayer, state, 0);
     4000:  674:}
        -:  675:
    #####:  676:void village_action (int currentPlayer, struct gameState *state, int handPos) {
        -:  677:  //+1 Card
    #####:  678:  drawCard(currentPlayer, state);
        -:  679:
        -:  680:  //+2 Actions
    #####:  681:  state->numActions = state->numActions + 2;
        -:  682:
        -:  683:  //discard played card from hand
    #####:  684:  discardCard(handPos, currentPlayer, state, 0);
    #####:  685:}
        -:  686:
     2000:  687:void council_room_action (int i, int currentPlayer, struct gameState *state) {
        -:  688:  //+4 Cards
    10000:  689:  for (i = 0; i < 4; i++) {
     8000:  690:      drawCard(currentPlayer, state);
        -:  691:  }
        -:  692:
        -:  693:  //+1 Buy
     2000:  694:  state->numBuys++;
        -:  695:
        -:  696:  //Each other player draws a card
    10000:  697:  for (i = 0; i < state->numPlayers; i++) {
     8000:  698:      if ( i == currentPlayer ) {
     2000:  699:          drawCard(i, state);
        -:  700:      }
        -:  701:  }
     2000:  702:}
        -:  703:
    #####:  704:int mine_action (int j, struct gameState *state, int currentPlayer, int choice1, int choice2, int handPos, int i) {
    #####:  705:  j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  706:
    #####:  707:  if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold) {
    #####:  708:      return -1;
        -:  709:  }
        -:  710:
    #####:  711:  if (choice2 > treasure_map || choice2 < curse) {
    #####:  712:      return -1;
        -:  713:  }
        -:  714:
    #####:  715:  if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) ) {
    #####:  716:      return -1;
        -:  717:  }
        -:  718:
    #####:  719:  gainCard(choice2, state, 2, currentPlayer);
        -:  720:
        -:  721:  //discard card from hand
    #####:  722:  discardCard(handPos, currentPlayer, state, 0);
        -:  723:
        -:  724:  //discard trashed card
    #####:  725:  for (i = 0; i < state->handCount[currentPlayer]; i++) {
    #####:  726:      if (state->hand[currentPlayer][i] == j) {
    #####:  727:        discardCard(i, currentPlayer, state, 0);
    #####:  728:        break;
        -:  729:      }
        -:  730:  }
        -:  731:
    #####:  732:  return -1;
        -:  733:}
        -:  734:
     6001:  735:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  736:{
        -:  737:  int i;
        -:  738:  int j;
        -:  739:  int k;
        -:  740:  int x;
        -:  741:  int m;
        -:  742:  int index;
     6001:  743:  int currentPlayer = whoseTurn(state);
     6001:  744:  int nextPlayer = currentPlayer + 1;
        -:  745:
     6001:  746:  int tributeRevealedCards[2] = {-1, -1};
        -:  747:  int temphand[MAX_HAND];// moved above the if statement
     6001:  748:  int drawntreasure=0;
        -:  749:  int cardDrawn;
     6001:  750:  int z = 0;// this is the counter for the temp hand
     6001:  751:  if (nextPlayer > (state->numPlayers - 1)){
     4500:  752:    nextPlayer = 0;
        -:  753:  }
        -:  754:
        -:  755:
        -:  756:  //uses switch to select card and perform actions
     6001:  757:  switch( card )
        -:  758:    {
        -:  759:    case adventurer:
        1:  760:      adventurer_action (drawntreasure, state, currentPlayer, cardDrawn, temphand, z);
        1:  761:      return 0;
        -:  762:
        -:  763:    case council_room:
     2000:  764:      council_room_action (i, currentPlayer, state);
     2000:  765:      return 0;
        -:  766:
        -:  767:    case feast:
        -:  768:      //gain card with cost up to 5
        -:  769:      //Backup hand
    #####:  770:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  771:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  772:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  773:      }
        -:  774:      //Backup hand
        -:  775:
        -:  776:      //Update Coins for Buy
    #####:  777:      updateCoins(currentPlayer, state, 5);
    #####:  778:      x = 1;//Condition to loop on
    #####:  779:      while( x == 1) {//Buy one card
    #####:  780:	if (supplyCount(choice1, state) <= 0){
        -:  781:	  if (DEBUG)
        -:  782:	    printf("None of that card left, sorry!\n");
        -:  783:
        -:  784:	  if (DEBUG){
        -:  785:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  786:	  }
        -:  787:	}
    #####:  788:	else if (state->coins < getCost(choice1)){
    #####:  789:	  printf("That card is too expensive!\n");
        -:  790:
        -:  791:	  if (DEBUG){
        -:  792:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  793:	  }
        -:  794:	}
        -:  795:	else{
        -:  796:
        -:  797:	  if (DEBUG){
        -:  798:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  799:	  }
        -:  800:
    #####:  801:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    #####:  802:	  x = 0;//No more buying cards
        -:  803:
        -:  804:	  if (DEBUG){
        -:  805:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  806:	  }
        -:  807:
        -:  808:	}
        -:  809:      }
        -:  810:
        -:  811:      //Reset Hand
    #####:  812:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  813:	state->hand[currentPlayer][i] = temphand[i];
    #####:  814:	temphand[i] = -1;
        -:  815:      }
        -:  816:      //Reset Hand
        -:  817:
    #####:  818:      return 0;
        -:  819:
        -:  820:    case gardens:
    #####:  821:      return -1;
        -:  822:
        -:  823:    case mine:
    #####:  824:      m = mine_action (j, state, currentPlayer, choice1, choice2, handPos, i);
    #####:  825:      return m;
        -:  826:
        -:  827:    case remodel:
    #####:  828:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  829:
    #####:  830:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
        -:  831:	{
    #####:  832:	  return -1;
        -:  833:	}
        -:  834:
    #####:  835:      gainCard(choice2, state, 0, currentPlayer);
        -:  836:
        -:  837:      //discard card from hand
    #####:  838:      discardCard(handPos, currentPlayer, state, 0);
        -:  839:
        -:  840:      //discard trashed card
    #####:  841:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  842:	{
    #####:  843:	  if (state->hand[currentPlayer][i] == j)
        -:  844:	    {
    #####:  845:	      discardCard(i, currentPlayer, state, 0);
    #####:  846:	      break;
        -:  847:	    }
        -:  848:	}
        -:  849:
        -:  850:
    #####:  851:      return 0;
        -:  852:
        -:  853:    case smithy:
     4000:  854:      smithy_action (currentPlayer, state, i, handPos);
     4000:  855:      return 0;
        -:  856:
        -:  857:    case village:
    #####:  858:      village_action (currentPlayer, state, handPos);
    #####:  859:      return 0;
        -:  860:
        -:  861:    case baron:
    #####:  862:      state->numBuys++;//Increase buys by 1!
    #####:  863:      if (choice1 > 0){//Boolean true or going to discard an estate
    #####:  864:	int p = 0;//Iterator for hand!
    #####:  865:	int card_not_discarded = 1;//Flag for discard set!
    #####:  866:	while(card_not_discarded){
    #####:  867:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    #####:  868:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  869:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  870:	    state->discardCount[currentPlayer]++;
    #####:  871:	    for (;p < state->handCount[currentPlayer]; p++){
    #####:  872:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  873:	    }
    #####:  874:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  875:	    state->handCount[currentPlayer]--;
    #####:  876:	    card_not_discarded = 0;//Exit the loop
        -:  877:	  }
    #####:  878:	  else if (p > state->handCount[currentPlayer]){
        -:  879:	    if(DEBUG) {
        -:  880:	      printf("No estate cards in your hand, invalid choice\n");
        -:  881:	      printf("Must gain an estate if there are any\n");
        -:  882:	    }
    #####:  883:	    if (supplyCount(estate, state) > 0){
    #####:  884:	      gainCard(estate, state, 0, currentPlayer);
    #####:  885:	      state->supplyCount[estate]--;//Decrement estates
    #####:  886:	      if (supplyCount(estate, state) == 0){
    #####:  887:		isGameOver(state);
        -:  888:	      }
        -:  889:	    }
    #####:  890:	    card_not_discarded = 0;//Exit the loop
        -:  891:	  }
        -:  892:
        -:  893:	  else{
    #####:  894:	    p++;//Next card
        -:  895:	  }
        -:  896:	}
        -:  897:      }
        -:  898:
        -:  899:      else{
    #####:  900:	if (supplyCount(estate, state) > 0){
    #####:  901:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
    #####:  902:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  903:	  if (supplyCount(estate, state) == 0){
    #####:  904:	    isGameOver(state);
        -:  905:	  }
        -:  906:	}
        -:  907:      }
        -:  908:
        -:  909:
    #####:  910:      return 0;
        -:  911:
        -:  912:    case great_hall:
        -:  913:      //+1 Card
    #####:  914:      drawCard(currentPlayer, state);
        -:  915:
        -:  916:      //+1 Actions
    #####:  917:      state->numActions++;
        -:  918:
        -:  919:      //discard card from hand
    #####:  920:      discardCard(handPos, currentPlayer, state, 0);
    #####:  921:      return 0;
        -:  922:
        -:  923:    case minion:
        -:  924:      //+1 action
    #####:  925:      state->numActions++;
        -:  926:
        -:  927:      //discard card from hand
    #####:  928:      discardCard(handPos, currentPlayer, state, 0);
        -:  929:
    #####:  930:      if (choice1)		//+2 coins
        -:  931:	{
    #####:  932:	  state->coins = state->coins + 2;
        -:  933:	}
        -:  934:
    #####:  935:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
        -:  936:	{
        -:  937:	  //discard hand
    #####:  938:	  while(numHandCards(state) > 0)
        -:  939:	    {
    #####:  940:	      discardCard(handPos, currentPlayer, state, 0);
        -:  941:	    }
        -:  942:
        -:  943:	  //draw 4
    #####:  944:	  for (i = 0; i < 4; i++)
        -:  945:	    {
    #####:  946:	      drawCard(currentPlayer, state);
        -:  947:	    }
        -:  948:
        -:  949:	  //other players discard hand and redraw if hand size > 4
    #####:  950:	  for (i = 0; i < state->numPlayers; i++)
        -:  951:	    {
    #####:  952:	      if (i != currentPlayer)
        -:  953:		{
    #####:  954:		  if ( state->handCount[i] > 4 )
        -:  955:		    {
        -:  956:		      //discard hand
    #####:  957:		      while( state->handCount[i] > 0 )
        -:  958:			{
    #####:  959:			  discardCard(handPos, i, state, 0);
        -:  960:			}
        -:  961:
        -:  962:		      //draw 4
    #####:  963:		      for (j = 0; j < 4; j++)
        -:  964:			{
    #####:  965:			  drawCard(i, state);
        -:  966:			}
        -:  967:		    }
        -:  968:		}
        -:  969:	    }
        -:  970:
        -:  971:	}
    #####:  972:      return 0;
        -:  973:
        -:  974:    case steward:
    #####:  975:      if (choice1 == 1)
        -:  976:	{
        -:  977:	  //+2 cards
    #####:  978:	  drawCard(currentPlayer, state);
    #####:  979:	  drawCard(currentPlayer, state);
        -:  980:	}
    #####:  981:      else if (choice1 == 2)
        -:  982:	{
        -:  983:	  //+2 coins
    #####:  984:	  state->coins = state->coins + 2;
        -:  985:	}
        -:  986:      else
        -:  987:	{
        -:  988:	  //trash 2 cards in hand
    #####:  989:	  discardCard(choice2, currentPlayer, state, 1);
    #####:  990:	  discardCard(choice3, currentPlayer, state, 1);
        -:  991:	}
        -:  992:
        -:  993:      //discard card from hand
    #####:  994:      discardCard(handPos, currentPlayer, state, 0);
    #####:  995:      return 0;
        -:  996:
        -:  997:    case tribute:
    #####:  998:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    #####:  999:	if (state->deckCount[nextPlayer] > 0){
    #####: 1000:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1001:	  state->deckCount[nextPlayer]--;
        -: 1002:	}
    #####: 1003:	else if (state->discardCount[nextPlayer] > 0){
    #####: 1004:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1005:	  state->discardCount[nextPlayer]--;
        -: 1006:	}
        -: 1007:	else{
        -: 1008:	  //No Card to Reveal
        -: 1009:	  if (DEBUG){
        -: 1010:	    printf("No cards to reveal\n");
        -: 1011:	  }
        -: 1012:	}
        -: 1013:      }
        -: 1014:
        -: 1015:      else{
    #####: 1016:	if (state->deckCount[nextPlayer] == 0){
    #####: 1017:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    #####: 1018:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1019:	    state->deckCount[nextPlayer]++;
    #####: 1020:	    state->discard[nextPlayer][i] = -1;
    #####: 1021:	    state->discardCount[nextPlayer]--;
        -: 1022:	  }
        -: 1023:
    #####: 1024:	  shuffle(nextPlayer,state);//Shuffle the deck
        -: 1025:	}
    #####: 1026:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1027:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1028:	state->deckCount[nextPlayer]--;
    #####: 1029:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1030:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1031:	state->deckCount[nextPlayer]--;
        -: 1032:      }
        -: 1033:
    #####: 1034:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one
    #####: 1035:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1036:	state->playedCardCount++;
    #####: 1037:	tributeRevealedCards[1] = -1;
        -: 1038:      }
        -: 1039:
    #####: 1040:      for (i = 0; i <= 2; i ++){
    #####: 1041:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    #####: 1042:	  state->coins += 2;
        -: 1043:	}
        -: 1044:
    #####: 1045:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    #####: 1046:	  drawCard(currentPlayer, state);
    #####: 1047:	  drawCard(currentPlayer, state);
        -: 1048:	}
        -: 1049:	else{//Action Card
    #####: 1050:	  state->numActions = state->numActions + 2;
        -: 1051:	}
        -: 1052:      }
        -: 1053:
    #####: 1054:      return 0;
        -: 1055:
        -: 1056:    case ambassador:
    #####: 1057:      j = 0;		//used to check if player has enough cards to discard
        -: 1058:
    #####: 1059:      if (choice2 > 2 || choice2 < 0)
        -: 1060:	{
    #####: 1061:	  return -1;
        -: 1062:	}
        -: 1063:
    #####: 1064:      if (choice1 == handPos)
        -: 1065:	{
    #####: 1066:	  return -1;
        -: 1067:	}
        -: 1068:
    #####: 1069:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1070:	{
    #####: 1071:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
        -: 1072:	    {
    #####: 1073:	      j++;
        -: 1074:	    }
        -: 1075:	}
    #####: 1076:      if (j < choice2)
        -: 1077:	{
    #####: 1078:	  return -1;
        -: 1079:	}
        -: 1080:
        -: 1081:      if (DEBUG)
        -: 1082:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1083:
        -: 1084:      //increase supply count for choosen card by amount being discarded
    #####: 1085:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1086:
        -: 1087:      //each other player gains a copy of revealed card
    #####: 1088:      for (i = 0; i < state->numPlayers; i++)
        -: 1089:	{
    #####: 1090:	  if (i != currentPlayer)
        -: 1091:	    {
    #####: 1092:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
        -: 1093:	    }
        -: 1094:	}
        -: 1095:
        -: 1096:      //discard played card from hand
    #####: 1097:      discardCard(handPos, currentPlayer, state, 0);
        -: 1098:
        -: 1099:      //trash copies of cards returned to supply
    #####: 1100:      for (j = 0; j < choice2; j++)
        -: 1101:	{
    #####: 1102:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1103:	    {
    #####: 1104:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
        -: 1105:		{
    #####: 1106:		  discardCard(i, currentPlayer, state, 1);
    #####: 1107:		  break;
        -: 1108:		}
        -: 1109:	    }
        -: 1110:	}
        -: 1111:
    #####: 1112:      return 0;
        -: 1113:
        -: 1114:    case cutpurse:
        -: 1115:
    #####: 1116:      updateCoins(currentPlayer, state, 2);
    #####: 1117:      for (i = 0; i < state->numPlayers; i++)
        -: 1118:	{
    #####: 1119:	  if (i != currentPlayer)
        -: 1120:	    {
    #####: 1121:	      for (j = 0; j < state->handCount[i]; j++)
        -: 1122:		{
    #####: 1123:		  if (state->hand[i][j] == copper)
        -: 1124:		    {
    #####: 1125:		      discardCard(j, i, state, 0);
    #####: 1126:		      break;
        -: 1127:		    }
    #####: 1128:		  if (j == state->handCount[i])
        -: 1129:		    {
    #####: 1130:		      for (k = 0; k < state->handCount[i]; k++)
        -: 1131:			{
        -: 1132:			  if (DEBUG)
        -: 1133:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1134:			}
    #####: 1135:		      break;
        -: 1136:		    }
        -: 1137:		}
        -: 1138:
        -: 1139:	    }
        -: 1140:
        -: 1141:	}
        -: 1142:
        -: 1143:      //discard played card from hand
    #####: 1144:      discardCard(handPos, currentPlayer, state, 0);
        -: 1145:
    #####: 1146:      return 0;
        -: 1147:
        -: 1148:
        -: 1149:    case embargo:
        -: 1150:      //+2 Coins
    #####: 1151:      state->coins = state->coins + 2;
        -: 1152:
        -: 1153:      //see if selected pile is in play
    #####: 1154:      if ( state->supplyCount[choice1] == -1 )
        -: 1155:	{
    #####: 1156:	  return -1;
        -: 1157:	}
        -: 1158:
        -: 1159:      //add embargo token to selected supply pile
    #####: 1160:      state->embargoTokens[choice1]++;
        -: 1161:
        -: 1162:      //trash card
    #####: 1163:      discardCard(handPos, currentPlayer, state, 1);
    #####: 1164:      return 0;
        -: 1165:
        -: 1166:    case outpost:
        -: 1167:      //set outpost flag
    #####: 1168:      state->outpostPlayed++;
        -: 1169:
        -: 1170:      //discard card
    #####: 1171:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1172:      return 0;
        -: 1173:
        -: 1174:    case salvager:
        -: 1175:      //+1 buy
    #####: 1176:      state->numBuys++;
        -: 1177:
    #####: 1178:      if (choice1)
        -: 1179:	{
        -: 1180:	  //gain coins equal to trashed card
    #####: 1181:	  state->coins = state->coins + getCost( handCard(choice1, state) );
        -: 1182:	  //trash card
    #####: 1183:	  discardCard(choice1, currentPlayer, state, 1);
        -: 1184:	}
        -: 1185:
        -: 1186:      //discard card
    #####: 1187:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1188:      return 0;
        -: 1189:
        -: 1190:    case sea_hag:
    #####: 1191:      for (i = 0; i < state->numPlayers; i++){
    #####: 1192:	if (i != currentPlayer){
    #####: 1193:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1194:	  state->discardCount[i]++;
    #####: 1195:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1196:	}
        -: 1197:      }
    #####: 1198:      return 0;
        -: 1199:
        -: 1200:    case treasure_map:
        -: 1201:      //search hand for another treasure_map
    #####: 1202:      index = -1;
    #####: 1203:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1204:	{
    #####: 1205:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
        -: 1206:	    {
    #####: 1207:	      index = i;
    #####: 1208:	      break;
        -: 1209:	    }
        -: 1210:	}
    #####: 1211:      if (index > -1)
        -: 1212:	{
        -: 1213:	  //trash both treasure cards
    #####: 1214:	  discardCard(handPos, currentPlayer, state, 1);
    #####: 1215:	  discardCard(index, currentPlayer, state, 1);
        -: 1216:
        -: 1217:	  //gain 4 Gold cards
    #####: 1218:	  for (i = 0; i < 4; i++)
        -: 1219:	    {
    #####: 1220:	      gainCard(gold, state, 1, currentPlayer);
        -: 1221:	    }
        -: 1222:
        -: 1223:	  //return success
    #####: 1224:	  return 1;
        -: 1225:	}
        -: 1226:
        -: 1227:      //no second treasure_map found in hand
    #####: 1228:      return -1;
        -: 1229:    }
        -: 1230:
    #####: 1231:  return -1;
        -: 1232:}
        -: 1233:
     4000: 1234:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1235:{
        -: 1236:
        -: 1237:  //if card is not trashed, added to Played pile
     4000: 1238:  if (trashFlag < 1)
        -: 1239:    {
        -: 1240:      //add card to played pile
     4000: 1241:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos];
     4000: 1242:      state->playedCardCount++;
        -: 1243:    }
        -: 1244:
        -: 1245:  //set played card to -1
     4000: 1246:  state->hand[currentPlayer][handPos] = -1;
        -: 1247:
        -: 1248:  //remove card from player's hand
     4000: 1249:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
        -: 1250:    {
        -: 1251:      //reduce number of cards in hand
    #####: 1252:      state->handCount[currentPlayer]--;
        -: 1253:    }
     4000: 1254:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
        -: 1255:    {
        -: 1256:      //reduce number of cards in hand
    #####: 1257:      state->handCount[currentPlayer]--;
        -: 1258:    }
        -: 1259:  else
        -: 1260:    {
        -: 1261:      //replace discarded card with last card in hand
     4000: 1262:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1263:      //set last card to -1
     4000: 1264:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1265:      //reduce number of cards in hand
     4000: 1266:      state->handCount[currentPlayer]--;
        -: 1267:    }
        -: 1268:
     4000: 1269:  return 0;
        -: 1270:}
        -: 1271:
    #####: 1272:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1273:{
        -: 1274:  //Note: supplyPos is enum of choosen card
        -: 1275:
        -: 1276:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1277:  if ( supplyCount(supplyPos, state) < 1 )
        -: 1278:    {
    #####: 1279:      return -1;
        -: 1280:    }
        -: 1281:
        -: 1282:  //added card for [whoseTurn] current player:
        -: 1283:  // toFlag = 0 : add to discard
        -: 1284:  // toFlag = 1 : add to deck
        -: 1285:  // toFlag = 2 : add to hand
        -: 1286:
    #####: 1287:  if (toFlag == 1)
        -: 1288:    {
    #####: 1289:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1290:      state->deckCount[player]++;
        -: 1291:    }
    #####: 1292:  else if (toFlag == 2)
        -: 1293:    {
    #####: 1294:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1295:      state->handCount[player]++;
        -: 1296:    }
        -: 1297:  else
        -: 1298:    {
    #####: 1299:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1300:      state->discardCount[player]++;
        -: 1301:    }
        -: 1302:
        -: 1303:  //decrease number in supply pile
    #####: 1304:  state->supplyCount[supplyPos]--;
        -: 1305:
    #####: 1306:  return 0;
        -: 1307:}
        -: 1308:
        9: 1309:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1310:{
        -: 1311:  int i;
        -: 1312:
        -: 1313:  //reset coin count
        9: 1314:  state->coins = 0;
        -: 1315:
        -: 1316:  //add coins for each Treasure card in player's hand
       14: 1317:  for (i = 0; i < state->handCount[player]; i++)
        -: 1318:    {
        5: 1319:      if (state->hand[player][i] == copper)
        -: 1320:	{
        4: 1321:	  state->coins += 1;
        -: 1322:	}
        1: 1323:      else if (state->hand[player][i] == silver)
        -: 1324:	{
    #####: 1325:	  state->coins += 2;
        -: 1326:	}
        1: 1327:      else if (state->hand[player][i] == gold)
        -: 1328:	{
    #####: 1329:	  state->coins += 3;
        -: 1330:	}
        -: 1331:    }
        -: 1332:
        -: 1333:  //add bonus
        9: 1334:  state->coins += bonus;
        -: 1335:
        9: 1336:  return 0;
        -: 1337:}
        -: 1338:
        -: 1339:
        -: 1340://end of dominion.c
cardtest4.c:
All tests passed! Returned fine and a new card was added and old was removed. Number of actions also right.
File 'dominion.c'
Lines executed:34.94% of 561
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:8
        -:    0:Programs:8
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
       30:    8:int compare(const void* a, const void* b) {
       30:    9:  if (*(int*)a > *(int*)b)
    #####:   10:    return 1;
       30:   11:  if (*(int*)a < *(int*)b)
        8:   12:    return -1;
       22:   13:  return 0;
        -:   14:}
        -:   15:
    #####:   16:struct gameState* newGame() {
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
        -:   19:}
        -:   20:
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
        -:   35:}
        -:   36:
        1:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;
        -:   43:  //set up random number generator
        1:   44:  SelectStream(1);
        1:   45:  PutSeed((long)randomSeed);
        -:   46:
        -:   47:  //check number of players
        1:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
        1:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
       11:   57:  for (i = 0; i < 10; i++)
        -:   58:    {
      110:   59:      for (j = 0; j < 10; j++)
        -:   60:        {
      100:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
        1:   73:  if (numPlayers == 2)
        -:   74:    {
        1:   75:      state->supplyCount[curse] = 10;
        -:   76:    }
    #####:   77:  else if (numPlayers == 3)
        -:   78:    {
    #####:   79:      state->supplyCount[curse] = 20;
        -:   80:    }
        -:   81:  else
        -:   82:    {
    #####:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
        1:   87:  if (numPlayers == 2)
        -:   88:    {
        1:   89:      state->supplyCount[estate] = 8;
        1:   90:      state->supplyCount[duchy] = 8;
        1:   91:      state->supplyCount[province] = 8;
        -:   92:    }
        -:   93:  else
        -:   94:    {
    #####:   95:      state->supplyCount[estate] = 12;
    #####:   96:      state->supplyCount[duchy] = 12;
    #####:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
        1:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
        1:  102:  state->supplyCount[silver] = 40;
        1:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
       21:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
        -:  107:    {
      165:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
        -:  109:	{
      155:  110:	  if (kingdomCards[j] == i)
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
       10:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
        -:  114:		{
    #####:  115:		  if (numPlayers == 2){
    #####:  116:		    state->supplyCount[i] = 8;
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
        -:  119:		}
        -:  120:	      else
        -:  121:		{
       10:  122:		  state->supplyCount[i] = 10;
        -:  123:		}
       10:  124:	      break;
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
      145:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
        3:  138:  for (i = 0; i < numPlayers; i++)
        -:  139:    {
        2:  140:      state->deckCount[i] = 0;
        8:  141:      for (j = 0; j < 3; j++)
        -:  142:	{
        6:  143:	  state->deck[i][j] = estate;
        6:  144:	  state->deckCount[i]++;
        -:  145:	}
       16:  146:      for (j = 3; j < 10; j++)
        -:  147:	{
       14:  148:	  state->deck[i][j] = copper;
       14:  149:	  state->deckCount[i]++;
        -:  150:	}
        -:  151:    }
        -:  152:
        -:  153:  //shuffle player decks
        3:  154:  for (i = 0; i < numPlayers; i++)
        -:  155:    {
        2:  156:      if ( shuffle(i, state) < 0 )
        -:  157:	{
    #####:  158:	  return -1;
        -:  159:	}
        -:  160:    }
        -:  161:
        -:  162:  //draw player hands
        3:  163:  for (i = 0; i < numPlayers; i++)
        -:  164:    {
        -:  165:      //initialize hand size to zero
        2:  166:      state->handCount[i] = 0;
        2:  167:      state->discardCount[i] = 0;
        -:  168:      //draw 5 cards
        -:  169:      // for (j = 0; j < 5; j++)
        -:  170:      //	{
        -:  171:      //	  drawCard(i, state);
        -:  172:      //	}
        -:  173:    }
        -:  174:
        -:  175:  //set embargo tokens to 0 for all supply piles
       28:  176:  for (i = 0; i <= treasure_map; i++)
        -:  177:    {
       27:  178:      state->embargoTokens[i] = 0;
        -:  179:    }
        -:  180:
        -:  181:  //initialize first player's turn
        1:  182:  state->outpostPlayed = 0;
        1:  183:  state->phase = 0;
        1:  184:  state->numActions = 1;
        1:  185:  state->numBuys = 1;
        1:  186:  state->playedCardCount = 0;
        1:  187:  state->whoseTurn = 0;
        1:  188:  state->handCount[state->whoseTurn] = 0;
        -:  189:  //int it; move to top
        -:  190:
        -:  191:  //Moved draw cards to here, only drawing at the start of a turn
        6:  192:  for (it = 0; it < 5; it++){
        5:  193:    drawCard(state->whoseTurn, state);
        -:  194:  }
        -:  195:
        1:  196:  updateCoins(state->whoseTurn, state, 0);
        -:  197:
        1:  198:  return 0;
        -:  199:}
        -:  200:
        2:  201:int shuffle(int player, struct gameState *state) {
        -:  202:
        -:  203:
        -:  204:  int newDeck[MAX_DECK];
        2:  205:  int newDeckPos = 0;
        -:  206:  int card;
        -:  207:  int i;
        -:  208:
        2:  209:  if (state->deckCount[player] < 1)
    #####:  210:    return -1;
        2:  211:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare);
        -:  212:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  213:
       24:  214:  while (state->deckCount[player] > 0) {
       20:  215:    card = floor(Random() * state->deckCount[player]);
       20:  216:    newDeck[newDeckPos] = state->deck[player][card];
       20:  217:    newDeckPos++;
       72:  218:    for (i = card; i < state->deckCount[player]-1; i++) {
       52:  219:      state->deck[player][i] = state->deck[player][i+1];
        -:  220:    }
       20:  221:    state->deckCount[player]--;
        -:  222:  }
       22:  223:  for (i = 0; i < newDeckPos; i++) {
       20:  224:    state->deck[player][i] = newDeck[i];
       20:  225:    state->deckCount[player]++;
        -:  226:  }
        -:  227:
        2:  228:  return 0;
        -:  229:}
        -:  230:
    #####:  231:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state)
        -:  232:{
        -:  233:  int card;
    #####:  234:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  235:
        -:  236:  //check if it is the right phase
    #####:  237:  if (state->phase != 0)
        -:  238:    {
    #####:  239:      return -1;
        -:  240:    }
        -:  241:
        -:  242:  //check if player has enough actions
    #####:  243:  if ( state->numActions < 1 )
        -:  244:    {
    #####:  245:      return -1;
        -:  246:    }
        -:  247:
        -:  248:  //get card played
    #####:  249:  card = handCard(handPos, state);
        -:  250:
        -:  251:  //check if selected card is an action
    #####:  252:  if ( card < adventurer || card > treasure_map )
        -:  253:    {
    #####:  254:      return -1;
        -:  255:    }
        -:  256:
        -:  257:  //play card
    #####:  258:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
        -:  259:    {
    #####:  260:      return -1;
        -:  261:    }
        -:  262:
        -:  263:  //reduce number of actions
    #####:  264:  state->numActions--;
        -:  265:
        -:  266:  //update coins (Treasure cards may be added with card draws)
    #####:  267:  updateCoins(state->whoseTurn, state, coin_bonus);
        -:  268:
    #####:  269:  return 0;
        -:  270:}
        -:  271:
    #####:  272:int buyCard(int supplyPos, struct gameState *state) {
        -:  273:  int who;
        -:  274:  if (DEBUG){
        -:  275:    printf("Entering buyCard...\n");
        -:  276:  }
        -:  277:
        -:  278:  // I don't know what to do about the phase thing.
        -:  279:
    #####:  280:  who = state->whoseTurn;
        -:  281:
    #####:  282:  if (state->numBuys < 1){
        -:  283:    if (DEBUG)
        -:  284:      printf("You do not have any buys left\n");
    #####:  285:    return -1;
    #####:  286:  } else if (supplyCount(supplyPos, state) <1){
        -:  287:    if (DEBUG)
        -:  288:      printf("There are not any of that type of card left\n");
    #####:  289:    return -1;
    #####:  290:  } else if (state->coins < getCost(supplyPos)){
        -:  291:    if (DEBUG)
        -:  292:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  293:    return -1;
        -:  294:  } else {
    #####:  295:    state->phase=1;
        -:  296:    //state->supplyCount[supplyPos]--;
    #####:  297:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  298:
    #####:  299:    state->coins = (state->coins) - (getCost(supplyPos));
    #####:  300:    state->numBuys--;
        -:  301:    if (DEBUG)
        -:  302:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  303:  }
        -:  304:
        -:  305:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  306:  //state->discardCount[who]++;
        -:  307:
    #####:  308:  return 0;
        -:  309:}
        -:  310:
       12:  311:int numHandCards(struct gameState *state) {
       12:  312:  return state->handCount[ whoseTurn(state) ];
        -:  313:}
        -:  314:
    #####:  315:int handCard(int handPos, struct gameState *state) {
    #####:  316:  int currentPlayer = whoseTurn(state);
    #####:  317:  return state->hand[currentPlayer][handPos];
        -:  318:}
        -:  319:
    #####:  320:int supplyCount(int card, struct gameState *state) {
    #####:  321:  return state->supplyCount[card];
        -:  322:}
        -:  323:
    #####:  324:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  325:  int i;
    #####:  326:  int count = 0;
        -:  327:
    #####:  328:  for (i = 0; i < state->deckCount[player]; i++)
        -:  329:    {
    #####:  330:      if (state->deck[player][i] == card) count++;
        -:  331:    }
        -:  332:
    #####:  333:  for (i = 0; i < state->handCount[player]; i++)
        -:  334:    {
    #####:  335:      if (state->hand[player][i] == card) count++;
        -:  336:    }
        -:  337:
    #####:  338:  for (i = 0; i < state->discardCount[player]; i++)
        -:  339:    {
    #####:  340:      if (state->discard[player][i] == card) count++;
        -:  341:    }
        -:  342:
    #####:  343:  return count;
        -:  344:}
        -:  345:
     8013:  346:int whoseTurn(struct gameState *state) {
     8013:  347:  return state->whoseTurn;
        -:  348:}
        -:  349:
    #####:  350:int endTurn(struct gameState *state) {
        -:  351:  int k;
        -:  352:  int i;
    #####:  353:  int currentPlayer = whoseTurn(state);
        -:  354:
        -:  355:  //Discard hand
    #####:  356:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    #####:  357:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  358:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  359:  }
    #####:  360:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  361:
        -:  362:  //Code for determining the player
    #####:  363:  if (currentPlayer < (state->numPlayers - 1)){
    #####:  364:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  365:  }
        -:  366:  else{
    #####:  367:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  368:  }
        -:  369:
    #####:  370:  state->outpostPlayed = 0;
    #####:  371:  state->phase = 0;
    #####:  372:  state->numActions = 1;
    #####:  373:  state->coins = 0;
    #####:  374:  state->numBuys = 1;
    #####:  375:  state->playedCardCount = 0;
    #####:  376:  state->handCount[state->whoseTurn] = 0;
        -:  377:
        -:  378:  //int k; move to top
        -:  379:  //Next player draws hand
    #####:  380:  for (k = 0; k < 5; k++){
    #####:  381:    drawCard(state->whoseTurn, state);//Draw a card
        -:  382:  }
        -:  383:
        -:  384:  //Update money
    #####:  385:  updateCoins(state->whoseTurn, state , 0);
        -:  386:
    #####:  387:  return 0;
        -:  388:}
        -:  389:
     1002:  390:int isGameOver(struct gameState *state) {
        -:  391:  int i;
        -:  392:  int j;
        -:  393:
        -:  394:  //if stack of Province cards is empty, the game ends
     1002:  395:  if (state->supplyCount[province] == 0)
        -:  396:    {
      109:  397:      return 1;
        -:  398:    }
        -:  399:
        -:  400:  //if three supply pile are at 0, the game ends
      893:  401:  j = 0;
    23218:  402:  for (i = 0; i < 25; i++)
        -:  403:    {
    22325:  404:      if (state->supplyCount[i] == 0)
        -:  405:	{
     2676:  406:	  j++;
        -:  407:	}
        -:  408:    }
      893:  409:  if ( j >= 3)
        -:  410:    {
      892:  411:      return 1;
        -:  412:    }
        -:  413:
        1:  414:  return 0;
        -:  415:}
        -:  416:
        4:  417:int scoreFor (int player, struct gameState *state) {
        -:  418:
        -:  419:  int i;
        4:  420:  int score = 0;
        -:  421:  //score from hand
       16:  422:  for (i = 0; i < state->handCount[player]; i++)
        -:  423:    {
       12:  424:      if (state->hand[player][i] == curse) { score = score - 1; };
       12:  425:      if (state->hand[player][i] == estate) { score = score + 1; };
       12:  426:      if (state->hand[player][i] == duchy) { score = score + 3; };
       12:  427:      if (state->hand[player][i] == province) { score = score + 6; };
       12:  428:      if (state->hand[player][i] == great_hall) { score = score + 1; };
       12:  429:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  430:    }
        -:  431:
        -:  432:  //score from discard
        4:  433:  for (i = 0; i < state->discardCount[player]; i++)
        -:  434:    {
    #####:  435:      if (state->discard[player][i] == curse) { score = score - 1; };
    #####:  436:      if (state->discard[player][i] == estate) { score = score + 1; };
    #####:  437:      if (state->discard[player][i] == duchy) { score = score + 3; };
    #####:  438:      if (state->discard[player][i] == province) { score = score + 6; };
    #####:  439:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    #####:  440:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  441:    }
        -:  442:
        -:  443:  //score from deck
        4:  444:  for (i = 0; i < state->discardCount[player]; i++)
        -:  445:    {
    #####:  446:      if (state->deck[player][i] == curse) { score = score - 1; };
    #####:  447:      if (state->deck[player][i] == estate) { score = score + 1; };
    #####:  448:      if (state->deck[player][i] == duchy) { score = score + 3; };
    #####:  449:      if (state->deck[player][i] == province) { score = score + 6; };
    #####:  450:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    #####:  451:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  452:    }
        -:  453:
        4:  454:  return score;
        -:  455:}
        -:  456:
    #####:  457:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  458:  int i;
        -:  459:  int j;
        -:  460:  int highScore;
        -:  461:  int currentPlayer;
        -:  462:
        -:  463:  //get score for each player
    #####:  464:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  465:    {
        -:  466:      //set unused player scores to -9999
    #####:  467:      if (i >= state->numPlayers)
        -:  468:	{
    #####:  469:	  players[i] = -9999;
        -:  470:	}
        -:  471:      else
        -:  472:	{
    #####:  473:	  players[i] = scoreFor (i, state);
        -:  474:	}
        -:  475:    }
        -:  476:
        -:  477:  //find highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  480:    {
    #####:  481:      if (players[i] > players[j])
        -:  482:	{
    #####:  483:	  j = i;
        -:  484:	}
        -:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //add 1 to players who had less turns
    #####:  489:  currentPlayer = whoseTurn(state);
    #####:  490:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  491:    {
    #####:  492:      if ( players[i] == highScore && i > currentPlayer )
        -:  493:	{
    #####:  494:	  players[i]++;
        -:  495:	}
        -:  496:    }
        -:  497:
        -:  498:  //find new highest score
    #####:  499:  j = 0;
    #####:  500:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  501:    {
    #####:  502:      if ( players[i] > players[j] )
        -:  503:	{
    #####:  504:	  j = i;
        -:  505:	}
        -:  506:    }
    #####:  507:  highScore = players[j];
        -:  508:
        -:  509:  //set winners in array to 1 and rest to 0
    #####:  510:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  511:    {
    #####:  512:      if ( players[i] == highScore )
        -:  513:	{
    #####:  514:	  players[i] = 1;
        -:  515:	}
        -:  516:      else
        -:  517:	{
    #####:  518:	  players[i] = 0;
        -:  519:	}
        -:  520:    }
        -:  521:
    #####:  522:  return 0;
        -:  523:}
        -:  524:
    24007:  525:int drawCard(int player, struct gameState *state)
        -:  526:{	int count;
        -:  527:  int deckCounter;
    24007:  528:  if (state->deckCount[player] <= 0){//Deck is empty
        -:  529:
        -:  530:    //Step 1 Shuffle the discard pile back into a deck
        -:  531:    int i;
        -:  532:    //Move discard to deck
    #####:  533:    for (i = 0; i < state->discardCount[player];i++){
    #####:  534:      state->deck[player][i] = state->discard[player][i];
    #####:  535:      state->discard[player][i] = -1;
        -:  536:    }
        -:  537:
    #####:  538:    state->deckCount[player] = state->discardCount[player];
    #####:  539:    state->discardCount[player] = 0;//Reset discard
        -:  540:
        -:  541:    //Shufffle the deck
    #####:  542:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
        -:  543:
        -:  544:    if (DEBUG){//Debug statements
        -:  545:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  546:    }
        -:  547:
    #####:  548:    state->discardCount[player] = 0;
        -:  549:
        -:  550:    //Step 2 Draw Card
    #####:  551:    count = state->handCount[player];//Get current player's hand count
        -:  552:
        -:  553:    if (DEBUG){//Debug statements
        -:  554:      printf("Current hand count: %d\n", count);
        -:  555:    }
        -:  556:
    #####:  557:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  558:
    #####:  559:    if (deckCounter == 0)
    #####:  560:      return -1;
        -:  561:
    #####:  562:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    #####:  563:    state->deckCount[player]--;
    #####:  564:    state->handCount[player]++;//Increment hand count
        -:  565:  }
        -:  566:
        -:  567:  else{
    24007:  568:    int count = state->handCount[player];//Get current hand count for player
        -:  569:    int deckCounter;
        -:  570:    if (DEBUG){//Debug statements
        -:  571:      printf("Current hand count: %d\n", count);
        -:  572:    }
        -:  573:
    24007:  574:    deckCounter = state->deckCount[player];//Create holder for the deck count
    24007:  575:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
    24007:  576:    state->deckCount[player]--;
    24007:  577:    state->handCount[player]++;//Increment hand count
        -:  578:  }
        -:  579:
    24007:  580:  return 0;
        -:  581:}
        -:  582:
       35:  583:int getCost(int cardNumber)
        -:  584:{
       35:  585:  switch( cardNumber )
        -:  586:    {
        -:  587:    case curse:
        1:  588:      return 0;
        -:  589:    case estate:
        1:  590:      return 2;
        -:  591:    case duchy:
        1:  592:      return 5;
        -:  593:    case province:
        1:  594:      return 8;
        -:  595:    case copper:
        1:  596:      return 0;
        -:  597:    case silver:
        1:  598:      return 3;
        -:  599:    case gold:
        1:  600:      return 6;
        -:  601:    case adventurer:
        1:  602:      return 6;
        -:  603:    case council_room:
        1:  604:      return 5;
        -:  605:    case feast:
        1:  606:      return 4;
        -:  607:    case gardens:
        1:  608:      return 4;
        -:  609:    case mine:
        1:  610:      return 5;
        -:  611:    case remodel:
        1:  612:      return 4;
        -:  613:    case smithy:
        1:  614:      return 4;
        -:  615:    case village:
        1:  616:      return 3;
        -:  617:    case baron:
        1:  618:      return 4;
        -:  619:    case great_hall:
        1:  620:      return 3;
        -:  621:    case minion:
        1:  622:      return 5;
        -:  623:    case steward:
        1:  624:      return 3;
        -:  625:    case tribute:
        1:  626:      return 5;
        -:  627:    case ambassador:
        1:  628:      return 3;
        -:  629:    case cutpurse:
        1:  630:      return 4;
        -:  631:    case embargo:
        1:  632:      return 2;
        -:  633:    case outpost:
        1:  634:      return 5;
        -:  635:    case salvager:
        1:  636:      return 4;
        -:  637:    case sea_hag:
        1:  638:      return 4;
        -:  639:    case treasure_map:
        1:  640:      return 4;
        -:  641:    }
        -:  642:
        8:  643:  return -1;
        -:  644:}
        -:  645:
        1:  646:void adventurer_action (int drawntreasure, struct gameState *state, int currentPlayer, int cardDrawn, int temphand[MAX_HAND], int z) {
        4:  647:    while(drawntreasure<2){
        2:  648:        if (state->deckCount[currentPlayer] < 1){//if the deck is empty we need to shuffle discard and add to deck
    #####:  649:            shuffle(currentPlayer, state);
        -:  650:        }
        2:  651:        drawCard(currentPlayer, state);
        2:  652:        cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
        2:  653:        if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
        2:  654:          drawntreasure++;
        -:  655:        else{
    #####:  656:          temphand[z]=cardDrawn;
    #####:  657:          state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
        -:  658:        }
        -:  659:  }
        2:  660:  while(z-1>=0){
    #####:  661:      state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    #####:  662:      z=z-1;
        -:  663:  }
        1:  664:}
        -:  665:
     4000:  666:void smithy_action (int currentPlayer, struct gameState *state, int i, int handPos) {
        -:  667:  //+3 Cards
    16000:  668:  for (i = 0; i < 3; i++) {
    12000:  669:    drawCard(currentPlayer, state);
        -:  670:  }
        -:  671:
        -:  672:  //discard card from hand
     4000:  673:  discardCard(handPos, currentPlayer, state, 0);
     4000:  674:}
        -:  675:
    #####:  676:void village_action (int currentPlayer, struct gameState *state, int handPos) {
        -:  677:  //+1 Card
    #####:  678:  drawCard(currentPlayer, state);
        -:  679:
        -:  680:  //+2 Actions
    #####:  681:  state->numActions = state->numActions + 2;
        -:  682:
        -:  683:  //discard played card from hand
    #####:  684:  discardCard(handPos, currentPlayer, state, 0);
    #####:  685:}
        -:  686:
     2000:  687:void council_room_action (int i, int currentPlayer, struct gameState *state) {
        -:  688:  //+4 Cards
    10000:  689:  for (i = 0; i < 4; i++) {
     8000:  690:      drawCard(currentPlayer, state);
        -:  691:  }
        -:  692:
        -:  693:  //+1 Buy
     2000:  694:  state->numBuys++;
        -:  695:
        -:  696:  //Each other player draws a card
    10000:  697:  for (i = 0; i < state->numPlayers; i++) {
     8000:  698:      if ( i == currentPlayer ) {
     2000:  699:          drawCard(i, state);
        -:  700:      }
        -:  701:  }
     2000:  702:}
        -:  703:
    #####:  704:int mine_action (int j, struct gameState *state, int currentPlayer, int choice1, int choice2, int handPos, int i) {
    #####:  705:  j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  706:
    #####:  707:  if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold) {
    #####:  708:      return -1;
        -:  709:  }
        -:  710:
    #####:  711:  if (choice2 > treasure_map || choice2 < curse) {
    #####:  712:      return -1;
        -:  713:  }
        -:  714:
    #####:  715:  if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) ) {
    #####:  716:      return -1;
        -:  717:  }
        -:  718:
    #####:  719:  gainCard(choice2, state, 2, currentPlayer);
        -:  720:
        -:  721:  //discard card from hand
    #####:  722:  discardCard(handPos, currentPlayer, state, 0);
        -:  723:
        -:  724:  //discard trashed card
    #####:  725:  for (i = 0; i < state->handCount[currentPlayer]; i++) {
    #####:  726:      if (state->hand[currentPlayer][i] == j) {
    #####:  727:        discardCard(i, currentPlayer, state, 0);
    #####:  728:        break;
        -:  729:      }
        -:  730:  }
        -:  731:
    #####:  732:  return -1;
        -:  733:}
        -:  734:
     8001:  735:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  736:{
        -:  737:  int i;
        -:  738:  int j;
        -:  739:  int k;
        -:  740:  int x;
        -:  741:  int m;
        -:  742:  int index;
     8001:  743:  int currentPlayer = whoseTurn(state);
     8001:  744:  int nextPlayer = currentPlayer + 1;
        -:  745:
     8001:  746:  int tributeRevealedCards[2] = {-1, -1};
        -:  747:  int temphand[MAX_HAND];// moved above the if statement
     8001:  748:  int drawntreasure=0;
        -:  749:  int cardDrawn;
     8001:  750:  int z = 0;// this is the counter for the temp hand
     8001:  751:  if (nextPlayer > (state->numPlayers - 1)){
     4500:  752:    nextPlayer = 0;
        -:  753:  }
        -:  754:
        -:  755:
        -:  756:  //uses switch to select card and perform actions
     8001:  757:  switch( card )
        -:  758:    {
        -:  759:    case adventurer:
        1:  760:      adventurer_action (drawntreasure, state, currentPlayer, cardDrawn, temphand, z);
        1:  761:      return 0;
        -:  762:
        -:  763:    case council_room:
     2000:  764:      council_room_action (i, currentPlayer, state);
     2000:  765:      return 0;
        -:  766:
        -:  767:    case feast:
        -:  768:      //gain card with cost up to 5
        -:  769:      //Backup hand
    #####:  770:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  771:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  772:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  773:      }
        -:  774:      //Backup hand
        -:  775:
        -:  776:      //Update Coins for Buy
    #####:  777:      updateCoins(currentPlayer, state, 5);
    #####:  778:      x = 1;//Condition to loop on
    #####:  779:      while( x == 1) {//Buy one card
    #####:  780:	if (supplyCount(choice1, state) <= 0){
        -:  781:	  if (DEBUG)
        -:  782:	    printf("None of that card left, sorry!\n");
        -:  783:
        -:  784:	  if (DEBUG){
        -:  785:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  786:	  }
        -:  787:	}
    #####:  788:	else if (state->coins < getCost(choice1)){
    #####:  789:	  printf("That card is too expensive!\n");
        -:  790:
        -:  791:	  if (DEBUG){
        -:  792:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  793:	  }
        -:  794:	}
        -:  795:	else{
        -:  796:
        -:  797:	  if (DEBUG){
        -:  798:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  799:	  }
        -:  800:
    #####:  801:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    #####:  802:	  x = 0;//No more buying cards
        -:  803:
        -:  804:	  if (DEBUG){
        -:  805:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  806:	  }
        -:  807:
        -:  808:	}
        -:  809:      }
        -:  810:
        -:  811:      //Reset Hand
    #####:  812:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  813:	state->hand[currentPlayer][i] = temphand[i];
    #####:  814:	temphand[i] = -1;
        -:  815:      }
        -:  816:      //Reset Hand
        -:  817:
    #####:  818:      return 0;
        -:  819:
        -:  820:    case gardens:
    #####:  821:      return -1;
        -:  822:
        -:  823:    case mine:
    #####:  824:      m = mine_action (j, state, currentPlayer, choice1, choice2, handPos, i);
    #####:  825:      return m;
        -:  826:
        -:  827:    case remodel:
    #####:  828:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  829:
    #####:  830:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
        -:  831:	{
    #####:  832:	  return -1;
        -:  833:	}
        -:  834:
    #####:  835:      gainCard(choice2, state, 0, currentPlayer);
        -:  836:
        -:  837:      //discard card from hand
    #####:  838:      discardCard(handPos, currentPlayer, state, 0);
        -:  839:
        -:  840:      //discard trashed card
    #####:  841:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  842:	{
    #####:  843:	  if (state->hand[currentPlayer][i] == j)
        -:  844:	    {
    #####:  845:	      discardCard(i, currentPlayer, state, 0);
    #####:  846:	      break;
        -:  847:	    }
        -:  848:	}
        -:  849:
        -:  850:
    #####:  851:      return 0;
        -:  852:
        -:  853:    case smithy:
     4000:  854:      smithy_action (currentPlayer, state, i, handPos);
     4000:  855:      return 0;
        -:  856:
        -:  857:    case village:
    #####:  858:      village_action (currentPlayer, state, handPos);
    #####:  859:      return 0;
        -:  860:
        -:  861:    case baron:
    #####:  862:      state->numBuys++;//Increase buys by 1!
    #####:  863:      if (choice1 > 0){//Boolean true or going to discard an estate
    #####:  864:	int p = 0;//Iterator for hand!
    #####:  865:	int card_not_discarded = 1;//Flag for discard set!
    #####:  866:	while(card_not_discarded){
    #####:  867:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    #####:  868:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  869:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  870:	    state->discardCount[currentPlayer]++;
    #####:  871:	    for (;p < state->handCount[currentPlayer]; p++){
    #####:  872:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  873:	    }
    #####:  874:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  875:	    state->handCount[currentPlayer]--;
    #####:  876:	    card_not_discarded = 0;//Exit the loop
        -:  877:	  }
    #####:  878:	  else if (p > state->handCount[currentPlayer]){
        -:  879:	    if(DEBUG) {
        -:  880:	      printf("No estate cards in your hand, invalid choice\n");
        -:  881:	      printf("Must gain an estate if there are any\n");
        -:  882:	    }
    #####:  883:	    if (supplyCount(estate, state) > 0){
    #####:  884:	      gainCard(estate, state, 0, currentPlayer);
    #####:  885:	      state->supplyCount[estate]--;//Decrement estates
    #####:  886:	      if (supplyCount(estate, state) == 0){
    #####:  887:		isGameOver(state);
        -:  888:	      }
        -:  889:	    }
    #####:  890:	    card_not_discarded = 0;//Exit the loop
        -:  891:	  }
        -:  892:
        -:  893:	  else{
    #####:  894:	    p++;//Next card
        -:  895:	  }
        -:  896:	}
        -:  897:      }
        -:  898:
        -:  899:      else{
    #####:  900:	if (supplyCount(estate, state) > 0){
    #####:  901:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
    #####:  902:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  903:	  if (supplyCount(estate, state) == 0){
    #####:  904:	    isGameOver(state);
        -:  905:	  }
        -:  906:	}
        -:  907:      }
        -:  908:
        -:  909:
    #####:  910:      return 0;
        -:  911:
        -:  912:    case great_hall:
        -:  913:      //+1 Card
     2000:  914:      drawCard(currentPlayer, state);
        -:  915:
        -:  916:      //+1 Actions
     2000:  917:      state->numActions++;
        -:  918:
        -:  919:      //discard card from hand
     2000:  920:      discardCard(handPos, currentPlayer, state, 0);
     2000:  921:      return 0;
        -:  922:
        -:  923:    case minion:
        -:  924:      //+1 action
    #####:  925:      state->numActions++;
        -:  926:
        -:  927:      //discard card from hand
    #####:  928:      discardCard(handPos, currentPlayer, state, 0);
        -:  929:
    #####:  930:      if (choice1)		//+2 coins
        -:  931:	{
    #####:  932:	  state->coins = state->coins + 2;
        -:  933:	}
        -:  934:
    #####:  935:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
        -:  936:	{
        -:  937:	  //discard hand
    #####:  938:	  while(numHandCards(state) > 0)
        -:  939:	    {
    #####:  940:	      discardCard(handPos, currentPlayer, state, 0);
        -:  941:	    }
        -:  942:
        -:  943:	  //draw 4
    #####:  944:	  for (i = 0; i < 4; i++)
        -:  945:	    {
    #####:  946:	      drawCard(currentPlayer, state);
        -:  947:	    }
        -:  948:
        -:  949:	  //other players discard hand and redraw if hand size > 4
    #####:  950:	  for (i = 0; i < state->numPlayers; i++)
        -:  951:	    {
    #####:  952:	      if (i != currentPlayer)
        -:  953:		{
    #####:  954:		  if ( state->handCount[i] > 4 )
        -:  955:		    {
        -:  956:		      //discard hand
    #####:  957:		      while( state->handCount[i] > 0 )
        -:  958:			{
    #####:  959:			  discardCard(handPos, i, state, 0);
        -:  960:			}
        -:  961:
        -:  962:		      //draw 4
    #####:  963:		      for (j = 0; j < 4; j++)
        -:  964:			{
    #####:  965:			  drawCard(i, state);
        -:  966:			}
        -:  967:		    }
        -:  968:		}
        -:  969:	    }
        -:  970:
        -:  971:	}
    #####:  972:      return 0;
        -:  973:
        -:  974:    case steward:
    #####:  975:      if (choice1 == 1)
        -:  976:	{
        -:  977:	  //+2 cards
    #####:  978:	  drawCard(currentPlayer, state);
    #####:  979:	  drawCard(currentPlayer, state);
        -:  980:	}
    #####:  981:      else if (choice1 == 2)
        -:  982:	{
        -:  983:	  //+2 coins
    #####:  984:	  state->coins = state->coins + 2;
        -:  985:	}
        -:  986:      else
        -:  987:	{
        -:  988:	  //trash 2 cards in hand
    #####:  989:	  discardCard(choice2, currentPlayer, state, 1);
    #####:  990:	  discardCard(choice3, currentPlayer, state, 1);
        -:  991:	}
        -:  992:
        -:  993:      //discard card from hand
    #####:  994:      discardCard(handPos, currentPlayer, state, 0);
    #####:  995:      return 0;
        -:  996:
        -:  997:    case tribute:
    #####:  998:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    #####:  999:	if (state->deckCount[nextPlayer] > 0){
    #####: 1000:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1001:	  state->deckCount[nextPlayer]--;
        -: 1002:	}
    #####: 1003:	else if (state->discardCount[nextPlayer] > 0){
    #####: 1004:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1005:	  state->discardCount[nextPlayer]--;
        -: 1006:	}
        -: 1007:	else{
        -: 1008:	  //No Card to Reveal
        -: 1009:	  if (DEBUG){
        -: 1010:	    printf("No cards to reveal\n");
        -: 1011:	  }
        -: 1012:	}
        -: 1013:      }
        -: 1014:
        -: 1015:      else{
    #####: 1016:	if (state->deckCount[nextPlayer] == 0){
    #####: 1017:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    #####: 1018:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1019:	    state->deckCount[nextPlayer]++;
    #####: 1020:	    state->discard[nextPlayer][i] = -1;
    #####: 1021:	    state->discardCount[nextPlayer]--;
        -: 1022:	  }
        -: 1023:
    #####: 1024:	  shuffle(nextPlayer,state);//Shuffle the deck
        -: 1025:	}
    #####: 1026:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1027:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1028:	state->deckCount[nextPlayer]--;
    #####: 1029:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1030:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1031:	state->deckCount[nextPlayer]--;
        -: 1032:      }
        -: 1033:
    #####: 1034:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one
    #####: 1035:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1036:	state->playedCardCount++;
    #####: 1037:	tributeRevealedCards[1] = -1;
        -: 1038:      }
        -: 1039:
    #####: 1040:      for (i = 0; i <= 2; i ++){
    #####: 1041:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    #####: 1042:	  state->coins += 2;
        -: 1043:	}
        -: 1044:
    #####: 1045:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    #####: 1046:	  drawCard(currentPlayer, state);
    #####: 1047:	  drawCard(currentPlayer, state);
        -: 1048:	}
        -: 1049:	else{//Action Card
    #####: 1050:	  state->numActions = state->numActions + 2;
        -: 1051:	}
        -: 1052:      }
        -: 1053:
    #####: 1054:      return 0;
        -: 1055:
        -: 1056:    case ambassador:
    #####: 1057:      j = 0;		//used to check if player has enough cards to discard
        -: 1058:
    #####: 1059:      if (choice2 > 2 || choice2 < 0)
        -: 1060:	{
    #####: 1061:	  return -1;
        -: 1062:	}
        -: 1063:
    #####: 1064:      if (choice1 == handPos)
        -: 1065:	{
    #####: 1066:	  return -1;
        -: 1067:	}
        -: 1068:
    #####: 1069:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1070:	{
    #####: 1071:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
        -: 1072:	    {
    #####: 1073:	      j++;
        -: 1074:	    }
        -: 1075:	}
    #####: 1076:      if (j < choice2)
        -: 1077:	{
    #####: 1078:	  return -1;
        -: 1079:	}
        -: 1080:
        -: 1081:      if (DEBUG)
        -: 1082:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1083:
        -: 1084:      //increase supply count for choosen card by amount being discarded
    #####: 1085:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1086:
        -: 1087:      //each other player gains a copy of revealed card
    #####: 1088:      for (i = 0; i < state->numPlayers; i++)
        -: 1089:	{
    #####: 1090:	  if (i != currentPlayer)
        -: 1091:	    {
    #####: 1092:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
        -: 1093:	    }
        -: 1094:	}
        -: 1095:
        -: 1096:      //discard played card from hand
    #####: 1097:      discardCard(handPos, currentPlayer, state, 0);
        -: 1098:
        -: 1099:      //trash copies of cards returned to supply
    #####: 1100:      for (j = 0; j < choice2; j++)
        -: 1101:	{
    #####: 1102:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1103:	    {
    #####: 1104:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
        -: 1105:		{
    #####: 1106:		  discardCard(i, currentPlayer, state, 1);
    #####: 1107:		  break;
        -: 1108:		}
        -: 1109:	    }
        -: 1110:	}
        -: 1111:
    #####: 1112:      return 0;
        -: 1113:
        -: 1114:    case cutpurse:
        -: 1115:
    #####: 1116:      updateCoins(currentPlayer, state, 2);
    #####: 1117:      for (i = 0; i < state->numPlayers; i++)
        -: 1118:	{
    #####: 1119:	  if (i != currentPlayer)
        -: 1120:	    {
    #####: 1121:	      for (j = 0; j < state->handCount[i]; j++)
        -: 1122:		{
    #####: 1123:		  if (state->hand[i][j] == copper)
        -: 1124:		    {
    #####: 1125:		      discardCard(j, i, state, 0);
    #####: 1126:		      break;
        -: 1127:		    }
    #####: 1128:		  if (j == state->handCount[i])
        -: 1129:		    {
    #####: 1130:		      for (k = 0; k < state->handCount[i]; k++)
        -: 1131:			{
        -: 1132:			  if (DEBUG)
        -: 1133:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1134:			}
    #####: 1135:		      break;
        -: 1136:		    }
        -: 1137:		}
        -: 1138:
        -: 1139:	    }
        -: 1140:
        -: 1141:	}
        -: 1142:
        -: 1143:      //discard played card from hand
    #####: 1144:      discardCard(handPos, currentPlayer, state, 0);
        -: 1145:
    #####: 1146:      return 0;
        -: 1147:
        -: 1148:
        -: 1149:    case embargo:
        -: 1150:      //+2 Coins
    #####: 1151:      state->coins = state->coins + 2;
        -: 1152:
        -: 1153:      //see if selected pile is in play
    #####: 1154:      if ( state->supplyCount[choice1] == -1 )
        -: 1155:	{
    #####: 1156:	  return -1;
        -: 1157:	}
        -: 1158:
        -: 1159:      //add embargo token to selected supply pile
    #####: 1160:      state->embargoTokens[choice1]++;
        -: 1161:
        -: 1162:      //trash card
    #####: 1163:      discardCard(handPos, currentPlayer, state, 1);
    #####: 1164:      return 0;
        -: 1165:
        -: 1166:    case outpost:
        -: 1167:      //set outpost flag
    #####: 1168:      state->outpostPlayed++;
        -: 1169:
        -: 1170:      //discard card
    #####: 1171:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1172:      return 0;
        -: 1173:
        -: 1174:    case salvager:
        -: 1175:      //+1 buy
    #####: 1176:      state->numBuys++;
        -: 1177:
    #####: 1178:      if (choice1)
        -: 1179:	{
        -: 1180:	  //gain coins equal to trashed card
    #####: 1181:	  state->coins = state->coins + getCost( handCard(choice1, state) );
        -: 1182:	  //trash card
    #####: 1183:	  discardCard(choice1, currentPlayer, state, 1);
        -: 1184:	}
        -: 1185:
        -: 1186:      //discard card
    #####: 1187:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1188:      return 0;
        -: 1189:
        -: 1190:    case sea_hag:
    #####: 1191:      for (i = 0; i < state->numPlayers; i++){
    #####: 1192:	if (i != currentPlayer){
    #####: 1193:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1194:	  state->discardCount[i]++;
    #####: 1195:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1196:	}
        -: 1197:      }
    #####: 1198:      return 0;
        -: 1199:
        -: 1200:    case treasure_map:
        -: 1201:      //search hand for another treasure_map
    #####: 1202:      index = -1;
    #####: 1203:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1204:	{
    #####: 1205:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
        -: 1206:	    {
    #####: 1207:	      index = i;
    #####: 1208:	      break;
        -: 1209:	    }
        -: 1210:	}
    #####: 1211:      if (index > -1)
        -: 1212:	{
        -: 1213:	  //trash both treasure cards
    #####: 1214:	  discardCard(handPos, currentPlayer, state, 1);
    #####: 1215:	  discardCard(index, currentPlayer, state, 1);
        -: 1216:
        -: 1217:	  //gain 4 Gold cards
    #####: 1218:	  for (i = 0; i < 4; i++)
        -: 1219:	    {
    #####: 1220:	      gainCard(gold, state, 1, currentPlayer);
        -: 1221:	    }
        -: 1222:
        -: 1223:	  //return success
    #####: 1224:	  return 1;
        -: 1225:	}
        -: 1226:
        -: 1227:      //no second treasure_map found in hand
    #####: 1228:      return -1;
        -: 1229:    }
        -: 1230:
    #####: 1231:  return -1;
        -: 1232:}
        -: 1233:
     6000: 1234:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1235:{
        -: 1236:
        -: 1237:  //if card is not trashed, added to Played pile
     6000: 1238:  if (trashFlag < 1)
        -: 1239:    {
        -: 1240:      //add card to played pile
     6000: 1241:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos];
     6000: 1242:      state->playedCardCount++;
        -: 1243:    }
        -: 1244:
        -: 1245:  //set played card to -1
     6000: 1246:  state->hand[currentPlayer][handPos] = -1;
        -: 1247:
        -: 1248:  //remove card from player's hand
     6000: 1249:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
        -: 1250:    {
        -: 1251:      //reduce number of cards in hand
        1: 1252:      state->handCount[currentPlayer]--;
        -: 1253:    }
     5999: 1254:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
        -: 1255:    {
        -: 1256:      //reduce number of cards in hand
    #####: 1257:      state->handCount[currentPlayer]--;
        -: 1258:    }
        -: 1259:  else
        -: 1260:    {
        -: 1261:      //replace discarded card with last card in hand
     5999: 1262:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1263:      //set last card to -1
     5999: 1264:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1265:      //reduce number of cards in hand
     5999: 1266:      state->handCount[currentPlayer]--;
        -: 1267:    }
        -: 1268:
     6000: 1269:  return 0;
        -: 1270:}
        -: 1271:
    #####: 1272:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1273:{
        -: 1274:  //Note: supplyPos is enum of choosen card
        -: 1275:
        -: 1276:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1277:  if ( supplyCount(supplyPos, state) < 1 )
        -: 1278:    {
    #####: 1279:      return -1;
        -: 1280:    }
        -: 1281:
        -: 1282:  //added card for [whoseTurn] current player:
        -: 1283:  // toFlag = 0 : add to discard
        -: 1284:  // toFlag = 1 : add to deck
        -: 1285:  // toFlag = 2 : add to hand
        -: 1286:
    #####: 1287:  if (toFlag == 1)
        -: 1288:    {
    #####: 1289:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1290:      state->deckCount[player]++;
        -: 1291:    }
    #####: 1292:  else if (toFlag == 2)
        -: 1293:    {
    #####: 1294:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1295:      state->handCount[player]++;
        -: 1296:    }
        -: 1297:  else
        -: 1298:    {
    #####: 1299:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1300:      state->discardCount[player]++;
        -: 1301:    }
        -: 1302:
        -: 1303:  //decrease number in supply pile
    #####: 1304:  state->supplyCount[supplyPos]--;
        -: 1305:
    #####: 1306:  return 0;
        -: 1307:}
        -: 1308:
        9: 1309:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1310:{
        -: 1311:  int i;
        -: 1312:
        -: 1313:  //reset coin count
        9: 1314:  state->coins = 0;
        -: 1315:
        -: 1316:  //add coins for each Treasure card in player's hand
       14: 1317:  for (i = 0; i < state->handCount[player]; i++)
        -: 1318:    {
        5: 1319:      if (state->hand[player][i] == copper)
        -: 1320:	{
        4: 1321:	  state->coins += 1;
        -: 1322:	}
        1: 1323:      else if (state->hand[player][i] == silver)
        -: 1324:	{
    #####: 1325:	  state->coins += 2;
        -: 1326:	}
        1: 1327:      else if (state->hand[player][i] == gold)
        -: 1328:	{
    #####: 1329:	  state->coins += 3;
        -: 1330:	}
        -: 1331:    }
        -: 1332:
        -: 1333:  //add bonus
        9: 1334:  state->coins += bonus;
        -: 1335:
        9: 1336:  return 0;
        -: 1337:}
        -: 1338:
        -: 1339:
        -: 1340://end of dominion.c
